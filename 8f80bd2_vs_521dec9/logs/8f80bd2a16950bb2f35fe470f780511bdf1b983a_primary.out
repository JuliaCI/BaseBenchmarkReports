cset: moving following pidspec: 14739
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.975186642 seconds)
loading group "string"... done (took 0.619926011 seconds)
loading group "linalg"... done (took 9.763115432 seconds)
loading group "parallel"... done (took 0.181736317 seconds)
loading group "find"... done (took 1.532503001 seconds)
loading group "tuple"... done (took 2.194008571 seconds)
loading group "dates"... done (took 1.54379782 seconds)
loading group "micro"... done (took 0.239066555 seconds)
loading group "io"... done (took 0.594431473 seconds)
loading group "scalar"... done (took 47.452548722 seconds)
loading group "sparse"... done (took 14.352092116 seconds)
loading group "broadcast"... done (took 1.267764385 seconds)
loading group "union"... done (took 13.022862638 seconds)
loading group "simd"... done (took 2.739114367 seconds)
loading group "random"... done (took 11.064892472 seconds)
loading group "problem"... done (took 1834.094107573 seconds)
loading group "array"... done (took 27.616285229 seconds)
loading group "misc"... done (took 1.201485232 seconds)
loading group "sort"... done (took 3.988086659 seconds)
loading group "collection"... done (took 20.202143124 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.763608955 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143294328 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.216248968 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.375962275 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239888808 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16592758 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.173946235 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.589097303 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.04286301 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.285430166 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153803918 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.603031971 seconds)
done (took 6.465970335 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.282174929 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.390737269 seconds)
    (2/2) benchmarking "String"...
    done (took 0.180222528 seconds)
  done (took 1.223692359 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075765885 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.186196464 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.114622895 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.11415428 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.099177054 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113820555 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.113225513 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113053744 seconds)
  done (took 1.510281696 seconds)
done (took 3.754418531 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.558707242 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.878334399 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.599651766 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.17179233 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.202678787 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.181201856 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.324175271 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162267822 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.113352361 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110419758 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.221959388 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.419982042 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.504295255 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.01616022 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104744327 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110714268 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.097478434 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700889241 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081882568 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.138818321 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.598551263 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115079227 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115016876 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125232254 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205597612 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132807197 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167802461 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092738347 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682121366 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101316764 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.233135616 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083821806 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.175034969 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.258272438 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079496041 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107404132 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677645237 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183902969 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.117858654 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101171164 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676467875 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083094408 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.245331371 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104405227 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11362782 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.201245839 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.1065217 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.097997641 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101533475 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084849721 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170980408 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.461479845 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105030104 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171854154 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108787507 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.742651267 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097922985 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157754911 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138917127 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108230914 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080530926 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.110741784 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154026542 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113294839 seconds)
  done (took 20.347673784 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.162422611 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168136858 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093119457 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141031639 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14503248 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096008695 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097053933 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077579233 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129308874 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237999672 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139659351 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.187440169 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074069367 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.100560772 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.145069468 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251355921 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110181736 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121683386 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099526365 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090602756 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141937247 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111095076 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108908888 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095764775 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.185830553 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207723072 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111890153 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125250845 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100701071 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119349008 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140810998 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151040074 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091008479 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083204218 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.20199569 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104686273 seconds)
  done (took 5.422375573 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.227447885 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116771485 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.239412003 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.18018703 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148965893 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182335533 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144309133 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.30403037 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.23734153 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182474867 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131935416 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112717257 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076840167 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095889134 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092768262 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.718575347 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.18043809 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149791137 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152018719 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103759699 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096812219 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.766165524 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10024055 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0811576 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101014635 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075594811 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223045518 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101540702 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.37905924 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117318645 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.195052984 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110644692 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131419619 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21505839 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083339706 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132974835 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142627702 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084667162 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097251814 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.236160861 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09184668 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093823847 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127165874 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130746421 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119723991 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099683837 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.112121945 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.245893683 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086072577 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12069019 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.14648519 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.217142306 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.138752682 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080982997 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.370850979 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116676338 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103780491 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080392579 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.331428646 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139431323 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082194997 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09326676 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085555971 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098602557 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.092913046 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.814633804 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107779993 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097499377 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078860836 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.181821058 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.00260842 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086044584 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106021571 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101495748 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084424585 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117563184 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096669514 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077367749 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096174169 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078090263 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101137912 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.119106158 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09933834 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079119921 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157656533 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103368208 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115533572 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123998251 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098649805 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079771833 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127398117 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095792939 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082465966 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.191347426 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087989518 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123282715 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099848013 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141489638 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094678409 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.222534825 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082142086 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123687366 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100362086 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127406392 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.125911103 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078864436 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102470692 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093260074 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080269997 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159218635 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080193466 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096416299 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098299024 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095038549 seconds)
  done (took 25.382232013 seconds)
done (took 51.805850476 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.527103106 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.124321952 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.122518952 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122933626 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.120813303 seconds)
  done (took 1.755443133 seconds)
done (took 2.465589231 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.388277666 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.191224871 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122947432 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187804104 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107711874 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.212314301 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177598428 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119638592 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208214511 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100951996 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186722521 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10123412 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10663538 seconds)
  done (took 2.949594497 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099025903 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124006734 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084906638 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1144982 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07892731 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11501818 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111317026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119565285 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113109838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105316355 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079003552 seconds)
  done (took 1.849962686 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094971838 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118845365 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08487715 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111560501 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078705589 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11228776 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111326859 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105530602 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111481886 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091872073 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096452393 seconds)
  done (took 1.826077496 seconds)
done (took 7.325195093 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244936676 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.873324528 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.154197565 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.206113022 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.403286668 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.26041583 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.667079943 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.169516882 seconds)
  done (took 13.900760533 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.118613012 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101249261 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100070676 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.145500991 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085552078 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099975834 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085084075 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10120635 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099507834 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084290239 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100494621 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085742545 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098849357 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085728327 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099722935 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099603621 seconds)
  done (took 2.371265712 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13882074 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.13892149 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093240985 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114196936 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.105977059 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090283137 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108942668 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106023598 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088401178 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104162735 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112278978 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.096080414 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.111373528 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.103929642 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094132665 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112587048 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102144481 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092571091 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109135751 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10835649 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096544309 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105696275 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109585173 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097125294 seconds)
  done (took 3.344260264 seconds)
done (took 20.325796007 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.185626868 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100896888 seconds)
  done (took 0.999362446 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.151134156 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154148123 seconds)
  done (took 1.023143952 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115875943 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098512839 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142504081 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120222875 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098716163 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083004895 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137295915 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099313314 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083161364 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098695983 seconds)
  done (took 1.797609777 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089928959 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103875102 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.112988828 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.149863755 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.099453677 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104231404 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104092802 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088546937 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105101599 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.098825688 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093864314 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125922518 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108464021 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127058731 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.204339154 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.11006793 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114959747 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.108102889 seconds)
  done (took 2.77115244 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083427194 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099932148 seconds)
  done (took 0.903076674 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08919677 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100500582 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089588747 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104984241 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098845746 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08434035 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099866237 seconds)
  done (took 1.387300599 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.549559227 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275699939 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380143775 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123291503 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144431154 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.399091751 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146882126 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117501258 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117976949 seconds)
  done (took 3.019336076 seconds)
done (took 12.620401354 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090686982 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.239793334 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.599573994 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122605235 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083136572 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157414094 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.332660135 seconds)
done (took 2.350695011 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36280695 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157509842 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091357571 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096448675 seconds)
  done (took 1.430249481 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078368346 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107926107 seconds)
  done (took 0.913821446 seconds)
done (took 3.079459587 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082715203 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095035569 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081158418 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094749537 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.079890724 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096178901 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081458006 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132422041 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096072624 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.080963564 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097090889 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080699906 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097186461 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080505834 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096004062 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080954944 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096873451 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08048099 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095636793 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081055549 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096709373 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094404697 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083039061 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095702572 seconds)
  done (took 2.943953597 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108408022 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100514799 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105318618 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08888387 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105685707 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104435618 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088986551 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100856679 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104525215 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083990354 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104737893 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105467121 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084607544 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104936459 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098643603 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09059104 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104207913 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099941233 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084877604 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10588016 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103210561 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085292268 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105148112 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103455653 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090637371 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105998235 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084243403 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100566789 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103825179 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089008519 seconds)
  done (took 3.678156675 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090468135 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093312216 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082678473 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107554492 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079059226 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098611504 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077674746 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09656179 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09896385 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.082848532 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099879699 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082642682 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094532013 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08351755 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.099500778 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.087142687 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115266457 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095426772 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080111489 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09817283 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085517345 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093811009 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08218907 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097171947 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082062977 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094463333 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082800289 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.097106574 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082948271 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097950896 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099327727 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086821691 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096501659 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093144596 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101020046 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082213136 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10401786 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094312022 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.084692698 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094208446 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078596715 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098427142 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079421389 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106894893 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081844469 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098661756 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078990587 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099515328 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098010284 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08717379 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093750831 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07925723 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100479518 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084835144 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101688962 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078691761 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098756012 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078310247 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099826257 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097259533 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080586392 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093418442 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.087088988 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099469929 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105538093 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107622422 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09382668 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085138886 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099199011 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088169701 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100386366 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114396836 seconds)
  done (took 7.38923948 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097459463 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109555252 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083580141 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100181931 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099495046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083276678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106207395 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082942546 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100826185 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.107959459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082253464 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099441275 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084507105 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099552015 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083404367 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10028061 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109868353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083454967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097681041 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084006763 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098730265 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107655399 seconds)
  done (took 2.839184466 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.266321217 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090218234 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1510433 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11744267 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.122997671 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117808805 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088154814 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105429291 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103550122 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094683803 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110940698 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104318664 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123164227 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095704661 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109778794 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11231438 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088452378 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112290946 seconds)
  done (took 2.853162872 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10166915 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103032307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124809795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086039125 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102689581 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08587536 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109779885 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118468025 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101492929 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087575199 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112738443 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100960154 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086769624 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101453223 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086071033 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101113736 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100501761 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086791129 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113751701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109576816 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094161421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111798487 seconds)
  done (took 2.970244872 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102156975 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101355362 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.140476476 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090773107 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100611954 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099587975 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093113386 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103272497 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094276351 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100538434 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101984921 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084446169 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111770845 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101375405 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094846958 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101636105 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085768072 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102649726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100903719 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085070469 seconds)
  done (took 2.740376996 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180768222 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100106083 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118175886 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131181411 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116079651 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101159648 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13065554 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11802358 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100454988 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133717433 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116070164 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116006838 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131132432 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109407263 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118026314 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132213365 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132024184 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131148791 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101847725 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11727501 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134931437 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100144745 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131323781 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116571215 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116540544 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101185064 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116144407 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126125476 seconds)
  done (took 4.124714133 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083575221 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097226813 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083829333 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097686877 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082786367 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098119905 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082059754 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097546676 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082909511 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098107156 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082583934 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0978375 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082172558 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098468428 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082772862 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098157019 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082805286 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097463609 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096902545 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083064572 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097586454 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081364711 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097023222 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082367013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097491632 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082370824 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098409849 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083019597 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09860689 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082942025 seconds)
  done (took 3.452936454 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096088114 seconds)
    (2/2) benchmarking "in"...
    done (took 0.126053981 seconds)
  done (took 0.969934169 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.092719568 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120941307 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082498515 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09956135 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110284878 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084226272 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112553448 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110945746 seconds)
  done (took 1.56258399 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.151328809 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.152195604 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089731074 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113374309 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.151657582 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.144700578 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169371174 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106651142 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087755411 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097064392 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.149193999 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080314757 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107213831 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10086469 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090049882 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11162193 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101025586 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095404772 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108282515 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08725466 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10638139 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115289449 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091620972 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111182452 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098758878 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09346676 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111668957 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.112431364 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084945406 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110374442 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087839078 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.100610182 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104915529 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09087154 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101612243 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.149939333 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115406741 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08595449 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107428888 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090099901 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111250917 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.101530942 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092839111 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104291956 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10925651 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.091387532 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.107438362 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.0856795 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097532536 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082968675 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.102629704 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099925365 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083728755 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106850554 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08991281 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118412588 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102477467 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083990253 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.100331435 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.1005883 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087556664 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103639345 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092388026 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.112046993 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108275447 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089400185 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105326536 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.101590458 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088417057 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100492706 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090012448 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123140772 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111390508 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089751631 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107851127 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100296363 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086852049 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109454079 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089647204 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109274708 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.106394531 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092400918 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108479374 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100502624 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084547967 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108664392 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085927267 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103673425 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079921957 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119592838 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.104477639 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084285146 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097804051 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108471821 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086079275 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105073597 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081376465 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106442031 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.099531826 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090564778 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108173635 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086534983 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110437634 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107233967 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091199954 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107064133 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.146418211 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102881921 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08503816 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.103746989 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090961709 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101265928 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09248669 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.099940536 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103232581 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085852487 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108575802 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110009549 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086769825 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105953288 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093280213 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110438592 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103231968 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084464346 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101925449 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08896498 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112552613 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111807998 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087164062 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.102481253 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085049838 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108566785 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.106571373 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087804893 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108050201 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086210442 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100706748 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102607441 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090108644 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111216305 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084779925 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105475644 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109274722 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088685565 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103588507 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109020017 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08373825 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097237381 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091529446 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103014982 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.102441655 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09641117 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102170745 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086911333 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102113524 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113328321 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086875004 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108524721 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08706608 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107372619 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107896946 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081566058 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103854146 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085931899 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113131124 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10175042 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086008646 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100774478 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091949074 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098938965 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105887059 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.0823827 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103978769 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090550959 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103959195 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087648121 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101865021 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120565132 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099163348 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109063164 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107003458 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093711744 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106293333 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087695103 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105843283 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109900365 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091220626 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108836476 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10499098 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09071192 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102567034 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09056915 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105128572 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10993701 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081644562 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102362447 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081447956 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107093562 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094262453 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107058601 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107834813 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087642832 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106084481 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113348828 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085589964 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.106364834 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080940665 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107186215 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096377356 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109803912 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110290539 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094280782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104059565 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085311007 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114067262 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105392843 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090471341 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104182199 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081572026 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099770599 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109926083 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089156154 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101532204 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.084378069 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109572536 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110165583 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086880541 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099467489 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091109024 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114015707 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101796394 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089186204 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104213618 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106525282 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103029273 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099043832 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085324121 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111849793 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.107897533 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084049242 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106759876 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.088142068 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.108972777 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.105287783 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.087706094 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104923611 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094135941 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106875156 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10001872 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086343718 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103859076 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082747133 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.105643499 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092207253 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104760595 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104249896 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097785408 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110165661 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.109083667 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088673097 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106661424 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091747769 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.110002083 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104114769 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092681794 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10188086 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081649293 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104308937 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100301252 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086658192 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101846843 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09065061 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105184313 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106121949 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0893086 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110239388 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087470503 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109027012 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126379808 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101045734 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082239517 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105770413 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089446832 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103712357 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102910073 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086916137 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110974319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088789985 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110608788 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102755025 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084753865 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108800516 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086115032 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108707471 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.110269819 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.092476936 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10200353 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090656011 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104033013 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114881694 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082004615 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113688794 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106855825 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090330878 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105674597 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087574963 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102965447 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099601409 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087038642 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10963269 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087504619 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107850208 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106668558 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087742046 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103963257 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083434884 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110424911 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106214166 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093131735 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.102941599 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082579458 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101391443 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090806308 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110719044 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.109594762 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084760498 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.107301911 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093597354 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107074183 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101755147 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096613729 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112714424 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.092441073 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115199752 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099170857 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087646113 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116271487 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101956963 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087702074 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103851151 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082873037 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110493786 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.092833258 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110012018 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105351934 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082078389 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102738863 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092781083 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105951968 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.106258441 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087058735 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108054672 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085083316 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106897254 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092074546 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106887285 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110707477 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091666733 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106563729 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087852518 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10917269 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103690239 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0821008 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103050094 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087328701 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.11010904 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100394131 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.089797288 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107749612 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08757124 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105571869 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09070837 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103293499 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110078135 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089596607 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105598765 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115183274 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.087124248 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105910558 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089269123 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109476237 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082058195 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10616896 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105961513 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093462826 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10980575 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.090480314 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107289657 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108907375 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087577221 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.109129205 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090378982 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10953783 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100505804 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092977356 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113243733 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086962352 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106399195 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106472076 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084092091 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107261905 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091922435 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10651887 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113581095 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.091756352 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105380795 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109126305 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093001313 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107510907 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093577846 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103678708 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110772683 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082638146 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113000857 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088465117 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.1112295 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103929807 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083163742 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108094254 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090686027 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107287218 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111526159 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093530744 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10064165 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082574671 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10528594 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087604867 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115738587 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11278989 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087757497 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107429594 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104567497 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.086758923 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112253905 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084202805 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104301251 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106825099 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094029556 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105961294 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084590505 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106914366 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111905244 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092692548 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108417729 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083929961 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109299415 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111563128 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088220164 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103075983 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104203325 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092771779 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108844116 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08651999 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101355936 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115850126 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093065763 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11108071 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086243176 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109577401 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105333208 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.088144034 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.112756352 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087889308 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111072728 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105896208 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091366647 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119210289 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100052965 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086568452 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118197089 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090572223 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112736672 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.106466863 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088397682 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111786023 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111259464 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089081507 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101981767 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083663814 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10666036 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083595562 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106556225 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117519594 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093615167 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106403892 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089213971 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107929125 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.107049148 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.088235851 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101800636 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093320813 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105401113 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115334696 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083357384 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101568168 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.088031566 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110251365 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088924705 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109287555 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105208514 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.089092026 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102700601 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089641759 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114930493 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109006462 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091739664 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108646695 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088813904 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106364274 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117766517 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086587842 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108418533 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119612428 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093966662 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109564834 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092461833 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114203362 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112165032 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.088795642 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.112647578 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08946909 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108811354 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111959658 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.094066903 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124750377 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107966218 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084528984 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.109039637 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088022374 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102431935 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116969578 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095284316 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.111957032 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109499883 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086948568 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113447496 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095315403 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10970421 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108217691 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090050939 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109046044 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089268561 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108522249 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104813339 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095437388 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.112639198 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091891739 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114295983 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102190478 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101001561 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114061523 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113199585 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085774056 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102410182 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084219461 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106722584 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094028461 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.110320695 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089234422 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.108293624 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.109657851 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093873362 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109855527 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088787484 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.113287837 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109336246 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.086518159 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111966621 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089757266 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109109511 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105299506 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092602309 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.112311783 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093210626 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118222655 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112090324 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088832704 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106190757 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09181556 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.107721597 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109895385 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091130903 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105127802 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084298735 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110909423 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112739239 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091665706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1121398 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096715864 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.1071857 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.112207457 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096434885 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110590892 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086373805 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112011614 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107186842 seconds)
  done (took 60.845409623 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.168920149 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095963615 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108998626 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088013254 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138329778 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110202247 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107354945 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090269804 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110076425 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10250435 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10684495 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1071442 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.132610713 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141418976 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137612917 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104619678 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108453763 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109794363 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088331763 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109331341 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130332952 seconds)
  done (took 3.191490558 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113386606 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.127207155 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126212558 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.129963954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119087041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105092808 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.126591335 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124954821 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.129706314 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120507425 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129927581 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125107891 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.101583215 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120834112 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12090662 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120917701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110324838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118790747 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125440364 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127304499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122107136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106554223 seconds)
  done (took 3.446162382 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097255197 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.110499699 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093379567 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.10745658 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.092028007 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.106556967 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116363937 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.089237031 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.116596526 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089009896 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104584414 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.088305128 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112790623 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.105789451 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.085982349 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.106252366 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.097809233 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.111078139 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.093501634 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.106986463 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.131825479 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.106434734 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089619377 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104316425 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102558961 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11159274 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.091660555 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.11122322 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104200265 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092043735 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106822669 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090259626 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110574389 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084968062 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105290397 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10998849 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.0930077 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107267963 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087968161 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11052548 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.0893604 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.113784234 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116165859 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088172767 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106724461 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090536336 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110373345 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.106090303 seconds)
  done (took 5.704757482 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.154302666 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.169029719 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.118421799 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.157686047 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131734567 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107019226 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.114989597 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.15878555 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.115553188 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.095170281 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135299526 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135352264 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120578299 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.123324633 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100760509 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117447504 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118292716 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09721315 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.123012961 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114904514 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125631343 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.100166607 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134475336 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134482002 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120214396 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096864792 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116787625 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.123856646 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.135219919 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107491734 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.121446978 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122512851 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134011914 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.118790837 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096039641 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11692166 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.135013205 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120441656 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.100298 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11321662 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.117781284 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.101974353 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.120753624 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138074628 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118829161 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101285962 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119102426 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.110915057 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113547003 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.116768167 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.127962898 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134774182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123913606 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100948265 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122565909 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133527763 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.117457269 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099481053 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119767972 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133958163 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097839007 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118878812 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134005611 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.115913722 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.105848359 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.136147067 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.118801464 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121851295 seconds)
  done (took 9.134012998 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128401873 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.119326274 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135065759 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13535644 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120077099 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099730289 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119577283 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118665744 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10041157 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128376186 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118448256 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.208317796 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115471575 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127218057 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100751722 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121169137 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119371999 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118954642 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100235623 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118854884 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119577955 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133811509 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100603088 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134920416 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13576857 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115141867 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0998195 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120093664 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132976533 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119943707 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135850075 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.100131575 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120582532 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133151233 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140116039 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.120731037 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092192935 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119282748 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.120357764 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101294472 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.115664501 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133407973 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119502485 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.097049018 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118637529 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120171507 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133692157 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137269935 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108193622 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12921555 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.118774315 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135233091 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120239331 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100011538 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.134471558 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144439497 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134731237 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13547875 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120919501 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135744848 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134306119 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.146213498 seconds)
  done (took 8.428975525 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089541347 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107646556 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089684881 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.108169548 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08880748 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108192801 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089721074 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10720397 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08887728 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10886819 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088492484 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107662013 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090179478 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109273206 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089611428 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108477061 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089346752 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108550697 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108662997 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088957852 seconds)
  done (took 2.784511464 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101705331 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133449517 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.113401333 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104905079 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113367505 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.121196559 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092697136 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112562187 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112394568 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093800312 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125193711 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.125488189 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094038988 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.122308168 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124796371 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.121391377 seconds)
  done (took 2.625410782 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118079847 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.134306391 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.170002097 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.115947653 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.114753316 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100876803 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113036525 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.093945068 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.111568792 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118825659 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.097508123 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.116923232 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.093616112 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.113585032 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.112718113 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.098541913 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.111564458 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.098007413 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112276945 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.171131748 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119349369 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.096641253 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.115361008 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.116260587 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.097114935 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12015726 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.121211153 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0940242 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.115831344 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113072247 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.097494557 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.121745766 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.111782017 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.099783971 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.111910762 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.094592211 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.111515846 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.112757515 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.09844165 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.112563025 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.094657797 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116638414 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.112860997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.096333549 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.111243777 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.095218461 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.110810693 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.120200467 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.096589951 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.116259213 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092826486 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.120209859 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11782998 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105101962 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124136717 seconds)
  done (took 6.941864967 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107952712 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114755012 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.12843774 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091101745 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114652264 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096519746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115019212 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115369192 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097606417 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.109836204 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096940194 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116727055 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115766799 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095466272 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115601349 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095683307 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.111026205 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114036802 seconds)
  done (took 2.77217126 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099597808 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112340883 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098804483 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114097336 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093235566 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115776298 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110747109 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091495306 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109610689 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094093528 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113246438 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092819306 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111220852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.113482241 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093036112 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112933491 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093056076 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111462558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112458219 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091876523 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112445831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091381108 seconds)
  done (took 3.105218128 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106308531 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.170088089 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.122931767 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.182127558 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112207453 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.111596143 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.103092858 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.113265309 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13113433 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.090746652 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.109388982 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090277594 seconds)
  done (took 2.264335135 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124851194 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156596627 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113846577 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094289791 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127360322 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119087736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120494914 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101885825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132162253 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137674932 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120121234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133793819 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113048945 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135326955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126094354 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126918242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120750604 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101668136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114909373 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144980752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120482073 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1339285 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100220458 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119858692 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119524341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135155385 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113109979 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139010601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120459423 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13350773 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128037448 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100841809 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133672343 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137360564 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112765995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133830312 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101304651 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164622029 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108592545 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135074354 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113392384 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127651244 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115302021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128973472 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133736939 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119623535 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130396054 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10071966 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12114637 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154022449 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127036424 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135956198 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128030633 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13296648 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133830463 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154974083 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139227914 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135069662 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107919261 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138647235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134502156 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127113482 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135062822 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139643602 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128090118 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136567184 seconds)
  done (took 9.155730358 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163530744 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095587358 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122005806 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139938061 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135192466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10198158 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121046788 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119980624 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100589805 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11645183 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17399431 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120774004 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135862137 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135733301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12003679 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101996456 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120520436 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134971221 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095120162 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174112146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102042355 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135008596 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13459576 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135509464 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138775715 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127272471 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101139728 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121333659 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121414849 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121408657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111292133 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120782789 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135674908 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115722355 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13505442 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101186368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120985121 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129788151 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101087653 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129097163 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134340887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146223349 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12013898 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120673372 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138702027 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101385265 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120588423 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115946769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101572816 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115313894 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139267074 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138237529 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138931367 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135274837 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100021144 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121405622 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121930893 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100982026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121387241 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127852257 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135895483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101215583 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17455715 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101926115 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12202924 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135139625 seconds)
  done (took 9.025154205 seconds)
done (took 165.698512262 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.155610633 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.178817802 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.152744911 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150983014 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107344833 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122562387 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141556222 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.15272886 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107723447 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08686517 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107114715 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091621029 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17331076 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087616574 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106807088 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111377139 seconds)
  done (took 2.856179251 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.208332977 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.303096135 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12867062 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112885175 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09664275 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111524244 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092977626 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11382407 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108799444 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104248932 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111194896 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09024932 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123089286 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110529826 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089315338 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10985106 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122660001 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090951788 seconds)
  done (took 3.056892104 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11656318 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157048714 seconds)
  done (took 1.106831811 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126846906 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215463138 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295723899 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170689709 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.140241098 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135092309 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.173054288 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128513962 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204745675 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134577699 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.13575267 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094788292 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142285512 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.123129234 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.107365933 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11346758 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14625119 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.106740087 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.125421042 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.343795499 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138161489 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.096631485 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12264206 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.124786169 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.19329442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134264824 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096705498 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115746972 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117633184 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.105168544 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122679742 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13336149 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.132970131 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.186057683 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122163424 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.197634582 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104811376 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114791065 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.123505743 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095821008 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12009635 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121419532 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113435725 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114348961 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11641348 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105862416 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.116633156 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115350748 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104953829 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126618471 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125858647 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.122513671 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.180037255 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126154813 seconds)
  done (took 8.279507514 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.908366738 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15720579 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093399264 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.031333569 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146602267 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130312779 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.910419382 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11768616 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280056812 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.902911994 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13180588 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106416933 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.287796194 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.273852503 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.188069915 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.394957645 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.747620927 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12929768 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143143455 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165589699 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122477637 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14588738 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136063271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428724034 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094801458 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112891914 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120894408 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108043829 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.201713965 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090909643 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117189732 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.223598949 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.285188283 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23080139 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115630882 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091773517 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113780069 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187566016 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.322610244 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.248472742 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185083679 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088643755 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111487921 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127421163 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11674351 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109567869 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.20424738 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194430874 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.215702482 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097628467 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127844632 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125211959 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125750435 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18270893 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.109631735 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375392769 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374837041 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112558956 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103717325 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1340272 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295420873 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111902671 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260843525 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143517343 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.242416764 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111707457 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.844327407 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188730675 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112977221 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102873919 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121988531 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120335439 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125983972 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180597652 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389676712 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129457865 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097042709 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112954161 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.254008706 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090999398 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111707881 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185369298 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117033859 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122524782 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13047246 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110051849 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.212382182 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268793478 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13020178 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123904053 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119383124 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107631833 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115602714 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234052247 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.273271368 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179910201 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.255387149 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109238005 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.207195728 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186464953 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127916087 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.21218309 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100827988 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134376052 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128123682 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248183723 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154768809 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.11323448 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117905097 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.102035578 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158672257 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115897554 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122072007 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19015879 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.494547822 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185730057 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.112501039 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095641627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126107906 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200783509 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102135767 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.291385146 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124408601 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.207901087 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101602643 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11009365 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124369203 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.188009022 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130044468 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124767288 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126779107 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104027808 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.292756338 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.252095105 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131423256 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26682848 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189925884 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104900174 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.214348744 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124167752 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19091452 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125079018 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127616262 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095418294 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836639266 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128579046 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12315905 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119335576 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203465913 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093948777 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114334021 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092568221 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110146575 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836277212 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094181771 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110363173 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.113531467 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105167267 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12343802 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121358338 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098617414 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.204101944 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266441499 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128736789 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121001159 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09336752 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.200367674 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095866349 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114110362 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092590581 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114063669 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124777271 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100026269 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114706797 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194863036 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.201086488 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.255147318 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567664278 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112285693 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092709141 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264288735 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113174321 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34037007 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123820642 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.260299792 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.209406267 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089650456 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372920338 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.214256611 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202668585 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117621303 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194320584 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109581255 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100998741 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.202539744 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092227527 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123114102 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.198413675 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11200636 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131306643 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.194414365 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113972043 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.267806468 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089854371 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.210416613 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096813193 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128681439 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34244412 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113184883 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136107372 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184379927 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11928353 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093056796 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.642716914 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.11335187 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105732248 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124709045 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.258075865 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.207214087 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122851572 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102933997 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127624791 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.202877266 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234077555 seconds)
  done (took 47.775945794 seconds)
done (took 63.902121419 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.329951153 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.285433676 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.340763006 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235071715 seconds)
  done (took 2.13252877 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238178967 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1635346 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.215820261 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091031357 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.227345387 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09066993 seconds)
  done (took 1.883101739 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.545041608 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.447683945 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.381528305 seconds)
  done (took 2.238941413 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269486871 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.298033538 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.365852103 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.503713877 seconds)
  done (took 2.409932434 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.287426565 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115647795 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131541288 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.184242809 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.256206323 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.282160677 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.15983348 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206189074 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.118349028 seconds)
  done (took 2.653882115 seconds)
done (took 12.18256113 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.319426829 seconds)
    (2/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.226633785 seconds)
    (3/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.220739492 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.30777617 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.223673513 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.205015264 seconds)
    (7/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.18248905 seconds)
    (8/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12140099 seconds)
    (9/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129981208 seconds)
    (10/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.094772752 seconds)
    (11/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.272358632 seconds)
    (12/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.230421952 seconds)
    (13/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.15156022 seconds)
    (14/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.343452484 seconds)
    (15/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.203185472 seconds)
    (16/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.132907575 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122845739 seconds)
    (18/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.203800106 seconds)
    (19/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.278970111 seconds)
    (20/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117627506 seconds)
    (21/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.101450101 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120530646 seconds)
    (23/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.171639901 seconds)
    (24/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.255930923 seconds)
    (25/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.180819437 seconds)
    (26/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.303008176 seconds)
    (27/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.174680891 seconds)
    (28/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.104098754 seconds)
    (29/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.270973802 seconds)
    (30/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.316181137 seconds)
    (31/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.231318195 seconds)
    (32/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.250773873 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.152109129 seconds)
    (34/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.170680335 seconds)
    (35/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.176493486 seconds)
    (36/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133273418 seconds)
    (37/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.140333515 seconds)
    (38/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08331812 seconds)
    (39/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.231095922 seconds)
    (40/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097411483 seconds)
    (41/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.23233897 seconds)
    (42/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.117281931 seconds)
    (43/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.185105329 seconds)
    (44/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.205209461 seconds)
    (45/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091295621 seconds)
    (46/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.156935621 seconds)
    (47/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.143963709 seconds)
    (48/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.123868692 seconds)
    (49/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.197344606 seconds)
    (50/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.207029633 seconds)
    (51/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.169228784 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.124624804 seconds)
    (53/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173218755 seconds)
    (54/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.162509451 seconds)
    (55/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.253328012 seconds)
    (56/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107368741 seconds)
    (57/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.190362607 seconds)
    (58/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214566155 seconds)
    (59/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.122518391 seconds)
    (60/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.216098385 seconds)
    (61/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.12067146 seconds)
    (62/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.229356583 seconds)
    (63/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109929709 seconds)
    (64/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.10504346 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.152922607 seconds)
    (66/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.224082215 seconds)
    (67/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114504054 seconds)
    (68/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.164383725 seconds)
    (69/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.144433551 seconds)
    (70/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.191846769 seconds)
    (71/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.175331494 seconds)
    (72/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.106044153 seconds)
    (73/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.164558275 seconds)
    (74/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086289127 seconds)
    (75/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120064632 seconds)
    (76/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115209773 seconds)
    (77/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.105374074 seconds)
    (78/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098440499 seconds)
    (79/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.150737873 seconds)
    (80/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120471784 seconds)
    (81/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.153360825 seconds)
    (82/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.117734355 seconds)
    (83/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083319031 seconds)
    (84/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104338037 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.113511864 seconds)
    (86/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.132943704 seconds)
    (87/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083263634 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122858547 seconds)
    (89/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.240514887 seconds)
    (90/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.217337875 seconds)
    (91/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083081854 seconds)
    (92/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.224654906 seconds)
    (93/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.171330034 seconds)
    (94/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082201232 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.132085563 seconds)
    (96/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111402047 seconds)
    (97/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.101266476 seconds)
    (98/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113912369 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.112451342 seconds)
    (100/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.161449051 seconds)
    (101/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.166091077 seconds)
    (102/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.146240564 seconds)
    (103/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.105575237 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097831354 seconds)
    (105/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.151595325 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.203258473 seconds)
    (107/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.141761366 seconds)
    (108/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.099103622 seconds)
    (109/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.198606777 seconds)
    (110/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.197407482 seconds)
    (111/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113219295 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098316969 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.121272675 seconds)
    (114/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.140575701 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122192337 seconds)
    (116/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122828609 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101079628 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113628688 seconds)
    (119/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.133628415 seconds)
    (120/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083465158 seconds)
    (121/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.154398726 seconds)
    (122/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111067608 seconds)
    (123/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.106347943 seconds)
    (124/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.179253806 seconds)
    (125/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.090287994 seconds)
    (126/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.131999231 seconds)
    (127/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.089740348 seconds)
    (128/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120532045 seconds)
    (129/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.154666014 seconds)
    (130/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08359461 seconds)
    (131/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10523202 seconds)
    (132/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175937368 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.1244612 seconds)
    (134/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084100423 seconds)
    (135/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.120098459 seconds)
    (136/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084129399 seconds)
    (137/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106754207 seconds)
    (138/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144032542 seconds)
    (139/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083516778 seconds)
    (140/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.104368954 seconds)
    (141/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.083312615 seconds)
    (142/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08312637 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.12274144 seconds)
    (144/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197320973 seconds)
    (145/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.0827477 seconds)
    (146/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125903031 seconds)
    (147/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103902954 seconds)
    (148/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.168802191 seconds)
    (149/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.141124986 seconds)
    (150/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082182615 seconds)
    (151/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.107512362 seconds)
    (152/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084316705 seconds)
    (153/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.104587454 seconds)
    (154/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102200567 seconds)
    (155/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.105810287 seconds)
    (156/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.101140337 seconds)
    (157/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.105144016 seconds)
    (158/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.088946373 seconds)
    (159/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.106237309 seconds)
    (160/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100985666 seconds)
    (161/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12156752 seconds)
    (162/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103053676 seconds)
    (163/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.104628445 seconds)
    (164/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091772212 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.135156826 seconds)
    (166/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.135459994 seconds)
    (167/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083752169 seconds)
    (168/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125239588 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097763231 seconds)
    (170/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.104998558 seconds)
    (171/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.084436565 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.129669112 seconds)
    (173/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084331104 seconds)
    (174/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122271632 seconds)
    (175/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098656504 seconds)
    (176/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.123658761 seconds)
    (177/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112514105 seconds)
    (178/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091678216 seconds)
    (179/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.123003655 seconds)
    (180/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082791056 seconds)
    (181/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12342526 seconds)
    (182/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.084165288 seconds)
    (183/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121252711 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122767835 seconds)
    (185/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.101411056 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.130238297 seconds)
    (187/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083405412 seconds)
    (188/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125587815 seconds)
    (189/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.101125425 seconds)
    (190/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.111568227 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092778539 seconds)
    (192/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.106972756 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100337395 seconds)
    (194/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105791933 seconds)
    (195/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084449371 seconds)
    (196/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.123673572 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.135964037 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101014609 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.132820552 seconds)
    (200/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.134770149 seconds)
    (201/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.083088987 seconds)
    (202/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119704914 seconds)
    (203/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.084392896 seconds)
    (204/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.217914725 seconds)
    (205/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.107978793 seconds)
    (206/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084851619 seconds)
    (207/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083971678 seconds)
    (208/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.107365131 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.135898057 seconds)
    (210/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084504595 seconds)
    (211/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.08403065 seconds)
    (212/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135208202 seconds)
    (213/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.124874131 seconds)
    (214/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.085079953 seconds)
    (215/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.121887379 seconds)
    (216/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.113651003 seconds)
    (217/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.112257298 seconds)
    (218/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08567753 seconds)
    (219/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136236155 seconds)
    (220/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.08372425 seconds)
    (221/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122613653 seconds)
    (222/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13184909 seconds)
    (223/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085607142 seconds)
    (224/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126172763 seconds)
  done (took 32.117614632 seconds)
done (took 32.992838204 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.506558274 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131756932 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102912017 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.127830785 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.185135425 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130389135 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112390359 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.130806312 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.13181059 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100399873 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116745384 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.109085443 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.125947251 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.184400819 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.13016502 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097061671 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119843957 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.132771806 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111722422 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.136291321 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.184602415 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119845608 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109416991 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120373664 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185202482 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119281153 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.103254671 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12787264 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.130320166 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.10210427 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126402597 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095120987 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.135791311 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.135382694 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092952769 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.123896244 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093580481 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.114733758 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.124324439 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102572498 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.131881746 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.102662635 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.129698161 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120690557 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.101675242 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.123043012 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093709085 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132669202 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116540013 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103327875 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119215215 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.135123955 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.101042667 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.116485556 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094156366 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120514247 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.131913224 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092681185 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132679343 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093118271 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120139276 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11663864 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.103178309 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1166811 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.100491657 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119684725 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.123778812 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.103586542 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.122787657 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095600399 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116345419 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.099667702 seconds)
done (took 9.912382816 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100420853 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17843924 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.18540921 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.215354016 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127176867 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.137022336 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140475568 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149599356 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112190549 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144291586 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.156210231 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.147702438 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.191250901 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.132869239 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113562394 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.125402833 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.131859243 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108701904 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.214951412 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.120033901 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154991328 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.132495569 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157502197 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140703274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10246526 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.148231422 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.126998273 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.102431653 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.124792779 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141764929 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.120627998 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.125124987 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126595819 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123341121 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.136304329 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.131773748 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112312575 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12649853 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.122847814 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.099736097 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140805824 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.142671772 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100468569 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.136539707 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126464686 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107822014 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.133689379 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.132569631 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103277343 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.126949019 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126237629 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156939264 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113113168 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133814557 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.13227821 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.108653746 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.132884602 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.131510108 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.103091455 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129935849 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100163365 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.124410109 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128192599 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154093928 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103990705 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.132671503 seconds)
  done (took 9.661869801 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120563926 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157846799 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134148148 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.135260274 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108489622 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.113311729 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091615543 seconds)
  done (took 1.780252918 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092873104 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188358753 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185378017 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187597926 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.204160896 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.197096681 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139458539 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093705234 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.155925162 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.128092211 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187114095 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219937674 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.124983544 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.11192565 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211890955 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093039615 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.19022904 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11744235 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.129103665 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.187813125 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11008465 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.15000883 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.132592918 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094225854 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203765877 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095218247 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.267549652 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111326334 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123747277 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103269124 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130395503 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203647721 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180308266 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.135334221 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121677267 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184254877 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.182757369 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129817652 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198442152 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098439181 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.181451 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.12985767 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.131465654 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107137166 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.129679808 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16761587 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.134888246 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106853742 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.128356137 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187248697 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.130909057 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.181914011 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.102272475 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.130980254 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130182644 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109011957 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137413067 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.12949325 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188989915 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132351354 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181366026 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182403398 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.181774753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.183219017 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142182406 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183811539 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179134406 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103289292 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126412144 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.131856421 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184031665 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.105171964 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.13150212 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.16837107 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133794665 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18385833 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.182872179 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127183248 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.109159753 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.12223959 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103439709 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.117730075 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171877297 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129585679 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.104165131 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138898829 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132182612 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106892648 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.123072263 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.144070822 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.105819713 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.131370097 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13479247 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.104942093 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135009026 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.185885387 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.130505643 seconds)
  done (took 15.051456782 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096334853 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.118480874 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.102470642 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120081035 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096958268 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.119109003 seconds)
  done (took 1.589380977 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129591713 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.13311072 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.142037935 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.10924855 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.188305412 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.215542486 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.193495554 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131417727 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.126216176 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.142860764 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.18985577 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.220170658 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.190195373 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11088669 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.217934429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.112279242 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.194381986 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.131803973 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.141399573 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102931667 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139536191 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.135610597 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103009278 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.205821733 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.111359072 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.133793712 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.132574187 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117196632 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.139279224 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130719781 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.134902329 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.111551673 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128083486 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131220623 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.194684645 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.128392904 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103548848 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.139311538 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134227697 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.112453131 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.218461194 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105916379 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.141166169 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.139000708 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10733009 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127978732 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.138416962 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.130791853 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.195527487 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.113618574 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.14051141 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.133343078 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.134592646 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.115186516 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129076551 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131030188 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.138023753 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.196843241 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.111650837 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12895055 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.133892242 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.112002076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131528829 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.13860401 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.134344641 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11490901 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.128154994 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133240127 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104557469 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.135377038 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.139259031 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.109305437 seconds)
  done (took 11.024279784 seconds)
done (took 40.023752381 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.097771297 seconds)
  done (took 2.031380698 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.963094346 seconds)
  done (took 1.899492367 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.058685529 seconds)
  done (took 17.02961416 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.562933683 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.64399069 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98701231 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148965205 seconds)
  done (took 3.277523968 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.968541653 seconds)
  done (took 1.92685823 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.329966947 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.282952398 seconds)
  done (took 1.553273945 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.848917697 seconds)
  done (took 1.79747869 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.436905805 seconds)
  done (took 3.382154697 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.382804908 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.199287013 seconds)
  done (took 1.539592066 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.670877598 seconds)
  done (took 1.623667402 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.827567353 seconds)
  done (took 35.78190932 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246066967 seconds)
  done (took 1.209188337 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.315178788 seconds)
  done (took 1.268006531 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.365718385 seconds)
  done (took 4.319879547 seconds)
done (took 79.586468236 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105943947 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131837593 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10815198 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.129275857 seconds)
  done (took 1.423496848 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.115357648 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.130970044 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.134225971 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107436554 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.139832111 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.106250858 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.13051065 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.137417227 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.106166007 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132700777 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.130032603 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.107017162 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.132871346 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12993225 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105036695 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.133381647 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.110569628 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.133414115 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130682463 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.107658436 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129524981 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.13104524 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.110302999 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130570407 seconds)
  done (took 3.920577204 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105595941 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122545188 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101449484 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121958959 seconds)
  done (took 1.411017329 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.11466339 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.146393349 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.145478563 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.115306835 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.149561438 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.14533088 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102564611 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.125272364 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.103802862 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.139961365 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128594904 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150112036 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.122344568 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.132170544 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.139523479 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100064242 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.132355628 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.12344819 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.138121443 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.138452225 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10106303 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.138227061 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.126117791 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120709981 seconds)
  done (took 4.039425026 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.21431429 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119150215 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.15518345 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.182939991 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.156624382 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.102813928 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.157286204 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.135770015 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.136145355 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.108893142 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.133350636 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.191973345 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131974928 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11070703 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.132948885 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.138605635 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111886173 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.134795999 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.136869403 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143400087 seconds)
  done (took 3.800676135 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108438175 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122189755 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094268205 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122491295 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.129272756 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10097282 seconds)
  done (took 1.64049565 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095767754 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115394481 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093965815 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116888269 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098175555 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116901302 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092613094 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116631164 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092243032 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116879362 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096295893 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115474763 seconds)
  done (took 2.23671577 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.303844178 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097325268 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126637097 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120387955 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.102068254 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.121946838 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137342003 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096733344 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.25660128 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.122309744 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113866868 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.198672012 seconds)
  done (took 2.760542442 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231661713 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107180392 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289273179 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394304988 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173676914 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18230976 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.291200309 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18044377 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.232356674 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127998184 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240318573 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169679194 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167715845 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195114584 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127498047 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.202339262 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217485125 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222044207 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162369117 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226359686 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181374005 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182363419 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221606047 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164900323 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125020092 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173168975 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.130165323 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137050491 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190787838 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187613545 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193654006 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163588431 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153137045 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220409164 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262756394 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197657307 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.353524021 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12129758 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.228141938 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.200137368 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27905365 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12871333 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243308634 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169545852 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118546525 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222211197 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172602008 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201015622 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14469347 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128785055 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231649465 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191791381 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204177258 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150707975 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333149606 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137902622 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160275929 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191153519 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234495282 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210374405 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182395326 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.132620779 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198047381 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200126301 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19792584 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.160574995 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.213027913 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111992448 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219830646 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216237457 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198313724 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183272915 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.228485393 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12133667 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17899411 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209360041 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141561175 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219188155 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174482034 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.105785839 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164082529 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149679463 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137295365 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.177033088 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132017586 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226478964 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146188106 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.203080674 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24625139 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172503551 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176772053 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18118309 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184183612 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158886318 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.105464647 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15909418 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.175136134 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172045067 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141479908 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171031256 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158070221 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.139223651 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140437224 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131452348 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173239166 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.145701379 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183179559 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179113922 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.140717659 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177556886 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136540492 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.172450598 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213313668 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204055453 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117922276 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142901722 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211147469 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172548473 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149712167 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191062328 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229967396 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182108086 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122649095 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209900816 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215254723 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15399134 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206930026 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15463903 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119548135 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167543137 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171517094 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171435861 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.167546845 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140281689 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167960815 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214411485 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.137821042 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14625038 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190943023 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138097265 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1144907 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157779927 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148209146 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.152911102 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.169290769 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129210427 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169477819 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173257857 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165872067 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17409009 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154712359 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240039501 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119175421 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.173989344 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160436029 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.129599351 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20273007 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202179124 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139949288 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204047107 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189735157 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236057349 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179937337 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140530875 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19901452 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115441198 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.131619032 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181781826 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178572608 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177047227 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201751377 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232890245 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187775281 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.169784125 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163323916 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183813825 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.190121467 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173132999 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.157511882 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17774103 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185364306 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131280673 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.135535416 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114257106 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152063346 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14107601 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11735968 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22949307 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180081531 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201036487 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174724994 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151727179 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200708522 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.136894044 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180690796 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.19171161 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150183426 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20488519 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223495128 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181635866 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12872242 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214430594 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.110119168 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134243833 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.148056149 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186618665 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116963481 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146170519 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158316786 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200220029 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19142128 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160582725 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245244429 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186950458 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211675899 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.132054874 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.175730174 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187594275 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171222899 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.197636807 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121096301 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.174851103 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193504776 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15868508 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237552403 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17960646 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184039037 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221532185 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.169042838 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141337482 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162722283 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185446813 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154263475 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179290915 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158014277 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12191635 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167365033 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.149992631 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138611673 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202232924 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156784122 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19993976 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.17037041 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220320958 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109460664 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158376874 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174960194 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158880171 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.127551231 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188516451 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20842281 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160483451 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171928635 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192368275 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140116799 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.325125591 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208002476 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23025568 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122609446 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157661523 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176000524 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172973953 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178148312 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198025192 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156710384 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198258082 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17251884 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.153894818 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146546122 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159092101 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164760545 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166532547 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.122390054 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.169068426 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.15235702 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229451271 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131874046 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173145767 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17955544 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.159570295 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.170063259 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152863389 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219137986 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172695416 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19366391 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.169503548 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184228338 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231262371 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107355323 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137844884 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111823123 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225509211 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118775112 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174558618 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218583949 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212740688 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175669369 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185583743 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148313547 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134494867 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148711201 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160594253 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237984104 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156417827 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150708728 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211766775 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.163581706 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115531484 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177269903 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317686543 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131504821 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215479255 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106428863 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287904941 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134586353 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141576372 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174122884 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186797214 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.163379392 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.16887228 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180171613 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158168956 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174915284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149152218 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20401197 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249064176 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189458899 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193650286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.155972327 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173669384 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177859869 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191764581 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154697146 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.158607452 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173861396 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200930159 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208243597 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147123213 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17827732 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178011366 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172040238 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192396715 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143758086 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205149803 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142725007 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182398613 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152226515 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136530266 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172954698 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195456786 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144036526 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194184775 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171834762 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141369613 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113318638 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165115877 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173302652 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156586294 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.138136053 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201001588 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13600015 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177996368 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195448432 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115736421 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170612508 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158065148 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144010968 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156346624 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130866881 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147110293 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.179486824 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200784864 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.145101936 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196347703 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189957261 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180870109 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174462372 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160328504 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.676067155 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.140416377 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200485329 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157666407 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208094605 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16259919 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182863511 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175736757 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161494 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186047921 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164077151 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234156048 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184647491 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176806238 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115771595 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159569917 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158019805 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144840011 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165749004 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177750333 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124395197 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151545958 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173590925 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158274845 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.157478725 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148209803 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201108296 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15953413 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203535862 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200854094 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150234193 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180857317 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193468891 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140019729 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177927943 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188249666 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154676165 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167502468 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.143442773 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.122108581 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195263256 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.134280326 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175339751 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175261145 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177317593 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177615729 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150170907 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175225304 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155334824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17377946 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113372613 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.173288715 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17213207 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144810187 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.139760365 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165343858 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180174555 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.145773852 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13884831 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.180870904 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200177311 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.132249823 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118630941 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315033478 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17338146 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213522587 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.169624881 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118747444 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15677942 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173008316 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17122848 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174382609 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.140884766 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116421187 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144267465 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.194448559 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170447119 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170463728 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195947278 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175902919 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206458129 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.157580195 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281695183 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149167293 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168011778 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118141447 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.143637647 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153850019 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144761373 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132551358 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228592297 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197328376 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164630064 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.156573652 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114314276 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134011398 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116107392 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174039659 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169197521 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173379249 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156737114 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.128646954 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157961305 seconds)
  done (took 84.921203092 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163654573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148473421 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154753034 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204911296 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176065045 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264547989 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213820682 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234718982 seconds)
  done (took 2.607643806 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.131108456 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.118422063 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14739156 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.13196888 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.13169098 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.436191928 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140991623 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.105115388 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.19253907 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.167530334 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.103594757 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.667420681 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.128412739 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129534994 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127217463 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.128813043 seconds)
  done (took 4.028397038 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.197459203 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.521203795 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.504559205 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.252083461 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238023751 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.188257173 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.692970216 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200322463 seconds)
  done (took 11.835083677 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136442586 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.149333773 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.349146649 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.220465238 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.167906736 seconds)
  done (took 2.076245429 seconds)
done (took 127.655641714 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110515387 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.152973476 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108536294 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152335755 seconds)
  done (took 1.56643806 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156882079 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.118755403 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094429053 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117609684 seconds)
  done (took 1.541907533 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.532888345 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091117356 seconds)
  done (took 1.706284725 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.137802569 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15342902 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.155027581 seconds)
  done (took 1.508427881 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.117286124 seconds)
  done (took 1.169078483 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106277108 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129662214 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.18709829 seconds)
  done (took 1.480615397 seconds)
done (took 10.027382357 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.130849931 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.525282263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419105726 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116000939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727788717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.411230554 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035701802 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163012063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199917106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097166146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145031643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675340093 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.054595593 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.463094921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012667162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.458684821 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704977916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100200675 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131993419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099053823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012165436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122109836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100114755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126203398 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677493057 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429745286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123063195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.4490112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123131117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102712183 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.415318558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123327735 seconds)
  done (took 17.520134258 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144258548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189846032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133115237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098632143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129404231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123666243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.108595925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139240477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199846392 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124094702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118377882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122397245 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128197988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099548675 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147892295 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096871611 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12698279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124756191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106416449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125760388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117804609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123228424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125476037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101135158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123083319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11272775 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124511085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13806467 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097779068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129646254 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102971969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123670883 seconds)
  done (took 5.065161849 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148461145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.198767558 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133543872 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.158283013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178366474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100549619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215787723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166600254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19997859 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124400654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145834177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098341012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164683171 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124240637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122505087 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123272382 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101163427 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126011198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131679086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100321225 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146332763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097378211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126196372 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126402971 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099753227 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139472195 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098357654 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13878777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124361302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103791286 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131701316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125162109 seconds)
  done (took 5.384446913 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110556421 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138070675 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120527765 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148472676 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.13269675 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.110200077 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.138376848 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.105175838 seconds)
  done (took 2.06511869 seconds)
done (took 31.091008725 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124407693 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143221167 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117093094 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.138107328 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.199182823 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100381361 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.141386596 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.127769303 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.112163869 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.145671503 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09729136 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.131746897 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.118056813 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.134303831 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.184700215 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.13813446 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.187936699 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.182299183 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103760819 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.138002398 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.104658136 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.189424748 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.138466644 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102375892 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.193660027 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129491723 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.1797683 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133125265 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.108592919 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127058892 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.18286527 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.109921608 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130711801 seconds)
  done (took 5.653852198 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.200272639 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.210924417 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.103115203 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.130479287 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.210748909 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.10299969 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.226589332 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.10399743 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.130159206 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104362951 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.128816536 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.201260808 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.207816259 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.223126798 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.239606379 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.208194752 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.200522377 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.207079328 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.195078187 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.211631628 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.19893813 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.129973004 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.212531365 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.21373646 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102421955 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.130429036 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.233413089 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.207550846 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.235633017 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196188589 seconds)
  done (took 6.481541108 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.11259177 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14205968 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123591571 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19576762 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.168679814 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.140149468 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1111691 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.149312478 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.150603058 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099338878 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.135071009 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.137139152 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143024303 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.134924294 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104066257 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.147144329 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.149467603 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.101942266 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132777501 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119744438 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.145235617 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143987247 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114032879 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136618098 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098297192 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137363408 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130289586 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112750323 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.13381737 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108259326 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131280382 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.131166009 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103566792 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136560595 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104176129 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.138852865 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154806956 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107778845 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.1391579 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.164590616 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10791799 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.132374678 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147844285 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.146957198 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.128432069 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.139513481 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112158026 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136461741 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098028739 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146324158 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139065483 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.100782812 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.149042334 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.097867458 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12700792 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13373862 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.10118766 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.129123792 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.108527484 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.130629517 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151787406 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107061895 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133078031 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101260843 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131787897 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098790296 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.127095222 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.132557099 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.122841853 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13240579 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158693006 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101105642 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.137483842 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107981945 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132438682 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13480079 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099779599 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134258493 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107401363 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133008157 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107881406 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.132017128 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131388205 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120359496 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.150176033 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.13968264 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109283223 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.139143044 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.128953445 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.102544204 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140144649 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101497172 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.131333428 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109500082 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.129151759 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.130361637 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.11144587 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136483243 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097972962 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.145742785 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133352399 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.100110003 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.144319892 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.101007259 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.132319703 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109999453 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.140165735 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126558761 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.108547799 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.138254012 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097831651 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133077334 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130928939 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100598243 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.144545738 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.111510375 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.132268776 seconds)
  done (took 15.935601646 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.300471766 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.309567893 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207443653 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.397540338 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124092941 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.224500567 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.275840892 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.227255971 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128271193 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170209737 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189027735 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.264532155 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.100623845 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.161794943 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304289248 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.37698968 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.159326566 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173512633 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171656339 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12512927 seconds)
  done (took 5.479001529 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.125968643 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171104844 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16054231 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161871853 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107678713 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142350348 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.125796511 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.12700269 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.136997895 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.133584466 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.100157177 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.142287419 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.108699054 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.136214598 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.146802713 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174343801 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106189184 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.13319396 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.124444069 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.135754661 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139240356 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.157428363 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111928152 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.157866552 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143194083 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.114658184 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.127097269 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.13365624 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103815261 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.131398508 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107119469 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148734229 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.134596689 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106868529 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137938919 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.110942701 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.129170882 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127418499 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103556758 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.129678138 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.118261794 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.135918612 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103729927 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.125386042 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.113587524 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.130018738 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.138918206 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.111516446 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.140774003 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11525099 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139684459 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.140868009 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108206877 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148378585 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102615494 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.143652059 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.14164952 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138156871 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.108577052 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126827694 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098961143 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.13157219 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.105397601 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.140579839 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.137698077 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125869761 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.145347598 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129201014 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.10811441 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.132033053 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103906529 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145314528 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.156842129 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.13222852 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104383849 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.150572703 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.10433285 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120369241 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111496987 seconds)
  done (took 11.274905274 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132496022 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133333893 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122376109 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.166486075 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.150460887 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106945994 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.134638483 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.119968902 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.141846612 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.142232523 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.113945458 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.141094815 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154329402 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114478306 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.133297925 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142995281 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.112206782 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.172286537 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.147859502 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136303723 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.146507744 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132584664 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.115824558 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.142278176 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163217087 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.114934462 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162889051 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.138543086 seconds)
  done (took 4.940383051 seconds)
done (took 50.83658061 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.242315771 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.37356919 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.168780946 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.164631197 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.168854993 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.188634039 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.166187523 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.362058192 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.836562378 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.162790478 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.166521747 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.165315081 seconds)
done (took 27.259492962 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.25733413 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.748879681 seconds)
    (2/2) benchmarking "String"...
    done (took 1.476507385 seconds)
  done (took 4.312730997 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.161352465 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.162719827 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.405620327 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.161859358 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.161956744 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.178736634 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.162592564 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.187465959 seconds)
  done (took 15.507295316 seconds)
done (took 25.328335686 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.170998103 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.367510672 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.422918026 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.181789169 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.176537416 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.176650329 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.159157671 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.197773601 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.168907418 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.15524987 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.148171471 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.452714425 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.162732478 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.552891383 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.15354491 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.20449383 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.163294946 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.411273003 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.163714862 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.210338433 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.155112709 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.154203047 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.184571643 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.202275625 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.271139128 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.175051875 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.206062717 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.157990955 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.349879561 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.188106538 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.210651735 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.162944269 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.206737801 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.168121794 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.27703932 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.180727611 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.336729476 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.153669238 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.161375631 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.168556613 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.34086974 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.521273811 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.164114865 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.175236804 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.165389243 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.172715958 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.163648946 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.867337995 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.169541323 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.161118347 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.208774293 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.558169963 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.179023777 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.173822477 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.175162655 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.400365126 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.177624263 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.184385662 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.192523481 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.175127687 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.165512736 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.180839578 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.241772837 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.177244674 seconds)
  done (took 141.052731884 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.167210414 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.16907107 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.170799108 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.229242742 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.168942011 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.167207992 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.166909975 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.16757391 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.170920502 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.170584283 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.172050047 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.167889894 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.169844675 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.133709148 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.173882921 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.188705907 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.170587225 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.169381698 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.187101247 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.168120314 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.168809447 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.17180302 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.186865992 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.170741029 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.197353177 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.251465671 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.208525637 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.181968119 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.175202684 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.167019438 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.198012009 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.234947031 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.694855582 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.029906196 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.175871758 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.194553392 seconds)
  done (took 78.950703199 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.168456045 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.167909137 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.16853321 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.197277171 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.16751751 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.656455715 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.657280713 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.883321644 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.434157841 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.262762203 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.370349543 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.172802784 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259467623 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.182250793 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.171425175 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.186546085 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.209443118 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.17242643 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.170087374 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.654528414 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.185272038 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.309551661 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.334995409 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.184414505 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199336944 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.56641374 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.170416542 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.198318483 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.487607519 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.213089551 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.170021643 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.170804669 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.477260282 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.728633051 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.174445716 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281148247 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.173671434 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.197699729 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.170011886 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.443691946 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.171222386 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.171774697 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.17415837 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.770557858 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.175435772 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.657040853 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.174112116 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.062488246 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.173110177 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.170979544 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.0575786 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.713922642 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.19122725 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.170427923 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.173829145 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.172625032 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.172335004 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.198885701 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.050992453 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.262260712 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.188299101 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.174921043 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199748635 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.171953414 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.172133 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.347352775 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.164074836 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.163311908 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.223363559 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.271356038 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.788751156 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.657047201 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.151154019 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239497546 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261518302 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.14510096 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.147623306 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.146852468 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.145742339 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.251695502 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.147327685 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.508810962 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.30556923 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.158782192 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.244572172 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.237014766 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.139920381 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.445538941 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.140724269 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.136126594 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.836300656 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233478962 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.137175351 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.133751186 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.135685371 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.501750622 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.623067776 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.297226114 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.137601768 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.247713976 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.136266956 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.507523878 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.6175947 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.755872796 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.139854366 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241512196 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.29637737 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.150330233 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.133511442 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.22788753 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.137393921 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.192686213 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.135134997 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.528334466 seconds)
  done (took 360.073610313 seconds)
done (took 581.165262278 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.836613718 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.801622315 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.929124221 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.827633294 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.792722097 seconds)
  done (took 10.248868336 seconds)
done (took 11.311946332 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.31553713 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.313281561 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.19067479 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.314860363 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.16853173 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.330671446 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.294451548 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.159940022 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.236825134 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.211850844 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.23485167 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.188538859 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.17303891 seconds)
  done (took 17.201318707 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.393234869 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.148670089 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224256561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.372513979 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.185943554 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400539545 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429137956 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.148448438 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.297160553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.158305448 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.159137875 seconds)
  done (took 16.987021302 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.395776581 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.148779269 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.226722473 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.377817951 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.186844961 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430403073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430549186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.14843657 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.297602936 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.158762717 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.15933305 seconds)
  done (took 17.030211801 seconds)
done (took 52.286296198 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.182593169 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.305869725 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.17385305 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.161161632 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.156975497 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.159029721 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.163834448 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.15631593 seconds)
  done (took 10.531123756 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.155120458 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.155333487 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.155838676 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.155085665 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.155223852 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.153517607 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.15693266 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.156154423 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.153656162 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.152864843 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.155804142 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.153623829 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.154634124 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.153531211 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.153682401 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.154170521 seconds)
  done (took 19.548024988 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.157917373 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.153709043 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.154807645 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.155209219 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.154483757 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.154745595 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.154330512 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.155141433 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.153729682 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.155803095 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.154295375 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.154246168 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.154667486 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.156365368 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.154716722 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.156201536 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.156179851 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.151300118 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.156540309 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.151537558 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.152510598 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.15042369 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.153756654 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.151768982 seconds)
  done (took 28.779505989 seconds)
done (took 59.928771961 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.138351813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.157057264 seconds)
  done (took 5.365400984 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.210949211 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.211048087 seconds)
  done (took 3.489615364 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.150974082 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.148334414 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.149435922 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.149427309 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.14765461 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.148764806 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.150261985 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.14877671 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.148831496 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.151343884 seconds)
  done (took 12.561289063 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.150976629 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.14917153 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.148536037 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.147820477 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.149044224 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.150699888 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.149337159 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.149334412 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.148368946 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.149926365 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.149522828 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.15004588 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.149845065 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.148911005 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.150267592 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.150513066 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.149843362 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.150012712 seconds)
  done (took 21.76008496 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.16347985 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.17041364 seconds)
  done (took 3.402008033 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.289695385 seconds)
    (2/7) benchmarking "second"...
    done (took 1.190116792 seconds)
    (3/7) benchmarking "month"...
    done (took 1.265340143 seconds)
    (4/7) benchmarking "year"...
    done (took 1.25530647 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.191345382 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.169468804 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.191765036 seconds)
  done (took 9.620324382 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.152956005 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.342412786 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.443691431 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.743233706 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.154913275 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.197151529 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.022468952 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.197941249 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.184737609 seconds)
  done (took 13.508358289 seconds)
done (took 70.777047692 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.14089959 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.187813889 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.154740045 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.162902864 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.449466434 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.170119671 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.146754417 seconds)
done (took 15.481626815 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.141626084 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.136161397 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.139948371 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.128767904 seconds)
  done (took 9.615711503 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.076751954 seconds)
    (2/2) benchmarking "read"...
    done (took 1.511893037 seconds)
  done (took 4.657094228 seconds)
done (took 15.341401399 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151808127 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.151352548 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.151638356 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.152288414 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.153491766 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.150949911 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.152758512 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.152002023 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.151016461 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.150743343 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.15294109 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152566294 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151684068 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152333026 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.152319148 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152410125 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.151387081 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150781635 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.151916776 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.151546129 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.152573054 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153781455 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.152062913 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.153953951 seconds)
  done (took 28.7202993 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.15364285 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.15341196 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.152726696 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.154036213 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.15404451 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.153907625 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.154836396 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.15379133 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.153305071 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.153682284 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154035583 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.153046693 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.155238915 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.153974216 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154059683 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.153978768 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.154801682 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154326163 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152458436 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.152523556 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.153192093 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.15364938 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.152758889 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.154248861 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.15327651 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.154470176 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.154658029 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.153631739 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154746692 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.154392013 seconds)
  done (took 35.686615391 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.157346675 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.157600169 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.155095007 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.154456488 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.154402822 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.154301517 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.154811755 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.152762342 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.15514989 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.154562199 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.155240637 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.156198831 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.155299089 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.155246365 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.156206278 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.15529593 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.155847813 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.15575492 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.155731186 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.154792116 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.155021257 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.154437871 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.153963677 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.154845027 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.154613619 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.154934222 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.155872821 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.155323475 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.15508689 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.155555231 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.155403966 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.155182724 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.154685066 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.156168916 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.155083438 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.156830771 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.159291665 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.159103014 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.157164169 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.15529257 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.155874766 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.156950676 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.156576381 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.155725903 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.157941992 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.156316498 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.156429198 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.158082187 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.156277759 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.155955033 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.15801936 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.156080837 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.158566009 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.15616565 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.15721537 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.157294141 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.159605795 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.156309156 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.156624234 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.157461551 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.159138287 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.157482983 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.159511777 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.156447227 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.158511854 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.158546475 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.157554775 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.157719453 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.15698445 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.157616288 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.157280414 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.159032825 seconds)
  done (took 84.329919281 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.158732943 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.158950555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.160997392 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.158093538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160120085 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.15781797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.158495305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159211192 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158064651 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.158496454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157915168 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.15946373 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159589427 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.15974831 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160044604 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.160742154 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.159713621 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158307529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.158656111 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.158811894 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.159796096 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.15803584 seconds)
  done (took 26.576092949 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159369831 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.161118464 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.160249601 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.16258302 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.162449811 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.162507948 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.159829557 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.161221094 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.160246071 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.159930398 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159925076 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159870795 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.16165887 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159675248 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.161274901 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.161957787 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.16120965 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.1624632 seconds)
  done (took 21.97551079 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.161010692 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.162600851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.161022117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.16209897 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.161300282 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.160831685 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160089798 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.160782437 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.161349419 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.161402194 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.160758864 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161835971 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.162376493 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162138362 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162454019 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.161736257 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.162465231 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1614466 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160883928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.161582382 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.161256654 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.162794721 seconds)
  done (took 26.632054553 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162475892 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.162489513 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.161431354 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.163059245 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.162757026 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.161920923 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.162608009 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.162444577 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.163086456 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.163000419 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.163846239 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.161693305 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.164478407 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.163905431 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.163392852 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.161892273 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.163363035 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.164202718 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.162328987 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.165595303 seconds)
  done (took 24.339378481 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164631876 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.163176377 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.164852724 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166873199 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.164700008 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.16642835 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.16531565 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.164667008 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.16451128 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.166554192 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.164973414 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.166255509 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165291394 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.166223252 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166082919 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.167487692 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166189868 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.165814632 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.165341478 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165741696 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.166465335 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.165674843 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.164829878 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.165336982 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.16662078 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.165710269 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165207004 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.166566688 seconds)
  done (took 33.718059242 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.165572062 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166253937 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.165587145 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.165748779 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.165897725 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.164911067 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.165963402 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.164479653 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.166369348 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.164948355 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.165831341 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.165344483 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.166104039 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.165768296 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.167528967 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.166757845 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166962553 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.166993409 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167407915 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165565264 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.166379217 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166326195 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.167829592 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167634468 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165893061 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.166583088 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168383383 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.166739923 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167391628 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.166793501 seconds)
  done (took 36.072986512 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.215132158 seconds)
    (2/2) benchmarking "in"...
    done (took 1.213422796 seconds)
  done (took 3.511325744 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.168116642 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167125871 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.16943819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.169265112 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.166889129 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.167642809 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.168158789 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169447136 seconds)
  done (took 10.430307117 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.164018029 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.169509805 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.167585456 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.169541181 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.167835722 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.162880033 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16914974 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.185516441 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.16313283 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.165778552 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.16809765 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.167689787 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.167735067 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.163286043 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.165191595 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.164729439 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.168991539 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.170150116 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.169355722 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.169756087 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.170019467 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.170454142 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.161100306 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.165195545 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.161672043 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.165924438 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.180492888 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.165121579 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.158981303 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.162763247 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.1619101 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.160752808 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.160029695 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.161043581 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.161013671 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.160029555 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165715032 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.173990489 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.162095403 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.180203894 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161262419 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.158978728 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.155560902 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.15618283 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.156103209 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.159789091 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.159396054 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.158551616 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.155479294 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.156768689 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.163465005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.154588268 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.160567106 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.158607186 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.156782167 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.162642805 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.176800107 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.159534915 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.160359953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.163752011 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.183394546 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.177977722 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.158222745 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.16088785 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.166219227 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.171388479 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.163592317 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.179072699 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.161982063 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.16251103 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.163077731 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.183610002 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.179693164 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.16161794 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.161951172 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.161388948 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.157293721 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162126991 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164095113 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.176734606 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.16269792 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.161745114 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.165014907 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170961069 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.156995307 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.16214551 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.163007682 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.161369131 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.159068974 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168115452 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.180564243 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.163629699 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.158096243 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.15836613 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.160168213 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.164569842 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.158137973 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.15908513 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.163908751 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.165069041 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.160494497 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.159311473 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.163042591 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.163089478 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.161748178 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.162816845 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.180320346 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160552848 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.161892686 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.164274851 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.161875566 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.159778181 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.162360052 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.162491713 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.161514901 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.162828736 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.16300077 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.158969706 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.160737127 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.163892457 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.165819476 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.174317465 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.165411959 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.164428484 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.162775611 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.169904947 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16257481 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.162031242 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.1615387 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.161748237 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.162116982 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.159472933 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.164990572 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.160783776 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163442532 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160066219 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.163381625 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.163408209 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.163830045 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.16022932 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.161058687 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.159326095 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.161681862 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.162342853 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.16341719 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.15996226 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.164939968 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.176645845 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.1612656 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.160744755 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.1648883 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.163435939 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.160831446 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.164149646 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.16021217 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165128515 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.160522922 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.16472471 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.166411184 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.166569535 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.165694294 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.160960507 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.163332743 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.165739137 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.163450894 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.161649624 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.164634527 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.166089742 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.164753179 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.160828604 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.165559334 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.15974108 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.163778585 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.169622239 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.167427584 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.163849127 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.163282365 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166187763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.165569623 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166273252 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.163509747 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.166305612 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.166836397 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.167236338 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.181940844 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166714855 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.167158298 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.16196707 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.161592591 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165789899 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.16369579 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.174285432 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.172215164 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.184370453 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.163045699 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.169187394 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.163446889 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.169395408 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.166597318 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.167407681 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.167838045 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167096822 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.162787724 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.168130878 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.16461059 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.168075774 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.161122819 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.169830204 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168053304 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.167373866 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16770521 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.164281605 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.165121886 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.167915457 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168326777 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.16808932 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.165373152 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.170883374 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.164245306 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.162967599 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.168788012 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.167598296 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.167996363 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.169400974 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.166521432 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.165339698 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.165337064 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.164747454 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.170257915 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.165431267 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.164575141 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.170540941 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.183833649 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.166772662 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.172954806 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.183506154 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.164409828 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.167980719 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.170395182 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.170254823 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.167545281 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.175121558 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.171103371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170129745 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.170764099 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167053743 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170168358 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.171465615 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.18790526 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.166232069 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.169888654 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.166678531 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.170745954 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.166474307 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.167497701 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.16707218 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.168791011 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.17221364 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.172593635 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.168068867 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.16991303 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.170918905 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.170484019 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.169433265 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.176173534 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.172301065 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.167444078 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.16984404 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.169300535 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.175822454 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.166510017 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.17263841 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.167416029 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.179363937 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.194900549 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.175548244 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.186066718 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.17474868 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173183025 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.186464166 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.17004259 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171830811 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169141999 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.168547473 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.169012001 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.173163626 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.169583786 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.17269722 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.169524351 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.16879095 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.176531567 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.638910419 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.168004662 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.174267481 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.173733975 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.173651 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.168117946 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.173791041 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.170688728 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.172672297 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.169314585 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.169773646 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.176514921 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.188366123 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.169972781 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.169976751 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.16906371 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.16879858 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.171272695 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.174223484 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.17237557 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.17812163 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.172014935 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.176247825 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.171301602 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.177833162 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.173925994 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.171455634 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.178736119 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.175974638 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.170685276 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.172713819 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.175353408 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178335077 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.192665622 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.170783745 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.177674804 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.174045727 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.17635782 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.175821853 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.175353848 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.176060081 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.175118831 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.178468589 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.189055112 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.173331552 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.172569585 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.174647456 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.175700701 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.17622768 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.170022325 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173482962 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.175666263 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.170829548 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.173202294 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.172047141 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.178061531 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.177290291 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.17807431 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.178879772 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.178754887 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.180535868 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.192815258 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.181134579 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.178208311 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.179830393 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.195143068 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179632563 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.196302143 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.173733861 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.178700221 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.177676302 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.177326699 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.175353974 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.176675017 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.179102913 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.17524212 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.181654603 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.178649519 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.176573043 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.174997578 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.18027117 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.174139673 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.18214323 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.19138127 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.17489037 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182236553 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.177842494 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.176826384 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.180844047 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.177213903 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.174199542 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.178886475 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18378551 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184913432 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.177677938 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.181259716 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177017847 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181648991 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.181240914 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.182677038 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.179485029 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.180775723 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.177561503 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.182127156 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178611296 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.181378039 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.177280816 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.178454315 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.177753324 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.184746095 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.198533705 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.177682928 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180267623 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.182110147 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.176387546 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.177038927 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.181022551 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176591921 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.183218644 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.17790718 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.179717912 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.179272005 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.179829038 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.175662158 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.181491987 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.175725817 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.177470925 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.181142512 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.180163618 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.180436158 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.176994662 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.181244491 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.177667789 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.176075822 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.181991193 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.17957297 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182417392 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.179172887 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.181533738 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.178269071 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.182140084 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.182880836 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180012154 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.176046522 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.179334778 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.184626027 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197768764 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.183883069 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.181886289 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.184168281 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.178162545 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.182200286 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.182988819 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.176838287 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.17910672 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.182685776 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.181516527 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.178493192 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.18003963 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183497085 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.183983029 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.195192178 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.177100059 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187461682 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.197985455 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183590137 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.179252812 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.182419607 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.179431149 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.184270093 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.184459782 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.178733257 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185839156 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.198331598 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185152155 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181113079 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.179271499 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.180995744 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.186205566 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183659344 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.180938791 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.185476961 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.18074224 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.185000605 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184394245 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.183514643 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.178972322 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.179367918 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.183018638 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.182611904 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.18432343 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181680475 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.179385095 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.181802225 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184191766 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.184681349 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.185073821 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.185914487 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.179200879 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.185735138 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.180440532 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.183808339 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.179637408 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.181508969 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.187831455 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18685423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183327824 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.188052737 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.190030947 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.186583579 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.181229336 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.182811642 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.183816333 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.186375875 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.185565346 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.182398489 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.183747687 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.185725851 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185458685 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.186577136 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.183220171 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.1945371 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.206651612 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182036235 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.182029597 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.184779121 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.186109185 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.186314952 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.18744379 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.183726072 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.185745404 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.191489508 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.187223427 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189727691 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.200297654 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.184802575 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.190344237 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.18486209 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.187515582 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.185240996 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188758965 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.188374209 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.187239934 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.193883209 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.188914836 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192912443 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205076994 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.202715732 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.184730938 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.187872051 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182973686 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.189449872 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.185327448 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.189640957 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.189349803 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189129508 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.189247176 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.185628334 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189557404 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.18601493 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.19014857 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.189664018 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.184295035 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.187337398 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.188941379 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.188177857 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.191413343 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.187983114 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.189782016 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.189887774 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.185405683 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.196936606 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.209182918 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.190717009 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.190728926 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.189507244 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.18846942 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.187511753 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.191865877 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.194228364 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.19009781 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.189644624 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.187206062 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.190178592 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.191998198 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.186476506 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.187326455 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186584453 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.191378996 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.19719074 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.213378228 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.192743188 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.188080349 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.191882729 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.191692587 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186762022 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.193646738 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192571913 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.188282879 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.189753819 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194334624 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.194106996 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.193042429 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.190873066 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.197444098 seconds)
  done (took 701.736731076 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193813186 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192625113 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.194501125 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.193745396 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.19236034 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192504403 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192147187 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.192263575 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.193330033 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.193368019 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.193411807 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193088521 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.193356008 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.192193976 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192310418 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.194246328 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192734761 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.193466894 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.1946635 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.19476778 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194677083 seconds)
  done (took 26.166354187 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.194115022 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.194529002 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.195594888 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.194202337 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194040543 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.196169497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.195988337 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19487161 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.194562497 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196229821 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.194487893 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194407449 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.195002379 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.19496539 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195513256 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195870898 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.195556953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.19598758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.196697295 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.195391327 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.193962487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.195398799 seconds)
  done (took 27.401243134 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.194398627 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.193788202 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.190122098 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.196980651 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.19549718 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.195206899 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.195331681 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.196365503 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.194546121 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.192409432 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.189409918 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.19118037 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.194742452 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.200998954 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.193149175 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.196355212 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.196849141 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.195863313 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.195222226 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.194844906 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.197299589 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.214189218 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.196978601 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.191802742 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.197502947 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.196246876 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.197439137 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.196965071 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.193260836 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.199539698 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.197214755 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.192044677 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.19370803 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.19298206 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.194237694 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.200252036 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.199200122 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.197074612 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.196966683 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.201331019 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.212270334 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.19879047 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.200047118 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.21683981 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.198630119 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.196504238 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.201170244 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.197716885 seconds)
  done (took 58.571280509 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.777287575 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.790802961 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.795186705 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.797488326 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.792604417 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.792866577 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.794000009 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.795082983 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.792734077 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.797639607 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.793883469 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.798573681 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.796931351 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.792627398 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.795098322 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.795528722 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.794364654 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.790558413 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.793775596 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.789704064 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.790934835 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.788890084 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.789812803 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.792083838 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.791619506 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.796387198 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.79476696 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.792328504 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.796695587 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.797771004 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.790316103 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.796335665 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.79225749 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.789500509 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.795991928 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.788951003 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.792558015 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.792749439 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.799919977 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.795813986 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.797485369 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793749616 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.801141557 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.790259232 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.795894721 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.796765134 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793472052 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.793772251 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.791089999 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.790126335 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.792094215 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.8004265 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.791773473 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.796050157 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.794531101 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.803403571 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.793692767 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.792677591 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.790663826 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.80014359 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.795124859 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.79514415 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.799086029 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.796492407 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.802041839 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.797999455 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.798291239 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795529688 seconds)
  done (took 123.124313663 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.200841855 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.203917694 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200825299 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202481069 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201922794 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.203253911 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.202703099 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.204820814 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.2007189 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202915296 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.204726284 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.203876304 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.202495952 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.204002899 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.204574616 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203409188 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.203016648 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203725868 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205874314 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203326398 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.203918435 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.203200665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.204874646 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.204225495 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.204027782 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.204016545 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.204392076 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.204064066 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204108918 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.203594529 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204880826 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.205464259 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.203702001 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.20460815 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.2038641 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.205739898 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.205762692 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204117761 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.205155585 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.205186909 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.205461835 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.205836252 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.20565543 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.204971041 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206129855 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20582878 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.203977605 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.206098499 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.205796877 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.205792873 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.205308374 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204761026 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206482882 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204149177 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.204761594 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.206282177 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205022351 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206478148 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20614318 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.205299654 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20568217 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.207604729 seconds)
  done (took 75.793012509 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207452262 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21035001 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.2068584 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.206807294 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205720812 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20701006 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206768922 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.207114501 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.20783347 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.207279887 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20761755 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210280463 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208837303 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208564128 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206636233 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207947118 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207563074 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208162579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208928233 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208265312 seconds)
  done (took 25.274116564 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.206260786 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.20775341 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.207192893 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207384709 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.208100857 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.209663555 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.206930599 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207058415 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208782607 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20790604 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207816061 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208364867 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207134224 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.209228535 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.209785958 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.208560767 seconds)
  done (took 20.446764532 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.207894239 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.208431631 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.208021437 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.207916379 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.209190451 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.209383105 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.209534045 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.208134755 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.208435108 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.20988776 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.207579346 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.208920755 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.20856125 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.208664972 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.208958849 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.209502209 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.209555735 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.209706772 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.209143448 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.209116882 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.209669056 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.209352664 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.209970689 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.210491993 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.209169413 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.210229448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.210582699 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.210933264 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.209552535 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.210832635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.211247289 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.210964122 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.210888336 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.210249808 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.209961055 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.209723242 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.210217213 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.210374616 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.210914134 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.210892488 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.211247372 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.21171092 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.209233405 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.211455977 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.211268295 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.210778941 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.211849551 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.210757194 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.210804872 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.212731892 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.211157344 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.212351477 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.211426717 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.213654724 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.212221278 seconds)
  done (took 67.676097936 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213560395 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.210715686 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.212217 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212364344 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.213994665 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.212954134 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.211887254 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21553983 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213212054 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.213916083 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214260755 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.216015726 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213366717 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21572444 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21281581 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212777862 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.211507486 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.214790255 seconds)
  done (took 22.96506197 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.213527347 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214186828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.215826876 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212814341 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.214202246 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213235946 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214204898 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.214831363 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213038766 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.212605806 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213603443 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.213549774 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213948597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.214435814 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214822424 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212713289 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.213994468 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215883689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215270459 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212887797 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215583017 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214386018 seconds)
  done (took 27.834161954 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.210914264 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.208016079 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.208468611 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.224345297 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.222334376 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.209286969 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.2111592 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.209980967 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.230040128 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.269782791 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.262258502 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.223375656 seconds)
  done (took 15.816575588 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216150856 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213121552 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.21558696 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214781938 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214107309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214639659 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2154403 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214904942 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21594693 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217087183 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214815662 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215564186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215567588 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215918806 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215727048 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216046907 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214508513 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216424712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215220011 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214059117 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216182366 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216129933 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216365775 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216349767 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215449313 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216052109 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215672809 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215897118 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21674634 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217338545 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215521637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216556663 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216448146 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216412155 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216763438 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216548101 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217038184 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216237969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217432737 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21858992 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217688412 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217437101 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218247103 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217375432 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216666111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218356873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21717149 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218507235 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218120213 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218890813 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217393734 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218574979 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218166696 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217558573 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218296317 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218937229 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219027325 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219059179 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218287816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218954616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21741921 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219995599 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218924517 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218229754 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217795307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217471388 seconds)
  done (took 81.436845968 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21870326 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.219375294 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219578326 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21805818 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218777256 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218265351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21867975 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220152185 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220494322 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220636389 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218614437 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219593763 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220292026 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21928543 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219298844 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219496749 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219918904 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219619146 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219472271 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220666205 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219614934 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219865925 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218244679 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22066806 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221847449 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220284971 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219463531 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221424876 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2202502 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221725763 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219291587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22230318 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22193545 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.220443657 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221441901 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219544705 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221144732 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22308189 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22010632 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221720167 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22250335 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220937295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221140355 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222389883 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220818538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222627838 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222552328 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224142161 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222860769 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222297609 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223716006 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221874368 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222581694 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223471663 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223195788 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22359146 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221716723 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225139125 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224638631 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222745174 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223001759 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222014067 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221502909 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222216967 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224780386 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222985145 seconds)
  done (took 81.726297923 seconds)
done (took 1689.031551151 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.381821868 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.335881488 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.216077689 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.229546858 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.216082258 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.242699788 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.23024196 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.216867159 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.218268303 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.218209286 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.217896517 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.405700688 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.21213892 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.216889436 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.217066774 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.316412197 seconds)
  done (took 25.223885726 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.244735262 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.227538086 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.331338387 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.246665178 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.248807441 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.401378324 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.284894365 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.226853412 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.384528162 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.246238879 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.230458154 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.247639392 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.225978853 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.227749073 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.243754728 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.405955014 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.462088704 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.231482047 seconds)
  done (took 27.251157788 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.638955064 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.227798517 seconds)
  done (took 5.003738505 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.24398172 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.227231909 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.225971504 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.22508108 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.217689258 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.217600895 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.225188849 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.222896401 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.230566284 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.34548727 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.227846765 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.238504907 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.242609659 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.228685304 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.231261889 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.268901092 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.370224008 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.232980029 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.229226676 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.231284473 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.227690765 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.311342976 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.266451119 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.234572258 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.342780274 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.231791508 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.233367975 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.235457125 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.373713715 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.233312161 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.226211553 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.227127627 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.229714184 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.221401072 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.733270519 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.23762739 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.25222126 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.254071516 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.234333699 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.373520123 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.231083769 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.235026775 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.224321708 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.721927336 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.366292458 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.343144451 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.23694031 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.230216981 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.231095413 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.292100226 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.230170146 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.230807634 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.286760972 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.009881761 seconds)
  done (took 79.583768076 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.224994013 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.222101171 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.39923678 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.24203762 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.223322878 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.225302528 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.239511535 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.487874138 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.247799121 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.225517793 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.544337127 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.778101728 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.25133598 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.278463716 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.089548801 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.299746559 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.227209133 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.23717622 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.230223716 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.225610016 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.758416496 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229522402 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.22584266 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.319549509 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.26251359 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.727310269 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.230262443 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.226063117 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.234359014 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.224561881 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.732808285 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.250882728 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.28907201 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.225362853 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.486392064 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.582012743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.551317323 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.234193662 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.268870101 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.226185132 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.237188298 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.703333573 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.567186837 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.232048806 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.227331195 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717971591 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.226419009 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.235536896 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.232814172 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.473124182 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.226182206 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.227141558 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.241965758 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.224641031 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.225698104 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.316143507 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.320992906 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.727784495 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.232323349 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.236556436 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.256142183 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.229022489 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.234923625 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.232729592 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.245376314 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.572995246 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.428448485 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.227586471 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.56833422 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.734757352 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.249110403 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.804003091 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.247228594 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.24720142 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.413204501 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.227022713 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.251369599 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.735527008 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.235262877 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.228224803 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.548572268 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.232332925 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.547511852 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.248446416 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.228847139 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779886161 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.243217436 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.242844592 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.229151963 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.24785872 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.232316378 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.245180463 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.508695714 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.266290633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.227942753 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.229018861 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.237899916 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.228717759 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.227939241 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.23410391 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.787510323 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.257763307 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.228640367 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.237816161 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229641097 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.234864898 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.230583463 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.23192326 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494687273 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.231107831 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.254756677 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.230908025 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.22980186 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.260015833 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.305736692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.238950658 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.523213993 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.237420936 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.2310833 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.237539826 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.231248924 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.285363836 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.231209863 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.240806613 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.070712892 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.496022675 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.254300509 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.245297183 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.233777666 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.248206708 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.234429511 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.236554767 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.286452856 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.237067874 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003702532 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.258476171 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.240282597 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.231107396 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.238140335 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.231553325 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.241060654 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.231251232 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.520220755 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.503661417 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.43457966 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.237850089 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.231087116 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.981628796 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.2963531 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.410012224 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.253593066 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.231971673 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.478830544 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.44809304 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.232818223 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.234057743 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.237151668 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488779235 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.238333847 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.548904174 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764840136 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.253101569 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.238444586 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.016055092 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948484147 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.239137239 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.232804385 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.552741293 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.253089113 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.232579093 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.230627431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.234429796 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.248011215 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.254340864 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.238877297 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.232218692 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.232596505 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.251091229 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.422148004 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.253630897 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.245429331 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7221542 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.249649451 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234531077 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.248828096 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.234970434 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.233262814 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.305852828 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.239654823 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.246903696 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.232932462 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.246087771 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.736662368 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.234849079 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.240676554 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.422891631 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916804145 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.254858914 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.236277453 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.250252157 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.149219957 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.746319543 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.270845315 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.524280262 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.243312089 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.271952728 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23689441 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.267363697 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748970073 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.236883347 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.252694341 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878923478 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.254333534 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.653649633 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.238262369 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.236546033 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.829880161 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.254828977 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.240585086 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.235758026 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.243232748 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538831631 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.239395853 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.246757122 seconds)
  done (took 474.954975021 seconds)
done (took 613.14921886 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.2368943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.242420594 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.231779202 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.241015472 seconds)
  done (took 10.106760597 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.251576076 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.242603331 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.247179345 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.240426651 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.249119273 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.241322446 seconds)
  done (took 8.627579634 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.236954065 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.242167635 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.240830479 seconds)
  done (took 7.874062063 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.432343868 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.258933079 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.546747301 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.267390132 seconds)
  done (took 8.661896384 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.247670266 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.247495513 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.247199586 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.248925673 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.251158057 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.253079678 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.249145613 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.249886579 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.252629487 seconds)
  done (took 12.397071066 seconds)
done (took 48.823549926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.053313109 seconds)
    (2/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.374612035 seconds)
    (3/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.432810283 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.454319677 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.353344512 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.301903513 seconds)
    (7/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.27213252 seconds)
    (8/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.339608527 seconds)
    (9/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.254157032 seconds)
    (10/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.410412417 seconds)
    (11/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.34926729 seconds)
    (12/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.893546197 seconds)
    (13/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.332090435 seconds)
    (14/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.346957283 seconds)
    (15/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.330316797 seconds)
    (16/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.302227333 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.272008883 seconds)
    (18/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.29136937 seconds)
    (19/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.013864982 seconds)
    (20/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.302779248 seconds)
    (21/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.274610182 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.332815289 seconds)
    (23/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.259318291 seconds)
    (24/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.231521853 seconds)
    (25/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.343097714 seconds)
    (26/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.448504348 seconds)
    (27/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.298161752 seconds)
    (28/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.343384368 seconds)
    (29/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.380151976 seconds)
    (30/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.015194714 seconds)
    (31/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.258426114 seconds)
    (32/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.36385779 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.395704217 seconds)
    (34/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.300518864 seconds)
    (35/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.233024492 seconds)
    (36/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.296644571 seconds)
    (37/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.446496631 seconds)
    (38/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.352745542 seconds)
    (39/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.241370983 seconds)
    (40/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.33158479 seconds)
    (41/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.927012817 seconds)
    (42/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.384651847 seconds)
    (43/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.158141689 seconds)
    (44/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.253066857 seconds)
    (45/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.333254181 seconds)
    (46/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.320076891 seconds)
    (47/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.259037706 seconds)
    (48/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.351946103 seconds)
    (49/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.385816374 seconds)
    (50/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.249348051 seconds)
    (51/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.288671471 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.274971146 seconds)
    (53/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.372866479 seconds)
    (54/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.318487028 seconds)
    (55/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.437683689 seconds)
    (56/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.951704814 seconds)
    (57/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.399045575 seconds)
    (58/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.25389751 seconds)
    (59/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.270909842 seconds)
    (60/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.415038639 seconds)
    (61/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.34845408 seconds)
    (62/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.929570541 seconds)
    (63/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.276357746 seconds)
    (64/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.016768466 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.397368044 seconds)
    (66/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.284582932 seconds)
    (67/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.275593652 seconds)
    (68/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.288259392 seconds)
    (69/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.441644713 seconds)
    (70/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.249051675 seconds)
    (71/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.342108087 seconds)
    (72/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.02417705 seconds)
    (73/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.310561655 seconds)
    (74/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.235443174 seconds)
    (75/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.372647654 seconds)
    (76/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.266280178 seconds)
    (77/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.900125717 seconds)
    (78/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.345274836 seconds)
    (79/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.293587379 seconds)
    (80/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.336416126 seconds)
    (81/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.279796664 seconds)
    (82/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.436783496 seconds)
    (83/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.386876444 seconds)
    (84/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.24579572 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.325887827 seconds)
    (86/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.351848733 seconds)
    (87/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.354912565 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.248045079 seconds)
    (89/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.159763891 seconds)
    (90/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.507341749 seconds)
    (91/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.998804076 seconds)
    (92/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.606960103 seconds)
    (93/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.394068745 seconds)
    (94/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.387259633 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.338763338 seconds)
    (96/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.411463201 seconds)
    (97/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.283415026 seconds)
    (98/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.339512852 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.325751829 seconds)
    (100/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.328355112 seconds)
    (101/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.302105299 seconds)
    (102/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.391794444 seconds)
    (103/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.459374455 seconds)
    (104/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.356450296 seconds)
    (105/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.325609228 seconds)
    (106/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.247804906 seconds)
    (107/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.447964857 seconds)
    (108/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.276114689 seconds)
    (109/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.388540812 seconds)
    (110/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.023891167 seconds)
    (111/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.348380979 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.347501869 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.333733126 seconds)
    (114/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.300610771 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.377582544 seconds)
    (116/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.249546255 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.295523312 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.350837828 seconds)
    (119/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.560313741 seconds)
    (120/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.394906209 seconds)
    (121/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.308739608 seconds)
    (122/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.280855378 seconds)
    (123/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.256477226 seconds)
    (124/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.440446146 seconds)
    (125/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.3996782 seconds)
    (126/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.303385564 seconds)
    (127/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.395000228 seconds)
    (128/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.345728876 seconds)
    (129/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.246167597 seconds)
    (130/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.165423126 seconds)
    (131/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.42064379 seconds)
    (132/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.353797272 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.390329588 seconds)
    (134/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.237832023 seconds)
    (135/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.302575784 seconds)
    (136/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.498441201 seconds)
    (137/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.26172565 seconds)
    (138/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.26256753 seconds)
    (139/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.44575757 seconds)
    (140/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.116890102 seconds)
    (141/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.349251971 seconds)
    (142/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.907845868 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.284607102 seconds)
    (144/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.047260234 seconds)
    (145/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.281053375 seconds)
    (146/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.456288496 seconds)
    (147/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.363163968 seconds)
    (148/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.436839198 seconds)
    (149/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.255108165 seconds)
    (150/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.405411239 seconds)
    (151/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.251977792 seconds)
    (152/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.357011505 seconds)
    (153/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.284047827 seconds)
    (154/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.30191105 seconds)
    (155/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.934098638 seconds)
    (156/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.30260609 seconds)
    (157/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.238467018 seconds)
    (158/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.311758282 seconds)
    (159/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.239912899 seconds)
    (160/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.313370328 seconds)
    (161/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.280284155 seconds)
    (162/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.535223609 seconds)
    (163/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.346624074 seconds)
    (164/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.361552448 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.338762878 seconds)
    (166/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.372059229 seconds)
    (167/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.476316352 seconds)
    (168/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.425118219 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.389221876 seconds)
    (170/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.381573431 seconds)
    (171/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.325049754 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.403881689 seconds)
    (173/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.260208746 seconds)
    (174/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.248286602 seconds)
    (175/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.411749226 seconds)
    (176/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.289489191 seconds)
    (177/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.306279722 seconds)
    (178/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.4112339 seconds)
    (179/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.286238643 seconds)
    (180/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.99728972 seconds)
    (181/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.304307052 seconds)
    (182/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.254633121 seconds)
    (183/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.253478986 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.488726043 seconds)
    (185/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.294763207 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.447523844 seconds)
    (187/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.241440135 seconds)
    (188/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.421355978 seconds)
    (189/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.288346127 seconds)
    (190/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.307622404 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.302706431 seconds)
    (192/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.431882098 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.299326522 seconds)
    (194/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.030135911 seconds)
    (195/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.341752548 seconds)
    (196/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.30144042 seconds)
    (197/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.355410245 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.451007566 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.332399281 seconds)
    (200/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.259628579 seconds)
    (201/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.335450966 seconds)
    (202/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.269957199 seconds)
    (203/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.960903047 seconds)
    (204/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.000277795 seconds)
    (205/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.426503967 seconds)
    (206/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.991326157 seconds)
    (207/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.388609183 seconds)
    (208/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.595504727 seconds)
    (209/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.501035951 seconds)
    (210/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.372628016 seconds)
    (211/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.422926538 seconds)
    (212/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.254068448 seconds)
    (213/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.298881857 seconds)
    (214/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.905692968 seconds)
    (215/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.285244705 seconds)
    (216/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.264585921 seconds)
    (217/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.368108739 seconds)
    (218/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.45189774 seconds)
    (219/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.311021603 seconds)
    (220/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.244651864 seconds)
    (221/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.387986518 seconds)
    (222/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.268347929 seconds)
    (223/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.934800488 seconds)
    (224/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.302958299 seconds)
  done (took 352.588456226 seconds)
done (took 353.743519396 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30645145 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.440950728 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.260053935 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.258728341 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303538054 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.251565533 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.320171889 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.268408719 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.272031079 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.270816811 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.264013537 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.276126748 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.272672959 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.300931893 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.371854633 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.268675816 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.259280139 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.267069964 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.307970421 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.32783759 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303791818 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.30462033 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.280908094 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.260763119 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308190443 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307479405 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.266299441 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.252192105 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.269433419 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.309050011 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.25512356 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.267149865 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.319929659 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.31845541 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304456436 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.268992319 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305828971 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.44266616 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.304690373 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.303037648 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.273599094 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.319370815 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.273217541 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.272066988 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.319041127 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.282682035 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30942932 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.385225631 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.255333216 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.253693637 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314721546 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.331667674 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.276611026 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.253441868 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.271333541 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.385755363 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.269757829 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312744891 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.271373181 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308566259 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.375690786 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311348434 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.331204799 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311411965 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.272173723 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.275446758 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.270089374 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.331208195 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.272459104 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306161169 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308598834 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.276414408 seconds)
done (took 102.575627559 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.390561577 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.262416311 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.404517609 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.269273182 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.428851523 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.410740805 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.268111627 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.268862576 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.268572231 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.0828126 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.268892983 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.267670081 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.263608062 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.268945462 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.39448543 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.269674209 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.267638873 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.97921445 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.296894982 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.410915363 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.265506513 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.269042203 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.268531973 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.093803892 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.262842024 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.259698353 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.412569917 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.270325071 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.980964297 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.259266318 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.26329941 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.979748788 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.411636647 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.290633688 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.279842088 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.27862467 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.431103983 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.287607876 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.395534208 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.395298392 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.408619451 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.310267189 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.261647936 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.264320189 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.272117559 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.269912523 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.269969264 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.301255314 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.266562914 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.270391422 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.982161999 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.280346526 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.281923547 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.27245925 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.271523637 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.289915092 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.271221876 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.273253706 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.416655578 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.27188014 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39537663 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.092196887 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.085913227 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.272873922 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.265066745 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.272676533 seconds)
  done (took 104.163855905 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.334200463 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.341824625 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.374982723 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.281910619 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.317834601 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.380617139 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.282344282 seconds)
  done (took 10.489018372 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.273223811 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.272096144 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.317583211 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.315901728 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.270946115 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.423548877 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.273169193 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.279768585 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.272472822 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.320140297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.271654225 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.272204213 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.281529432 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.268704895 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.316359657 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.280018618 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.383575814 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.269332403 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.271772437 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.419239015 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.272607664 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.28132051 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.320499183 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.280162024 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.274860775 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.274160854 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.033390271 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.272432959 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.273581582 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.272729426 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.273042391 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.319105525 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.272345414 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.269347469 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.273507737 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38699283 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.275483631 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.276190465 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.274897862 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.271635634 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.274017832 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.275892369 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.276789476 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.275539007 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.273694182 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.294495798 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.274772214 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.273522833 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.275481211 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.275805934 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.320812505 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.276215357 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.275288212 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.277214645 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.325035662 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285162821 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.275043828 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.277003965 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.276197529 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.273837623 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.422455317 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.317245234 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.276319873 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.318525307 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.275422161 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.276972046 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.276330021 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.278132002 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361876659 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.276430169 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.320142141 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.277748113 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.452279144 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.297354802 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.277920987 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.275698285 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.275902537 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.275135352 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.269100671 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.27724265 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.276029388 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.275126843 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.280047933 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276893788 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.277791 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.431385204 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380462622 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.278370442 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.285991282 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.278335733 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.278161346 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.326697562 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.279087263 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.27857409 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326347375 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.387272255 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.325762825 seconds)
  done (took 131.633576107 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.285195913 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.286899243 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.277131158 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.299757969 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.272969508 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.273421541 seconds)
  done (took 8.875756351 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.275917299 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.279727156 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.278546073 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.277843485 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.279576969 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.278810316 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.279547236 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.275156579 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.280983331 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.27914614 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.28111895 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.281081588 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.279895215 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.277404774 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.278413917 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.279865271 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.27758657 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.278072119 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.279947424 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.278023628 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.275480198 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.279611376 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279689503 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.274457569 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.282781055 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.279122094 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.296417324 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.281102566 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.28015012 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.285144376 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.298931643 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.280725948 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.274861946 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.279090496 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.282436129 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.275888333 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283722168 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.282571001 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.279735867 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.282381885 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.281567788 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280735478 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.281396449 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.283234801 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.277600324 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.278672722 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.285247755 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.298055949 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.281500931 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.282956865 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.283591849 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.281761022 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.282959677 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.284279052 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.277904772 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297058912 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.286817628 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.282242903 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.281368592 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.277296153 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.28576511 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.283778009 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.278582359 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.284511663 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.283625558 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.284334797 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.278302171 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.286428102 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283112881 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.283003566 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.283799491 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.282276816 seconds)
  done (took 94.460028031 seconds)
done (took 350.79310912 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.020325225 seconds)
  done (took 4.206007389 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.381926579 seconds)
  done (took 3.569941994 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.063013248 seconds)
  done (took 22.256814706 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.303413857 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.273944047 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.302594903 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.273289195 seconds)
  done (took 10.337328594 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.520018491 seconds)
  done (took 3.707184426 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.29169942 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.28283236 seconds)
  done (took 5.764912597 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.485441905 seconds)
  done (took 3.674614057 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.74072479 seconds)
  done (took 3.937099556 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.289643636 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.298643607 seconds)
  done (took 5.783453279 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.27478298 seconds)
  done (took 3.463882021 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.479041016 seconds)
  done (took 37.668974948 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.288214253 seconds)
  done (took 3.478751185 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.317290885 seconds)
  done (took 3.505006253 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.800532021 seconds)
  done (took 5.989163315 seconds)
done (took 118.527807962 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.276688304 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.28452042 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.278052217 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.278977525 seconds)
  done (took 10.306264533 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.339153289 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.339525515 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.345688844 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.340435441 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.337877033 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.338188275 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.312869395 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.312722457 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.340107785 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.338425793 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.339522125 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.338727265 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.340646883 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.31440237 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.338950695 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.339665895 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.337994107 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.339137053 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.313838998 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.338786024 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.287948043 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.338438171 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.339076532 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.287159681 seconds)
  done (took 33.12836371 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.77766908 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.355471876 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.438360166 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.33673474 seconds)
  done (took 7.099276069 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.366819138 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.365803063 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.379906303 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.418777174 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.430447744 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.380093299 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.315045284 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.310124472 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.298615944 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.367737835 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.41754506 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.357916192 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.44751179 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.290157529 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.496208981 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.289682107 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.289175158 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.367769823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.419161799 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.430568984 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.289438797 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.367337306 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.368201834 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.359720855 seconds)
  done (took 34.016323987 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.300223429 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.306319141 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.292881093 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.306938739 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.290743832 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.291128696 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.292475674 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.298821919 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.289207012 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.290745044 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.292517341 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.307552945 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.295074674 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.294159982 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.300476701 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.293706202 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.298751966 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.296719224 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.29338283 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.299414541 seconds)
  done (took 27.124209828 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.281531192 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.279819884 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.632665038 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.538608886 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.283188337 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.286224399 seconds)
  done (took 13.496096586 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.354182921 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.512761423 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.291194669 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.624166555 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.712519603 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.292825494 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.288595644 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.532197678 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.833480792 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.805624106 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.34964254 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.358905355 seconds)
  done (took 19.150654767 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.286047965 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.287477862 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.287469244 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.317659542 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.340419483 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.312374968 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.295516067 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.282594925 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.34695614 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.361726114 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.311916889 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.342799422 seconds)
  done (took 20.968874279 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38385383 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288990852 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288560152 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308342991 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287650362 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130374963 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306870872 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975775008 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.312019039 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563462974 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288284945 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383418733 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541982318 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297195419 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294464574 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.269786294 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518825438 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756055407 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2965501 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290327433 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322000129 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30100129 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294616263 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.493622352 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314103538 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288861468 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.554660556 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.28991733 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560576083 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307612936 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299430894 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289649031 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565363763 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926835595 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405611317 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490197672 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327988769 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290658245 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.299627797 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.288546242 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302568696 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.292344474 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30089199 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288185316 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290679461 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300393226 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996467582 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.315171901 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.291787604 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290130183 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537552175 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39236101 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.29769876 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293081266 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341571617 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292946452 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.29612775 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420928995 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896959003 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295167316 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30230554 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.296650831 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295357852 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294645423 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885871983 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.319359446 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.297979134 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.298265679 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292004 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293029242 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31123112 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293026563 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.316636198 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292624451 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983904717 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32042883 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294087833 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823690473 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303541562 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.296480738 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.522077845 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291423051 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294062244 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.290973876 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293184384 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962870481 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300490623 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.288187318 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335364437 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003552594 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.513411279 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328397442 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324649858 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.517106762 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.279801799 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293366308 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.292904601 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312322828 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31489428 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.992796225 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311739069 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.300083289 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550992733 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.504373816 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302370331 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.279389708 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754543286 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319832876 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.317747523 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307211044 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504001344 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.877461637 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326583626 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303898656 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31192969 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.296288655 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998307288 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308090026 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402150367 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300700667 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558172753 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.047458418 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297399833 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363940496 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30612857 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298452918 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300541309 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297451786 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296283987 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.489189544 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329793677 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.309543482 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.299912129 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296133029 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.310096427 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312700445 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.299048259 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.518306918 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307111551 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578124615 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297218495 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297612925 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298599708 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.518529913 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.296445749 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.634881313 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559496249 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313715933 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313992148 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31263214 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316377691 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402078299 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319071006 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.307225715 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.557345376 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.303799285 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.304617338 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301384784 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.299726608 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30355306 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.30790847 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303086184 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865825786 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288514707 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306638123 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186096801 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.313788172 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366650167 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306147028 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.505170556 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.325932708 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296753651 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.306113573 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.309022845 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522535069 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30737209 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.304219295 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376406523 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.758165693 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882605984 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333545219 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.300019531 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.303072471 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.299361017 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300963441 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301287142 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.300230812 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502558854 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33082859 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.301818315 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871461909 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318687752 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.304022072 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.308324856 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312402639 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.309289911 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301114074 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.30214568 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312938843 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303050122 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.331845117 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445301012 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.31510465 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302454746 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.81900311 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.308270915 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303371918 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301821457 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336611264 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30724519 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092065516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580900575 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317923332 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555359498 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303684331 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.321287638 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.301128253 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303153365 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304114017 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.320942321 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329733573 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.311976197 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306593824 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305191147 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883423036 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035543905 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82323693 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322107802 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.306573653 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30936524 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007068245 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320446196 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304858449 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535239996 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018478443 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323107402 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7672849 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.327013877 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049573006 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561061317 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536751701 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304564825 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.305827919 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551881923 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521278042 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337746682 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304191758 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31003299 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.290286586 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846641357 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323568763 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386870603 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006468967 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322651871 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307069475 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.372824578 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.30484988 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695751332 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323118689 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305045164 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305659465 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323112114 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098924368 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330570826 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305821906 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899499525 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338454443 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.771892859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324829705 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.510666838 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.338586153 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.310068743 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.306002072 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.314633585 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.559388517 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559914851 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310509241 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320293007 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833314563 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.193736124 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.31270274 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306384636 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014367765 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308929477 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590136371 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.315504239 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.327186105 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310420733 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309138232 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308604052 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.308049766 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314480515 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281437401 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780753163 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.316468287 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327942527 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309833737 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31467525 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.562034392 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.323859098 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.878900804 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552659697 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313366696 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331010372 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.314413204 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315148321 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.297822409 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308844121 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306937559 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367939051 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.530916628 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316339841 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.295287512 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327172868 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518946853 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.30983623 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309691297 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568409808 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.326144222 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.324586784 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045977848 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359058419 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321100513 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312240073 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311639691 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348707344 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396837248 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514600006 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.340573758 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.319612012 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702500803 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340793873 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313092567 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.327117326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406161224 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31088969 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.339772348 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.09243989 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881504568 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052541794 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88412236 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584304162 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31378886 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321277865 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31173209 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472606928 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311226237 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586025373 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343351737 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.312017826 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333344332 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32166541 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316578631 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5267889 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588100708 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312264768 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312501147 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316267453 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.311710874 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322581967 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.520996066 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78344841 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849653121 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315152301 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316481968 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022531639 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6073616 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313532556 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314617274 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313274378 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.329972746 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331301328 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.321540189 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313679392 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45648931 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564695207 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967519719 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.341336834 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.344191745 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.836800614 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323789078 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568647137 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328218793 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521368221 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908813027 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012131946 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580018817 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383361236 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520041095 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.338787431 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476019271 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.316860162 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314675797 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316305068 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315132558 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.314679235 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.324360474 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886911024 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596185242 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.322056953 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.317485958 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347317234 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.324865823 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536467647 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998514426 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538422935 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324516681 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323308882 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.317000592 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890627836 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590508198 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317958693 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.325579284 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551011452 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342884141 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342461241 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.838334554 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.320514583 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847135059 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.289678361 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340308627 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323553022 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.005721603 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892546598 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.334848403 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791588906 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320230675 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318461335 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598785579 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.324524584 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320106614 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602190027 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.32163943 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318373207 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532688161 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.90748287 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090892428 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.332659827 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351414009 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.323504871 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313113806 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367399235 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321343186 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32248857 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.725861966 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339788369 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320234391 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33445839 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.325543009 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323303544 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.325097315 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318287869 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.324076156 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.317323195 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.317897363 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327042553 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450437583 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869751443 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340694829 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.998436826 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.646249695 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573240411 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322013905 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.31202737 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.326462158 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320683532 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320617513 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320412068 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319297645 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851968017 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.329982217 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.334209585 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325382206 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.321570949 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530586535 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323211787 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547400025 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350873451 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343543965 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.306928856 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320895965 seconds)
  done (took 942.572413928 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.354771724 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.352713419 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.367352902 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.398405597 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.38231505 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434678586 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.344370619 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.343491499 seconds)
  done (took 20.205106326 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.31683917 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.325425789 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.324991403 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.331667028 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.318586092 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.784358167 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.338403161 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.333020638 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.341628363 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.31894715 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.322594839 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.315774588 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.350916361 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.331177638 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.319829047 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.3281267 seconds)
  done (took 31.939545358 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.237550587 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.447866617 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.130966755 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.341633594 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.354721636 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.325004195 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.527533184 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.347805835 seconds)
  done (took 25.942536643 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.328687576 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.328680288 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.326034693 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.330495794 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.329842869 seconds)
  done (took 7.870974487 seconds)
done (took 1195.014147936 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.327551305 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.32930939 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.328387025 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.329022658 seconds)
  done (took 6.541672732 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.31187956 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.311194348 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.315053691 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.323815254 seconds)
  done (took 9.491419206 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.008682112 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.922375717 seconds)
  done (took 5.158786331 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.813175518 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.812360555 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.810537825 seconds)
  done (took 6.663717237 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.609936083 seconds)
  done (took 2.837414777 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.223020591 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.320993346 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.998743566 seconds)
  done (took 7.770864688 seconds)
done (took 39.691932104 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.320549526 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.677744311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.474979039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.328325409 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.481714576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.475882857 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.060404555 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.319244808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.325972475 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.326791043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.332860918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.484351542 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.113405359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.663098283 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.114507195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.661989275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.484327468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.319151614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.34145735 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.334804585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.063495913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.327935556 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.324235885 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.331596203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.488848065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.467008087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.325197887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.661538874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.320452773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.329468283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.464078066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.322326319 seconds)
  done (took 81.298701754 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.321125292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.339614987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.323703629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.34970879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.323757251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.328402254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.340145483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.324634036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.323451431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.323718775 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.333997222 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.323900153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.338624826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.323231261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.342938922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.324178335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.339322915 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.342420127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.323417061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.340566913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.322487166 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.32929799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.323929283 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.326508382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.3299596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.324747076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.340411382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.322967137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.324108593 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.323767122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.324973303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.353833206 seconds)
  done (took 75.810597784 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.333046962 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.323298377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.341203752 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.324859711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.325156475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.323874877 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.328006557 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.335568722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.335622987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.335713484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.323784565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.327090639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.32716755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.325505739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.329837071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.321821409 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.342631718 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.340014526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.348435011 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.325600203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.324601334 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.327357094 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.334733262 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.325982457 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.324803017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.341010257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.326883856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.32548428 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.338324623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.343540677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.327182219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.325504 seconds)
  done (took 75.817581212 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.607525514 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.336640828 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.339004142 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.331711069 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.340019379 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.337743098 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.331173468 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.61522594 seconds)
  done (took 14.473170898 seconds)
done (took 248.628160537 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.330268805 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.821312216 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.37438476 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.331560578 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.35459607 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.358382959 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.55681874 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.374034379 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.55206859 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.349851348 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.352659356 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.332019914 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.138218434 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.488599078 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.166093043 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.292738831 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.202380375 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.337094981 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.890206724 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.610428161 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.357192402 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.342909087 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.170151775 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.226553202 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.32080404 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.412856267 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.434520605 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.558893078 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.495226253 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.408297567 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.840304463 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.337054999 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.334260991 seconds)
  done (took 62.688761037 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.333115119 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.458197027 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.336647638 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.336518988 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.466134551 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.358260336 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.334552377 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.337763631 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.339650201 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.339531028 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.337996768 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.337908271 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.342554553 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.390103052 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.475744516 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.352599225 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.334354327 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.45671548 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.335643518 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.332211683 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.386938889 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.341246537 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.34295849 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.391088085 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.34043321 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.340878738 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.461125356 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.362091962 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.34200822 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.460510064 seconds)
  done (took 42.344482074 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.341967392 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.908164863 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.067256552 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.345557135 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.337475806 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.342584584 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.616927638 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.34324667 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.34146675 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.34150823 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.811611234 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.361188547 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.372564382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.092445614 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.342277967 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.341423053 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.341576661 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.339224006 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.921411308 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.348218107 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.638320796 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.345789424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.615652459 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.353214111 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.360741842 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.340283364 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.344738585 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.147941304 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.360930626 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.811935699 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.098263295 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.614307814 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.108594118 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.099663057 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.077255767 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.350606253 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.346493593 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.819389605 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.35925973 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.340534329 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.619408619 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.340774111 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.074808796 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.028655239 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.359049344 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.345407918 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.167489866 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.83646172 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.593810751 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.350480347 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.101638012 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.345790023 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.34641019 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.343484958 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.576449879 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.344069877 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.340561026 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.186129257 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.368470286 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.621630347 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.347919057 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.343728765 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.919044326 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.348093935 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.917422509 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.344175817 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.35076817 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.363131436 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.079884887 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.345642568 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.052275117 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.363116728 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.345219228 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.817316298 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.931425131 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.224027308 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.341959717 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.924638947 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.134423259 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.637871573 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.348475856 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.12424837 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.64338483 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.346668283 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.349378317 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.352221895 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.347800759 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.424536258 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.62064219 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.974795859 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.040097796 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.206014049 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.645330621 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.346016056 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.343811908 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.192144827 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.367505765 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.348088021 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.076718216 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.046085194 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.361614078 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.35307922 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.054656706 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.364795991 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.625142264 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.34868341 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.09501922 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.344816692 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.424705607 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.348179938 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.350571824 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.368468446 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.624714677 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.348812678 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.347198229 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.030055145 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.847153588 seconds)
  done (took 188.840505457 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.342124638 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.339939897 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.33912945 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.338737801 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.339266082 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.347789349 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.339731316 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.339903692 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.344281163 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.339812364 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.341046611 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.34862696 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.348554204 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.340011339 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.35449696 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.341375565 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.338629042 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.353797935 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.339889168 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.339670669 seconds)
  done (took 44.103898485 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.350362514 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.892146976 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.883393013 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.351004569 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.351619824 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.346985798 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.401590123 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.36692719 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.349983788 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.638609483 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.513960441 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.36986806 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.351881993 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.35125627 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.868073356 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.337295314 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.637753032 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.889271078 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.352562384 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.891713007 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.3420152 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.35118538 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.347485122 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.895780994 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.664936689 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.625810645 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.409161932 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.91111502 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.368910189 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.351615286 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.894299401 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.352929958 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.348352127 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.893470467 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.369651475 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.36822375 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.352794106 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.405032621 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.422552284 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.658714678 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.976951258 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.654022617 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.36901492 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.535247956 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.358459404 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.341450048 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.903568486 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.369613274 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.34551151 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.354998429 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.360462806 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.872129731 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.37301068 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.872327916 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.375415896 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.354442814 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.90336231 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.878570594 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.887880823 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.522699251 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.366683044 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.629077158 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.36040648 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.904973554 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.376482544 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.356958763 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.355882863 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.521028215 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.916827567 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.631230587 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.648614907 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.64443539 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.355861161 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.412370517 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.373267651 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.713451258 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.411678714 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.774540878 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.648076909 seconds)
  done (took 123.091329905 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.617278465 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.460790402 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.746614203 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.957311617 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.350976014 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.487409774 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.460548456 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.604594888 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.363187156 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.444333913 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.976739736 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.464233425 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.135737948 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.436637798 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.467493504 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.492548784 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.752257477 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.328960225 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.045514242 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.962415945 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.354992893 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.475045086 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.906635339 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.569304317 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.363080685 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.961905789 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.301881439 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.007615714 seconds)
  done (took 52.747612335 seconds)
done (took 515.051339207 seconds)
SAVING RESULT...
DONE!
