cset: moving following pidspec: 11070
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.505071678 seconds)
loading group "string"... done (took 0.514210881 seconds)
loading group "linalg"... done (took 8.969812515 seconds)
loading group "parallel"... done (took 0.17816352 seconds)
loading group "find"... done (took 1.295180654 seconds)
loading group "tuple"... done (took 1.915583674 seconds)
loading group "dates"... done (took 1.366751909 seconds)
loading group "micro"... done (took 0.195281333 seconds)
loading group "io"... done (took 0.510885552 seconds)
loading group "scalar"... done (took 51.246412377 seconds)
loading group "sparse"... done (took 14.162616605 seconds)
loading group "broadcast"... done (took 1.343302773 seconds)
loading group "union"... done (took 10.314747181 seconds)
loading group "simd"... done (took 3.084153066 seconds)
loading group "random"... done (took 11.67322591 seconds)
loading group "problem"... done (took 2.242531659 seconds)
loading group "array"... done (took 24.584193466 seconds)
loading group "misc"... done (took 1.157511309 seconds)
loading group "sort"... done (took 3.828118212 seconds)
loading group "collection"... done (took 19.504728396 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.630057499 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127649739 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.270199919 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.289751887 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.241919643 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164344074 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144954357 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.267078656 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.711909317 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.218505928 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136434972 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.503173079 seconds)
done (took 6.541771022 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.259900785 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.183414342 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170663353 seconds)
  done (took 1.133436252 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077634656 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158422345 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109093647 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095338416 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094222371 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110758564 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093304871 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110398796 seconds)
  done (took 1.55539518 seconds)
done (took 3.808246741 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.522741733 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.882079829 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.510002882 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.165594559 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.306041005 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.302809796 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321874673 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.206304199 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.108576469 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.094348134 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178249642 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.389294567 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.43893397 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.934553009 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093145529 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100256346 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.135833774 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.776801098 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081838918 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.126231221 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.490973253 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.198875259 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099217665 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124747265 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18686744 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136716004 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16335012 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10455913 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666081131 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134633847 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187942842 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099924444 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163757202 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197232794 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.21196772 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09357924 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683423156 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202782686 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090833864 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100448369 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668906896 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121220284 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189992732 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105073303 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.092492906 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185682236 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093346648 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078634632 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.117490496 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086693629 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168121727 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.440937826 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107928883 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.173190765 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094243479 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687460119 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101777612 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276617441 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128478296 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092978608 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092349824 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089573808 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162312927 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095383134 seconds)
  done (took 20.286546607 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.153167102 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167468675 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078180754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.158566962 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124555186 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080954479 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103588198 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079866853 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127864908 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.225770896 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140676864 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.15623863 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093368578 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092628694 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147085516 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233333113 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106283391 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125135935 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09074502 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09077567 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14333257 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096967418 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108976187 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096119306 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171466036 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206560362 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110833374 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125269 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092699285 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097950727 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143530913 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147922529 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094185249 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090761828 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1895422 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107956968 seconds)
  done (took 5.398244295 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.203391573 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125633825 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.215956104 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165557523 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145985966 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.171708831 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152967417 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.281428456 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.219596659 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169395952 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135723492 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106839046 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098431115 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082242561 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079574128 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.526050173 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14067612 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.177367757 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.135585616 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109105545 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083096039 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.387723332 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084051875 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099618295 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087854006 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066719074 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199715239 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104644646 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.090111092 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108243885 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.091575924 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134607715 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194947879 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.123890577 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134705847 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12186753 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10692551 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083702711 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223504403 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094655626 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096136854 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.110691427 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13361688 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117764352 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101049285 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09579203 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226295244 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084594189 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125147245 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.045448151 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.142030292 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198404307 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.143312315 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082065881 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291413278 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099413713 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107618201 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082952267 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.24625203 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116846692 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08267824 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098470738 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087937179 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079581854 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.445468537 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110007152 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.652480297 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085001942 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161283276 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085709371 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107360474 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084405362 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086540674 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104900536 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10262929 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080233277 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098434303 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081646552 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080381168 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103583784 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095540905 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101444277 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08319803 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148888845 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117640855 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102431323 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12638787 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088378051 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080727368 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128494103 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084197368 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085083105 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168944446 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087465993 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110825061 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086632804 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101949394 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129382516 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082082143 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206856724 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084603597 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109639372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103568311 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130013748 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102366396 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080373012 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104735433 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080134761 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080962123 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163803657 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083907648 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083955119 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084520967 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113410922 seconds)
  done (took 23.075772859 seconds)
done (took 49.540311434 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.461436411 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087757466 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085750594 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106687805 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085841108 seconds)
  done (took 1.687862122 seconds)
done (took 2.520242088 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.330438243 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197986863 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101076335 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196096694 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08641562 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.2005244 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186776388 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094847325 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214948056 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084420999 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.195750467 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085596128 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10636719 seconds)
  done (took 2.941937122 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1065555 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110403488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12164482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103739361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085848379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101431527 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119827961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111854329 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101375581 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114115079 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085299514 seconds)
  done (took 1.993093281 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102858995 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108040913 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098772467 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119427883 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0852823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098727118 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118233075 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110427121 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100643959 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113942055 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086357706 seconds)
  done (took 1.977711545 seconds)
done (took 7.74337276 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.101148637 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.758443045 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.149345887 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.213277644 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.357488616 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.247359772 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.570934851 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155630995 seconds)
  done (took 14.551269595 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.173119201 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.111098552 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095011213 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096489686 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091442378 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.116857399 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096760643 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096697382 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.114118881 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097182068 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097123595 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.114146207 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093527913 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09579847 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109340443 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09416793 seconds)
  done (took 2.591259032 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144402001 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12509775 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118019424 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100151062 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114643235 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100944756 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101429057 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116332565 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095221445 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095145184 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119525213 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100672167 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097558089 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110896097 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100382942 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11570376 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111116816 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099617477 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.113428019 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117044438 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101563377 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096592695 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115991648 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100596296 seconds)
  done (took 3.532362599 seconds)
done (took 21.509757049 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154262429 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103064873 seconds)
  done (took 1.093655094 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.149904912 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163171061 seconds)
  done (took 1.154605625 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117125743 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091096895 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141632103 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106440973 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090911926 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108483281 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119122743 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.109586939 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093677273 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091353023 seconds)
  done (took 1.916265762 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.098434514 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09608536 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12458436 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.141999797 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117466444 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0956826 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095946769 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112514764 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099204946 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092603564 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095405857 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.129759664 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096144449 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12987039 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096976922 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096167031 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118874145 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096602823 seconds)
  done (took 2.779969703 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095365531 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094007693 seconds)
  done (took 1.037596809 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09692097 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090669073 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092555227 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113562657 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091319697 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09160513 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107411216 seconds)
  done (took 1.534237244 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.504113577 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.269643521 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.374768221 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107965964 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147574534 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.355038928 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14928397 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105153359 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103245914 seconds)
  done (took 2.999740755 seconds)
done (took 13.359713867 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096953451 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221411768 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.639924002 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114844993 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.210112164 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.166706514 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.29404804 seconds)
done (took 2.597775433 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354824553 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150635104 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086726091 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09122997 seconds)
  done (took 1.532075825 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084642911 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099285092 seconds)
  done (took 1.039058538 seconds)
done (took 3.425818646 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091460312 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.122787146 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108304476 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089992777 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088397134 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088134152 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.110668331 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089474448 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091396112 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108279544 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.090765691 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089479445 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088359932 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107682467 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090179889 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088918857 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.105906278 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090588807 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089104328 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088359355 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108212644 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089375114 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088896021 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.106320717 seconds)
  done (took 3.200900138 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116077769 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091515087 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.1112686 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094717044 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094337269 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112477252 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094984146 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091894898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111144237 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09202195 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093535346 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.11202939 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093129858 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094287764 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106961838 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095441262 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093759477 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090215942 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110174235 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094946785 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092774127 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109111595 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095284621 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094002349 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112805353 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094517396 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090418012 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110389263 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094544742 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094244127 seconds)
  done (took 3.839432648 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.101235085 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086365695 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089470816 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117952475 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087917321 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090168819 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105333235 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08820502 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091713477 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088222413 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110947547 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090775858 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087715706 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108592343 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092217833 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092600354 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11692446 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.088670976 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087594469 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092230665 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112034674 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088032582 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08904678 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10815062 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090167665 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086554407 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089104997 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10912827 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09156071 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089476971 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112969871 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09369815 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090858082 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.118629165 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096242233 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090436433 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094753422 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105510097 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091263082 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087257385 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105676601 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090191424 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086641908 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114819582 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091876828 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091287213 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087397274 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110311512 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092168202 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093554218 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104139851 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089280286 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093104693 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090480963 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.112182248 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088064027 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09125056 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106118083 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092373268 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089954334 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087740328 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.10647681 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09581802 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090498146 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.125465153 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097283782 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087769066 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111839349 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09202508 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094696467 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111033335 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102316536 seconds)
  done (took 7.836234046 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10847696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10041628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091646445 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110468324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091773259 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090445548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115964605 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091173089 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092060823 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11524349 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092481875 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091776163 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109663502 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093001851 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090881698 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090842311 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116206628 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092625108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090928044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111342967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09289684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095579596 seconds)
  done (took 3.04111239 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238375238 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097172795 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140680985 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124249763 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109440838 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123324836 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095692094 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096123875 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114089566 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10039769 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100379264 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11435431 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10788976 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117051113 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101608344 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100885284 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115915697 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101947386 seconds)
  done (took 2.964657933 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107879781 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091582215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.133451867 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094850499 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093464756 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092069843 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118041995 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114159822 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111799248 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094963475 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098286573 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110256384 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095017554 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093168512 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093015029 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.115243221 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093184238 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092189407 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119808157 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098996374 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097216204 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119145664 seconds)
  done (took 3.145074457 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110848161 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092882388 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130462647 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097526016 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091699656 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109565945 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099295226 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092940375 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117304321 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093864908 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092619234 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09107086 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126737509 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09272726 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09725098 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110794387 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092666457 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092608247 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112127958 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093301591 seconds)
  done (took 2.907032098 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178746072 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126109123 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110747203 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117254266 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127976183 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109175071 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115771282 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129890787 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108988171 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137710894 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110167638 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10885389 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137058727 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114484834 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126040522 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117931427 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116272485 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13609744 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109595694 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127620417 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122442015 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107851743 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136284508 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108449992 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127007348 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110845647 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10966303 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133537322 seconds)
  done (took 4.295877755 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095838407 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091588674 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091052524 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109569773 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092695819 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090191743 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089729235 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111071664 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092430561 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091039291 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111147809 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092448963 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091600331 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091891069 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110157224 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091855169 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092212104 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110874262 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093755551 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090359145 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090689802 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11070255 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091260471 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090659628 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109542637 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092320206 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090687114 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091860808 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109703854 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091314217 seconds)
  done (took 3.773227682 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10635575 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101492254 seconds)
  done (took 1.083936695 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.104922552 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105318586 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090063621 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110862831 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099199731 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091654105 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119814495 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099583273 seconds)
  done (took 1.698055915 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.148192877 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.167625563 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097839689 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102955106 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168700518 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.158622314 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136820705 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096029247 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111247904 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086985176 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.161892806 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085254744 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093592715 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109444713 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094341259 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098173686 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.11216589 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102516956 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098823973 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113205689 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099677034 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098237288 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113749693 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103151228 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086975648 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114449078 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098064593 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103579782 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109239297 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096344857 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090989905 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.112519509 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096943547 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096328044 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111017514 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.152303021 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100438636 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110786685 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094524165 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097353176 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.147993298 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09317328 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09393026 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113076839 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096717732 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096595282 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.117290195 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094032991 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084837346 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.109021218 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094605126 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088783918 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.11241084 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095525448 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093364051 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121083378 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095725678 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089878056 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108296938 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090237759 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092277703 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107802536 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096485828 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096092088 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114411714 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095773278 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092615647 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.11038574 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095778196 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093144235 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111482737 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110470999 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093989788 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115785896 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098212109 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092830059 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108836956 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100441461 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092690268 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11242469 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098047998 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121844173 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114865872 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091092854 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089743811 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100191271 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.114478483 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095507433 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085676995 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122351372 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096235833 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093808812 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105237085 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092348037 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089351168 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.115188798 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087437141 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094744881 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.11100494 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09990387 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098771558 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110271351 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097234322 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098191582 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117332057 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094758596 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139964045 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11081498 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090494941 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096035423 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11669965 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088578887 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09288464 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.111482316 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092905476 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087918242 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116507472 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095931599 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094782857 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096879238 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115882083 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095484973 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095519425 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.11292015 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091141425 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096552451 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121140411 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095918985 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095989923 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.114115467 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095468772 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092956838 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.116581776 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092079906 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098434343 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110308271 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094217318 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094727018 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.117365177 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096025668 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088922567 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111126249 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096657324 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092890642 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.116136857 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09602643 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089512547 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08504615 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114407882 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088837197 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092796552 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121902456 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090666987 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09567941 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110486998 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102793725 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090005863 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.118373783 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096874503 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098787695 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118141131 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088230278 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091192057 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114637163 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098453019 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090243179 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112087903 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094283492 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101385136 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08660571 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118422496 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086891638 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09021886 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.117509254 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09539635 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096312074 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109346595 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135462926 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105890091 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117577287 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094578491 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095228965 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116890102 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09404604 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096738461 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118298369 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099661137 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094432852 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111737033 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1013036 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090301789 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09542347 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113056077 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096400214 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086628024 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.114859075 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087547945 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097641206 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114934725 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.100383787 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09852973 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117253663 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095379284 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101274148 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.110386959 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099349315 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085764551 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11760986 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106359316 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099111463 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100072119 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116219417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092514185 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093444535 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123359484 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096439781 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094298153 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.114273065 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088999545 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087121854 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.119517327 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098189944 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091520654 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.11273432 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098044835 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096536028 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111335882 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088073175 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097247487 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117120776 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091158724 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094165281 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109638916 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094339632 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102119829 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105375324 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091781826 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097152875 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097665016 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.11433142 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093622117 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097026743 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.120397045 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097510512 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095994994 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111650023 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103561946 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092281041 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.112974888 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093052807 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096871481 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086927726 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115443732 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096000638 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091203012 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10996961 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099508224 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100391816 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.118854369 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093703892 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097587379 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.119730633 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100834396 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093063718 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.120192866 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091663097 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087014056 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109314759 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088059185 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095469322 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089283105 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.119855023 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092941518 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092327303 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117118957 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097904008 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091541965 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.121073834 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105489693 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107977483 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088674209 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092292923 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113235768 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093056234 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091037113 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094444674 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116633304 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099582602 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09667183 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111639511 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095555368 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101017906 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110620928 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101528933 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099331691 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.120072462 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091542635 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099311778 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.120185836 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100991012 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087615927 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.120649458 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094928226 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094439547 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110439089 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094769161 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091360726 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10655641 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092288207 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10042001 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092302528 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.119813874 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094524693 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091805462 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.111013989 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089961051 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100536251 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.113622293 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101166778 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095008084 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.107761113 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090106317 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098789537 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113131169 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101394217 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089413907 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097501585 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121010599 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098692228 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092717176 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.123064663 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103962484 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100539073 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120521094 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089189103 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092214005 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119328212 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094756833 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096922828 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.115311234 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090213428 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098012182 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.119980728 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097841516 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092579236 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107132302 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096361107 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100853069 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097964536 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.117766622 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096242685 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095426466 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108756524 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098281622 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101084786 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113809494 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103324675 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094197941 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.117244656 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092207947 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100067579 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.113684935 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090435166 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088126209 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091791888 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.120782322 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089825323 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097169698 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11852972 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092192522 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092545672 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119030768 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092371626 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09732353 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117518227 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093778737 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103575003 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093916067 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113484245 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09985972 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099837596 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.108319222 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093966409 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092975286 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121554516 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09364346 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.0993263 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114575468 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100087089 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096504144 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118998346 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101067759 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100069359 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107584088 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10312303 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098671327 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095413653 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111207934 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093428511 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089086489 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114709685 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100940931 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091072245 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122957181 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101539101 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092642564 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113103957 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101533055 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093675479 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121340822 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092100573 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097224509 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107624584 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099635441 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093312559 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118893793 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093350706 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089742759 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099537005 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.121833322 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100571739 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097254555 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122017736 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089535756 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088593416 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.118501055 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093589731 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104718474 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118922768 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094875384 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093674089 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.115694998 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098008352 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102510088 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.109889241 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093884695 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096451721 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116060784 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095767568 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090115323 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098767696 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114776817 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097783256 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093788149 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.111071828 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094607001 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101352145 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.115218033 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092065304 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092358615 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122058585 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095174318 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09163902 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108916148 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102497814 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09717078 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121642066 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093934323 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095262758 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113389395 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097767642 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102288888 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112226486 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097706105 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094526929 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121021893 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102711688 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088846989 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092055952 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124599902 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100919539 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099006859 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.118111193 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094942073 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102005668 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123242328 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098902151 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088678874 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111107694 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095337881 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089342302 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118009909 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103285115 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095184867 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113204245 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101319761 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099362748 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096510502 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.11848164 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090646225 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103170748 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113670378 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100825082 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089354668 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110279004 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099079117 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102004839 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114415414 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098037303 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098100491 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098286417 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.112146609 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093676132 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098507363 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120901108 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102500525 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094295508 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.115471326 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098952489 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105205333 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.118088181 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096267232 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103322405 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122875136 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097518052 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094814051 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120751956 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103319813 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097580037 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12281239 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094371632 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095156888 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122998111 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104721929 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105325545 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115601047 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091232519 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099913431 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093611474 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.111970647 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099914436 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103031582 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.123961141 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095767891 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092597063 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125964404 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101866529 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095552914 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114534643 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093844865 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100374152 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114325375 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.1013733 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093085635 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124354866 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104542736 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102851293 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.125701569 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091464537 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102326565 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119362373 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105090666 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096877295 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09019418 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.11151062 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099990844 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101963396 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122935549 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10138838 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100469534 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120738385 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098648425 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096022399 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113498511 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105622405 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10136911 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097061119 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119243592 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096116611 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096993573 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.120431802 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101890636 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102742341 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118959456 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108168743 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10227523 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116177189 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094691823 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097444394 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.11949653 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098129583 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101033705 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112931115 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092636108 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102419512 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103735472 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118140174 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103939958 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102525543 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116122877 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099671151 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10323559 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.123878236 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09949889 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097131976 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120036217 seconds)
  done (took 62.352076399 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15320511 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105268763 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119981579 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099460914 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116400127 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121003181 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09906799 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098928894 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121642482 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109471494 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098390875 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118992206 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115808662 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139749525 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118598273 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108378429 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119951884 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099754357 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098024477 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119356992 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114603273 seconds)
  done (took 3.319909764 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.122010488 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113750364 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130387005 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113599091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105307265 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131142657 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109744054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130356248 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113620032 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107263826 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132911471 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109619621 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128495992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109027937 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107851805 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129069144 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113393312 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125184431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112784754 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11045978 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128605696 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112194088 seconds)
  done (took 3.524050347 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.113956023 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101862499 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100875286 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119997573 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103662992 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.0984529 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12592453 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099708772 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107984255 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118198896 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094708707 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09712275 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.12179637 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.101132433 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093038587 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098195422 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128684628 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102461936 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104413413 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.12035334 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110418844 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098210721 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.121184656 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.093878562 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109253215 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.125290622 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.100683779 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102154647 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111854903 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103384989 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098594783 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095895474 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.119526488 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092321471 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091208307 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.12297888 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102391405 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098412939 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.11993483 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09918974 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099667159 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121815739 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102936559 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099189595 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.11943816 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.099158573 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103313685 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099105354 seconds)
  done (took 6.043846738 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.13428747 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166651813 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103949145 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13983898 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137068928 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109342432 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.123350364 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139796966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100689177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126173475 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114242733 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134430843 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105741869 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106012239 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124207702 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105841552 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104808737 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122174397 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110091147 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102477795 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127954722 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105712249 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11226163 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133331922 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10609487 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10297431 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125320681 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106687002 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111489252 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130320639 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107310562 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128653824 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.354738862 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104864116 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125374651 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105765622 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113978692 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125013823 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10619929 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101419523 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126432613 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107699844 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105487643 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137003627 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104629926 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.126102164 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105861916 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101888015 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132937958 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105304853 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109489388 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134899731 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106400701 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103110492 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12687531 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113969081 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102500775 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124180881 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106045992 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131547045 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102892142 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10548785 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135051286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10456754 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108155774 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134519658 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106141649 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104234903 seconds)
  done (took 9.208206078 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.14502888 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107016217 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135396236 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114947247 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106806908 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129107741 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106675065 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.128182437 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108697333 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111831446 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127028845 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.20569875 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125193166 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111501434 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105294172 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128341472 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107544005 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126255785 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108523641 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106127578 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.12535616 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11623288 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105687595 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135610265 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116903706 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12293631 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107937012 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105881099 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13471552 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107639588 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116642288 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127995057 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108022716 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135123302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118650786 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106570174 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121896667 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107200705 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107187208 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12826841 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104109609 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115016776 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128697155 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104347412 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107399417 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129184452 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114496878 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139592613 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113581091 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112013315 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130737257 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115268061 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128399383 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108759826 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115225391 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144592375 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116274561 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13742718 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107986684 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114506864 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138018144 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122469403 seconds)
  done (took 8.392924892 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107087339 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100578783 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099584983 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.12141724 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101344567 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101087617 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097939873 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122272512 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100687419 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099302772 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123616446 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1011159 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099814925 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099837028 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122435134 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100628167 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099341346 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120023874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101545777 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100318556 seconds)
  done (took 3.063600675 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.117279698 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119331002 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123911464 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109197146 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102279991 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129348355 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103762649 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103985521 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123516553 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105010104 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110655976 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131208668 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104291854 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107151007 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132189824 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108993419 seconds)
  done (took 2.780110887 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.128682833 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118680258 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.196455745 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104037772 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125915048 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111209486 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102912263 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128513987 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103570966 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109125907 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128866044 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107678451 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103335197 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103631488 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126447805 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106239207 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101772886 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129441517 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103991192 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.194334566 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107479967 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104738987 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127272873 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10735475 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10530459 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129459718 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109725056 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103258182 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12809603 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10500991 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104670035 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133049908 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104853509 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108014551 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126619816 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106270455 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10355959 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.123683415 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107173423 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102909207 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.127109365 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10766791 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104395594 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105140505 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124074232 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105062953 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101702573 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130349013 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105349519 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104479615 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126078651 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112150497 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108225846 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132905176 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110490259 seconds)
  done (took 7.337532524 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120860791 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105015058 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137090948 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103824122 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104274261 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10368612 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127006783 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105322278 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104737748 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123496923 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106650831 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104579907 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125971335 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105288289 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104564138 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12601063 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102914 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10520317 seconds)
  done (took 2.969311879 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116297989 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10315296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106615285 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124370177 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10328045 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103621174 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124945875 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103219455 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101830768 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124285713 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106350912 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103734872 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102639189 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12503275 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104280055 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102172272 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125016631 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104118815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103242023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122021278 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104653799 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103005426 seconds)
  done (took 3.372570039 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120176578 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.186610119 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111793712 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.1951866 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101365632 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098589871 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131540245 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101027259 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116036219 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.122001185 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.10028557 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098545893 seconds)
  done (took 2.440657183 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140075285 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14023899 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126418997 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105387887 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112556509 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131076939 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109340526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107212944 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137386836 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12013763 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129300185 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116946511 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114604854 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138389481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112344731 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134149333 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10995536 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108057538 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125068628 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124951021 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107726162 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137759369 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108359896 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128698461 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109769343 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116457917 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138003451 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120292564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130303938 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116286089 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112142078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131029191 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117484779 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140444749 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105607769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116166085 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130516986 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123668692 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112576465 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139527235 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103399151 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133446816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117482637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113387314 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138477805 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107909412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134143708 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109306571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108333985 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151763302 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114573959 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138049812 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114332252 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113959045 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138664612 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129239599 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141345803 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116436137 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134008849 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12205168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116501213 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136114498 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115344957 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141239803 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113509815 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137201224 seconds)
  done (took 9.086240718 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151776118 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104862978 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130217156 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12009867 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137157806 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110532219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109182029 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129808711 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109821458 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106148834 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176364999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108941693 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140507308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117834376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108219834 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130610359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11010731 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115854327 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127814768 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129512126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130079885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117525578 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11655571 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138533759 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119990913 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135243231 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109291098 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109978472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132015653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109804605 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135360906 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111245353 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117017889 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128671671 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118456599 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108930738 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13098744 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115145324 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107581144 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136706221 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117345735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145293048 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109740492 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10939376 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144362312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110461819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130700652 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107402331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109389309 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127926582 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122518364 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119957595 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14449042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116932434 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131380337 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11100185 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109479438 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131426895 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109720661 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1121336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140225593 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110269849 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151796277 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109655116 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109678125 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140678621 seconds)
  done (took 9.048064732 seconds)
done (took 171.578965023 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.159861828 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.19354786 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147588601 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.183063566 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096318208 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.13074187 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.152160101 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151316603 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094378352 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.119455821 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09581237 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09897372 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.187177317 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096481906 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09543694 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.122521016 seconds)
  done (took 3.082632675 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200638379 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311838742 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112265009 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12299397 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104223666 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101888784 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122706138 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102902309 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09974306 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130588252 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103294777 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098145419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131582771 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099842159 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10006229 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.125364696 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107696881 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102093806 seconds)
  done (took 3.242776343 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12730979 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146460418 seconds)
  done (took 1.246394017 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.140194366 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.201881769 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278286495 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175097265 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.125010252 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140393237 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152927622 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135753656 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.183979088 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137173174 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114310578 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100947428 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150818796 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106580039 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139645422 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.104531298 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128867203 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138390146 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115745941 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101970834 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145098432 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105230169 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105026858 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138657479 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.17212456 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136790041 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104248148 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103164425 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.127063239 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115322216 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106404102 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139863728 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113955919 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176660931 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106072496 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173569843 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131122748 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101981546 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114117044 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122176948 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106582438 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103992214 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.139329271 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101900658 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103313833 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132209291 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104241099 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102487354 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132392763 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109510232 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131784221 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107659926 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172047721 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109788513 seconds)
  done (took 8.037212873 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.863241005 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142630738 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101038736 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.014255135 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152392178 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116587442 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.862378411 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147410614 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255209615 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.875647595 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117182521 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.136574378 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242327721 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255538233 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.989826241 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330472999 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.712736541 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116053177 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129649375 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167212605 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110033872 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151044435 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121397822 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.422910713 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101103334 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123302375 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109514714 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136133901 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158437684 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12453864 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110682439 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199205209 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266887476 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211844208 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102267653 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099808221 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122593635 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162167784 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274535214 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.242934426 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.165012059 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09674045 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1222601 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109439692 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142589896 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099133255 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182286219 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166662221 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191605679 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127269485 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11575422 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110847369 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133435994 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17856107 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099124905 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.331536973 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328457566 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123580264 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109928133 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13759589 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270009646 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101802129 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235668727 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147443943 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215405115 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102545045 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813739995 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184460698 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101264955 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106876801 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131481967 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106532753 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129348333 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16071992 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398286888 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113128479 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12720072 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102170994 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24567719 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101745123 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099719719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184128424 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124116008 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11122486 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114943986 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137887724 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187398746 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227284252 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13735072 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110107921 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128425091 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113251878 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102153712 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234884802 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229790987 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179238143 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234648904 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110033715 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184223442 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184268987 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108539952 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.1899612 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108419409 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139678821 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110042801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225213185 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159216753 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101675728 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128524194 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111767369 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161073169 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106414969 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109757579 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188584444 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458199925 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18547681 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099328442 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104157789 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132528298 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160373907 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131447356 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26535312 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110821452 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186322025 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108097347 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.120978288 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111115332 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184746418 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11117184 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132754109 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109617254 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111645242 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257274858 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222843538 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137775248 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245011377 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.168503468 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132874574 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191222694 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111931289 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189237163 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112524458 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108508052 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125947033 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801455215 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114145614 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132550416 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108048628 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.207652455 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102678893 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103398531 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123313706 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101164914 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809800699 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104190373 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098968127 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126152095 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108108306 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130275353 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111308857 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106441055 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183139088 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243248915 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138024386 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108631602 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100415142 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182801285 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125066855 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104238076 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102826583 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101964527 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.134212263 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105532298 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125948615 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172032537 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180609027 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231781236 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.526431474 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123482119 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103418127 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240576979 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101777662 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321802842 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111109205 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233745606 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188929981 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099029214 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32755621 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191083845 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209908908 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10419138 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191722692 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098944567 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131883014 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160146519 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124655808 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110549062 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180835158 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11673532 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137156318 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.023358447 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102130453 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252248263 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099236682 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189504425 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103196134 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132858383 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302622127 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102245049 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141752619 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158569315 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129624079 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103380353 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.60567553 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10328734 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136303881 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109078062 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236281962 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187118438 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131959904 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11270902 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114782256 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184594832 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236294232 seconds)
  done (took 45.807929994 seconds)
done (took 62.382605113 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301514411 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262386225 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305985794 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.21254493 seconds)
  done (took 2.14857931 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.273319511 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1645285 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.237542142 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10037618 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.249091219 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100108817 seconds)
  done (took 2.121377556 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.499876609 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.375906115 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.310656461 seconds)
  done (took 2.18831792 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261880078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248968537 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355227312 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.414828046 seconds)
  done (took 2.401491305 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.306614251 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132916435 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128033143 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.217874705 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259824113 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.233165755 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149741843 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199796088 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.155907562 seconds)
  done (took 2.832345415 seconds)
done (took 12.688122206 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.371367556 seconds)
    (2/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.254730632 seconds)
    (3/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.363550707 seconds)
    (4/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.149201389 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.217909429 seconds)
    (6/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.30558529 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.239799135 seconds)
    (8/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.355113892 seconds)
    (9/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.199061716 seconds)
    (10/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.27248576 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.198265644 seconds)
    (12/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113343945 seconds)
    (13/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.184605774 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13583437 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.312303788 seconds)
    (16/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.34208614 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.240321981 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.209827715 seconds)
    (19/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.290227153 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.2409214 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.206493785 seconds)
    (22/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.212074924 seconds)
    (23/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.214363522 seconds)
    (24/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.13513588 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.138863964 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.1295146 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.197102059 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082864519 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103491618 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.162732045 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.178321329 seconds)
    (32/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.173349608 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130242658 seconds)
    (34/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19737432 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.131945261 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.20354981 seconds)
    (37/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.17356844 seconds)
    (38/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.155085304 seconds)
    (39/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18773541 seconds)
    (40/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.167064357 seconds)
    (41/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.177578168 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112540203 seconds)
    (43/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.213257513 seconds)
    (44/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.315794025 seconds)
    (45/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.211643348 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.214942181 seconds)
    (47/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.219035193 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.216669335 seconds)
    (49/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084410461 seconds)
    (50/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082647517 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110205172 seconds)
    (52/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.132523146 seconds)
    (53/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08365141 seconds)
    (54/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.1300808 seconds)
    (55/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.097511579 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.162600443 seconds)
    (57/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11985462 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.325004247 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.133669052 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.131872746 seconds)
    (61/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113613959 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088200176 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.08223058 seconds)
    (64/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.117857899 seconds)
    (65/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.138646124 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.082839589 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.171262345 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083277109 seconds)
    (69/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082423294 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116875241 seconds)
    (71/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.181732817 seconds)
    (72/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.087775748 seconds)
    (73/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.120373985 seconds)
    (74/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.164119597 seconds)
    (75/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.089118689 seconds)
    (76/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107568606 seconds)
    (77/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106575585 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.234681143 seconds)
    (79/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084298545 seconds)
    (80/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.081532483 seconds)
    (81/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.177144483 seconds)
    (82/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084591327 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117439525 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125187512 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.133778866 seconds)
    (86/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.150129767 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106296906 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.153207134 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107474531 seconds)
    (90/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.159615956 seconds)
    (91/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.204929785 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.236282319 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108253682 seconds)
    (94/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083926578 seconds)
    (95/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149610113 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.127672886 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112315854 seconds)
    (98/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.184579782 seconds)
    (99/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.236420424 seconds)
    (100/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087723365 seconds)
    (101/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103428245 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.154985677 seconds)
    (103/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.194425393 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.131612385 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084364353 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105756226 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107889525 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.192590514 seconds)
    (109/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083810786 seconds)
    (110/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081496746 seconds)
    (111/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.174095842 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084635039 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107338314 seconds)
    (114/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.134508617 seconds)
    (115/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115166958 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112686639 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111152042 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.131633672 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108161877 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10659237 seconds)
    (121/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.127032136 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102501794 seconds)
    (123/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.153890745 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.132226873 seconds)
    (125/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115996395 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084402047 seconds)
    (127/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083893502 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175676176 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.20874709 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.132346214 seconds)
    (131/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090821481 seconds)
    (132/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083935591 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104843384 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.107941407 seconds)
    (135/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.085096721 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128577817 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128803765 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.110252129 seconds)
    (139/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.115427698 seconds)
    (140/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113171247 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.132033691 seconds)
    (142/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103559891 seconds)
    (143/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111919949 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084026304 seconds)
    (145/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.108601531 seconds)
    (146/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084826004 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106898387 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112481035 seconds)
    (149/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107696264 seconds)
    (150/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095184391 seconds)
    (151/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083538609 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083100341 seconds)
    (153/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.090669723 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108529089 seconds)
    (155/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112084314 seconds)
    (156/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.082384304 seconds)
    (157/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.082852567 seconds)
    (158/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.092294347 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.127383992 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102700677 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084130981 seconds)
    (162/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081687141 seconds)
    (163/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.109049127 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.085393076 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084961789 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08411929 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125581338 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113748818 seconds)
    (169/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.130441697 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.153072583 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107813356 seconds)
    (172/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104525421 seconds)
    (173/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.082733503 seconds)
    (174/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.109452722 seconds)
    (175/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11275224 seconds)
    (176/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114347032 seconds)
    (177/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.082114869 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.152741062 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.102160762 seconds)
    (180/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084101813 seconds)
    (181/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083440988 seconds)
    (182/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.138637868 seconds)
    (183/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08420536 seconds)
    (184/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083872355 seconds)
    (185/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088473684 seconds)
    (186/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.107450356 seconds)
    (187/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095367739 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083702153 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084092067 seconds)
    (190/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.08197054 seconds)
    (191/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.107677825 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108503224 seconds)
  done (took 28.063397631 seconds)
done (took 29.067247889 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.222323945 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129192731 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1117697 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109915646 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208828557 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117531862 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14992693 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114242947 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118712794 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136370971 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10309796 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120987071 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134733255 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.185028487 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138724761 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105010399 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102891968 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.144493049 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126443777 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125036 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.209839975 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104976942 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11868312 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128795504 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.182343108 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133007855 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110805979 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109921995 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147961027 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112080315 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110140187 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.129599388 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.124597317 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.122893656 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.128418852 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11333091 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103211368 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112626622 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11487988 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113527308 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121504219 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.13863078 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113258445 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103539062 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139289528 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113202574 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102684856 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.141158992 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102805735 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110497118 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132153474 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.125907543 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110595266 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.126518247 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102493707 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104292543 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144836054 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105035112 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122240595 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127468133 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106100373 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104052 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114155822 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131004529 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113321563 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103402416 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138003756 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115740051 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110496014 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131284558 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103997491 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112394529 seconds)
done (took 10.057196579 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114903369 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14936537 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.204217119 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.217582878 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131220967 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142970029 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118449861 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128045592 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140860545 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123090668 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140685171 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.161247348 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.186078214 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.145404262 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118521714 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115343295 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.14160008 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112419134 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.21493087 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128738928 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154976252 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120831117 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.132056163 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145987856 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107373614 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136333384 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136545736 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115596892 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106394249 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141643773 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128156894 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131112218 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111607616 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125754742 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149404339 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118528684 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117991665 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140713731 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108556487 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107483295 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141734269 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126199681 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107582596 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14439625 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115602666 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122406045 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140394958 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122287912 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108124904 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.141671516 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109902976 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134671258 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145050043 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124966276 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118701142 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.14674061 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121799082 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119503812 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136172426 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121040428 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.1074737 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.134101297 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109080832 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153434025 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.11227739 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121967576 seconds)
  done (took 9.798960192 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.134242662 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139199359 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143448461 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119213814 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112593169 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127417307 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101365756 seconds)
  done (took 1.935684734 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109969254 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.192220844 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212465714 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.21381092 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.211152237 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196466889 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152596825 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104052444 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136345908 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.139232783 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.192283323 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.246204246 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113199209 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145510775 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215157986 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103833886 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.216515628 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.105175561 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118047716 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.215770906 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119441879 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161519345 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116598494 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102992 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211945657 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103642376 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.266518415 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147619104 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115273764 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117911223 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143967191 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183347091 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.216494954 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117291991 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109767542 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.213735726 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.214321021 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11742415 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.227114903 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106961054 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.214865831 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116526802 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.144699264 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.121088507 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117713206 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.199935393 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121672839 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.144430294 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.119100997 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.220997636 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114892575 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215489817 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11525781 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117485961 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139032095 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121449926 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124681314 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.144998385 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197020394 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147543201 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187469983 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.214396104 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.213869532 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187977382 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155901433 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.191281123 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209104487 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11571222 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138542035 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119011297 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.216774791 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116466861 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114411276 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.203931739 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120721253 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.216759103 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.21552724 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114556234 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114839592 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134843795 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115953993 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10378603 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.204808826 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117451454 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142566537 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122972388 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114776055 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.145800347 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108819194 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152063429 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119599801 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115352371 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.150179794 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120272392 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119244254 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21880444 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112865856 seconds)
  done (took 16.061267613 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114289023 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105624587 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108658451 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.1325034 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106018904 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104796681 seconds)
  done (took 1.745771935 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.151712943 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118608134 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153639579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12061583 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.197314474 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.199145756 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.227233686 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112498995 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.162696293 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13022487 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.224660301 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.199573664 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.226140523 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120752585 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.226469041 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146776139 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.203111726 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142017323 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129468074 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116762389 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.145506777 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124417294 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116808119 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.215356651 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119274399 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.14723089 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113527657 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127309183 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.155032761 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113210779 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121552004 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14823083 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111541003 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.138400445 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.203301672 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138006422 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117908683 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121743085 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147484116 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121877796 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.23052058 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118030367 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.152506072 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123708085 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113282457 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138801635 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122782571 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112529878 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.230903791 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146394833 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12432423 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119724592 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.144819236 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123154461 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111198374 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139799679 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12321842 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.231024859 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12346027 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112050513 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.149061373 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121301506 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139300898 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125751973 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121160015 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.146088298 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.113545331 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12073875 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143122539 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122520746 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122691083 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.146590739 seconds)
  done (took 11.550071743 seconds)
done (took 42.142665468 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.555325008 seconds)
  done (took 2.628324937 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.923092053 seconds)
  done (took 1.992747213 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.690430039 seconds)
  done (took 19.796844421 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.539326007 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.617272778 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.030280867 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155582073 seconds)
  done (took 3.417203236 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.038210548 seconds)
  done (took 2.134352145 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.304619648 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.271254966 seconds)
  done (took 1.656602177 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.760736641 seconds)
  done (took 1.852665109 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.579461917 seconds)
  done (took 2.660613277 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.360551236 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181139956 seconds)
  done (took 1.635287169 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.634103037 seconds)
  done (took 1.730598192 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.736894262 seconds)
  done (took 21.835655883 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248141344 seconds)
  done (took 1.349775915 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292811052 seconds)
  done (took 1.394829459 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.762208054 seconds)
  done (took 4.865292309 seconds)
done (took 70.031601166 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122471308 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118737706 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117385765 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142462019 seconds)
  done (took 1.587773136 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131100473 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120443853 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.147751574 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120687188 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126413685 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119952495 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.147312776 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121217556 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118047176 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148309568 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120111271 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118230913 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149601857 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117754231 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117192823 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149638273 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122305546 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120373229 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147347679 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121536703 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120099556 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148126441 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124307159 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121401544 seconds)
  done (took 4.203648673 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121757374 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109715362 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110862434 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135766269 seconds)
  done (took 1.586279781 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.135154398 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13278184 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156172129 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127689495 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131138125 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157502345 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119451652 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115096445 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144689412 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128272898 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135100113 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158920145 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130359514 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120709805 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156895611 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113601668 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.12062531 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157767569 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127201309 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154578202 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121119608 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126580238 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149887514 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129574222 seconds)
  done (took 4.352075688 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199394979 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129347869 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171781187 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163960205 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.172530953 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117327225 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.140950112 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152865199 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124533628 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145899214 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121919693 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165143898 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152283989 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121306281 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120213198 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150965577 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.13177068 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124069952 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188561728 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12220168 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152091965 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131859721 seconds)
  done (took 4.310628325 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128355868 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109806105 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.1310263 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11186223 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121292286 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137631389 seconds)
  done (took 1.85211489 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11592336 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104103674 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103806505 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130365057 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108798502 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104114002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128246623 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10584037 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10501426 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104550234 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130555012 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103499196 seconds)
  done (took 2.447879465 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.344103101 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108921337 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137523123 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112378177 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114998835 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106689103 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148994714 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10946703 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.272504524 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103703974 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146859952 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19675817 seconds)
  done (took 3.014074543 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216129321 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146821662 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301968475 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369232055 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166870425 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188598542 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271989447 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193638878 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210171142 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139096941 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248343651 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155906684 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179756797 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175954089 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16632481 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156571496 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198442113 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191357652 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176860828 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22949842 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157401824 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194722051 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181603347 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177537884 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135698926 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19103494 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119697618 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1548651 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169360304 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193569577 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170942554 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175345031 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144155465 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219730903 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261741557 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199422468 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287984867 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134582555 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20184009 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.185440886 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258705037 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167024936 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215728151 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154065778 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128887102 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207329324 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179591089 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177687287 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129728117 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171802593 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207735182 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177128166 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.206236586 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136851585 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317684243 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191791152 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142972899 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198411595 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185277072 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219074373 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165990794 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.151973738 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208198656 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184196338 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208896835 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140065545 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193584337 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125360738 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195096557 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220229736 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181769341 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18620314 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.229219834 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132323467 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184375787 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173887893 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204198324 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177456945 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187230486 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119659078 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176538893 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136639231 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126694154 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.229679192 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121945085 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227949655 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131811386 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339856836 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215845262 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156145221 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1881598 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157473353 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188428611 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14468692 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133375854 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146739844 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.190847228 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156847379 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159026208 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157785128 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166645641 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130620285 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150341843 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.1506903 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158295834 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.154651257 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164650165 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18745782 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132024941 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191429433 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149904197 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.179541452 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169339118 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215248372 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131414373 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160553818 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190976586 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18521081 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131627152 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206440056 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185771705 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.171233597 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136904945 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194389585 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188494973 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17000885 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215620517 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140359926 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132915425 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169275778 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160898601 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188049632 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153259195 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15802005 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151939697 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225785676 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126445316 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165712441 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168474967 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160726445 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125886192 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136608581 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16417064 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139877944 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173142651 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135233882 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180161797 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158266315 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181942585 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156784352 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162102742 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179959982 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159941764 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16132655 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172225889 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120388806 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20071426 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187009229 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154784243 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203121481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191820791 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217293156 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160723768 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159382554 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179163872 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154285294 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122457694 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162649026 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18338152 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16078566 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210319059 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215271791 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.197315098 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152025624 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175204043 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168608321 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.205913937 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154233593 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172191773 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158172229 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194485557 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120748352 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123751758 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156239419 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137909339 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158098127 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136457671 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204805332 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163763694 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211953372 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187104046 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139591086 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213207072 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128144575 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187156229 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.166185106 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167136252 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184502845 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211478871 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167214071 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170503939 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161101393 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.149448234 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126055963 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133027856 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19217734 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134432819 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163082079 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141000955 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213651816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199881927 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149641568 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224054164 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193551996 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195923423 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.147887587 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168933023 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197493817 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158786773 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184894758 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164769012 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157809877 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208852901 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140013564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217074845 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183947893 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163435976 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217627564 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155900356 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159169967 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148730636 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188853447 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137933961 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192707843 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146822387 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129518296 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181340152 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138543494 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154184264 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183957726 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171318749 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169397216 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.189290835 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196657025 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126757534 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140779051 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188549267 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14359458 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.136666849 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170350683 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21478818 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145057398 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184902245 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174094119 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159399354 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316278266 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219066328 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207086998 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136244343 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169177867 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164005171 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190881483 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164134977 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209381819 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141393987 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207209385 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158628912 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.171983227 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131542291 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175890604 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151586168 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168408808 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13343701 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15673437 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170729988 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213037065 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140659272 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185049504 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161881515 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147031426 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174993229 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140024649 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225787586 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157804699 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204622766 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.181401405 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.169972142 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221159877 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122575055 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127348842 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161850657 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181042596 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160076984 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161176032 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.207590409 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219724314 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191030057 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163132361 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13616419 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156051443 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156325184 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177223062 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217989916 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136169178 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13603091 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223192784 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157184764 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133421909 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159591654 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310128394 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176123499 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174582688 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.142278957 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280515815 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15860011 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134151479 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163519714 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20043724 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160496304 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1857925 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162634944 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171003167 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164978202 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166351725 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213761942 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191911666 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197200099 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201294946 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146876576 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159839297 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190343142 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206814801 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143585538 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173820424 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164363314 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210359273 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183740586 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.159778183 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160264937 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186774925 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157813517 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200249158 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138285064 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222818826 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128640313 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192153348 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139171828 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124264041 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189162184 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.205848342 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132430802 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209931881 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159171262 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161934563 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126703731 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171965709 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1588861 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138285233 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.160187628 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208917748 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130187114 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162473417 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209964728 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130862837 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185223474 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146067437 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157589689 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142914277 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141734999 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160088359 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172770586 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214213153 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131917053 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209613074 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162961813 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193911808 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156371836 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171902551 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671785317 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155806669 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184217554 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17790464 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190489367 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180826776 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162165217 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190240951 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149494668 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196332013 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147075372 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.269774972 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162716107 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.187981172 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131200672 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170456767 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141041079 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132274405 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18349105 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157041652 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170015449 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136416344 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.186453319 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142380137 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.174301811 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14098905 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21341087 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149533847 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213950133 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181691046 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168119716 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162709528 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202556601 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129215724 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194181269 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201899411 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143068389 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148652947 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163457244 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137822977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212298427 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125014484 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158022065 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191443604 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15893329 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190036451 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136097826 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192579141 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141218356 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191529762 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128305971 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.183115388 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161183205 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161575571 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129171266 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158562155 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189461619 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154673863 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156411898 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173707751 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214284022 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126014498 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134281348 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305559064 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189066162 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19043075 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.169639411 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13708516 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142665745 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185120936 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.155813343 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191666068 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129274598 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157172894 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.131737327 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.191926909 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.15038393 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160594139 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206224222 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187904187 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195967966 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162653723 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.292256381 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166980184 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159596925 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120149831 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.159146486 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142521048 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133366132 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173466506 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214063356 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183196348 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.185663159 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146067478 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165320061 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127440208 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130838717 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196031716 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150871575 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189759937 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14566239 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.13519638 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144620251 seconds)
  done (took 84.957204259 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175188059 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.155342443 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169995084 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.228438462 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19807786 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.300480011 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237439573 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265811722 seconds)
  done (took 2.924987667 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.128663873 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161301027 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142108403 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148115787 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.120097067 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.449050723 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160536579 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121516667 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.167483376 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.162852759 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.144040074 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.629357065 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115747773 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14741513 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128959883 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.120248815 seconds)
  done (took 4.233410717 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.565554002 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.603973625 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.397730861 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.288845772 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238486682 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.18290715 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.826954874 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.704378253 seconds)
  done (took 14.007896289 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.154821762 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13895905 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.320746173 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.265607156 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152379747 seconds)
  done (took 2.235963955 seconds)
done (took 132.802222668 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.132367046 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125387484 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123527971 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157307139 seconds)
  done (took 1.725168265 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.189930554 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094183711 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096404904 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122226257 seconds)
  done (took 1.704343731 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.449293953 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093485896 seconds)
  done (took 1.76929739 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.157714698 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.150956071 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169083139 seconds)
  done (took 1.693471942 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.150497108 seconds)
  done (took 1.351220602 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.13570575 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122438111 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.243686914 seconds)
  done (took 1.707831319 seconds)
done (took 11.157928011 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12793435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511397792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435406596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137361769 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712207164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.43020519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029989408 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177174874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1757059 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140876127 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134858045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690451835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.048336587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.456734992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004220708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.482659355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694265198 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112960827 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148382192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113676814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.03975117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111402381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112050827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112493155 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720165831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421968469 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110270283 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.494664784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110802801 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114458066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430533049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112004115 seconds)
  done (took 17.845325736 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125319104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175700321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147764381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113172662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114030191 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141378491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123125029 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123804612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207943157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109831338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164484023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110786203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115747565 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141803958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13800936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111055924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14469983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114457712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118836614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142650439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135875303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110040921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.143129605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114826235 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11126099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164012805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112242819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122906393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140750463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116812906 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115960005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141330549 seconds)
  done (took 5.425074861 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.165080234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181519571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15028182 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150678726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18892068 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113747208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22526541 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149787134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206856593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113322023 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134026286 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140517909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152652943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111966285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16832005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111331313 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114266726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143771068 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120270736 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140167826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13713101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111427625 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141206093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114951919 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11164958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163897773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113805583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123421704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13928304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116859486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116516186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141966774 seconds)
  done (took 5.722737266 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132597356 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127600828 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135188758 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16541509 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121256405 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126395648 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156287802 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123302829 seconds)
  done (took 2.29501435 seconds)
done (took 32.491056999 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.143105868 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130956587 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132153884 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155732601 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194313402 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.150111851 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129756548 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117530763 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.156078663 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133426383 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111504312 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148660313 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131940192 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122458214 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22786977 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126759006 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.234334691 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.196915575 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.150623404 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126533359 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118917074 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232326591 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123484118 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.150123494 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.204162428 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.14445954 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.188664728 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120189163 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.152730267 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113434656 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.229360425 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123512823 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119096811 seconds)
  done (took 6.242300715 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.220446509 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.121442361 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.151180643 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120626908 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121856073 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.1505179 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.216506658 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150555945 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121379691 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119010452 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118136497 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.23053064 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125662937 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.146788483 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124381005 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114579441 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.247929952 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122645944 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.141099817 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.097927744 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116132137 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120229507 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258725953 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115481498 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.149416616 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121934771 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123587146 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124897399 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.153073597 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121599599 seconds)
  done (took 5.592074398 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.134236664 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133670841 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166167468 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187237196 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147974293 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.163957004 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143443813 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135561279 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175000693 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114538074 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128354805 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181810138 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130587911 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123763523 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.150616578 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133203664 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135784496 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145523141 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121967041 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130600181 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166103879 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131264408 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140459439 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.1539795 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112926018 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120354521 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154873624 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.129183884 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121204143 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.158815714 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116109316 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117003835 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.146079634 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149380496 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114754268 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159721289 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139840414 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125179385 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159645192 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144854116 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117200228 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14845352 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141805084 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.199404514 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117315477 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126959897 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125064358 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.158897459 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112779131 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131237248 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189664483 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113625591 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.163158983 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116727879 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112097058 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12185699 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146166722 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117642765 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12844917 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.148754184 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139615096 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120078771 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155885785 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116428254 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123905309 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142983946 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11436813 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118220128 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171094671 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122912503 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.151407739 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.14305572 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128463179 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126140495 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123818247 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156539124 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113668977 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125249359 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155421497 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121341728 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126259112 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147147575 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119664827 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130897046 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165337645 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128963432 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126265622 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.159808978 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119513782 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115146513 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162061307 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116192541 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119688129 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157677252 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116328425 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117851948 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.157012092 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128141023 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112730612 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139189743 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14966696 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113734487 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138546369 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.152075798 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12221698 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123825202 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.189462894 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114649253 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126565633 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158697782 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114632833 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120857585 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148896779 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114454239 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132642877 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160870894 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122591962 seconds)
  done (took 17.253067623 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.336578499 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315806764 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.183617329 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.316396311 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.159967609 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.212388519 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.312774754 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.315097381 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112957332 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184201797 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.198425948 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.281693731 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11702104 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142217307 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.316462951 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.369513851 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175668559 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151510242 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185277531 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128579736 seconds)
  done (took 5.755454775 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.140859952 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149977491 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169602618 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144704021 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124688233 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160453553 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115018738 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136285522 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157223127 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126355567 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116711884 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162489061 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127442289 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130994157 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161657087 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.15439817 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122596206 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151195994 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137656085 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119347456 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137823513 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142853934 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123535466 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16985426 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134672842 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.155742214 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.115747114 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120393387 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121502199 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.156047202 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119902942 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132394324 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153624063 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110000404 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127270983 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162181065 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122948762 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116890852 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118924201 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151870739 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130323687 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127971765 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.155789628 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102985248 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134148652 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114891309 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.161581879 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126802973 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110195516 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164083225 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128717289 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129190106 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152809838 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.138506078 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120817569 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162477038 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127695614 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129457895 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151234912 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115818194 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113793411 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.14976844 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.125820117 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129577951 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126319155 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.167577278 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132498558 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.145254082 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122257263 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119585944 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118839185 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.163525087 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135613448 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.153374757 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.125074963 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128816657 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122268486 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.128955296 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127742468 seconds)
  done (took 11.976929817 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14790315 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123324433 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.163961913 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153806787 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128335862 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.151462231 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12573858 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136246191 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128555255 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163987802 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129585185 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128741909 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169993895 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125984945 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122966162 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163483968 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129122054 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.184017038 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136203521 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143800863 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.15905707 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122554035 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128103246 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156986034 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147201836 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126398785 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174127693 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130326713 seconds)
  done (took 5.253693844 seconds)
done (took 53.288395094 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.368367047 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.582426179 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.343718178 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.343261757 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.392521372 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.371034262 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.34664565 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.343206447 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.937955681 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.318020481 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.344613973 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.354783981 seconds)
done (took 30.285274588 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.359467324 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.873855543 seconds)
    (2/2) benchmarking "String"...
    done (took 1.616318372 seconds)
  done (took 4.720300687 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.334929866 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.33727029 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.553777969 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.335129752 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.333220923 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.348988298 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.337516314 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.362851606 seconds)
  done (took 16.840206262 seconds)
done (took 27.48533522 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.409182021 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.523873432 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.567919874 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.337815252 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.33456802 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.346464806 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.338280219 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.360034547 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.344633008 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.339320696 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.781244532 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.581666511 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.347996172 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.700394487 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.332449362 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.359442001 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.349159774 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.575481506 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.336177747 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.368966382 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.315262208 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.315318371 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.36110729 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.346778803 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.346827701 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.347706376 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.392517068 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.342412486 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.5349939 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.365830499 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.375789339 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.338568126 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.384730795 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.349985369 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.341662849 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.336433747 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.528340999 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.345032714 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.324211099 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.334004233 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.540167127 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.34288143 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.335522113 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.352487771 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.346571798 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.398367596 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.321373264 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.450286265 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.365828393 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.335664352 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.422402996 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.707605243 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.33729647 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.337338158 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.348190516 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.560443791 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.362264507 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.402535606 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.365573372 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.339107783 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.336643762 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.353835077 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.347998398 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.352361886 seconds)
  done (took 152.555784828 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.341029056 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.341704513 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.341749437 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.359494162 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.34413784 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.342142775 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.342586012 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.341289411 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.342495493 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.367248953 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.340883027 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.338798366 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.343324494 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.301257999 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.349196347 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.363905243 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.344625746 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.338205399 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.361762475 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.343637968 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.34714519 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.34173144 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.354754626 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.34029897 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.345256086 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.425625459 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.350674936 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.350988222 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.350534523 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.340833645 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.342524447 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.347080682 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.003451971 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.210803454 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.344162925 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.371699582 seconds)
  done (took 85.293167111 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.341863465 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.342239162 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.343901986 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.377771112 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.343063637 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.966512588 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.968702614 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.882329847 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.655082039 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.831394414 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.67845293 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.34625662 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.441744688 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.354165675 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.345978902 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.358251758 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.369588006 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.339613035 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.345170468 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.966440072 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.356726348 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.346922406 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.528012745 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.357669799 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38055798 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.742066317 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.34119029 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378581529 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.68550177 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.391462079 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.340600431 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.76966794 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.523112545 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.341300853 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.460049676 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.344368241 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381679507 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.344614195 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.634409271 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.341437073 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.344927714 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.349865754 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.073720117 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.346233511 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.971363825 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.346604324 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.361870218 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.345442543 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.346355606 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.458807294 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.347445221 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.120024882 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.345728521 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.344370351 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.346091688 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.345246006 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.345103127 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.380481614 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.419386137 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.443730686 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.345633418 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.352443879 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37998687 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.347573001 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.605628439 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.342349229 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.879850167 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.401672537 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.468737026 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.971898591 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.348655874 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.348273684 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.447956926 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.464758376 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.343437942 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.346671379 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.346023619 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.34838852 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.462261092 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.344505099 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.787882725 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.530743874 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.362004426 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.848114904 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.450155283 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.346210453 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.77494075 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.348911569 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.348915035 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.125678721 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.443240372 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.344008934 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.347279736 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.34993499 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.78806177 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.344087396 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.973206801 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.637286413 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.350586312 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.611600953 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.350103751 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.80173364 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.944914033 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.091871897 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.349505437 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.466506936 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.532858098 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.361807315 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.34798057 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.854976288 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.348739953 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.407123232 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.348109414 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.756752536 seconds)
  done (took 383.186986294 seconds)
done (took 622.26820739 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.230096501 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.176160081 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.331217654 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.180540084 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.166007773 seconds)
  done (took 12.32483211 seconds)
done (took 13.567175277 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553503119 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.54706631 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.412145031 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554561341 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.3815012 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5728206 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.539487331 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.370813846 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.466495336 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.435269045 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468665552 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.404521917 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.38536497 seconds)
  done (took 20.335852494 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.642941019 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.356060419 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.420793859 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.634656431 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.397339416 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.642125572 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.684721981 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.358385002 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.51713556 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.3724858 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.372604801 seconds)
  done (took 19.642870916 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.649637249 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.358296586 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.41574917 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.660985101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.392242775 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.642333445 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.682532754 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.356591031 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.510316506 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.372779815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.371007841 seconds)
  done (took 19.657154517 seconds)
done (took 60.877267593 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.391918914 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.45434655 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.385305264 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.372071752 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.364479397 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.368450476 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.371159969 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.367679848 seconds)
  done (took 12.318642795 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.369870719 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.370703797 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.36862783 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.367654536 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.368294774 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.369808721 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.368858208 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.370118234 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.37031678 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.368623036 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.367253463 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.369092864 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.368943649 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.368976963 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.368968923 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.368690406 seconds)
  done (took 23.15015774 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.372971056 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.367969613 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.368027193 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.370178309 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.369789559 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.370302832 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.371424067 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.37030438 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.367338155 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.369190201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.369538351 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.3693517 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.369384231 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.370528567 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.368936153 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.368249898 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.368899302 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.369329412 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.374124648 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.371184459 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.370567219 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.372651479 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.368795437 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.369706607 seconds)
  done (took 34.125447909 seconds)
done (took 70.837717603 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.35510508 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.370860474 seconds)
  done (took 5.970754794 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.431635916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.432547312 seconds)
  done (took 4.110012623 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.371324018 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.369767688 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.370879981 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.3696323 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.37065516 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.372171837 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.374676258 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.372945275 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.370105411 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.370083226 seconds)
  done (took 14.959159246 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.371113533 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.368652639 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.37127237 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.371150862 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.372819328 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.372614254 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.372921782 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.373009757 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.37310668 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.370280563 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.371742773 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.37152766 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.372034987 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.372904121 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.371735865 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.371176792 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.373026929 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.374173829 seconds)
  done (took 25.943011648 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.388286768 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.391156654 seconds)
  done (took 4.029916583 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.510671694 seconds)
    (2/7) benchmarking "second"...
    done (took 1.413919355 seconds)
    (3/7) benchmarking "month"...
    done (took 1.488755369 seconds)
    (4/7) benchmarking "year"...
    done (took 1.47992248 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.414663321 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.395792079 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.416884604 seconds)
  done (took 11.369896905 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.37357289 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.585277547 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.715476491 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.892333019 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.374444022 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.377513174 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.180118724 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.376842676 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.376148483 seconds)
  done (took 15.499764718 seconds)
done (took 83.128099949 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.359260659 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.416723332 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.36894303 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.384916695 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.668291608 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.398079098 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.361349314 seconds)
done (took 17.207410177 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.348423119 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.343996525 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.359729235 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.382241551 seconds)
  done (took 10.683867012 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.370663183 seconds)
    (2/2) benchmarking "read"...
    done (took 1.650505811 seconds)
  done (took 5.273387519 seconds)
done (took 17.205612092 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.374305512 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.374252934 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.372684603 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.372240704 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.373970861 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.373657223 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.374404676 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.373037163 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.375073593 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.375508616 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.376686636 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.375042716 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375517017 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.373055745 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374538363 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372743908 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.37447741 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37325625 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.37525549 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.375447831 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.373047788 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377878287 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.374904595 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.372573545 seconds)
  done (took 34.234836068 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.376992088 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.376700112 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.378339802 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.374441221 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.377503048 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.375712553 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.379801145 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.376681569 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.376351801 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.376539931 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374336983 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.376017152 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.377592994 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.377748917 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376692426 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.376768978 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.37568947 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375529331 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375768261 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.376014336 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.377438813 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375558628 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.378507643 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.375912704 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.376364733 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376464124 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.374124239 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.375162308 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.374919955 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.375877708 seconds)
  done (took 42.544830113 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.383191694 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.382429495 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.376928645 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.376606614 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.376857572 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.376386694 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.376660901 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.376627241 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.376848392 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.378521549 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.376500378 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.378889538 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.378318786 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.377964648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.379176489 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.375819966 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.379069414 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.377006204 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.376606599 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.378938172 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.378931341 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.37726298 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.378776324 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.378728644 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.378102538 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.378595272 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.376106024 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.378162825 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.379209373 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.377338322 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.377568569 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.379513098 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.378189338 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.378946368 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.378236851 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.378346358 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.383904753 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.385149219 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.378799071 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.380742708 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.379554278 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.380474879 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.380367724 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.379951381 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.379698892 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.379858613 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.380709353 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.380818537 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.380144318 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.378474654 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.377789872 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.376494718 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.378388668 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.379569439 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.380462976 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.38052079 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.381002751 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.379768353 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.381356736 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.381030955 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.381172676 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.380896313 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.380135947 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.381916848 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.381918417 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.379768471 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.382513074 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.380952171 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.381458244 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.380532245 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.384622013 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.381331424 seconds)
  done (took 100.569167949 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.382255735 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.38552876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.381149466 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.382541695 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.382948995 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.38371669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.383276065 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385546709 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.382378455 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.383775478 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384535807 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.384700228 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381900322 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.383562943 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.383521091 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.384197793 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.384211313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383779991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.383046507 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.384551209 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.38577639 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.384268046 seconds)
  done (took 31.698669844 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386150708 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.385372335 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.382379223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.386691574 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.387665624 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.384147015 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.385874548 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.385315199 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383530282 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.382956243 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384792684 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384401585 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.384906576 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.383284946 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384108678 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.382354203 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.384417344 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.38537203 seconds)
  done (took 26.181619466 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.386505348 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.383334315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.38339453 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.381915901 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.385637057 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.386894373 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383639795 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.38434561 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.386867227 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.382041433 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.383577941 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.38598845 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.386690096 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384575176 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386516137 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.383265065 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.386181436 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38436917 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.387159364 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.384940873 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.387258057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.386986219 seconds)
  done (took 31.730978304 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.385818219 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.387073065 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.383866266 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.387279498 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.384881696 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.38699933 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.387915182 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.384692974 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.386805377 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.386643243 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.385755919 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.386702655 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.386981206 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.386266731 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.385419943 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.389169126 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.387812328 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.388252015 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.388987636 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.387009532 seconds)
  done (took 28.99431159 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.38698461 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.384468688 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.385743924 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386465392 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.385203647 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.384593757 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386444617 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.386537667 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.38474387 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.383933706 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.385425843 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.386128662 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38657874 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.387705547 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.392569931 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.387315377 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.387814387 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.38500578 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.385624863 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.388718284 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.387730498 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.388330876 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.386649966 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.384818972 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.388236872 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387040434 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.385294306 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.385223994 seconds)
  done (took 40.084161607 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391175857 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.388935244 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.387500777 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.387526972 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.389272093 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.390468415 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.388782064 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.391465536 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.388438822 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.388853795 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.389178299 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.391267278 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.390501646 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.38983399 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.388674849 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.38967059 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387825836 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.391469283 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.390150363 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3904859 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.392264981 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392400279 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.393048183 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.390022204 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391659901 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.391098248 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.392241032 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.393311324 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.393664806 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.392850815 seconds)
  done (took 42.976413395 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.413004328 seconds)
    (2/2) benchmarking "in"...
    done (took 1.412112017 seconds)
  done (took 4.090286531 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.391555545 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.392866397 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.389979861 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.392290137 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.393136103 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.388888118 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.391263848 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391270957 seconds)
  done (took 12.393961076 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.383296733 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.391577728 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.39145396 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.391830739 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.390421886 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.380801378 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.394294246 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.396907861 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.386142819 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.386745494 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.391121558 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.389857918 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.389073448 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.386082849 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.388997876 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.389039474 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.395820394 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.39367914 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.391942739 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.390927007 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.392164904 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.388556073 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390813334 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.397402982 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.387690623 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.394625681 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.393624858 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.39598105 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387134915 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.392671648 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.386659981 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.395345879 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.392671798 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.391230524 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.392689021 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.391707447 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.392579425 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.39271267 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.394516112 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.395415659 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.395560934 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.393999902 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.387315936 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.390207664 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.390143391 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.394639416 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.392716607 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.3956792 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.385795259 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.389479415 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.399416984 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38616968 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.395961593 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.390932722 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.389094913 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.397397014 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.398427641 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.389625409 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.39293949 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.395983187 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.402779974 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.398647312 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.392434929 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.394874979 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.396152219 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.403663083 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.397263844 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.398794712 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.395286772 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.3958962 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.397757762 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.403214519 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.400053003 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.398114831 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.395908456 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.397178207 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.391710119 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.400066912 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.398009555 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.395468563 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.397872732 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.395512204 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.397588267 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.402766966 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.390239022 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.398728249 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.395479339 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.395868911 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.387916247 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.3985072 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.401079977 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.39655733 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.390120425 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.392258329 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.392876205 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.395645378 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.389005036 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.392547678 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.396962323 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.39872131 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.395106374 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.391158316 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.395153673 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.395877594 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.394879305 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.396772849 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.401534204 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390303011 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.396399745 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.400363109 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.400164327 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.391736222 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.392659374 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.397559975 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.393063174 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.395141632 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.395650723 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.390183811 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.397116552 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.398574314 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.398491585 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.410645776 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.403399246 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.399871585 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.395403168 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.404611298 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.396288238 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.392813012 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.401388022 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.399558408 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.401494388 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.392075407 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.401858652 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.393460191 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.400565381 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.394759771 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.401389283 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.399890075 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.399251661 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.392318979 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.396522491 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.395628982 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.394214716 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.399693535 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.400841665 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.394677471 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.401163056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.397545144 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.396072394 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.396917874 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.404532537 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.403294522 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.395900882 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.402480534 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.394360497 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.398092262 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.396318507 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.401679729 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.39938011 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.402958754 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.401841165 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.394431256 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.398228663 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.402439445 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.396985991 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.396643005 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.404174019 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.401815652 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.40241243 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.395510395 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.405297923 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.397115463 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.397116645 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.403144189 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.398413407 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.401381799 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.395940033 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.400272318 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.401351153 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.398981689 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.395003283 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.399427096 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.403703338 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.402792793 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.406220701 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.399725749 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.404710831 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.392550635 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.398195859 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.404045697 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.399504302 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.410434926 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.405896477 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.406384081 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.398716202 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.406113627 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.397354487 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.405152631 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.401701887 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.40439842 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.403284427 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.403370561 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.396451372 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.404329433 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.395944469 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.403214132 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.393715383 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.405707069 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.403095879 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.404249585 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.402744615 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.396811487 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.401134771 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.405227958 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.405607509 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.40079761 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.39638944 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.404360218 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.396168679 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.398904442 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.405901709 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.403511077 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.402541787 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.40560918 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.400642029 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.402667472 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.399837149 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.399586206 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.408071488 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.403215207 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.40052472 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.409502747 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.402881976 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.402261141 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.408446611 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.403911737 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.40161305 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.405402091 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.409365913 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.408185923 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.401962644 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.414605198 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.408710005 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.408343038 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.407178993 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.401664749 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.409619118 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.406380774 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.41014685 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.39855426 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.407700229 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.400835566 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.407349369 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.400654164 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.401724465 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.401720305 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.404135767 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.413247472 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.410547362 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.401391535 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.410313606 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.405050039 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.405734545 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.401611938 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.410511905 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.404126675 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.402544472 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.402307456 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.401295738 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.412004538 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.401777655 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.407468645 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.398024994 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.413075819 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.417192299 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.409188403 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.405562479 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.411415616 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.410622495 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.406428458 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.404170777 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.404073395 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.403416667 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.404209056 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.404384477 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.410686868 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.40316924 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.410068102 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.405412662 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.40597588 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.410733126 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.41217906 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.404110563 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.40988503 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.410089822 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.409638471 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.40308719 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.410180699 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.404228489 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.405640622 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.404507004 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.402306079 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.41070817 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.407732198 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.406103808 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.405404481 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.404630861 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.406789814 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.406541574 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.409422657 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.403812102 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.414808922 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.408146218 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.409692046 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.407876086 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.412689246 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.414514162 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.406697546 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.414741379 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.413434068 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.403256619 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.403737154 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.40987596 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.410703442 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.414693626 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.405068578 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.414839542 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.408542111 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.40597202 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.410618229 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.411026976 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.412108103 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.409281069 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.410316021 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.408626937 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.409135315 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.409307466 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.414055906 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.411509252 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.412469549 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.406942888 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.409780785 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.413658636 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.405380825 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.407758663 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.405864596 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.412308767 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.411233586 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.413381168 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.41453626 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.416921508 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.412874257 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.410441572 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.414305995 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.412963689 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.413951864 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.41527943 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.415567933 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.417121912 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.406529428 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.410080725 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.413738507 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.40755015 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.408063765 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.406612318 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.413236012 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.403812878 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.417566271 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.413291769 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.405023152 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.40913834 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.41481659 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.406077385 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.4152615 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.431231939 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.408410787 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.418077653 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.413202012 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.409396195 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.415766674 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.411583234 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.406285483 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.410118113 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.412741946 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.41924506 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.407050853 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.41520454 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.408271324 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.416342126 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.416989801 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.416487639 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.414463509 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.414943915 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.408438933 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.413631143 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.412070704 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.418042936 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.409225468 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.411578608 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.413545808 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.417418117 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.414467173 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.407100324 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.414295772 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.417630273 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.409454051 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.412032517 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.414738689 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.407998617 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.418495397 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.412331617 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.415825968 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.412988079 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.414998272 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.411898021 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.417997333 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.409952996 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.414738464 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.415710661 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.413898627 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.416410221 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.411389503 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.418997952 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.409187916 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.410067329 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.416566605 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.41084465 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.418587719 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.413317845 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.412139388 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.414744735 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.419052862 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.4172296 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.420217336 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.411602706 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.411520096 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.420146412 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.414405344 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.418413577 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.415619216 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.419371623 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.409434399 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.414418527 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.414234631 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.410914991 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.410672977 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.418312814 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.411036773 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.411392211 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.412332272 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.417265108 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.41568709 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.412383703 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.410492035 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.418601461 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.417409108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.421490809 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.408756979 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.411510533 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.412030568 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.420924293 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.41924806 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.41238188 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.419003385 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.415569607 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.41843539 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.413452402 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.411840784 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.414934304 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.41919246 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.418253676 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.410453834 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.422640933 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.41374679 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.41932264 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.41592955 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.417579557 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.410744185 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.409230063 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.414111316 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.41183269 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.41634429 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.412539244 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.414955449 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.413007658 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.418038365 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.416171506 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.417197972 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.41644175 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.41064609 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.418449475 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.409950035 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.4150976 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.409833479 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.411360668 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.421561005 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.418078121 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.413969379 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.419161232 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.422972525 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.420872397 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.410433511 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.412416281 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.414441155 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.419375256 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.418556124 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.409930134 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.41149332 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.416532069 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.414109445 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.415375504 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.412031439 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.422388868 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.419572771 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.409094318 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.411435052 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.413640582 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.417776491 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.41460265 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.416879804 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.412232523 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.414016543 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.416762557 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.417866568 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.41591853 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.41626636 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.41028953 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.430116693 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.411189648 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.413251971 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.411568402 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.416237085 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.412286392 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.411820317 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.420018338 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.417036176 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.41871659 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.431700412 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.413284619 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.410227301 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.416931481 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.407426204 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.415760176 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.408985401 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.415048244 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.416119905 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.414613513 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.4146105 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.410794958 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.412681999 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.409158111 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.418366767 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.415565898 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.405747496 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.408963282 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.414033672 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.414187254 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.414694365 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.413278681 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.413096993 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.411369787 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.407589482 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.421115716 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.418035358 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.416081534 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.414607894 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.415751011 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.411977664 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.411131714 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.415287698 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.419363014 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.412340774 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.414383573 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.409278089 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.416483793 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.416977595 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.40797543 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.408448922 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.409332304 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.416295756 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.420731534 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.423314621 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.411355791 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.409994118 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.418056992 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.412765466 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.408766708 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.417688446 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.415287169 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.409072338 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.412512495 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.416401107 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.41579025 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.416366138 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.412287582 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.420829846 seconds)
  done (took 839.404908748 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.415893398 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.419436918 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.414737303 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.416722534 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.417667195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.415137971 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.416644498 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.416066765 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.415524755 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.41515963 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.413794565 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417816314 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.413824682 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.41748805 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.418614977 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.416288142 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417041485 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.413330806 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.417263734 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.418007797 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.41749324 seconds)
  done (took 31.026880729 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.418742087 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.418624654 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.418638332 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.417144143 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.418291932 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.417735392 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.416014052 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.418941497 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.419359551 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416748775 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.418618439 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.418038151 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.419450171 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.418544084 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.419168933 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.419320737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.416174176 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.417938981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.417646908 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.420545479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.419496079 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.418337925 seconds)
  done (took 32.49033549 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.421203455 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.419163147 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.41114779 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.4204468 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.41967844 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.421888413 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.419419468 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.418738355 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.421530464 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.414969745 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.410886906 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.414638843 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.418341581 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.42477092 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.412575224 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.42109297 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.422691673 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.41970926 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.421430751 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.420580951 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.41884888 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.422944852 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.421320766 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.411915338 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.422278662 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.423968243 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.42297778 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.419160912 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.413618179 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.421755045 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.419993542 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.413756954 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.418146793 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.415814918 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.41839702 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.425383573 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.425453446 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.423920854 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.424694655 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.424940878 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.436542295 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.422593641 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.419830217 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.424767828 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.427595463 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.417933955 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.425395008 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.422753447 seconds)
  done (took 69.469466122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.422697707 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.422349577 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.41976246 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.424252808 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.424713459 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.424281189 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.423704751 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.423461633 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.422172379 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.423919622 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.423815873 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.425298177 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.42297598 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.422528511 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.422873144 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.422870654 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.420464283 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.426892847 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.425867981 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.427482788 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.424582449 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.42414924 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.424467144 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.426155202 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.424850537 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.424367733 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.423818503 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.424332892 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.42339426 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.426259769 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.424844165 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.424604572 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.426986153 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.424487868 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.424043642 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.426017464 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.427166295 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.424096598 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.42357631 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.425415174 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.427758921 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.42297688 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.425271495 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.424508396 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.424338506 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.425766238 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.427069471 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.425657294 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.423496525 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.426239167 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.423608548 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.425433631 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.426625399 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.424998425 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.430216946 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.424950879 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.425720712 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.426096182 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.42518738 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.424731681 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.427016264 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.428323981 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.425698303 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.42549931 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.425280765 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.426773298 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.427224035 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.427238482 seconds)
  done (took 98.186488189 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.427190882 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.423973988 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.42432368 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.424791015 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.424016073 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.4258079 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.42719325 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.426983984 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.424960901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.425385981 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.425918278 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.425890632 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.424786021 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.428922853 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.42546533 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.419411019 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.422631048 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.425396205 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.422800102 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.423265204 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.4249383 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.426395982 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.420417092 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.424364126 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.424685366 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.423562063 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.425891939 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.424352026 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.422362868 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.423197752 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.425778752 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.424236445 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.42306239 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.423819788 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.424600501 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.423686522 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.423054215 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.424211312 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.425770222 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.425913411 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.425315256 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.4255319 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.426920038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.426614893 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.427011052 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.427992803 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.426120173 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.42736422 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.427596232 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.426427222 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.423186252 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.424896372 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.423203092 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.425354035 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.426081859 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.42559829 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.426532258 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.42498522 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.423494733 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.424076243 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.42234154 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.428902811 seconds)
  done (took 89.644041692 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.427334176 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.424345651 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.427237567 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.428901545 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.428530917 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.427614326 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.428253061 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.428007703 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.427381852 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.426382256 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.427768002 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.427418033 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.429711737 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.427919613 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.427072321 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.426651172 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.425849862 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.425593937 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.426901999 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.428103111 seconds)
  done (took 29.839466285 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.426929489 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.428885805 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.426299843 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.425998815 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.427266514 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.42845943 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.427648649 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.428721204 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.426636833 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426707665 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.429788509 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.42702214 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.429478056 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.42913517 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.429980541 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.427996327 seconds)
  done (took 24.140745625 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.429235514 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.433540084 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.428516731 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.425966091 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.426984909 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.427499945 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.425646995 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.425120876 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.426142026 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.428448336 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.425965538 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.427157835 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.427752924 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.423993764 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.424892153 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.426894257 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.424947811 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.425110524 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.428024003 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.427235169 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.426229225 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.429011855 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.428567038 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.426526694 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.428235644 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.42761338 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.426015278 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.424175934 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.428821324 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.42716228 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.428570038 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.429813641 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.429550943 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.430277267 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.425784786 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.426919591 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.428858645 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.428174894 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.429096085 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.429751569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.430269704 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.428077367 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.428818231 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.429139524 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.428825369 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.430256852 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.430803184 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.42992351 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.430108778 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.428265246 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.431349656 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.4294182 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.428302091 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.431012977 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.429561701 seconds)
  done (took 79.835637924 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.428962555 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.432394646 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.42988931 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.428216369 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.428635633 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.430242265 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.429269764 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.433269938 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.429622831 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.427994193 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.431346306 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.431871731 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.43184906 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.428514461 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.431610299 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.431358713 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.429357191 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.432375343 seconds)
  done (took 27.041893948 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.432158897 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.431734034 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.431984552 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.431155467 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.431698458 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.430168671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.430470429 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.429537376 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.430814107 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.429899759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.430346234 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.432998707 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.431561946 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.430901638 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.430859599 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.429779157 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.43012826 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.430185219 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.429517886 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.433087546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.433952565 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.433195222 seconds)
  done (took 32.781897976 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.42271217 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.424523089 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.42509861 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.437818169 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.434338865 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.421863456 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.423130317 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.424132659 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.444046888 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.464623106 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.460164946 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.435887867 seconds)
  done (took 18.513577551 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434814034 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434320178 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.433172578 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432390262 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433426604 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433008557 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435325837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433836018 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437566004 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43425523 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432790164 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432035334 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434081538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432886939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433947325 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433242859 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435825779 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432352474 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436120544 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43491283 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43539777 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433576297 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433082136 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433147127 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433425792 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435331495 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435170593 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43399768 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43622125 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434815108 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432078017 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433671367 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434023798 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435880409 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435259403 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436759574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435858017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436348305 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434423743 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434001193 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.435139526 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436787305 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432548537 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434433484 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434919447 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432965955 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435578306 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43399493 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433164696 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436792892 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436951032 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43477366 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434460614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433431031 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436518779 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436036265 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436012204 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433979586 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436069262 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434322456 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434525935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438922575 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435912577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4368908 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438437659 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436466596 seconds)
  done (took 95.989193766 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435209982 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.436874572 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436913362 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438567922 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435492919 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436903187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435833953 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437599257 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.439251141 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436451226 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43569555 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435391215 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43526065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436420846 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43532995 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439189335 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437677271 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435935188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438040761 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438058341 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436361976 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434722166 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436907875 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438177817 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438411277 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435114109 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.439313446 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436948886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435301804 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437512132 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439024882 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434841748 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437071749 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.436747359 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436770509 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436047037 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437756566 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437750793 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435850601 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438847224 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437399185 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438285591 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43650718 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435993711 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437663305 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438349755 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435257762 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436950437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438580307 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436362476 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436263823 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437670295 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439119175 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435521816 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437412135 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.438657877 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435590388 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437697502 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438023723 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437647077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.438036972 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436475156 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.440501795 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438121649 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437278192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436144255 seconds)
  done (took 96.149905563 seconds)
done (took 1961.264457084 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.592797202 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.548867956 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.429493038 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.446578837 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.42534432 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.425487095 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.437864864 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.42556988 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.431298141 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.430055786 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.430265989 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.621774577 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.461632538 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.424928021 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.432344315 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.524759863 seconds)
  done (took 28.787499046 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.457942274 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.431407599 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.547835934 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.429109845 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.460049661 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.622668566 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.48748286 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.431631238 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.605892938 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.444825288 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.429698737 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.450968698 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.434322117 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.428768793 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.4476809 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.621187238 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.68946875 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.428408343 seconds)
  done (took 31.152204823 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.888061079 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.43673771 seconds)
  done (took 5.624619318 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.454447738 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.431576013 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.436010378 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.431800649 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.42423804 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.422005582 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.434064824 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.42511911 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.447096533 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.560950606 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.433273038 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.444872933 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.44608723 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.434660679 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.440084107 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.479071035 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.576585905 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.442764308 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.439375535 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.439586596 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.432004942 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.530184233 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.476226436 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.437289401 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.560483283 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.432961756 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.435018258 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.438556383 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.559808974 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.442120829 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.435230874 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.432713319 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.435481671 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.426515272 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.930249914 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.421239755 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.453915079 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.440659976 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.438822272 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.578198469 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.435618067 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.440280917 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.42580402 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.885090798 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.577928467 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.551904073 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.452380205 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.438089734 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.433891161 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.49893648 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.433346555 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.434423491 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.491213132 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.285900949 seconds)
  done (took 90.870880626 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.47270198 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.423566454 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596198338 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.446366977 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.430325722 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.425702162 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.426005932 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.711491333 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.475649737 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.425664637 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.738463069 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.95078575 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.437006807 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.488316995 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.996714306 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.427552449 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424781825 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.423683759 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.428689795 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.429651918 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.940640276 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424272485 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.421960401 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.470075031 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.459016434 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.909975164 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.428163213 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.426184151 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.445873249 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.420282208 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.91253963 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.435819219 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.494062952 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.424067519 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.703956163 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.796634022 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.769986586 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.427722221 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431463015 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.425333158 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.451553176 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.900330844 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.784729621 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.428211222 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.426829496 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.895709134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.425817668 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.440789148 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.433576983 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.64950327 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.425918159 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.427585792 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.435239805 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.423781155 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.433176311 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.536984647 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.430805784 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.935245091 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.427535039 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.423741387 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.46204619 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.431070989 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.428703538 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.429883351 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.429920925 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.788299903 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635618972 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.431866838 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.787683063 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.896262756 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.428334669 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96759323 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.429265458 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.449794367 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.637031746 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.429181101 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.441332632 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94538439 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.470790319 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.423169583 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.76749693 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.432683116 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.727571338 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.44450591 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423457276 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948942555 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.431663882 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.479184115 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.424717815 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.429466667 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.426594952 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.434595247 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.705282462 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.475536864 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.427272977 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.426002943 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.465317522 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423935991 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.440957318 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.428867711 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964431747 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.434908252 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.426676378 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.429356539 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429670171 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.427810816 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.429493175 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.430585779 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.670547766 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.424441493 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.430502014 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430209479 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.422242966 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.43282821 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.476333686 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.434172508 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.730339808 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.43390096 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428948171 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.429182683 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.428330669 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.452858884 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425241293 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.429032106 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.306653759 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.661538672 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.443734438 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.424081071 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.433107519 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.440505731 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425731427 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426619906 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.463822421 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.431276587 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.170574409 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.449159231 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.453660583 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.438656689 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.434133679 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.430073441 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.427674402 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.430565207 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729251554 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.70425281 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.609012463 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.430027918 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.427892634 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.166235958 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.433902901 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569311905 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.444748502 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.429157339 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.650294781 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.628182346 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.428678681 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.426540673 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.431643427 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.658356134 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.428209654 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760720588 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.928937495 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.43263822 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.434379696 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.175524351 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.14063534 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.431248572 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.431805055 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.715295686 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.442503635 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.431533775 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.434443149 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.431199477 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.434572349 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.434837887 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.434773474 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.429822399 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.433410727 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.70201954 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.606352954 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.443252132 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.432864529 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.90310567 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.453673677 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42810948 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.433547293 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.43372341 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.431859968 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.446283517 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.434296358 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.435206622 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.432781103 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.431555989 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.926594932 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.429336138 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.431166037 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.586300126 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084019956 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.434304242 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.434074619 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.431656185 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.050349511 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958705409 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.503494388 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.731579164 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.432214132 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.471380329 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.432535672 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.502198534 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.924242984 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.435950745 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.430021224 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.06417306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.432705165 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.835983573 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.4343528 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.434363102 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.973090594 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.432609022 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.436930335 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.428888809 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.445964182 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.712797391 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.430659527 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.435397513 seconds)
  done (took 517.977546869 seconds)
done (took 675.709803044 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.434572883 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.434664448 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.41385742 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.437135312 seconds)
  done (took 11.028262488 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.453919855 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.442193752 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.452316783 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.439053037 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.451535849 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.444293716 seconds)
  done (took 9.99371869 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.434763773 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.436152395 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.437219372 seconds)
  done (took 8.618256563 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.652224222 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.451029715 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.78684729 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.446236014 seconds)
  done (took 9.649694746 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.449450915 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.452762343 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.451678031 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.45143741 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.453985513 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.456768039 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.454458101 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.453844711 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.457476638 seconds)
  done (took 14.392734298 seconds)
done (took 54.989865194 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.247593939 seconds)
    (2/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.418922663 seconds)
    (3/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.419446422 seconds)
    (4/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.462755774 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.655794017 seconds)
    (6/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.653298188 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.542207517 seconds)
    (8/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.236718244 seconds)
    (9/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.502928749 seconds)
    (10/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.431131397 seconds)
    (11/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.518240292 seconds)
    (12/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.470318015 seconds)
    (13/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.260909116 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.473142894 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.417759985 seconds)
    (16/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.543575238 seconds)
    (17/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.096445844 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.437405036 seconds)
    (19/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.467534233 seconds)
    (20/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.414961527 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.662644748 seconds)
    (22/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.311665962 seconds)
    (23/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.546133333 seconds)
    (24/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.47557264 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.597313278 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.513349882 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.419948159 seconds)
    (28/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.605123478 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.587552534 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.593260122 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.418631548 seconds)
    (32/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.519141642 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.530739643 seconds)
    (34/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.584683278 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.663491881 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.272501442 seconds)
    (37/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.655314896 seconds)
    (38/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.603949407 seconds)
    (39/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.621050856 seconds)
    (40/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.468837737 seconds)
    (41/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.699713031 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.504424417 seconds)
    (43/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.546350792 seconds)
    (44/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.420477029 seconds)
    (45/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.15626137 seconds)
    (46/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.581087746 seconds)
    (47/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.418195231 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.583408031 seconds)
    (49/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.144067361 seconds)
    (50/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.10167348 seconds)
    (51/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.475931144 seconds)
    (52/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.507566817 seconds)
    (53/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.583851269 seconds)
    (54/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.524102035 seconds)
    (55/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.421802857 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.614361503 seconds)
    (57/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.452550166 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.452478937 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.537497369 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.531263955 seconds)
    (61/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.517861215 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.612215904 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.422904552 seconds)
    (64/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.422423415 seconds)
    (65/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.446470662 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.616312549 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.528771932 seconds)
    (68/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.15001295 seconds)
    (69/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.255913248 seconds)
    (70/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.443021356 seconds)
    (71/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.562840756 seconds)
    (72/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.559854624 seconds)
    (73/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.423350922 seconds)
    (74/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.517807493 seconds)
    (75/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.650549423 seconds)
    (76/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.546206546 seconds)
    (77/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.616953071 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.191718448 seconds)
    (79/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.42002251 seconds)
    (80/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.50274092 seconds)
    (81/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.420920516 seconds)
    (82/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.46019677 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.588303198 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.53004835 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.546268399 seconds)
    (86/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.585745418 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.554851427 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.524336212 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.440825236 seconds)
    (90/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.441220004 seconds)
    (91/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.657156384 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.418157892 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.442009497 seconds)
    (94/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.424014077 seconds)
    (95/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.696755018 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.563038685 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.47630012 seconds)
    (98/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.421998237 seconds)
    (99/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.622229759 seconds)
    (100/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.559461489 seconds)
    (101/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.44501907 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.537848713 seconds)
    (103/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.507818901 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.601239348 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.423632541 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.59777571 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.198642106 seconds)
    (108/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.201559361 seconds)
    (109/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.4243695 seconds)
    (110/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.525997002 seconds)
    (111/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.566459342 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.28559275 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.561627663 seconds)
    (114/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.483518012 seconds)
    (115/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.482467587 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.473886744 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.48319039 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.57102521 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.561945484 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.454373276 seconds)
    (121/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.497735749 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.554054596 seconds)
    (123/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.440747573 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.54645043 seconds)
    (125/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.605561082 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.711313521 seconds)
    (127/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.423663012 seconds)
    (128/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.688029055 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.42568976 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.688460925 seconds)
    (131/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.474811275 seconds)
    (132/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.441437544 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.546595537 seconds)
    (134/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.624536275 seconds)
    (135/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.430807229 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.577886696 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.536667671 seconds)
    (138/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.424946118 seconds)
    (139/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.518721988 seconds)
    (140/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.485854585 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.530976813 seconds)
    (142/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.617975994 seconds)
    (143/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.475557576 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.586629701 seconds)
    (145/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.426171199 seconds)
    (146/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.424972614 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.445955208 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.522379585 seconds)
    (149/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.5419605 seconds)
    (150/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.427631001 seconds)
    (151/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.580775969 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.589509058 seconds)
    (153/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.656390484 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.428886655 seconds)
    (155/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.490729469 seconds)
    (156/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.478182641 seconds)
    (157/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.584467069 seconds)
    (158/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.429105736 seconds)
    (159/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.519848432 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.558739946 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.42999904 seconds)
    (162/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.550125085 seconds)
    (163/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.300106333 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.437403853 seconds)
    (165/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.428371011 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.435486535 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.504943092 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.485870771 seconds)
    (169/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.515851631 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.562181807 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.552743818 seconds)
    (172/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.446570681 seconds)
    (173/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.173791235 seconds)
    (174/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.202429622 seconds)
    (175/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.476491099 seconds)
    (176/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.52578791 seconds)
    (177/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.483850151 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.650767924 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.558692004 seconds)
    (180/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.258983258 seconds)
    (181/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.353030948 seconds)
    (182/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.484146736 seconds)
    (183/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.584845962 seconds)
    (184/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.30696673 seconds)
    (185/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.780807029 seconds)
    (186/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.392435659 seconds)
    (187/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.399110354 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.559284324 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.428085162 seconds)
    (190/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.565661394 seconds)
    (191/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.269184006 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.596081663 seconds)
  done (took 360.73220439 seconds)
done (took 362.042218255 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.474431405 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.535487455 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.457826778 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.454062133 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458890596 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.449524682 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.490950349 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.455600317 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.470773714 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.471312007 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.450099598 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.479919883 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.470909317 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.468515388 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.491521808 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.459291995 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.457596937 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.464865479 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.472328791 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.473512737 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.458950736 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.460407363 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.481217364 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.45802083 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.466611505 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.466912029 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.467470337 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.461140228 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.462676231 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.474524707 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.451184593 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.479374157 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.47684632 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.472503344 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.459264852 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.467600282 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46172077 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.5364793 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.479226871 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.47016776 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.470739612 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.466672617 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.457244326 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.456925109 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.461983944 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.476605804 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.463765808 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.468577655 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.456800906 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.444697702 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468566948 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.463094988 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.460224697 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.446385006 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.447851176 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.461134598 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.458694922 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465383886 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.457484231 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450676388 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.481723222 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.463646016 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.462386369 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457166697 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.455245702 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.461160253 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.454800592 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.460189088 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.454950354 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445935837 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448569672 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.456622032 seconds)
done (took 114.850376695 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.566924906 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.432525834 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.57767765 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.452525852 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.600939849 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.56624097 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.446083743 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.447561294 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.446700828 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.241067673 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.444793447 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.444987185 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.432516569 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.445120921 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.562040417 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.445336234 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.43992006 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.162608258 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.440235935 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.57278761 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.430475437 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.439513068 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.438243787 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.229487048 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.423702197 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.424565876 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.568161685 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.433448075 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.148901738 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.421590497 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.424555865 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.126047175 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.560419107 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.446771911 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.437332342 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.437985327 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.580827925 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.428964226 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.54329855 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.540656142 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.559049126 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.462369398 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.410850733 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.415901181 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.422447217 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.422285272 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.424567272 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.452662372 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.410469585 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.422552881 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.112840039 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.431373844 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.419759684 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.42517062 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.421790738 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.448542098 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.425093858 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.416865124 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.549985868 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.418388436 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.53443766 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.238813494 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.245742592 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.413079427 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.40158777 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.413833434 seconds)
  done (took 114.683589548 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.473026858 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.481375542 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.512658623 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.400520829 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.450790134 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.513125613 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.403911352 seconds)
  done (took 11.521206802 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.409450255 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408737138 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.450696327 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.451853923 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.40819091 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.556443428 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409363999 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.415220535 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.401569802 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.451608249 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.403677127 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.407618255 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.413985003 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.397817818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442893832 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.411032329 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.510608576 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.397288481 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.406641266 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.547779497 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402059749 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.414490779 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.446019868 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.410006475 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.407721545 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.402496749 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.164919485 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40724771 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.402844628 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.402304898 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.398786168 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.448852303 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401923168 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.394006849 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.400899368 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.5085816 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.401467165 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.404720319 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.403777098 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.398177724 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.401880098 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.399605165 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.397396231 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.399091673 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.401132559 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.417518397 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.396812412 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.404411012 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.395194627 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395510573 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.439238586 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397555333 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.399042011 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.399398257 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.445858491 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402720681 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.398470333 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.399640992 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.396262622 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.398147171 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.540782635 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.43830321 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.396939092 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.433674742 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395525603 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396536165 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.396372893 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.394552153 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443843211 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.39120214 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.436153326 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.396117699 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.567233505 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.410490559 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.397785787 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.393245949 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.387169331 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387888888 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.383297422 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.388317035 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.396297214 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389256278 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.395454845 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396234134 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392185588 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.54998078 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.498532769 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.398911717 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.401318254 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.391438376 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.391011064 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.43376927 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.391926513 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.389950981 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433905021 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.500161944 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.446386852 seconds)
  done (took 143.670680122 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.392715685 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.389105752 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.381229298 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.408531082 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.382107694 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.383520906 seconds)
  done (took 9.604310578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.383301472 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.390934153 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.390163788 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.388181519 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.388982611 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.391346022 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.38930888 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380573849 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.387308828 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.387350391 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.388407615 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.390288093 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.390363026 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.388059971 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.386845933 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.38748968 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.386570741 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386218788 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.387820517 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387824311 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.377844659 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388768088 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38923287 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381099121 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.389456349 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.388125202 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.403625498 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386323158 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.387598507 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.386845668 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.390532967 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.388547987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380422267 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.383323666 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.388590834 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.382395461 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39015118 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.391504389 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387710376 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.389761089 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.391072541 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388127829 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.38765576 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.391789452 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.382767916 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.384150922 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.393416258 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.404579069 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.392387009 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.39004672 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.387932671 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.388832032 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.387644887 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.391780918 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.381999695 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383821177 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.391786933 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.388193902 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.389687968 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.38256141 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.390429618 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.388387193 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382179682 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.388899582 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.385492192 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.39150681 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.380358544 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389108513 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389978218 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.389407976 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389457396 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.386107638 seconds)
  done (took 102.208672986 seconds)
done (took 382.994155762 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.67429768 seconds)
  done (took 3.935120887 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.379923166 seconds)
  done (took 3.646440634 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.497053686 seconds)
  done (took 22.769005191 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.405025389 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.470476279 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.400156329 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.381299501 seconds)
  done (took 10.925527846 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.666985388 seconds)
  done (took 3.934660349 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.385240857 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.380164023 seconds)
  done (took 6.032022827 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.588189204 seconds)
  done (took 3.8541286 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.619894802 seconds)
  done (took 3.888997706 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.41401672 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.39871347 seconds)
  done (took 6.088902704 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.355626569 seconds)
  done (took 3.622838588 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.942869124 seconds)
  done (took 21.208536626 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.389373038 seconds)
  done (took 3.659774724 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.454173559 seconds)
  done (took 3.719923977 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.895189202 seconds)
  done (took 6.161855035 seconds)
done (took 104.716006633 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.377573331 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.37533676 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.379474814 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.382733586 seconds)
  done (took 10.782870211 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.44354044 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.442112261 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.450923563 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.441474876 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.441186037 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.444794912 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.418226461 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.419158328 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.446245607 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.44567696 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.450992922 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.444289894 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.445594788 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.4194199 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.44667133 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.451881105 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445299317 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.451815667 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.418017971 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.445187468 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392664254 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.445815017 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.446325012 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.392530568 seconds)
  done (took 35.758757601 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.902999807 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.45599347 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.541669645 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43690354 seconds)
  done (took 7.605404024 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.472838805 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.47526461 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.492584069 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.52947301 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.557699266 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.491876666 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.416922755 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.416690028 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.401716666 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.476818259 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.529973187 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.461908845 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.58404022 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.39381651 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.61335297 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.39420178 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.395839075 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.474426786 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.516506061 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.545566063 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38754388 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.462786079 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.472363341 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.453904134 seconds)
  done (took 36.686335712 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.395832859 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.403472231 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.385930999 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.400520166 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.389092875 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.409557522 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.403274225 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.405503259 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.401363654 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.400208978 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.399218957 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.415753303 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.401327063 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.400250385 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.406793301 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.402880995 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.402421098 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.405383358 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.407135609 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.40187124 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.400037239 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.406252067 seconds)
  done (took 32.107026503 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.384929892 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.389407309 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.739657021 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.641927394 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.386577957 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.386873448 seconds)
  done (took 14.20027403 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.448422629 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.583945363 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.382781026 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.719392922 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.807693713 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.379162263 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.375195556 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.618021947 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.917329285 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.912160546 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.430562539 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.455529366 seconds)
  done (took 20.29550735 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.380962211 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.375261271 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.382834946 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.390918833 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432379331 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.38560834 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.388359942 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.376393273 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43429555 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.438508676 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.38455238 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433536936 seconds)
  done (took 22.069933015 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472915666 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385783986 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381926649 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39794424 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38707618 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229259391 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457233158 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114494892 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.389396191 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658459803 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387145902 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475047443 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64229849 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395462538 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385910481 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35734753 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61367899 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889658082 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384281108 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384378024 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432836332 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396897734 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389245964 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60924263 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23064161 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385569878 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.658079746 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38609845 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677656729 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651229595 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650006147 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394123088 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666031694 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024406257 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487377323 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593897599 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381329414 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392128085 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.379087584 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.398057661 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38861757 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391978454 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.650109979 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394258867 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390511445 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395913578 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130771615 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395078677 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.390457049 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388460776 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652502738 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491228342 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392676514 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389019418 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419372373 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392579581 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.397025962 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514913996 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953354489 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388796701 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401102476 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.394695553 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39615041 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393540296 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044109931 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393569896 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.396078451 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394542611 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388873909 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38915789 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41423584 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392605923 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.411449197 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391559434 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172917137 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388601635 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393588131 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954763732 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40271486 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.395114095 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625449324 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392416889 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393433186 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.392940292 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392442745 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126328876 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399532656 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.363878912 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457703215 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123087993 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598302856 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413497622 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424394674 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619180384 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.364117347 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392815555 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.392207175 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395291907 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41036917 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.127678645 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394064718 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396238031 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650037846 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603205416 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394744847 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367399418 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877524565 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404303441 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.417336333 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402707197 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600830401 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.027441163 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655172375 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409957089 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428362588 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397371119 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191358768 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40621031 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.400666319 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396527993 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664102045 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.213588095 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396599938 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465056151 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399465724 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395600055 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394585554 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392607426 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392451697 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.584476302 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396913342 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.659560787 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.3957815 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39503816 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.392717238 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405887 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.399488936 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61914011 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407593078 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672787978 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393081601 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395332073 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391357203 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.615699341 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.406082673 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.403642451 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656463603 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395613047 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398892004 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660261687 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428583707 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506166902 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427563114 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.401946182 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652112671 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.402853657 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.402811101 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399588376 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396330313 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405865705 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.40696377 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409100931 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036375589 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37299091 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395271986 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39892139 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.412571134 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468181516 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406947628 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606365164 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407472479 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395716927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.406326192 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.396973285 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623408299 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662741062 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.412529188 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47187438 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.881021241 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032214612 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410203052 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.399148629 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.40208416 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.400430564 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399437629 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399604989 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402726915 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606836206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666372082 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397729418 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037362184 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396920956 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400139823 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.403522534 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66194764 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.411281576 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400951263 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.406339298 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401226312 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417832618 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664532677 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539103814 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.417422299 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401981544 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920584127 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408690081 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401701677 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400808294 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431951971 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401028966 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242058401 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656676132 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391754912 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666000536 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404123384 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.42031465 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.401251084 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402785539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415882924 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.412949495 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410362976 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.609903804 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401503679 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40075109 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953561267 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199049038 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976315995 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408720353 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.41023887 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405884012 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140356238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401998827 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40528077 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63813709 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13404975 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402487645 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884324755 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.416764634 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146751174 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668550483 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638610376 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414394445 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.405711444 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671353588 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615943888 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434282746 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41227108 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405622152 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.372047106 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955707079 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401941845 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48395942 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144000705 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40412494 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408000083 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.468713125 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418029273 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789570756 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404613387 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405412157 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413155161 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411781048 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245315706 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399833578 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405151992 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06327308 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413349926 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.890729346 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402367931 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612886934 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668242244 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.649044894 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.41554015 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.40655198 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.65555615 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668359064 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40825369 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414085323 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988537471 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.271089015 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.412409607 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404275226 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197898702 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417241887 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696242779 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.41019778 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406955106 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425273114 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407755903 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404948723 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.406769104 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411590355 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38243218 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904993207 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.414760982 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411103269 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411878454 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407445786 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662041705 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421633016 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042750147 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634722614 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422028152 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437829879 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.41130162 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412420927 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.381650759 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409962636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408081957 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4402406 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628019361 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407730288 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.380612371 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432733901 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617648249 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406832971 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41301124 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628385163 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.407667093 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.425739487 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206930678 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435599046 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417888145 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41150042 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411654885 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450867417 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476469507 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615720969 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.672046362 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.674298502 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793207207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418257957 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410936178 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.422466525 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505366887 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42029211 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410676866 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.186489131 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050552749 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203696555 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047851786 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675337173 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414427622 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414693129 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410943186 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544547447 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407569278 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684210015 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412429446 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.408571337 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431634773 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414156422 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414802885 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620688896 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685788728 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410589649 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409966977 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414596547 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.412689911 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678414886 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.620827406 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918570985 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980134059 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412220935 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413878694 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.148605351 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681354127 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410947058 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412449067 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411906427 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.42947806 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418686071 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.419874019 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411622791 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568819656 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673979757 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049526351 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.674431665 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.452089407 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.930612492 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415866619 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669079999 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18033958 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620762206 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055074353 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.160303912 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677026296 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480797261 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.621690387 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.411449144 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547251552 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.416798856 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413161788 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41194219 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409636103 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.414242297 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.676696869 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058325559 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673962567 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.41703383 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.418743359 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442277273 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.62098286 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634725499 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153039468 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634915523 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676274756 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420034762 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413404135 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057862789 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675466088 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415667682 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.415070352 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63523868 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414610552 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441302651 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.932223818 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.412980414 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977548604 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.305927425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437720481 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412817989 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171015867 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056613313 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.413395183 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922973283 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415249678 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418224284 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691854588 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.42296809 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417661498 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693713169 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.422415131 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416541301 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628690221 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.058014557 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163297609 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.431607704 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416522648 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.420688445 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417881899 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440424821 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416375597 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417122481 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.803987406 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416831891 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417931008 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42370556 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.423121622 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416124861 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.416258402 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417857307 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.421401567 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.391201262 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.402070634 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41652139 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55798751 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968007303 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419978449 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.09431006 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.766361793 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669822853 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429921256 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.389303158 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.422794389 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417714288 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418352334 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412909632 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424814005 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984834148 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.431579309 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.684836045 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425729887 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.630034319 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626009258 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429663846 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629392048 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429514171 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441880193 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.38969049 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417170616 seconds)
  done (took 994.534501473 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442418789 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.433605025 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.436733866 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.514722542 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.453108647 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.42811118 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.436007038 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.484509434 seconds)
  done (took 20.923596863 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.4160432 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.419665944 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.414799998 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.421062745 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.414355975 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.884379194 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.412723058 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.423973178 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.432412116 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.415360438 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.417557444 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.098776234 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.439846839 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.410164845 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.406058859 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.422439576 seconds)
  done (took 33.15028055 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.502736697 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.593845555 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.371982127 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.46318006 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.448706554 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.409012453 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.651110956 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.435870746 seconds)
  done (took 27.170247657 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.429681885 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.425035078 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.425490809 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.425140405 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426298213 seconds)
  done (took 8.4234099 seconds)
done (took 1264.976838189 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.427140398 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427969451 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.425577299 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.427503783 seconds)
  done (took 7.00168741 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.39501589 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.390587229 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.395341026 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.406058106 seconds)
  done (took 9.880545487 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.107707574 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.015174967 seconds)
  done (took 5.417438604 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.900627415 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.907365036 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.907428376 seconds)
  done (took 7.011594583 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.70285823 seconds)
  done (took 2.997341493 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.334402594 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.416532131 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.077432861 seconds)
  done (took 8.122410453 seconds)
done (took 41.726189668 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413161357 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.747642669 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.569394643 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.422584606 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.59757967 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.571782192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.146439643 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.426616872 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.409126997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415147646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.422527419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.614312911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.134587433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.753437642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.137165328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.753907515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.574606192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.427501871 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417068982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419057676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.150019786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426637964 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417640352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413748735 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.575454598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.561019165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421110104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.755027178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415637349 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426043699 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.622685555 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414116848 seconds)
  done (took 84.2673953 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.417028964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418059693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41868492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411170092 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428391798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.418933449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412689859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.411315464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412220224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412004714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421815671 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.410434994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.413286092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.412515511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.415635554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413413653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413063341 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420138435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.413772526 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415804755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.413753746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413337115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413980483 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.412885795 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.42233774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428506806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.412803219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.417663411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413167489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413577549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.429868942 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.425775862 seconds)
  done (took 78.625407965 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416581447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.414988171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430705339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413602234 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.412314985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.419597049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414924505 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.424364071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.416156912 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.430169218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414336984 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.428366899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.427942471 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415182535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41898366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413289679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413585379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.441860757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419154923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41356649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.41680067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41460176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.42011155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416357052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.430015613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415638101 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415569682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.429014149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415234676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.429327296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.419309448 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41785408 seconds)
  done (took 78.739933602 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.6881283 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43303423 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.437011484 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.429521495 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436303556 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433958681 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.427874629 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.708330463 seconds)
  done (took 15.29497513 seconds)
done (took 258.22215237 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.427297034 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.922437645 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.451140776 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.423514387 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.444674317 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.450223381 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.648484871 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.450836643 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.651568338 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.445341015 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.440060476 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.437761748 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.225091829 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.573846138 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.267610427 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.385200218 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.308415909 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.422112143 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.996265176 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710661726 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.454590669 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.427529386 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.259177668 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.30853289 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.39994009 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.508556252 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519599511 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.651668918 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.58869784 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.506482627 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.934492566 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.439376886 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.432150249 seconds)
  done (took 65.814024611 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.428259316 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.437155297 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.439005359 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.437239551 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.437169906 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.43684784 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.427098375 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.435889574 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.43671801 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.437612653 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.439258145 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.436041208 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.439645346 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.437956053 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.437335751 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.41242133 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.427162264 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.434008372 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.427955723 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.414169602 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.43765996 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.436761902 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.438933417 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.438253499 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.437849384 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.438168976 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.439740394 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.437884559 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.438829581 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.43835857 seconds)
  done (took 44.344413925 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438024309 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.994608368 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.145468729 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.435886049 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.430009228 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.43153946 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.71636234 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.435965111 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.434780682 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434927363 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.908297178 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.440389825 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.461286798 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.163179777 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.431946479 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.43746948 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.438137617 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.43213057 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.00851763 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438413221 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.71013717 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.439738887 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.715245832 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.437852361 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.435886518 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431185766 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437621118 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.242018091 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.453474017 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.913497291 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.20452538 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.707249067 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.18620675 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.206831083 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.203334778 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.444146986 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442246465 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.924802037 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.436406965 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.434012491 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.713661591 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.436672654 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.175805015 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.111320086 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.448187922 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.441746715 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.275288027 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.919796375 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.673433573 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.44049232 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.20289741 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437613599 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.44379391 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.436381766 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.675071808 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.433127247 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.43452332 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.283580903 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.436365044 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.712579189 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.44389419 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.436043317 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.010959324 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.437053971 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.010467989 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438395934 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441069489 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431974904 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.176192864 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.438711322 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.127092118 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.450180852 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.443689296 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.914501017 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.997289381 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.306892772 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.433311379 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.008338291 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.196477827 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.727998425 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.435862994 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.232394773 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.730285139 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.434388617 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445609506 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.445129674 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.444265659 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.507205341 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.714855522 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.053802784 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128626137 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.290076223 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.716063084 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.440078411 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.437276205 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.283166223 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.4409775 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.446218851 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.170027915 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.13162685 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.455061461 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.442642233 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.145089241 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.452464782 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.719742848 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.443224743 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.215647692 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.438885737 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.510563635 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.445317283 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445396809 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.442129146 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.720251011 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.442505158 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.445065656 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.115739495 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.943415914 seconds)
  done (took 199.525812695 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.433013861 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.427492277 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.431889189 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.428653298 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.431794548 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.439251045 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.432039611 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.433173055 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.438506156 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.433191963 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.43411287 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.440363207 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.441427723 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.431991488 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.432170225 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.432922352 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.4341554 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.453613107 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.433794222 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.436635312 seconds)
  done (took 46.011471141 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.445358022 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.993723957 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.951582901 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.44853625 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449042639 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.439726223 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.495310349 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.448471031 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.450414293 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.736916512 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.609518997 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.448425383 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.448786995 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.448649269 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.958163021 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.423042043 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.735913598 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.989141225 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444469355 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.990013811 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.422048548 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.448342416 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.439760195 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.994378941 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.744427955 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.721784087 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.497055023 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.996753737 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.445432788 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.447114077 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.997503341 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.449640921 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.441309627 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.986013456 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.451601864 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.464065022 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.449381367 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.497510401 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.501316122 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.741754591 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.002612413 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.731389077 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.459702997 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.61777956 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.45176116 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.425013459 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.008488371 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.451842222 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425197154 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452483465 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.455201571 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.972266954 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.444973404 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.970637059 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.450981943 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.450609192 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.995992943 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.972577562 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.963305496 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.609883591 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444361573 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.721083515 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.452114318 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.009657518 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.451423891 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.450807135 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.450449755 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.61375335 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.002625344 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.724115006 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.742674665 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.743147213 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447667481 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.507040477 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.448906452 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.744137608 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.510601806 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.85266001 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.744702894 seconds)
  done (took 130.180103477 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.705469223 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.55596863 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.82165461 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.027410889 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.952573976 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.577636651 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.553552552 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.682165765 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.448489454 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.538131415 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.084427009 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.548367868 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.174980895 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.510840769 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.552886328 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.573323198 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.845184559 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.436047329 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.090746151 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.056404773 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.449741775 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.547627669 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.951536601 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.626471785 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.4410243 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.998088299 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.391450411 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.971964303 seconds)
  done (took 54.431612389 seconds)
done (took 541.607267294 seconds)
SAVING RESULT...
DONE!
