cset: moving following pidspec: 17911
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.488422054 seconds)
loading group "string"... done (took 0.519999029 seconds)
loading group "linalg"... done (took 8.807311625 seconds)
loading group "parallel"... done (took 0.179065403 seconds)
loading group "find"... done (took 1.299560833 seconds)
loading group "tuple"... done (took 1.912014478 seconds)
loading group "dates"... done (took 1.566676217 seconds)
loading group "micro"... done (took 0.209989072 seconds)
loading group "io"... done (took 0.543429275 seconds)
loading group "scalar"... done (took 50.049922678 seconds)
loading group "sparse"... done (took 13.633352685 seconds)
loading group "broadcast"... done (took 1.289729445 seconds)
loading group "union"... done (took 10.083426886 seconds)
loading group "simd"... done (took 3.020320663 seconds)
loading group "random"... done (took 11.440614671 seconds)
loading group "problem"... done (took 2.215428941 seconds)
loading group "array"... done (took 24.042266777 seconds)
loading group "misc"... done (took 1.131640287 seconds)
loading group "sort"... done (took 3.745674948 seconds)
loading group "collection"... done (took 19.175807367 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.617657543 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127284667 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.265930838 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.286689101 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237604647 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.162534531 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141790158 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.261912451 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.570502588 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212971019 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135115117 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.498929943 seconds)
done (took 6.260739445 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253000784 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179130494 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168937081 seconds)
  done (took 1.035239424 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074837649 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152433764 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106735387 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092287888 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091316163 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10725813 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091661706 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107175658 seconds)
  done (took 1.437941583 seconds)
done (took 3.492655963 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.51050697 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.863658751 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.510769478 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.145583907 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.315559858 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.297753317 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.314395795 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204299164 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105755701 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090383573 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174332556 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.41361638 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.430147507 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.974190871 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090157534 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097197243 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132090441 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.795149829 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079721413 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.126783561 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.486851352 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19479063 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097416622 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122523057 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185541559 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130890831 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161264488 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103162491 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.691704031 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.1294229 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185042166 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096437059 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15947483 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194542711 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208789574 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090890956 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66846913 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200620235 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090301686 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096948512 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664286436 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118784681 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184317634 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100825334 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090036337 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180698171 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.09457555 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076154603 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115224589 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.083579489 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163091699 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.431044283 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103918674 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.16999506 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091248082 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.683585752 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098273542 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274948185 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123900025 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093267358 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089545285 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086377342 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158003762 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092608323 seconds)
  done (took 20.059652201 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146238324 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163020507 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077017001 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155440897 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121452152 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078896574 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099495239 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076104307 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124168786 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.223027211 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135434014 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1522802 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089608395 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090260363 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12783623 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247231019 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106312087 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12120433 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087768266 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088451554 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140584073 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094336579 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105771539 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093499915 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167304423 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202198552 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110046935 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123457221 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091659674 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097291938 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140014502 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145114465 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.089954943 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087966722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185529696 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10552214 seconds)
  done (took 5.199374537 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19940025 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122366388 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.210035521 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11703141 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.181315725 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.122617598 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.175284536 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145611354 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.278927166 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.189903334 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175355076 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112300518 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121136226 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078547151 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078577651 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075956896 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.481758755 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.135476142 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.172593359 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153239159 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087831961 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096892874 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371355799 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098268515 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080811576 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084816765 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08208428 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.180489655 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102960341 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.078654039 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083105007 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088216256 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133420797 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191785647 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096481569 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113498454 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119732812 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102628399 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0801682 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215018941 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091070445 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.151205962 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075573459 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124231145 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114924042 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128669481 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096448912 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093171939 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219398938 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083602931 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120019311 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.008473917 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197522457 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.125558187 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078343151 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283938988 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115574101 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085580514 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081282111 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.225313712 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114660855 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082107108 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095247002 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085115351 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077035296 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.428497636 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106782905 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.867464615 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082874354 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160424649 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083705497 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10362351 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084538845 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083765003 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117164568 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081134927 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077884634 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094923476 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07889112 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077517142 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099744363 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093374426 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082854589 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094788937 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144007568 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096423411 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113902961 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107282666 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099338447 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077820057 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125819545 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080765325 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081876367 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165080512 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086174746 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109404619 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085238439 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143159219 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079366922 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181936355 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08305635 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10880664 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100862366 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126287855 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100386902 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078399424 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100551205 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077126381 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077450411 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157684379 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081276956 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081726566 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081804677 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110445989 seconds)
  done (took 22.654309079 seconds)
done (took 48.601233122 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.456134742 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086686907 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08456195 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102799103 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08652957 seconds)
  done (took 1.586096476 seconds)
done (took 2.333245544 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.322702506 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193736043 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098014767 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188670959 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084008517 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194584363 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181072208 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.091022083 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207466525 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.081613546 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188828711 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082863879 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101640182 seconds)
  done (took 2.785574461 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102188129 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110541333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121656796 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103227346 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086268981 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10246475 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120526076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113087793 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101794627 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113608328 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086063177 seconds)
  done (took 1.90527236 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100076671 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10708228 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099087605 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115992047 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084821869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098489584 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114845146 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109386313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097918379 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109941442 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08600349 seconds)
  done (took 1.872172967 seconds)
done (took 7.307795715 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.091010684 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.525996277 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.143116277 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207890174 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.349586219 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236304312 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.5868657 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.151996969 seconds)
  done (took 14.194568735 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.126452315 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.153446063 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093147802 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090614117 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093005235 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.110656695 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089941132 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093302443 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.112387369 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09136139 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089677465 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.108167 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093937278 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089211254 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09082993 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104197227 seconds)
  done (took 2.44093974 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.149077321 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122925023 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111238462 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09678765 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091098106 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.114027305 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.0986986 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.111683254 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090686882 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092582918 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100348672 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111432773 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09504314 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091650021 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.1097302 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.122723574 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09051115 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110867415 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.121736798 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.110829132 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096256031 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093997403 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109416331 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096853776 seconds)
  done (took 3.370824522 seconds)
done (took 20.755978599 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147823016 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097637176 seconds)
  done (took 0.999606637 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.1420383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157445946 seconds)
  done (took 1.05640511 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110751479 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088663672 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134741046 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10225163 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088331583 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10415218 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114926156 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10393991 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08951179 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.088449556 seconds)
  done (took 1.786277804 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092839104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092094021 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119298925 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137694404 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111813455 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092090129 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092555166 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091178094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110867593 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088694255 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09449381 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124761432 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.092456329 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123291893 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093249508 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09452726 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114068268 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092939023 seconds)
  done (took 2.620117316 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088031885 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.089823921 seconds)
  done (took 0.940607899 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.090863704 seconds)
    (2/7) benchmarking "second"...
    done (took 0.087887427 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090053915 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107042515 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.087796989 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087347693 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10264045 seconds)
  done (took 1.416930859 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.490740326 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265762398 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370958369 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107177043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143201151 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.346330395 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144332422 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100958312 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101498754 seconds)
  done (took 2.867258868 seconds)
done (took 12.449255002 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091874877 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216034988 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.626438683 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.1111834 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.207873301 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159863128 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.287501951 seconds)
done (took 2.475506606 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347633352 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.152277126 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085703993 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092323069 seconds)
  done (took 1.443241869 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079417909 seconds)
    (2/2) benchmarking "read"...
    done (took 0.095730407 seconds)
  done (took 0.946907545 seconds)
done (took 3.164775362 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.120296034 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084898917 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.104076097 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087014055 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08670066 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.086480436 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104916105 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.086925378 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086086566 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085310226 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.104911976 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.087094484 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086510425 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102198048 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087860193 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084635696 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08432356 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.101843289 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086324003 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086087174 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102103829 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086379302 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086480702 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085030402 seconds)
  done (took 3.006948689 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109869533 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088734582 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106112348 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091014197 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090508468 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106652965 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091653841 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089099319 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108096767 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.088844681 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09194321 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090517995 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104728977 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091860851 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086801132 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108019283 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09204335 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087478255 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104783264 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092094165 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.089950427 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103593691 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092705367 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090610659 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.108020161 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092002382 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088592952 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105048979 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091950117 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090856154 seconds)
  done (took 3.648093485 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094687003 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.083733806 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087530015 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112388996 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084362553 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087035619 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099755917 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085344995 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087982586 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08675887 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105220949 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087658173 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083833976 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.103667523 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089299898 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090914381 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096043122 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.100550863 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084548706 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088152484 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.106006552 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084869884 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086931114 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085536129 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.102470846 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084024543 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085818691 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.103349573 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088229707 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087216266 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089942692 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106892232 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089045917 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096629228 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.107693978 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087316428 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.091826723 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10124547 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090403943 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084460585 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083185335 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104071335 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085588482 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092865019 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.104637082 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09007765 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084902666 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090317748 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.103898066 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090812753 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083910285 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101270147 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090633094 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089410483 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.088939859 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.100168294 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089378804 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.083726944 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.105119489 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08768637 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084485672 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083489707 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.108907546 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088592608 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102738893 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110434266 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085212693 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089215701 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102895275 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093633633 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090574036 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113872206 seconds)
  done (took 7.481242778 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102023639 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096482718 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087151309 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105316264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087382234 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085899949 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10832736 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087753503 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087542305 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109689228 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088572227 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088110247 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089456143 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105002997 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089119524 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089072778 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109541874 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088410643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087123061 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10468104 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089119209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092108594 seconds)
  done (took 2.855395835 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22719189 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094536844 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137106597 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11624489 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106564493 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.116402517 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093103639 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092648372 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108406462 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09734811 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09635664 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10849186 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105801168 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09626071 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11455256 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097096923 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109739677 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097828443 seconds)
  done (took 2.797863056 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102009783 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089555556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127797096 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090531251 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089646089 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08908497 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112401957 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11060725 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105066572 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091256921 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096096363 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088612577 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.106690922 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090087792 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090293716 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109564181 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090801271 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089716983 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114262276 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096000928 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095460891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113326499 seconds)
  done (took 2.974080271 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10406098 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088925672 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123782034 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093364205 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087970116 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089063252 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112492765 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089768427 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094404298 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105997985 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090363991 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088113737 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120599502 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088856168 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.093805248 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106046048 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090208355 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089694843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104661354 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089747201 seconds)
  done (took 2.734106249 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.170700749 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122282056 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105809649 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11280088 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1230251 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106721182 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112745665 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122703082 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105278332 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13302409 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105577874 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105497485 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128868715 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111103809 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122521208 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115164766 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113779164 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130493544 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105544062 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104788906 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13364696 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105579456 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129382192 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105804796 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105640746 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122828647 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106072535 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12705353 seconds)
  done (took 4.080743356 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089285386 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087992317 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088030986 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104598486 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088336562 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.087925633 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087326673 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105755023 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089079159 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088596869 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104474872 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088896753 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088117423 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087104671 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10587225 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089707037 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087433981 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.104733712 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089659506 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088267339 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087194839 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10483928 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088708388 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086940177 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087143421 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105978422 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088812707 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089109112 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103997683 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088957 seconds)
  done (took 3.567259584 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.100928227 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098564814 seconds)
  done (took 0.988273477 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097325995 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103579729 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087274649 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10636952 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096354374 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088658166 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113437112 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095738888 seconds)
  done (took 1.578465061 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.1437095 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161438255 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094508434 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101047761 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163688076 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.153788053 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133179868 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09447998 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106921961 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083471857 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.156759984 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083101214 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091511462 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105193001 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091520872 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095930814 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.107086632 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10100977 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096500155 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091339662 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111422526 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096973235 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108463245 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100783362 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083614744 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09088381 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111855813 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101397016 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086090847 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110247484 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088435945 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088638045 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109975094 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095385545 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.089964119 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163279527 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09665872 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104167484 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091463836 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093628782 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140530562 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091449581 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091571291 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105590522 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095167782 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093677171 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.111826737 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091523108 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082972918 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085122502 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.106992333 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085899596 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09017969 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109134495 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090093207 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097197843 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.109915515 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087146526 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085677333 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102729192 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090401592 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086573664 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109232707 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094112025 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091571356 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109222192 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091503747 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.089442997 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.10848052 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092621294 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090634857 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121939833 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092614383 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094364107 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111458125 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.091335829 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088421883 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095211506 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107479937 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092317955 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092913813 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13523533 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092975467 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085196266 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103525184 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097568397 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092134948 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110012447 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084027368 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099191332 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.108687451 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.091053705 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082993872 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105355625 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087503632 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093279632 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08214945 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108218327 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089401002 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.093469648 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113054577 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089629476 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091576096 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113137763 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096743308 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089062436 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156260238 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087468435 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103310184 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093573705 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095573845 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083845263 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10845891 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090155729 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087441314 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103495492 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096115211 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090484017 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.108682406 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.0950319 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092452707 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108656437 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094610331 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.089981827 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086368561 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113756486 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098440265 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091945543 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110807511 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.091843964 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090409223 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108228985 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095626904 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088308839 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111940843 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088896391 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08944131 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.107973687 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.096706706 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091157298 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085473628 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107818716 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091602881 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106003517 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.093719412 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091341109 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086103666 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101618143 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091928179 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085794543 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.109191987 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099691931 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086347077 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.110211436 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088870102 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097648897 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105951635 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096389591 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09265844 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112470481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097276827 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083848325 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086574926 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.111145447 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094246772 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086290798 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.109573804 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.089839242 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096522771 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10153057 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095383533 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08332252 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105239202 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.096552088 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.090825131 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093075485 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105011355 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13193251 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102093643 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114435036 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090369404 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091921214 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112420831 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.090872241 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.092808244 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114332096 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.095857583 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089861875 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107455474 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097921959 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087017138 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.109692122 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090332558 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092267326 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101522412 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.092675426 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083882825 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095741893 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110857699 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096726031 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.094792397 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110702604 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092311445 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097764954 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105716952 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095482765 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08288544 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113466403 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101909053 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095859734 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096119328 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111352687 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088693562 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091330815 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118330376 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092714597 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091770788 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.109663966 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085894457 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08424902 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113682558 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.094788261 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087184758 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089289123 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111942152 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094234162 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087976911 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102762263 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.095358982 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095921218 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104912634 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092191194 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086648468 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107522984 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09986205 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083021336 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106053846 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094216026 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.095624141 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.107620157 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092895927 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.093051158 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.114750387 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.094898072 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.093500228 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088318886 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118092341 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089225407 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089252512 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106528276 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095760167 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084325118 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.110226461 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093239977 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08822334 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104770598 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097209191 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098781392 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.095386183 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109775493 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.095210422 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.095328528 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.115773165 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090065317 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096306405 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105754316 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086080363 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086903689 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103136082 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.093882161 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088178046 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095377924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108927183 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090855129 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094261072 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113383721 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089310723 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097314677 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121100498 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085459821 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084238143 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109115816 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091462685 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087114601 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107729753 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09232555 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092855209 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.115538849 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095686198 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087524336 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.109522259 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09851638 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088159737 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.115894831 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.097319494 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.097183567 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086635621 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.11653866 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088871506 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104661634 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10619566 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091743044 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098961439 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1113276 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089086234 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089481079 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106233156 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086164511 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087872432 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116078358 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091937984 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096147749 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108788607 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091078079 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088051389 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105718971 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.097861406 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089649342 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.096740312 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.111132388 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085510629 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085313085 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11635815 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093731992 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.096619242 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104999595 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09539815 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097714201 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095160366 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.113208197 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10068652 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100413024 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116311498 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098602737 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083567284 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.108561967 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097815668 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090402257 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.114259545 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.093155585 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085618033 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114465464 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098562677 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093477816 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10904306 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086662508 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092140056 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097425021 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114813777 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095288354 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.092543025 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112231022 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089337427 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095155497 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.116095773 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093769766 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097793737 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109094091 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097685572 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088533659 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.095499181 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.111691547 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086662621 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084693382 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108358619 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098488173 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086092935 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.115633085 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097615323 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088483594 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089348082 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.115694278 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089293322 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093965054 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116649721 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091233094 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100691603 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.112337553 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091050496 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096378272 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.114905345 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086396185 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090144743 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109178686 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100214398 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091157218 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096076698 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112444932 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097521168 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093202193 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116321027 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097606067 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096914509 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104358288 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10013304 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096261833 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.111900791 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090126329 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091019029 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086241393 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110616805 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.097876992 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088531656 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119129178 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099218798 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089606264 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108815956 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098797588 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09094016 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118694507 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090143612 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093216586 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104447234 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096617531 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091213478 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.116307899 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.09119613 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08720322 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096128634 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.116780738 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097821387 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093680044 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.119317476 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087585899 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085159858 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.113614632 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091559418 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10211337 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114239589 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092172763 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091665727 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.092904331 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.11314763 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099396204 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086821972 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.10878155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093857652 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092873662 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110270004 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088081269 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095121085 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111151668 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09557079 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091297618 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105848171 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092403354 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.098743571 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109099378 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090221267 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090605298 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098718799 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112244525 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090108307 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086302083 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118402265 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094808518 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098394029 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108440039 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.093934052 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08893095 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113542941 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101860209 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089703603 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11259173 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092388276 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096488318 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116867829 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087512041 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08972356 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120105217 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09916591 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097200167 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.093606699 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.111559503 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099128001 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098706965 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.114775153 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087461044 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087374773 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111663498 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087810185 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.094763113 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117131225 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092936496 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089496969 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095428327 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117388214 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09484026 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09465631 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105899544 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100730841 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089345766 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115283746 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087585293 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086239893 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.092713367 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118172886 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092006736 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091490638 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.115074463 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095007756 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087768949 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110542976 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097355555 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096467583 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118024059 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093134095 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091512698 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093612661 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123788019 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094163435 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091692868 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122345811 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099694195 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092733096 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113777942 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098071422 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098484719 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.114966966 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.099943564 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089824387 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.111273735 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100979642 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098901315 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122952596 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092769814 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086519237 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.115679035 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092581425 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087291645 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115816101 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101369909 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.099960981 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092053046 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110677338 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102615221 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096999509 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114235636 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091469362 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089678202 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.116663518 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092159696 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.096400526 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.109624332 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101418179 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099104999 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118783229 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10278754 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087127328 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117742011 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098308597 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100965316 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093271479 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10822885 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088504923 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094409193 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119297369 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100206821 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.096877612 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.117007971 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099231756 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094572442 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092352325 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110990421 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101330348 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098013414 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.113973866 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097093163 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09225078 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114655852 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095464605 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.098403681 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.118399734 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09568175 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103664387 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.118696918 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093742587 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090453655 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093868425 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.116488524 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095531372 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097212659 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110487606 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088665498 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098602049 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119786581 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095542921 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101330515 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120918976 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093158468 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095225641 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119817549 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099369532 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.094925736 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093775938 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.116129437 seconds)
  done (took 60.137878517 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146696837 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100729263 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116190817 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095530801 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113148778 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1162768 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096940198 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095440784 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115605491 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107666963 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094249661 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114747853 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112796185 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115805321 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134214781 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10574959 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115166141 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098072474 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095327998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095384086 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131241665 seconds)
  done (took 3.16054393 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114435966 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109149831 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126980856 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110657458 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100934432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12800822 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106704931 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127599705 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110761423 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103602205 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129958455 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105584263 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122418701 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104860719 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103316772 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124450095 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109977207 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101627056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127470037 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106546074 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12334156 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107476711 seconds)
  done (took 3.353490635 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.106945895 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.098240511 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097360371 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115229907 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099944971 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095004617 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122675192 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097677689 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104355272 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113325996 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091316683 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093839752 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098343783 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115874432 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090671739 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09490331 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124688774 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102455639 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.099731923 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114468315 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108209476 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095784094 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.115298155 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090921981 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106759577 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100922142 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.11701996 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.099814729 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088227182 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.119708004 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.097096979 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092714988 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114347995 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090259882 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088551241 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.119569537 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099729002 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09502915 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.095148839 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.115504472 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097576889 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.099713455 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118257233 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09731871 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.096035283 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.112527237 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100889606 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.095380229 seconds)
  done (took 5.795253269 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126919106 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161962388 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099679049 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134807837 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132126674 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105762751 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09879566 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136408145 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097459943 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121597765 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111508876 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110185334 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124222839 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104019646 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096666883 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122605178 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102458623 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098149824 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126030484 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100865033 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.103330565 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.121886325 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10937168 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129441155 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.103254425 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099654602 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119704214 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105166316 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109545579 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125299429 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104534864 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104976419 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.3729315 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101836761 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098105155 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123310047 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111623253 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120583379 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102094181 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098035995 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119864359 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105325127 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.101465306 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13315559 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102743436 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.101960971 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120897308 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09902604 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108194223 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121632422 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107600468 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109361617 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12416439 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100129786 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102380517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130513632 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.099952086 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118432667 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.1045367 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109076054 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118544156 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103458484 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109123652 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120317254 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.105982995 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109602637 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122542573 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102783884 seconds)
  done (took 8.870768592 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135067602 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102528154 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132447678 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111994272 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101720565 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124771058 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104009571 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101723045 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124657532 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107669121 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123325065 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.20143701 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121507107 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108928373 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101741509 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124566974 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103397702 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102843324 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12601779 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103331423 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101497752 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132953432 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103132002 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132211871 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115555313 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099614197 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124299935 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104290651 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11113735 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125514779 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113831399 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.123936055 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104794786 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111497605 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137195642 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103645981 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09820928 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125228821 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104057525 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124252788 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101663168 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111637188 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124385928 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101010901 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103026851 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124205255 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113898426 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11396092 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131023404 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108202904 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.124628945 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113003001 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103483265 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125234426 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112757475 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139081382 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112998708 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111632671 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126026025 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113278873 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132614852 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120107585 seconds)
  done (took 8.085609064 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099125963 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096686807 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095928158 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118088936 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098439917 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096420066 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095317212 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119742156 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096866466 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095983212 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118301015 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098066449 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096652837 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096315714 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117939308 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097573116 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096700878 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11833076 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098775965 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097260288 seconds)
  done (took 2.907954528 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107781636 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114489782 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119610088 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10676744 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09862879 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12436588 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100782865 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098838842 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099442916 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12203224 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107545429 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128354236 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10074752 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104951635 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.127704191 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106172863 seconds)
  done (took 2.62988697 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118013606 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116271613 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190669287 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102477889 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121757645 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108726231 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.098250036 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.1241072 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099313831 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105487867 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103794214 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125144271 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100477279 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099599741 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12191952 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104061295 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098214589 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126127672 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100290083 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.192926704 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103523539 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101139805 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123701046 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104315691 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100630057 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126732662 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106456237 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100032422 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.12400823 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.101256916 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10050629 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129789229 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100652459 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103951804 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.12350144 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.102236252 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099517739 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.121208085 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.103953148 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.098981113 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102726162 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124639044 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.100109223 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102617698 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121131095 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101030413 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098299631 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127679815 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102576302 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101007216 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122236891 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1089653 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.103884363 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.128546281 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.108547075 seconds)
  done (took 7.052056493 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112481721 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101106713 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133271995 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100377104 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100186887 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100612809 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122428415 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102220718 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100520601 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12010091 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103125621 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10099247 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121305631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102753794 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101604243 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122128603 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099883962 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101626703 seconds)
  done (took 2.814088508 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106235143 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099912691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103886311 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121959626 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100570335 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099649392 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120004374 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099213804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098644216 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09954736 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123238303 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100782483 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097943637 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121944615 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100959776 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099227807 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121718941 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101104145 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098989645 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098726999 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122359383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100146133 seconds)
  done (took 3.206574644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111493687 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183110117 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106035203 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193530354 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097651688 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09488972 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128385581 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098212651 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112546694 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117625917 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096788528 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094931268 seconds)
  done (took 2.306279259 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129761295 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137401157 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122068168 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103169962 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107497241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127076301 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10546456 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104089968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135631997 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115883816 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125242333 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112856611 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111813155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134909055 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108557776 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130330302 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106246599 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104525105 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122436391 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120761696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105308412 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133974275 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104520031 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104374133 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127183833 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112559066 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133924927 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118706134 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105192986 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134713829 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108517983 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125825175 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115349112 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116687863 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123966467 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111734386 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104159848 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141787508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108828384 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135781931 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102096938 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10794068 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134985775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110904834 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133423174 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107550002 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110210824 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125930254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106453565 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146075768 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11111128 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112606613 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131547299 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113673474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112591174 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148738282 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116521528 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135842545 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110411788 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13740015 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112818592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13102028 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115413345 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116137403 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131130519 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112693146 seconds)
  done (took 8.749824251 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142612369 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101184962 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127468631 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117871438 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134534606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106387012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104139261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126407138 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10655859 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1018947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17164815 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105492024 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137603427 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11557658 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105547803 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127027967 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107278328 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113181616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123298798 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125675612 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12605349 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116655775 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113764557 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134991102 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116696491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131418912 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106881246 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106194452 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127553183 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105543482 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110482241 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127872651 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114167272 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101785767 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138048188 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104359778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126807918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112248609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106201408 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131979649 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115089414 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142015651 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106264861 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105546314 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13904595 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106426575 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105071588 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124703787 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108066978 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102439778 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140102552 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118204912 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140278168 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115318844 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105284999 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128733361 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105725969 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105259416 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129422593 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108835639 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134768517 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106630149 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125563957 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128567475 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106702071 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134772953 seconds)
  done (took 8.731108424 seconds)
done (took 164.28589426 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148921116 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189204537 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144800413 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178459087 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093773516 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128726732 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148641831 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146820588 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090419175 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115325262 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092689114 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095564081 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184031863 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094098444 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091628105 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119288727 seconds)
  done (took 2.935564546 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190496515 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30482242 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108466853 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119024099 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101949741 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098886555 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118967917 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099455559 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096661704 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12670409 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099790186 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09428772 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12653841 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095590383 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096546959 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121835472 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104972419 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098422855 seconds)
  done (took 3.083760411 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118458621 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14011024 seconds)
  done (took 1.142598404 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129415022 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196864308 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272215722 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169396746 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12145597 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138400416 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148977604 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132280764 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.178928571 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133361754 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110402394 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097749804 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146560006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102287467 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113423538 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121856852 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125434738 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133895851 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112361344 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099640504 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141346554 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101321247 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102064175 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133551955 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.168195729 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132600857 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101362604 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099594479 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122865854 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111692044 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103034116 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.136928084 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109997067 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173506535 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103176446 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168704125 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105705576 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121430834 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111092575 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097816718 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124126359 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101857162 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134238644 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100032766 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.099472418 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128395766 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101840797 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.099637353 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.127358624 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107515895 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105032178 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128163261 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167181493 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108494493 seconds)
  done (took 7.745966054 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.845730448 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141925145 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098770845 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.976430056 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148431854 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11335812 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.816636052 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144164689 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251329487 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.865605804 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1134669 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133115884 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241021807 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250783955 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.191181092 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352387705 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.701758699 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113661498 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125430014 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163444615 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105734311 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147936602 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11848071 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436292334 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098182815 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118952122 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106672913 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110247896 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176894024 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097782342 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124325486 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197128612 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.259637933 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210554084 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121440355 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097770533 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096348068 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183886217 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273796876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216853379 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188084421 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094418889 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096875045 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129100712 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116157223 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116223245 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157635533 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190591456 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190992329 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101886007 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133995274 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108424808 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125934826 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155070183 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117947648 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352822416 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365616588 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096277191 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129199873 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113653254 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267550333 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121037997 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234952206 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123728014 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213600399 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097354444 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829574461 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161439488 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119666167 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106638015 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104798409 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125962279 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105717263 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180006129 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38130631 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13275082 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101296082 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096513674 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225442284 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122067588 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098192067 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181261132 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098880146 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104849285 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136114403 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109174798 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.1903947 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265705433 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109935642 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129187346 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10397578 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109009329 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.12288937 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228740504 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22911504 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151891763 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233342866 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129894422 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157916413 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183242828 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126568815 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165736685 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12832383 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114550713 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127099244 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224207222 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.132960304 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122632536 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105176433 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106636754 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159059974 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102086422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129999482 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16356108 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466026206 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184000581 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095228145 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125322648 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108349358 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1787997 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105447645 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263834433 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12786136 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163365127 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128200479 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096142445 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105995852 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179463557 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1286469 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108874006 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105480809 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13177996 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.249462656 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242326841 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112394645 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243205115 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19145781 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106898305 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193456032 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106568663 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187397362 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107748227 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12866801 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10044768 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809984341 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133921008 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108229118 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103507104 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203866303 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098960337 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100142976 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122523046 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097060139 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802468178 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101741363 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.118854862 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101439894 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104854015 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129009787 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106920981 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102948468 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179133293 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243484463 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.135813498 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105486103 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120165757 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156333026 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.1220917 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099691393 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098511737 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.120662022 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109344901 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101874734 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124129461 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166876591 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176373603 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227982253 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557656543 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122232964 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100664671 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240468553 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097834079 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.342627836 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10820842 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.2336524 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185048069 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096118835 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357656987 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186621448 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.212851484 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.102625594 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189778717 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095425805 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128758579 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156528587 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120801865 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107466524 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177585183 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1133446 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133155893 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.221480175 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099188369 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248501131 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.095467825 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188045454 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100238005 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129077192 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325594858 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099015881 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137539718 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156121899 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125294604 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100934632 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70677872 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099301999 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131571047 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107438478 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232004809 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184894329 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106929831 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131269746 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11298974 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181889062 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232216487 seconds)
  done (took 45.728769425 seconds)
done (took 61.515933889 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294552488 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256439722 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.302679054 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.208258573 seconds)
  done (took 2.041348461 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.264494432 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161453932 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.234532736 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09690907 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.244767574 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096781425 seconds)
  done (took 2.010975673 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.491278514 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.37221994 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.305272163 seconds)
  done (took 2.08499438 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252871889 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.244021565 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346085814 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407919452 seconds)
  done (took 2.280173663 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.299473893 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12905416 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125505792 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.213377781 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254119272 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.231113947 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147923995 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196976053 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127805708 seconds)
  done (took 2.686917283 seconds)
done (took 12.016401964 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.348598313 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.20767291 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.152733239 seconds)
    (4/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.33006802 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.224770092 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.168195174 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.221982106 seconds)
    (8/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.220823739 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.140666889 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.218782275 seconds)
    (11/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.273815938 seconds)
    (12/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.16765968 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.197233829 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.157180875 seconds)
    (15/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.285227092 seconds)
    (16/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112342933 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.228328569 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152712139 seconds)
    (19/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.338034356 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103758612 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.116575135 seconds)
    (22/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.238445168 seconds)
    (23/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.167570134 seconds)
    (24/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.175811069 seconds)
    (25/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104447068 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.096994534 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.168543371 seconds)
    (28/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.18990472 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.133087553 seconds)
    (30/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.336552409 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10441448 seconds)
    (32/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.171713831 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135029603 seconds)
    (34/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.230404146 seconds)
    (35/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.193465221 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102284826 seconds)
    (37/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.208293856 seconds)
    (38/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.271342596 seconds)
    (39/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106940322 seconds)
    (40/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.217476361 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.281576999 seconds)
    (42/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.089646062 seconds)
    (43/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108959714 seconds)
    (44/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.209103993 seconds)
    (45/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133104954 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10247191 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.235685553 seconds)
    (48/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.178963908 seconds)
    (49/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.261153485 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109454331 seconds)
    (51/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.147567203 seconds)
    (52/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.138779728 seconds)
    (53/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.234180781 seconds)
    (54/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.139717208 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.128817202 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082129954 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.184903508 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128862548 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.205481459 seconds)
    (60/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.08030814 seconds)
    (61/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.133483205 seconds)
    (62/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188856906 seconds)
    (63/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.195783769 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127750073 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086461813 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085569789 seconds)
    (67/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.133118942 seconds)
    (68/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09735126 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.141812928 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.126339979 seconds)
    (71/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.148574394 seconds)
    (72/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.279030417 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103436185 seconds)
    (74/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103430554 seconds)
    (75/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.1499547 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10256181 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123362217 seconds)
    (78/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.232107804 seconds)
    (79/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08292891 seconds)
    (80/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091314875 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.211464417 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11525984 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103565323 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148488914 seconds)
    (85/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081241834 seconds)
    (86/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.147518803 seconds)
    (87/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080714657 seconds)
    (88/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.105770124 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099939441 seconds)
    (90/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081706454 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107647848 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.194922224 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.082636509 seconds)
    (94/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.148418812 seconds)
    (95/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.211452078 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108250984 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124178895 seconds)
    (98/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.211981383 seconds)
    (99/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082219824 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102943481 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.106170558 seconds)
    (102/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.186465119 seconds)
    (103/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.081252349 seconds)
    (104/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.229489482 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090708475 seconds)
    (106/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0822794 seconds)
    (107/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109854364 seconds)
    (108/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.11083932 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.115564386 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092067658 seconds)
    (111/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229211829 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104029609 seconds)
    (113/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08134766 seconds)
    (114/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081423304 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.129772973 seconds)
    (116/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190056623 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107389132 seconds)
    (118/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.105609904 seconds)
    (119/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082664074 seconds)
    (120/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.164246807 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.127572708 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103658995 seconds)
    (123/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.082851101 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103384575 seconds)
    (125/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.10809794 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.08382392 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082734141 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102923097 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112893741 seconds)
    (130/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082895685 seconds)
    (131/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082395893 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097932747 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.14927609 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126833488 seconds)
    (135/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081746258 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.081992879 seconds)
    (137/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.122888118 seconds)
    (138/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.140912852 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102938051 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.123624325 seconds)
    (141/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08377246 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11039734 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.199005832 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10016722 seconds)
    (145/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082459644 seconds)
    (146/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087038368 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128631132 seconds)
    (148/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111330316 seconds)
    (149/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087889683 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126024067 seconds)
    (151/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.14402751 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082544353 seconds)
    (153/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103768913 seconds)
    (154/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136243268 seconds)
    (155/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108488234 seconds)
    (156/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.189871527 seconds)
    (157/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.134503965 seconds)
    (158/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.082186797 seconds)
    (159/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08280355 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.231900205 seconds)
    (161/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110673194 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099092428 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.081767584 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124410069 seconds)
    (165/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083488149 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102948597 seconds)
    (167/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.086571742 seconds)
    (168/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105551235 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08437136 seconds)
    (170/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082322157 seconds)
    (171/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086183495 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081119801 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.133539441 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083755649 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125866828 seconds)
    (176/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081610144 seconds)
    (177/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.104779076 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083028413 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082573569 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082819166 seconds)
    (181/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081222422 seconds)
    (182/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.111306505 seconds)
    (183/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.087574323 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08341271 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122879828 seconds)
    (186/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.105654391 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109079198 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08303397 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080976777 seconds)
    (190/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.086305624 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.107019258 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110533312 seconds)
  done (took 27.41799608 seconds)
done (took 28.344174779 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.214311731 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127381631 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.107812839 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10678447 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.203696592 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113390296 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.144410633 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111477251 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115593376 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132198658 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099331158 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118259838 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106996276 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203979334 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109643576 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127354606 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100292667 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115013828 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.145693928 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122593911 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204765377 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102463698 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115462098 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12604943 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179227592 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127392154 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108046107 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108135111 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.142946879 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110414459 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10669104 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.123958638 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.121988444 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119741278 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123691901 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111371696 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09977875 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087777994 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.1347472 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111471767 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117903448 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133448548 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11052123 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101258539 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134455197 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110509482 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10017551 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.134391604 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10037756 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108239276 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101858575 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.146698241 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10918637 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.097046942 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.123444178 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102449765 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117555337 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124726744 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120587322 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10014273 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.124563166 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101148544 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110602864 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099979539 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134487014 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101233057 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108677958 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.137035016 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109243948 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102499842 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.124933451 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109451619 seconds)
done (took 9.718118393 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105806104 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145405935 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200731987 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212960466 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127156757 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114248155 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140307621 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123771262 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137153414 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120612794 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137591113 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157696625 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181626663 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141793335 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115522605 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.110338482 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.136849555 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108625001 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.209267791 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123863186 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150421465 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117420547 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128503537 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142461299 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.104000339 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133562477 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132707328 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.111667079 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10278536 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137045761 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124698053 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103246953 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132380578 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124205414 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121790533 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.13991918 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115920922 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110844289 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130749039 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.104722841 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111876273 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146859273 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104394398 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138613418 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.113514188 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119083282 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.135792358 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118391944 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106011924 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111567864 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131903705 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131748878 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.140218196 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121905427 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115217798 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.140985336 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119323243 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117528582 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130878771 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118538606 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105269865 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.102945303 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.131279398 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126433125 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131467435 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119534006 seconds)
  done (took 9.473424382 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125041267 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134799734 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138958467 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115492205 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108456645 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123060865 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098334826 seconds)
  done (took 1.820808316 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101289527 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186683754 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208344528 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209428316 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.206414397 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.19253713 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149471532 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099656612 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134409687 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135466242 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186425722 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240507603 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109154275 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14208955 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184956586 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.1252965 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212257369 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101357628 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114240745 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210518126 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11679629 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.154408986 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113237489 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099903617 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207921614 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.099850856 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261646154 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11709649 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135204544 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114120498 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114539999 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203802789 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208500378 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.113259724 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107302263 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208721562 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.205916367 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114125267 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222074422 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.103921517 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.207672316 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112643303 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115525103 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.140545601 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.114518993 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193910204 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118882911 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114586954 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.138965614 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191676433 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136921965 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185252431 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136630516 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114509944 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.109447606 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141614526 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122729337 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114821234 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.218657932 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116005016 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.20805362 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.20939924 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183157504 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209310369 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124596706 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.214526734 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205581717 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112997535 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107625619 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.141372768 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183612795 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140125176 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.111125027 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198818364 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11818952 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211722625 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.18235369 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139623865 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11261785 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.102500022 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.139111355 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101120619 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.200198889 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113904036 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111570786 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144170008 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113548056 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114221243 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.131624432 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123498508 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113197454 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138596445 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119500098 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114457739 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142655399 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212999936 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112061593 seconds)
  done (took 15.562289704 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106124158 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101800053 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105516388 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129241274 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103536503 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101981641 seconds)
  done (took 1.646239352 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140944116 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115203772 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150345574 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117593439 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167084619 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218294112 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.22145683 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109313388 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157992788 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126269978 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.218876093 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.194174759 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.219690763 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118727206 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.222826867 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.14307365 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.197824432 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138819734 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.1254745 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112888369 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141119733 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119045652 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112795649 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.210452557 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.115994469 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144845734 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11009919 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12411643 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150128026 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110881435 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119156069 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142496966 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.107814129 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109946533 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.224191961 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.132980944 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113548834 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117972945 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144038536 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118517573 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.22094579 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113813178 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121027846 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144070267 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110895122 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.107471758 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146200414 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110497465 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.224398925 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118645521 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117826138 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144061436 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116940779 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118261632 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135851388 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109630272 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14386416 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.198224509 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.144583788 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.108987788 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.115898398 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143779678 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111854174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119501383 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14402792 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120638362 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109468627 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143336652 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114340354 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116179085 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145811954 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117726624 seconds)
  done (took 11.143991235 seconds)
done (took 40.617895145 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.513176825 seconds)
  done (took 2.50509397 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.898580419 seconds)
  done (took 1.894613761 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.607673373 seconds)
  done (took 19.630589025 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.523157079 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.601418456 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.012229493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149619341 seconds)
  done (took 3.28135964 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.011452625 seconds)
  done (took 2.021513985 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296719842 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265969448 seconds)
  done (took 1.563987373 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.725804027 seconds)
  done (took 1.736597166 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.518301328 seconds)
  done (took 2.519228182 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.349281783 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17629449 seconds)
  done (took 1.538763364 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.622797355 seconds)
  done (took 1.637919188 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.573213405 seconds)
  done (took 21.589891247 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240693845 seconds)
  done (took 1.255354256 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286145532 seconds)
  done (took 1.302373768 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.665302797 seconds)
  done (took 4.682534621 seconds)
done (took 68.166001423 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11369815 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115213498 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114748488 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139233006 seconds)
  done (took 1.488282277 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.121277206 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.115865198 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.118959348 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141420959 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122064201 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115611899 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141607248 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117288285 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11319071 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144356064 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116987684 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115344455 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145263657 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116524817 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113340674 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144295682 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.119394185 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116099485 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14192697 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.11812681 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115941343 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142173624 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121118166 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117959465 seconds)
  done (took 4.013022469 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112585205 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105644905 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106704516 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130682463 seconds)
  done (took 1.47663646 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124587033 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128023894 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152045365 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12411716 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128133888 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153470059 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114383399 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.1121495 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140618663 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125064733 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132178704 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155110572 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12674151 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117080652 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15245903 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110124834 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116114126 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154062152 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121908191 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123227606 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141990949 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122602968 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120535343 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151124996 seconds)
  done (took 4.165150798 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188368317 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125607447 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166947382 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160729159 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.169233495 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113308744 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.136417418 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148040899 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.120636909 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.115741203 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143626287 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160103768 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147365895 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117129467 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115220374 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147416939 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127530626 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121086972 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.184275718 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.119367932 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148152613 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127039226 seconds)
  done (took 4.122742557 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118420037 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106426457 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102071975 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134014288 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117821662 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107728265 seconds)
  done (took 1.713820691 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10653196 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100486107 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100790755 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126804386 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106333927 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100142163 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098583269 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127778084 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100904059 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100469948 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12713084 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100692144 seconds)
  done (took 2.323869305 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332135598 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105771396 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134055437 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108367965 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11251396 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103048781 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.143185471 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104993731 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271791933 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101180777 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141823381 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195575587 seconds)
  done (took 2.881234946 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203555232 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143031166 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297603804 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36711648 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161276815 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187120865 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266135459 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189868096 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205807202 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135078406 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243680083 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151431549 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176623415 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172418968 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163291111 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.154836727 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193526413 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186713513 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173473478 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221688523 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153834994 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190438409 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177547315 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17414337 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132250978 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18750174 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11670156 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123259355 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191876817 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189953186 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167793676 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171360007 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138383718 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217888961 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257006919 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16823195 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.310912062 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13034469 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.195542457 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.182000596 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254390381 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162231507 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185969159 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176876598 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12498579 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203073831 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150604273 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199211718 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.12815247 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166071887 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176294498 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197764604 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200932882 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13385451 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311450837 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161394353 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167209349 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167258884 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207091993 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213292921 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163877448 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118403397 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206485788 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205235978 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200552793 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137980492 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187651102 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122433244 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189982278 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192546303 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204935321 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153721186 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223241984 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155395922 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15410389 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196787422 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175395485 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200078241 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154725643 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.143191545 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147515456 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156606845 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124304316 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192299538 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144801326 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195159714 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15640587 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.336872348 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182217965 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181375271 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15633157 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183668141 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154629155 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171226519 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102585905 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16971353 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159726746 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180479038 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129742713 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178965867 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135507178 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123740387 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1749713 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.118671537 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181508909 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.126293039 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188845964 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154908458 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.153350603 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162835578 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170908423 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150213054 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191676247 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18088164 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155215804 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130211495 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213047005 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154298793 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.154362014 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175135606 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208342732 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.140074973 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158961254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161118736 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211459873 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137631007 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211622728 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13332944 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159276916 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138917712 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183407931 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154542982 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.176411609 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125381267 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.174070289 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192110543 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.150677917 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134984484 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190201399 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130327056 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121802819 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16185375 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131276634 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.162861589 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141950028 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.130419622 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177785447 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152957283 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180434466 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150003646 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159383443 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200205085 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130261725 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155074025 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171227903 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11541855 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20045219 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179193557 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153701279 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197570427 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18791261 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212104694 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156008585 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155162891 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173475513 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151270546 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117432152 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184799206 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152821792 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184617602 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176140891 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211017763 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.19043488 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148024201 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172318462 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161702337 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.200361186 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148905784 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.169073659 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153043076 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19067241 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117816105 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149037176 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126318997 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134672689 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153872433 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131607074 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198318336 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159736304 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208730812 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181756895 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134834418 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208701939 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123048336 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185312818 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.162901984 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163195948 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177834668 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206606635 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162711517 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165487334 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155732407 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.145870859 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121797628 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.129491657 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187710846 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131981475 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159001966 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136787649 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207979113 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167336229 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174612512 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221421311 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188147878 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191193012 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.116438891 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.19220241 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165958812 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182653462 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181871814 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158542153 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153798775 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204405082 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13702081 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211528291 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152386923 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187488599 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212313598 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152082696 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153581573 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144785562 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183288887 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134464699 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159208067 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170735685 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125684638 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177014647 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133686822 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149095389 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17986732 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16803461 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16582444 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185595559 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164386826 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150710894 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137999039 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184273709 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141313507 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106106018 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19502702 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21014898 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142675333 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181052876 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172903019 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154966413 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312120614 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2143819 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200831546 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133414826 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137695883 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187900831 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158156253 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186839298 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202913298 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138630127 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202531856 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156675651 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13791203 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157177033 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144758286 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176497583 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139374686 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.158337794 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.154785766 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.164593513 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182628403 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163323449 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156509101 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183839477 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145362585 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14137303 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166697379 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217744036 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153303745 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197944552 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151805697 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191541672 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187438408 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1479722 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124281768 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128195256 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20559252 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125553604 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187221457 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.201772523 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212346136 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159100689 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186389083 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135080428 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122525134 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182720477 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142244379 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215166539 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158435978 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134561314 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217974938 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127932789 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125810607 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186336839 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299205443 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143146364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197752577 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112856494 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.291929547 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126776916 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127582814 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187456311 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193740201 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.129463907 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178761188 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185817554 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137709341 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190999229 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133430074 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209339383 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212553758 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163133089 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198982992 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.139874503 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187203296 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155617339 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201824792 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13852129 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.171061935 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158393299 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207101356 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206847857 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130581447 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1543037 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183346975 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152384009 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196345806 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13271522 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21715627 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124429391 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187792248 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132769238 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150620466 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154093267 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.203452218 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126711686 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202361268 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184007153 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130088288 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123058433 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171378045 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152967016 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163588696 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127352033 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209106081 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125385195 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187797968 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175776866 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124977715 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181781942 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142223823 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155430324 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137662707 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16630046 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127365933 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167736723 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20802389 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126514308 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203066469 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158768239 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188867347 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180129365 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140009659 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665861333 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.153456103 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177863423 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173397477 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184787117 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174860733 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1581982 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18540932 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145158019 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189526921 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142842315 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.261492607 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157951714 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.183418251 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128022991 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166109646 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137226838 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.157397044 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150670851 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182918708 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136979631 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132296234 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183121103 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137396905 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.171652037 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136326675 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209371589 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145065126 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210498267 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1775981 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163683643 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157858523 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198336137 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126474685 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189667667 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194530255 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139436184 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145097489 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.159613935 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133739886 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207475947 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121327279 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154360017 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186279956 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155159225 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183577943 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131621913 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188675229 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137073375 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186524634 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124759271 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177613584 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157000906 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129423995 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153020531 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15544744 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184526534 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151108893 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151684989 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168936815 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181064537 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.147239634 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130217647 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299273463 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155621412 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214196618 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138404316 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162874603 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140379241 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181459897 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153106021 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185845801 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127502069 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125611048 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.15641448 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.165201491 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172868249 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156315022 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201565093 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157009025 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217948672 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132013898 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.307257636 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136034407 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18397907 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118363335 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125384329 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167707286 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130527423 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167255241 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210456032 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176650891 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149891246 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174055429 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13269211 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.151685131 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127131935 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1612274 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176393566 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155231474 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170462828 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105024902 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168233445 seconds)
  done (took 82.755525609 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163939203 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.14983615 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16552803 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.21845047 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19259324 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285437832 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226777167 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2511317 seconds)
  done (took 2.768529048 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118491574 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154890897 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137916056 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143377308 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116512927 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.441249565 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155806429 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117321338 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162392862 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157385797 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139560281 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.619329648 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114126007 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143763608 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125075112 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116563714 seconds)
  done (took 4.074522598 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.434879368 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.588768143 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.228027791 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.278386359 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23261568 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179163198 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.8017829 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.700875917 seconds)
  done (took 13.56521963 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.144686333 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134064732 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.313930168 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.25866401 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.148449153 seconds)
  done (took 2.125276085 seconds)
done (took 128.4824279 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121541213 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120989772 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120681724 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151647833 seconds)
  done (took 1.625965072 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.181061768 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092565665 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09449594 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120158554 seconds)
  done (took 1.60916536 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442566496 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092160862 seconds)
  done (took 1.683370281 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145555735 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142731951 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168450468 seconds)
  done (took 1.590935915 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141433572 seconds)
  done (took 1.266915121 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125843919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118645522 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.235787078 seconds)
  done (took 1.607682362 seconds)
done (took 10.514403843 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11833995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416255776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43005667 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132175582 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707714608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423872082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.025801334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17252295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172269042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134546059 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130455366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687310506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045473701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.36189502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.00383816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.387986362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694629201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108706681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142292325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109620127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.00564733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134457013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109161801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108668113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716073941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419026239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107112608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.395770434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10760166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11132962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424408373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108281781 seconds)
  done (took 17.268614153 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116730808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16946157 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143292433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10886853 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110431098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136728048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120493375 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120289134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202045852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106236535 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158825429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107480008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112556433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136841086 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134276721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106721504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137753148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110897268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115804167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13662296 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13161018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106011847 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137512508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110574119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.106960994 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155959163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107818297 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119677895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135532859 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11263789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.111954365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107609366 seconds)
  done (took 5.169421385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154724153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176201452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146123496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145219483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182625979 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109717715 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219406161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14584783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200462741 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108969923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129970791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135475014 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148646202 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108975526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162866366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10836137 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110790922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137994798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116715093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109733054 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159650128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107200594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109134345 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139311394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108939755 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130637716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136359451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120649711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10687179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140808423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11395925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10801776 seconds)
  done (took 5.477609812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123515604 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123954987 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130491239 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160817507 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118766676 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121565115 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151859793 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119917072 seconds)
  done (took 2.189464204 seconds)
done (took 31.232930092 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136621961 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128582582 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129074192 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15289431 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.190157858 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146802706 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128274165 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116327304 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153466032 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131099149 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107819222 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.14498931 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132040055 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120989538 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.223131477 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.1247409 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.227765905 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.192701832 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.14826931 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124490284 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119015115 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.226321533 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120942959 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.148219314 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.200251403 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.14037457 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183563016 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119032114 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149529264 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.109487194 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.222153651 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120720993 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116487714 seconds)
  done (took 6.060478971 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.208069164 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116808663 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146522304 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.115812322 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117576067 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.144560604 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.210721074 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145628282 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116241896 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11552094 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.114853541 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223494867 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122403288 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142981557 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119283411 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111199093 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.24164398 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117832592 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107324184 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.123474119 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113431464 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116288712 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.253501135 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110787744 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.115807866 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.146150481 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120095603 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120474917 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.14805924 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.118405881 seconds)
  done (took 5.372047787 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123415477 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.128980267 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.132925341 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.211035658 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.144289229 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.158895165 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138099668 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131215231 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171078962 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.109732417 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124909823 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175916195 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127478495 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.119459561 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144964678 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.12987933 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132626096 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141153868 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118657096 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127489712 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.159693739 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128019624 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136856631 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148676236 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.10920535 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116920369 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.149653746 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124973723 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.117534158 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.153673661 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.112919099 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114109759 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.111063461 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174999028 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111892529 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.151086993 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136103069 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121928731 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.153401609 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.141423436 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113214836 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142373908 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.136687371 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166338968 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.140485723 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.123792851 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121616824 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.153398531 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.109502617 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127774337 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.181743411 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.111100338 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130735597 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14022801 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.109211936 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118437979 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110882393 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.142243783 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12546583 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11272159 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.16485413 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.117368644 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120617913 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.142190076 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.121022775 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.108642834 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.13786406 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115259424 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137038315 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.146029262 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149710538 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.110023379 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121672866 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.152273155 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.121227992 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120886943 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.139040301 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122136089 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11989516 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.146076465 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.123291496 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.112255795 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.14216941 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.12846323 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.130123168 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.154444704 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.1232817 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.122709529 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.141242777 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113148094 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127390231 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.110586943 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.145853292 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.123147805 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.109729685 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14398774 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123278545 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12107439 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.137916529 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135710922 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114423713 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.139518572 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135856269 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115584738 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115522838 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.150693043 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.152810973 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.138581627 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122195743 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123698605 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.109847874 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.14856384 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.113769844 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.108726331 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.158520483 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126761196 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.116802885 seconds)
  done (took 16.611748176 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.321456569 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.306893093 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.178143091 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309868708 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155159836 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.204654558 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.304659978 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.306394476 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110629891 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178998074 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161556269 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.275609295 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142935236 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.138275358 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.308145323 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.360561533 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.1717052 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.147472136 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178778538 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.123683153 seconds)
  done (took 5.546785177 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131354744 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146042641 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164753409 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139660543 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120224102 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155116586 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.110863869 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131617756 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152327627 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122005698 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.112945004 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157373712 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122720989 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.12738743 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15654896 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151825572 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117926307 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146419749 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133901001 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11472742 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134175216 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137978611 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119569447 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163354638 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129720646 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121629027 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140132912 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117131928 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116952704 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.148131379 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.116720232 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129052017 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.146853625 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106685274 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.122381324 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126219323 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.147160485 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114135385 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115029483 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.144420012 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126848322 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12308663 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.14868523 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101707687 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.130559608 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113174314 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.152920668 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125349245 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107425727 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129100064 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154219266 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125243178 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.117297999 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.163182645 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118348701 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126719361 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.152371072 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124827962 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116122714 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139517948 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110728995 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115496989 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.149286294 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.125707397 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123239026 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.160973173 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128274644 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.110299679 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.143213674 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116779306 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115515875 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1243949 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.161405641 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119234667 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.117514498 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153872285 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119581584 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095978321 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.150100609 seconds)
  done (took 11.523785384 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138006692 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12288997 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129074997 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178614195 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126170214 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116404179 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151852698 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.131367166 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126141624 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161415411 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127889562 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124302714 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163669886 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121158948 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120260232 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1584454 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126783503 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.148752389 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160464998 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138712666 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156588417 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119212432 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124156491 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122209813 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171799552 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.122972433 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168218258 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127504339 seconds)
  done (took 5.051570336 seconds)
done (took 51.306577883 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.290562222 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.491991468 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.262640727 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.262713681 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.273855655 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.267351038 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.26523868 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.26323923 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.663613478 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.237487709 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.2638455 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.2615309 seconds)
done (took 28.971647402 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.353166777 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.7715191 seconds)
    (2/2) benchmarking "String"...
    done (took 1.554082314 seconds)
  done (took 4.481509847 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.253533688 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.253940487 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.488835487 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.255353917 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.254212971 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.272072865 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.265466018 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.25813282 seconds)
  done (took 16.204678034 seconds)
done (took 26.450478219 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.315403629 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.433325531 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.485069509 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.256429003 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.25519179 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.286275423 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.253360145 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.277254601 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.255717932 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.27257008 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.66972627 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.527211036 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.265396589 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.642778939 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.257376414 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.262377628 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.279354482 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.491365616 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.256014929 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.289674094 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.236900887 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.256204814 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.273448217 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.261006836 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.266933852 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.260808968 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.329509723 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.258951502 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.437271934 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.296571689 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.290971289 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.257280958 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.318666224 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.265038316 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.268694277 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.270561633 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.45289163 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.265671101 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.239548344 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.26526102 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.45757741 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.269626383 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.258779042 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.261221273 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.259272396 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.308259204 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.243674005 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.375966027 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.279528755 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.261022293 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.339948352 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.658648796 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.269456703 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.267410946 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.269088087 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.495504229 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.287367882 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.316567382 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.286948887 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.266949974 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.258245405 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.266918868 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.279240531 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.272011618 seconds)
  done (took 147.473382924 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.258379558 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.261794226 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.26463843 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.280854706 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.262346966 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.263698963 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.258692601 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.259934602 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.262971438 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.290643008 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.259128817 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.262889887 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.264417399 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.289955766 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.267531588 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.279879714 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.26290444 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.277215541 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.287418359 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.261815885 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.264635518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.263779955 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.260392133 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.262032697 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.31242177 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.340608613 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.292132398 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.267585424 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.272218038 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.260121463 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.303519564 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.267299953 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.898486216 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.132848584 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.27269417 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.286262292 seconds)
  done (took 82.49696884 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.261972262 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.261114954 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261453869 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.262133602 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.294632608 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.262890978 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859083738 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863960686 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.971043506 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.525658764 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.699718783 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541381572 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.262210762 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.357949151 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.274896211 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.263240749 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.278458949 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.28854256 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.266637702 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.262353129 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858162709 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.27898851 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.334435633 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.445998583 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.279370897 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297227886 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.657826944 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.262863557 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297434628 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.598432143 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.314489496 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.264457235 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64567166 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.361485623 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.262235842 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378697804 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.264781686 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29642046 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.263947712 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.547008101 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.262943522 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.263357451 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.263611924 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.265718816 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947605897 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.263119913 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.860478646 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267286389 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.231610274 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.26444377 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.26336981 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.244509007 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.004931246 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.267598845 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.263712935 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.266632358 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.264693972 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.264648722 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.29899975 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.29832504 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.363381019 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.26428015 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.267879649 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29865065 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.265057837 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.304581195 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.26860264 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.611761853 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.323378742 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.390829999 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.863039322 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.26915273 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362624119 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386361212 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.264549921 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.265548101 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.26684933 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.266062138 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.265285107 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.377472397 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.266058977 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.696805863 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.446066969 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.284912105 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.697400854 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.369777714 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.269119239 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.679423624 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.271717611 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.266593105 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.021686508 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364347584 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.266810966 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.266978499 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.26701682 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.698515724 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86885867 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.540820736 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.271853507 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.513426786 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.271168667 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.713328754 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.846092678 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.946660223 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.267736243 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380269695 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.447324753 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.286195939 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.2677252 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.698142947 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.272344719 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.324434828 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.270507825 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.672482032 seconds)
  done (took 372.661938242 seconds)
done (took 603.790476565 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.145441741 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.094511362 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.251239567 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.107372165 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.082500321 seconds)
  done (took 11.849390221 seconds)
done (took 13.018865518 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.463483466 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.46678459 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.331252867 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.469710116 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.30387793 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.482960037 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.452306003 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.290346149 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.389904128 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.353692923 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.382325644 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.324550854 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.302216471 seconds)
  done (took 19.181949897 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553698905 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.27805608 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339471324 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529420514 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.316665817 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547895767 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.593334193 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.279083132 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421571618 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290761984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289057071 seconds)
  done (took 18.608454998 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.555996226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.280942532 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.334471042 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56301145 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.313512492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546249378 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.593433993 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.280380748 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420806035 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.291157101 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.288319254 seconds)
  done (took 18.635993403 seconds)
done (took 57.596152085 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.307339446 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.368882904 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.30188538 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.288898258 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.28434743 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.289522854 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.291656434 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.288403935 seconds)
  done (took 11.591040629 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.283882645 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.28562941 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.28577864 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.28492092 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.28665205 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.287599062 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.28736981 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.283907871 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.285819571 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.287714001 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.28665247 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.28724389 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.28750203 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.285838376 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.287832989 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.286928097 seconds)
  done (took 21.752240078 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.288098363 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.285870574 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.28822747 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.286842766 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.28680413 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.286638022 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.287519086 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.287396332 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.287126826 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.287539871 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.286924344 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.287795481 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.286995143 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.286816954 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.286191886 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.290235052 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.288273026 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.289497621 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.292935833 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.286892455 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.288029785 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.287771218 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.287526237 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.287912407 seconds)
  done (took 32.079568942 seconds)
done (took 66.593730787 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.279258172 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.277036951 seconds)
  done (took 5.728648131 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.347255189 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.349889065 seconds)
  done (took 3.872099583 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.289260975 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.288041717 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.28920894 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.28821287 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.288828622 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.288582472 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.289125818 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.289764295 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.288185966 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.289387927 seconds)
  done (took 14.062418277 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.288695582 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.289151058 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.289339425 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.289145887 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.289217695 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.290309192 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.288528528 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.28908299 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.289409108 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.289965208 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.289488518 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.289659879 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.28986591 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.288229548 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.289004238 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.288826421 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.290165056 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.289228925 seconds)
  done (took 24.381507173 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.30302615 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.313086328 seconds)
  done (took 3.789983853 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.429251642 seconds)
    (2/7) benchmarking "second"...
    done (took 1.331167917 seconds)
    (3/7) benchmarking "month"...
    done (took 1.406112365 seconds)
    (4/7) benchmarking "year"...
    done (took 1.404602977 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.332750456 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.310995606 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.332610429 seconds)
  done (took 10.720698552 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.292334727 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.509579391 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.63811802 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.834378348 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.289532448 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.29618079 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.094358048 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.296892615 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.297552659 seconds)
  done (took 14.723225632 seconds)
done (took 78.452597788 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.275786793 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.356374682 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.305626443 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.301076088 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.628927532 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.309071388 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.282342377 seconds)
done (took 16.636015951 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.264465057 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.26207577 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.277757297 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.296445848 seconds)
  done (took 10.276053663 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.278694167 seconds)
    (2/2) benchmarking "read"...
    done (took 1.570828912 seconds)
  done (took 5.025455768 seconds)
done (took 16.477980063 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.293008984 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291335917 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.291327426 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.29156196 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.291492319 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.292994869 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.293802559 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.291988305 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.292510186 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.291782162 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.293151104 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.293547874 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.292240411 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292575522 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292446965 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292240666 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292386489 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.293122834 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293282785 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.290972428 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293672604 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293998784 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.294152274 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.293974718 seconds)
  done (took 32.199248261 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.29210206 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.292918621 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.292300113 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.294362227 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.294075564 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.293257493 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.294253002 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.293517382 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.292692124 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.294647442 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293914583 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.294254438 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.29519056 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.294465593 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293439195 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.292522064 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.294029615 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295509992 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295251934 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.292993274 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.294977149 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294710221 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.294270049 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293457639 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.295319016 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295556095 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.29489519 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.295736334 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296098267 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.293067665 seconds)
  done (took 40.001776595 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.297820811 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.298647163 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.293765517 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.296220239 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.294987342 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.293682898 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.293831084 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.293630982 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.29594998 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.296958468 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.295660962 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.296635238 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.295361332 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.294590404 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.29540063 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.295882916 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.294909852 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.29403839 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.296017645 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.296996438 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.296313827 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.296271722 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.296382317 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.29598687 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.296939051 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.295434323 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.29740828 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.298330442 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.295415881 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.296864387 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.296945732 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.296623623 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.296178978 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.295848098 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.297067037 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.297211411 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.301982639 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.301222796 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.29711204 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.297229492 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.297706293 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.297812303 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.297894293 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.298013315 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.298570538 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.297153584 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.297863855 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.297719428 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.298974385 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.296903225 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.298040962 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.297463668 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.298099417 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.297420582 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.297606549 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.297544029 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.298825844 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.298073466 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.298218116 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.297243131 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.298065112 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.300374698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.299113296 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.299128451 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.300289858 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.299734523 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.299293086 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.298111823 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.300538796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.29929992 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.299443721 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.298619992 seconds)
  done (took 94.582776161 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.298192575 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299494649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29909227 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.299504768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298730578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.299188489 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.301451186 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29864736 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300406311 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29950923 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300505652 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302250346 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300170567 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30073093 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299815656 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.298796842 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.300160981 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299913474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.30076556 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300627301 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300716411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.301185515 seconds)
  done (took 29.783225056 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300029255 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.303457604 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.298994301 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.302874842 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.304616572 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303813204 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301042517 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.301690668 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300527358 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300635263 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300852026 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302671682 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303822967 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300263497 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302364747 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303289183 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30036153 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303733071 seconds)
  done (took 24.618394111 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.301683055 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.302344945 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.302545074 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.301437746 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.302268417 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.300965562 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302497817 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.303577821 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.303105679 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.301301585 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.303155263 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302644609 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.301570738 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303933637 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302327066 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.302442343 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.302883115 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301684086 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301887207 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303013171 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.303224406 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30263139 seconds)
  done (took 29.839214842 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304305405 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303000377 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.303855549 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305214532 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.3035046 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.303722212 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.303537594 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.304539413 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.304603196 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.304822946 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30280072 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.304386207 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.305537724 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306219119 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.304838402 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304466878 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303157474 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303989266 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30498688 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.306004744 seconds)
  done (took 27.274649589 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304194478 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305165249 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304885895 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303373565 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304323353 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304237122 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303734076 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.305620473 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306396383 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305737103 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306486791 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304176479 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304378829 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304354543 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312620093 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306419779 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307325498 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304550705 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304210928 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304555894 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30553981 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306064846 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307320698 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304928375 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305893554 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.305634377 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30728038 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.3054277 seconds)
  done (took 37.742732281 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308398762 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305103432 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.305877383 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.306415913 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.306388249 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.305971369 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.308427799 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.30832689 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.307154946 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305412607 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.306663257 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.307806503 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308252785 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.307104716 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.307773488 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.310007757 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307588911 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.306899616 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308461213 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308574314 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.308443432 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310364613 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.308769405 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305633556 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308513084 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.309899028 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309080042 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307535494 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307304276 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308871256 seconds)
  done (took 40.420420293 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.328738156 seconds)
    (2/2) benchmarking "in"...
    done (took 1.329856012 seconds)
  done (took 3.848188704 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.307468339 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309197557 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.308757443 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.30792049 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.309102314 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.308038117 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.309108335 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309565209 seconds)
  done (took 11.658804894 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.301205685 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.309058571 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.309878466 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.310941193 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.308606735 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.302504493 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.309418789 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.313825315 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.301671296 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.303315233 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.30713035 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.307581437 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.305851015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305073047 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.303582818 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30663782 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.312309863 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.309046064 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.310053421 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.311779437 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.308866357 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.305318424 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308433377 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.313275176 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.30403812 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.314067778 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.311727175 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.314353632 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30475784 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.308899441 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.307705137 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.312380713 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.311079627 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.310162801 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.31110514 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.310821073 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.312277748 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309894942 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.309634636 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314998701 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.312330879 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.309848351 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.305355082 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.308423077 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307251877 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.312940877 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.311623704 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.31272614 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.304110077 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.309100958 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.317575228 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.304291982 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.312226954 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.308047787 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.30875115 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314689164 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.317278136 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.308259175 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.312154202 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.316519267 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.321135717 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.315864416 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.310249701 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.315254543 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.315482187 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.323304377 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315204406 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.320077422 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.314877782 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.314812798 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.314607891 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.322038112 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.321192617 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.316255173 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.314376347 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.314368625 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.308490202 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31804105 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.314404729 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.313929178 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.316411187 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.31407389 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.316203339 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320990866 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.308111268 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.316051522 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.314431133 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.314753745 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.307515122 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317040738 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.319960345 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.315516016 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.307727677 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.308030171 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.310372911 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.31441706 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.306874307 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309738917 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.317279996 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.317921556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.314270479 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30921589 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.314970622 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.315106646 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.314237025 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.31539384 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.320778907 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.308262282 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.315563399 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.318152414 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314637684 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.312262243 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.314621615 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.317102171 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.312144327 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.315333496 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.31662906 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.310116939 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.317507986 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.317452435 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.318698027 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.328257519 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.318342055 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.316592018 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.313071706 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.323042981 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317540019 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.313890467 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.31895545 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.316976258 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.317102719 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.312150865 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.320161012 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.310405505 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.320536408 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.311087902 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.318333991 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.320351094 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.317585187 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.31314972 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.311465184 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.313016855 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.314368158 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.316705761 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.320553847 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.313657422 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.31953267 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.315571352 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.314674256 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.315810074 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.320134513 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3203236 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.313774789 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.320100894 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.312521078 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.321950214 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.31315536 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.319660608 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.318819559 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.319762192 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318456538 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.313410301 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.314630126 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.320446575 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.316241941 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.313535965 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.319742774 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.322386337 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.319630214 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.313244988 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.321643124 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.313026425 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.316917001 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.324740509 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.320416705 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.320936236 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.314881958 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.32214447 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.318421841 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.319818407 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.315406621 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.317843431 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.321921163 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.321970183 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.324850832 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320301608 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.320563011 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.316013624 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.315081072 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.320143534 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.314424726 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.326642937 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.326252327 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324885092 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.316150735 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.323597068 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.315160474 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.323121937 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.318785972 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.324350222 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.321757227 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.319769643 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312233545 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320994801 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.315702177 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.323113258 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.315160546 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.322308033 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.323685994 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.321451846 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.32316998 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.316023754 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.317185862 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.322320737 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.323335494 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.321314743 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.314254286 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.324407242 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.315687508 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.317966752 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.323112677 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.32113024 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.322666946 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.32454089 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318676343 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320598811 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.318416496 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.315166615 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.324831803 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31919153 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.318934629 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.325340699 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.320007439 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.318868121 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.3261679 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.324081823 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.319127214 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.321110953 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.326772142 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.323223487 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.319720054 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.328860671 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.324263118 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.324726691 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.323814311 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.317932815 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.323929991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.322758525 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.32728233 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.316809808 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.324849002 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.319181906 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.326249981 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.320167809 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.319719995 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.320306426 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.322194279 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.327334849 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.325429029 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319174904 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.325148269 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.324941706 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.324401599 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.320679971 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.329633321 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.322965367 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.319668983 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.322335119 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.319425386 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.328085811 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.317893624 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.324504426 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.318567635 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330336334 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.335818126 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.325083521 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.32523477 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.326735684 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327134726 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.324097708 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.321761554 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320990351 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.322135895 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.321168945 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.321093959 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.327417708 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320406146 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.330130202 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324969535 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.323889842 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.332379297 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.328919349 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.320927519 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.328105446 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.327738646 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.327765753 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.320972493 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.328923822 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.323045087 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.323307784 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.32211494 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.322453127 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.330099827 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.326278404 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.323085266 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.322343306 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.325175564 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.321212456 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.322285171 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.331174642 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.324411007 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.333879823 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.3243791 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.327389639 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.323964072 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.330152026 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.332444089 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.322853822 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.335638975 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.328726658 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.321004235 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.322672134 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.330065494 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.330412981 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.33296199 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.323174177 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.330875747 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.328132472 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.328484292 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.330818839 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.328507371 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.331265295 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.328972279 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.331573575 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.32775279 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.323633091 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.32626869 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.331549636 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.330490936 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.3302296 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.322004895 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.327165612 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.334849403 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.323883064 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.325198904 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.324841641 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.333139728 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.330080079 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.331473808 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.331142829 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.330763857 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.333470798 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.329655044 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334479781 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.331788156 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.329999169 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.33474174 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332643042 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.336675372 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.32606727 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.333256531 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.332034881 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.325273199 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.326922792 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.326391667 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.332168386 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.326700926 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.33576852 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.332264977 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.327012999 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.327024606 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.333431748 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.327296461 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.336602007 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.347511034 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.327259744 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.33601667 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.333423921 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.326840953 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.33476991 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.331808335 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.325944241 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.328449644 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333270638 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.339245127 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.326667517 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.334112968 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.328400622 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.337132872 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.332961066 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.33327702 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.332569997 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.334323271 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.328357742 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.334968036 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.329873757 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.338745541 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.326733311 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328240774 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.329572369 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.335830038 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.335218984 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.328612942 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.337383857 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.33634693 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.327521315 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.329230025 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.334699513 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329105561 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335645962 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.329634747 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.333102646 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.330860935 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.332285923 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.331032344 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.336360728 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.329218026 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.32877459 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.335812524 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.335590788 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334924856 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.329768467 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.33701036 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.330549122 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.328444303 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.336386941 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.33061864 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.338222377 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33166043 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.333249573 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331147604 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.337749306 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.336801834 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.337087225 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.329233036 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.329505762 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.339506376 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.336174389 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.336509425 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.334686909 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.339287251 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.33102974 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.334183982 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.336042088 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.330787466 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.332147665 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.339495595 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.33243612 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.33162502 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.332985551 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339668528 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.338360581 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.334981138 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.333126228 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.342621033 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.33731328 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.339803885 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.334272862 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.335385532 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.33313971 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.338570439 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.339796635 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.331686861 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341657624 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.337232809 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.341725814 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.334942219 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.333046502 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.33471202 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341342429 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340067221 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.333728812 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.341019129 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.333327625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.340952927 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343002505 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.340676822 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.334007865 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.334288448 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.336261947 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.337450033 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.339980358 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.335632947 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.33660089 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.334744519 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343488078 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340543873 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.340506192 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.341412641 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.333241693 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.342152043 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.334004684 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.337408912 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.335968351 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.335221625 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.343690548 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.340926316 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.339480899 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.34100528 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.346913904 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.342068649 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.33374612 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.335756555 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.339651562 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344266559 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.341403143 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.335038337 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.336782942 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.342757836 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.341903951 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.342179826 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.337615874 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349502384 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.347185354 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.335818344 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.336221054 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341416129 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.344533601 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.342715663 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.343689231 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.337832422 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.338739137 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.347262411 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.343879221 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.343594486 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339277331 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.33535073 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.346073438 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.337484899 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.338907001 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.338844319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34605123 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.34246368 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.33938564 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.346747965 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.344234449 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.343255754 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.357269298 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.338960895 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.337892035 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.343366997 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.333865938 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.341497862 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.336870112 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.342094009 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.342652527 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.342114785 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.340084719 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.333793176 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338407455 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.33731471 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.343032996 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.340263871 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.333307625 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.33484807 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.340595134 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.34084589 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.342479514 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.340618071 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.341252911 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.340452344 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.335817533 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.345566607 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.345939759 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.341716972 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.34019638 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.341835653 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.337401512 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.337904367 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.340909572 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.344751034 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.340443867 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.340962578 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.335391106 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.342572996 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.342766463 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.33574065 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.334288333 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.333749264 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.342243724 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.345721454 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350797503 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.338410862 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.335852181 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.341348147 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.340914976 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335947795 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342097708 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340572898 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.33425122 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.335552659 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343236106 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.343302548 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.341429772 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.335735669 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.347384954 seconds)
  done (took 791.631315898 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341711342 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340246943 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340416478 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.34113166 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340968245 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340340194 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339939943 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340170602 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.340681375 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.341714174 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.341124514 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339678984 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.338730176 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.339909025 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340458825 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340855876 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339982654 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339639748 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340385594 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339366502 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.3396429 seconds)
  done (took 29.364886369 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.339634869 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.342441692 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.340673439 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.340814524 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341997859 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.340013358 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.340549657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33959795 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339182671 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342798099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.340226508 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342043847 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.34127658 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.340027451 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339944494 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340850129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.341225437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.341249507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.342420923 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.340097708 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.342151086 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.341449465 seconds)
  done (took 30.718723152 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.342202803 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.342088689 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.334365039 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.34399503 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.34346328 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.341288498 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.342147993 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.344622726 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.344419162 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.33623674 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.335949091 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.336607246 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.341269937 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.347222782 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.337152845 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.345224359 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.343449736 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.343190464 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.344909401 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.343295447 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.343240077 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.347871568 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.344273385 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.33496328 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.344839138 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.343815966 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.344446141 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.34364937 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.33804123 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.347326636 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.343751515 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.338258245 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.339779604 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.339858784 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.339084146 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.346538916 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.344551061 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.34396567 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.345887743 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.346099467 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.361231506 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.345296066 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.346736504 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.349361672 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.345881685 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.340283772 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.35004863 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.344905383 seconds)
  done (took 65.695680829 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.345329373 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.345052733 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.345564493 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.344132918 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.34585617 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.343612929 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.345036848 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.344906983 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.34588388 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.345693795 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.345568958 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.344915811 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.345892982 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.346466113 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.346592354 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.346561216 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.347615341 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.345591736 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.346000678 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.346141552 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.346218126 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.345127526 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.348311001 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.346665974 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.346703572 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347603095 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.347514367 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.346103551 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.34654459 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.347440091 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.347198954 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.345988945 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.34721087 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.347045481 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.347198914 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.348052 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.348753784 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.347548646 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.347567592 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.345743636 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.345464848 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.347394191 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.348836263 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.349865964 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.347765314 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.348741285 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.348781737 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.347735201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.34723255 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.347515616 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.349528751 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.34942132 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34812939 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.349052546 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.348692762 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.349097193 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.349734182 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.350822746 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.348953444 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.349334556 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.34852228 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.349175042 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.350557488 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.349512585 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.351064344 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.351861091 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.349248931 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.352381969 seconds)
  done (took 92.849542087 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.35017174 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.350491881 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351495051 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351247961 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349645039 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.349326037 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.348077527 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.349835745 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.349176787 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.349867285 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351942244 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.351976045 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.347920448 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.350935602 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.349686058 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349975421 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.351491984 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351262206 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351378571 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348390473 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.350118435 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.350675188 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.350682287 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.350978612 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.350486841 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.350966062 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.350545686 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.348894912 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351070209 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.351833733 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351986736 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.35057997 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.3527886 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.349899038 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.350859551 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.350276252 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.351484479 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349907351 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.348677107 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.350244717 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.350303173 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350349616 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.348437136 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.350751457 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.350556964 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.350789854 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.35061446 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.351861935 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.350820998 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.350660774 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.351043409 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351047568 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351905492 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352198521 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.352532969 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.351140764 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349965053 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351669622 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350019936 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.351385323 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35095241 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.350117576 seconds)
  done (took 84.966178361 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351394642 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.352326345 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.35312161 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.350733874 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.352761522 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.353134889 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.35262493 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.350984579 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352503184 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.352134849 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352258042 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351678013 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353127796 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351844301 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.351093553 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353733205 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351429961 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.351864071 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350758606 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.352461635 seconds)
  done (took 28.269651774 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.352212932 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.351224361 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.351795102 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.353179585 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.352651539 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.351744492 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.353499573 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350843224 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352892346 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351345467 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352640017 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.35420103 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352024399 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.353364611 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.352079919 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.353071218 seconds)
  done (took 22.865868233 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.353275442 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.35437763 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.351489386 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.352968012 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.353581373 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.352282155 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.351229754 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.35371616 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.351706378 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.353197398 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.352882674 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.35454997 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.352124924 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.352803842 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.351473831 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.35204432 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.352662138 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.351324409 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.351657594 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.35189358 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.352590452 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.352902608 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.353232592 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.351040398 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.352803289 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.354164266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.353183461 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.353215992 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.353438671 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.352796542 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.354690593 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.353519199 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.352316373 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.353265259 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.35224093 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.353322252 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.353630871 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.35316289 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.35283946 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.35296878 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.353457941 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.355460612 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.354703837 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.352762184 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.351712851 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.35262905 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.353012388 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.352228294 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.352095405 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.354157179 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.353076756 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.351626085 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.353982947 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.355124765 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.352584989 seconds)
  done (took 75.638465867 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352431849 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.35425804 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.353539711 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.351992984 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.354366977 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.353251505 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.352689841 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.354954987 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.35394851 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.354233695 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.35423518 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.355608109 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.353302175 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354662407 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.35447723 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352033525 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.354283271 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.354013015 seconds)
  done (took 25.595776461 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.35575508 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353940057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.355313809 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.35535103 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.355596818 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.354847296 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353260473 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.356586344 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355858292 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.354520557 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356246033 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.353917027 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356357918 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.356130124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.355295269 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354130743 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.356558695 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355685675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.35521653 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353571017 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356516959 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356611844 seconds)
  done (took 31.045772431 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.348480605 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.347080694 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.345805943 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.362506566 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.360006694 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.346780344 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.348817159 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.348197401 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.370057157 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.389725917 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.384701949 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.362006137 seconds)
  done (took 17.542732864 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356415212 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358141475 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.358328163 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357499863 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358894885 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357329917 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357002265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357235721 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357371214 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357942053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358561204 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35779113 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357972259 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357669549 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358365501 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359707606 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359260239 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357707359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35750645 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357290728 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360243208 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358169517 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35873879 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360314705 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358052792 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357731542 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358211917 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359212261 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357230466 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357768068 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359042637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35888804 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358565037 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359511545 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359021137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358424855 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359269502 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360192342 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360341501 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359110927 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.357039945 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360597691 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361471225 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358880193 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36000469 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360675153 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360605331 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359119665 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359862116 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359340142 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359445685 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361371852 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361019902 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360326087 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359421391 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361386804 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358742941 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359945462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36092519 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360020025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361189328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360120212 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359464775 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360128558 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36183601 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360590605 seconds)
  done (took 90.93039882 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363258167 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.360642648 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361618288 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361943357 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361744645 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362045871 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362466101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360014686 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362075635 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36168387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361728629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361649246 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363243168 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363876245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361094045 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363462582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362456766 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361931578 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361036706 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363234737 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362862012 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363272453 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361755402 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36322399 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362311863 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362621032 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361802422 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364255648 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363708146 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363612708 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363639158 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363359421 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362764541 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.363614625 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361816952 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36398837 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362962547 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362519179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364049534 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362901554 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362971609 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364227258 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363198124 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365377267 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364002153 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364192723 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364661032 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363819344 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365085999 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366301692 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365543689 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363935226 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36429848 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36417101 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364514753 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366175103 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365281058 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364306474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365199679 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365430893 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365261748 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365656113 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366406653 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364549614 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36684437 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363902773 seconds)
  done (took 91.223380977 seconds)
done (took 1851.485735779 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.524262588 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.480440702 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.356934957 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.364995474 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.357387978 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.358629089 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.372213478 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.357643739 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.35692874 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.357694253 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.357282641 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.549689593 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.391028432 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.35780277 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.356667899 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.453955407 seconds)
  done (took 27.590231853 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.387573247 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.366087093 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.480177289 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.36544459 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.38588392 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.557110942 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.421190611 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.363395449 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.537634178 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.381756707 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.353591768 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.384384108 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.362565985 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.354077014 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.38347435 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.556461273 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.616025007 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.358256614 seconds)
  done (took 29.854417395 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.824918671 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.385047053 seconds)
  done (took 5.448943167 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.384009707 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.363882789 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.364236987 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.362722205 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.357542495 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.356050611 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.36204835 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.361961696 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.366463295 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.492552254 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.36678627 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.377053361 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.380791732 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.36374094 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.370723131 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.408637156 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.55868402 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.372882964 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.370228475 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.369577956 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.362886688 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.452940441 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.409028187 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.371802865 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.494814939 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.369289814 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.36883977 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.371120582 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.489574745 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.372603928 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.363383904 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.365094867 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.365447716 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.361928651 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.817149709 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.359442675 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.405669622 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.371390799 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.371397828 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.515616095 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.366970376 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.371743257 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.35848639 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.814421813 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.501026528 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.490305387 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.378282181 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.366584061 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.367970493 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.433417728 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.369603642 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.366697204 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.428605422 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.208652797 seconds)
  done (took 87.140117899 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.382566294 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.35864489 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542059022 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.377739261 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.359512987 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.359059703 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.359619416 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.656644912 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.404489976 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.36067371 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.666908645 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936572524 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.359917805 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.454234528 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.321238249 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.471844426 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.36234971 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.359777444 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.362825232 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.364259919 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.924159319 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36134239 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.361310236 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.454380189 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.401241068 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.906250585 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.372487891 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.359358285 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.363975948 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.360718544 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892041322 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.361165884 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.435661902 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.366799431 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.639699601 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.763835033 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.725070924 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.361367716 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.399431844 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.362415897 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.381421231 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.900134797 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.74266062 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.361710814 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.363212965 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.900143699 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.362965109 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.371726469 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.362914586 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.616118369 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.361026252 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.362729249 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.361885259 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.377917322 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.369791548 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.386868917 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.438840447 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.906351921 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.361323636 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.362207478 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395216055 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.365539049 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.370739159 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.362159639 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.381394901 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.743957747 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.620906196 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.369269511 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.743093294 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879571464 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.3691316 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948668367 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.365772652 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.370825754 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.367161393 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.361977114 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.361982042 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.903756261 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.400154874 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.361475334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.723016719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.367082435 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.655832269 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.381631294 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.363926924 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948196817 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.374271244 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.371009659 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.362520325 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.360815095 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.380121214 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.366150306 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.641523442 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.392170593 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.361588955 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.362808936 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.392532408 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.363597487 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.379991322 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.373036988 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938846527 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.373419881 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.362840023 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.364931883 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.370895804 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.361869532 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.364646481 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.366844482 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.63910681 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.364291268 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.38156346 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36550098 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.36205081 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.362973127 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457032465 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.367021463 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.677067558 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.367195526 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.363810723 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.364493605 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.362918176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374880543 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.363723091 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.36805265 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.22825672 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.663070028 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.382916429 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.363455742 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.363960006 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.366934689 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.365097044 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.364771859 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.440694574 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.362920153 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.15664224 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.399537757 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.38830987 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.363135634 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.371091039 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.369977793 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.362651673 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.36388754 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6598594 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.640001568 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.542216479 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.371318192 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.370087652 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.137193772 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.404084903 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545161427 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.381176664 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.363994509 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.645072907 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.627532093 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.363622961 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.36423085 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.363438194 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.624801431 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.365001192 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.685296399 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.907756967 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.361045651 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.369385656 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.161955065 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.083024897 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.36828261 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.369989081 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.649898805 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.3810792 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.363852982 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.364308007 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.365331335 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.364734644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.365437148 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.369111987 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.365778497 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.365740349 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.422452064 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.557475004 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.382632664 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.36611811 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.894780124 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373561626 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.373595565 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.374177534 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.364850223 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.363946689 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.409162517 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.368157755 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.401463897 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.367111169 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.370824861 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.921612984 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.365765627 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.36380442 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.557376785 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063593029 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.362690188 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.36643787 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.363945653 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.330607731 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.921497819 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.437258217 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.668578918 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.365457791 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.403610968 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.364069866 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.462749116 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.919025178 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.378615943 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.364374102 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.028039371 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.365376267 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.876505185 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.365355847 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.369499356 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943618886 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.362820101 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.363412248 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.363776905 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.364434937 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67693097 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.362056713 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.369038683 seconds)
  done (took 505.798200745 seconds)
done (took 657.069363269 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.365053229 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.366398723 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.349780254 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.366498733 seconds)
  done (took 10.690805456 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.380828595 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.368472177 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.376137818 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.369194192 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.379201841 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.366888795 seconds)
  done (took 9.478036659 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.359745358 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.365782772 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.364013313 seconds)
  done (took 8.331790231 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.576329055 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.389404975 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.711415666 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.374980579 seconds)
  done (took 9.29426691 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.377427511 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.376597777 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.377656693 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.376521803 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.380147423 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.381393039 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.377771188 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.378272638 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.377964326 seconds)
  done (took 13.644945504 seconds)
done (took 52.68606134 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.352632619 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.528209844 seconds)
    (3/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.363056089 seconds)
    (4/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.345701412 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.364465894 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.434884544 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.36867378 seconds)
    (8/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.384572921 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.416100796 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.51530739 seconds)
    (11/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.501156317 seconds)
    (12/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.464500989 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.623049515 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.465155107 seconds)
    (15/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.398152741 seconds)
    (16/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.403606134 seconds)
    (17/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.207017139 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.441207668 seconds)
    (19/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.344638209 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.63893101 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.344201299 seconds)
    (22/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.261127597 seconds)
    (23/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.431428769 seconds)
    (24/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.506342084 seconds)
    (25/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.541437883 seconds)
    (26/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.532155022 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.452318352 seconds)
    (28/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.441426167 seconds)
    (29/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.395472481 seconds)
    (30/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.474352761 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.363243936 seconds)
    (32/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.349853798 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.430722295 seconds)
    (34/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.343931736 seconds)
    (35/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.4336929 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.528182592 seconds)
    (37/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.307270212 seconds)
    (38/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.077966073 seconds)
    (39/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.401953616 seconds)
    (40/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.370895736 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.399692008 seconds)
    (42/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.345696068 seconds)
    (43/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.403204114 seconds)
    (44/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.346707363 seconds)
    (45/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.58015334 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.363555638 seconds)
    (47/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.506957928 seconds)
    (48/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.575329082 seconds)
    (49/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.18292348 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.4022973 seconds)
    (51/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.44704206 seconds)
    (52/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.372859879 seconds)
    (53/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.119038539 seconds)
    (54/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.43677887 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.474837589 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.070252648 seconds)
    (57/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.496734569 seconds)
    (58/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.480749292 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.344757056 seconds)
    (60/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.43621197 seconds)
    (61/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.406432788 seconds)
    (62/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.478207003 seconds)
    (63/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.342800421 seconds)
    (64/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.449908426 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.697963555 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.483984307 seconds)
    (67/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.409571676 seconds)
    (68/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.347744529 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.472908011 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.522075448 seconds)
    (71/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.484443049 seconds)
    (72/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.370838443 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.521287734 seconds)
    (74/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.478372776 seconds)
    (75/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.445317604 seconds)
    (76/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.39059091 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.476383985 seconds)
    (78/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.215697991 seconds)
    (79/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.345382751 seconds)
    (80/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.35158417 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.521089293 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.493810445 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.480307321 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.454440106 seconds)
    (85/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.349768733 seconds)
    (86/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.577427467 seconds)
    (87/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.473555539 seconds)
    (88/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.505593659 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.486124506 seconds)
    (90/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.118853207 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.406561734 seconds)
    (92/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.350316495 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.361151194 seconds)
    (94/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.614848895 seconds)
    (95/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.362031041 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.413022843 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.443927264 seconds)
    (98/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.074143268 seconds)
    (99/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.554109788 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.375083478 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.649981683 seconds)
    (102/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.1866721 seconds)
    (103/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.347274277 seconds)
    (104/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.107190455 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.351440304 seconds)
    (106/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.546783668 seconds)
    (107/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.55685233 seconds)
    (108/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.495001476 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.476310679 seconds)
    (110/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.355481442 seconds)
    (111/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.347057696 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.529154822 seconds)
    (113/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.021086523 seconds)
    (114/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.350011902 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.484853776 seconds)
    (116/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.250605744 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.406956397 seconds)
    (118/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.132359519 seconds)
    (119/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.549591309 seconds)
    (120/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.504618195 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.473242423 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.474779377 seconds)
    (123/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.34764354 seconds)
    (124/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.48189354 seconds)
    (125/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.357149157 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.351802526 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.35881551 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.622527525 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.62822582 seconds)
    (130/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.470614682 seconds)
    (131/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.522812843 seconds)
    (132/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.48742347 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.502097789 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.458207954 seconds)
    (135/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.543579071 seconds)
    (136/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.494349267 seconds)
    (137/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.430525571 seconds)
    (138/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.451398084 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.393734522 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.475318031 seconds)
    (141/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.346504532 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.439880459 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.328276042 seconds)
    (144/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.478910787 seconds)
    (145/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.347356466 seconds)
    (146/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.61683466 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.463742087 seconds)
    (148/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.457374585 seconds)
    (149/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.354333425 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.49070549 seconds)
    (151/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.451800435 seconds)
    (152/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.514082449 seconds)
    (153/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.371600922 seconds)
    (154/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.439080002 seconds)
    (155/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.415836243 seconds)
    (156/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.355057202 seconds)
    (157/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.40861326 seconds)
    (158/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.400552808 seconds)
    (159/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.348322676 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.164563917 seconds)
    (161/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.409160613 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.452697584 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.53650741 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.431339417 seconds)
    (165/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.350921533 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.501829295 seconds)
    (167/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.546935606 seconds)
    (168/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.4780255 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.352279238 seconds)
    (170/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.180879029 seconds)
    (171/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.589269337 seconds)
    (172/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.582019402 seconds)
    (173/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.405160668 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.174757759 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.500889732 seconds)
    (176/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.354451855 seconds)
    (177/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.408304592 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.59458698 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.023001793 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.356020538 seconds)
    (181/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.359285801 seconds)
    (182/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.62476799 seconds)
    (183/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.597305307 seconds)
    (184/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.111408308 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.576684196 seconds)
    (186/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.352346601 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.414916304 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.214764665 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.180955921 seconds)
    (190/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.547968065 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.217459474 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.440497403 seconds)
  done (took 346.733630555 seconds)
done (took 347.979631857 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398494565 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.456464577 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.382948815 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.379188834 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382252895 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.386027062 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.40018145 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.384630733 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.392648362 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.394770797 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.385920344 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.39014448 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.395721934 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.388858249 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.414087016 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.382259051 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.381462136 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.391485906 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.397259011 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.40020108 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383079398 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383741048 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.403629733 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.380949289 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390341554 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390808999 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.387802428 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.383527532 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.388586178 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.396771454 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.381536091 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.3876969 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.400467868 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.393286336 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38303066 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.392031655 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385967144 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.461259248 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.402429171 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.393663122 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.392423416 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.39953561 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.38807782 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.389465781 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.393789816 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.40392835 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395892547 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.396422963 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.381226311 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.377622751 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400242484 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.396219345 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.39315863 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.379064292 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.370425101 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.397348913 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.393401833 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402248713 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.387963633 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384574482 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.417068592 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39957995 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.392599479 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392297227 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.392443054 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.396086191 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.394351394 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.400486935 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.390298876 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387285243 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386146612 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.390217337 seconds)
done (took 109.572093341 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.508756549 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.383255874 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.517431221 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.387295827 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.546129637 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.50651486 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.389209723 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.39354633 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.392367246 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.183894212 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.392673683 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.392846261 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.38427989 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.39135926 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.512559545 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.390333814 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.389032452 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.109562797 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.391618955 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.521700647 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.380975857 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.393380164 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.392452239 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.210846367 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.383708285 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.380444738 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.520894365 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.394628364 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.138859613 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.380670574 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.386237854 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.116803836 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.526101932 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.413343384 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.404334108 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.402957849 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.539717467 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.396362929 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.505212647 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.504585652 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.521692147 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.430681009 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.383463011 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.384601076 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.394882698 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.395969432 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.396217563 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.420455055 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.384284414 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.395297518 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.086998794 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.407962091 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.39395656 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.396311502 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.396815891 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.419659327 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.393998749 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.394445081 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.52913003 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.392548829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.513269485 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.243835482 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.218302709 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.39625969 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.389681318 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.394893335 seconds)
  done (took 112.186200303 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.454098646 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.461160157 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.495729966 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.387306561 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.439470513 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.492624385 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.388679248 seconds)
  done (took 11.372797489 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.393993607 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399526876 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.434118248 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.437386399 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.39639246 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.547439863 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39520627 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.403187978 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.3979085 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.443233227 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.400883138 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.395972938 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.407705254 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.390526539 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438890171 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.401533932 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.505450632 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.391497421 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.398316673 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.542904073 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.397634235 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.408011566 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.450188692 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.400452109 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.398130788 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.395957934 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.168457075 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397968756 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.399745621 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.398703718 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.400841737 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.446382752 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398774687 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.390103452 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.397780461 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.508039035 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.395146546 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.402423046 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.398291943 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.392776196 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.398066199 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.397231187 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.396077496 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.39801756 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.396647359 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.417266187 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.398442256 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.398715037 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.401684607 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398807103 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.441284382 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397797614 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.398818826 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.398782085 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.447747515 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.411163032 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.398145643 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.39973116 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400273946 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.400097982 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.545880811 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442663958 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.399821676 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.441578329 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399084652 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.40142413 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.399033203 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.401659602 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484521131 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.397629318 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.441268514 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.395697883 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575992955 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.417718906 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.40156394 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.399231448 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.395514331 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398392114 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.390222763 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.398316433 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.400554669 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.393049297 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.401190019 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.399434213 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.400314401 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.556709182 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.504161848 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.404964102 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.407479927 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.400024714 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.404753613 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.444344546 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.403107437 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.402095037 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.44365996 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.510565681 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.457726397 seconds)
  done (took 143.686501824 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.406303443 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.405285259 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.395581232 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.419872364 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.394877318 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.392326952 seconds)
  done (took 9.678098126 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.395788047 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.405265899 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.403522663 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.403032638 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.404049188 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.404399284 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.401728965 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399654461 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.407473175 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.403637328 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.402920623 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.406253695 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.405231791 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.405601271 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.404791179 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.403334635 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.400475646 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.40629043 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.404723037 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401942285 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.397173432 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.401704045 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.404955732 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.398128771 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.404409702 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.405763035 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.417969389 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.406588653 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.40080006 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.403682889 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.407538785 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.404672802 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.39644206 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.402874295 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.408098696 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.39845356 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404519915 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.410127927 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.404710647 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.407035117 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.403771022 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.403272433 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.407048128 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.408167286 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.402219756 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.398951978 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.408141669 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.418948081 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.403404862 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.408363702 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.406997442 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.403372596 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.408045482 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.406024065 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.401745206 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399570996 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.411597978 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.402653875 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.404470716 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.403325004 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.40804589 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.409338328 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.40203081 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.41200517 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.40768609 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.410140952 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.396747708 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.40949837 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407747194 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.410408075 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.411316546 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.407316659 seconds)
  done (took 103.423940093 seconds)
done (took 381.60334274 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.678740966 seconds)
  done (took 3.943804193 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.407539158 seconds)
  done (took 3.675468305 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.81769822 seconds)
  done (took 22.088896861 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.402682668 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.443192235 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.402343503 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.3945791 seconds)
  done (took 10.909193395 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.663549665 seconds)
  done (took 3.928546764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.407723161 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.40085991 seconds)
  done (took 6.078115848 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.599227861 seconds)
  done (took 3.865667084 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.778561518 seconds)
  done (took 4.047415762 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.427690802 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.416827062 seconds)
  done (took 6.120496448 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.377852803 seconds)
  done (took 3.647752197 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.261407109 seconds)
  done (took 21.531272113 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.391966907 seconds)
  done (took 3.654330816 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.429385791 seconds)
  done (took 3.687194166 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.776546389 seconds)
  done (took 6.02901112 seconds)
done (took 104.474176296 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.372725741 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.368115454 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.367244994 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.364605058 seconds)
  done (took 10.724669463 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.43382882 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.424543755 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.432938827 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.426372644 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.426045759 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.428573772 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.397345219 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.400687237 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.4202559 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.421939783 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.428635387 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.422189339 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.42297034 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.393945304 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42397113 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.425337645 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.418838669 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.424660264 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392294249 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413616087 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367438905 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.417224765 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416433122 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.360812828 seconds)
  done (took 35.189223447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.873414843 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.426383208 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510108502 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.406357921 seconds)
  done (took 7.451771507 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.441099553 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440660694 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.461664105 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.497741984 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.522546601 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.459657298 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390667137 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.381365877 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.369281154 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.447407864 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.497147285 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428856174 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.532417389 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.361793937 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.580179356 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362583574 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.360561753 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.440566239 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.493339312 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.513511952 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.359563585 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.443127499 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.444684885 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425702735 seconds)
  done (took 35.888607876 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.37111207 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.380543304 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.364573242 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.37570769 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.3649911 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.364816385 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.363039567 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.367788219 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.363023388 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.364642684 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.363093232 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.375489968 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.36259512 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.361092782 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.369227607 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365074825 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.367218762 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372176747 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.372213041 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.365764043 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.360374282 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.368224953 seconds)
  done (took 31.317773909 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.346798411 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.346839086 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.697626342 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.601220489 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.350756115 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.350279292 seconds)
  done (took 13.917784493 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.420480233 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.555821457 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.353977738 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.689511001 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.779548056 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.354867518 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.356223624 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.590668694 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.875680945 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.867556726 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.407540698 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.418519567 seconds)
  done (took 19.904404418 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.34844768 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.349493135 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.349318825 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.363237116 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.399308834 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.350924982 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.353925381 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.340362424 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.402548382 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.402756163 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.349458038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.39791912 seconds)
  done (took 21.640578132 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43893632 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350972156 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348776504 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42224601 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356224648 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.193353179 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427025397 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072601882 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.359623389 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62568131 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3525773 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449051367 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612270477 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351403543 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35578675 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.309245374 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582729503 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82474935 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353403138 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356434717 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389006931 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353635851 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353061444 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.545769212 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198209428 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346226037 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609142598 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347154881 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615506435 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59177018 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58963234 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352121654 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619963164 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976677616 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445955176 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539768836 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355764786 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350066284 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.319596354 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.371525712 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349440092 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353183578 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585522801 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353497693 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346832862 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344508838 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093505191 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.358765415 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.347602908 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344045447 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585977849 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450664557 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.353698952 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348498593 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367807999 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347439712 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.353470276 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469769246 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912723087 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348969564 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360985819 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.346664598 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345172633 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381032268 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964202297 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.357501431 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357398586 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35403544 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348886402 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361569192 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375347385 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351326353 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.369804573 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350461863 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076435635 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363427782 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352853817 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875599267 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351164634 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.355114022 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579875719 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346634578 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350462757 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.346774351 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347813877 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059505955 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359682681 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.320280897 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411957278 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.073387555 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552075542 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37167713 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381518983 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.572733107 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.324628582 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35383391 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.360121969 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35534374 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365044937 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.072679808 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351805752 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.356971655 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610287899 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.56018341 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356083194 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.318838628 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823048529 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352955429 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.37684549 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362222964 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549772298 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.947935211 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601020624 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363976291 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384754126 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354330556 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121731724 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355793033 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.358579397 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35112425 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620510814 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.155688733 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359835609 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422658815 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356485015 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352195149 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352204937 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373440792 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350121639 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.521896705 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361859955 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590617516 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.351696677 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342570743 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.343853117 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346106235 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.351401488 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.561411776 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341652313 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620014555 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338668573 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33908665 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338320855 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.560481509 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.341888984 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.344819175 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598948467 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341500282 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356242302 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584440301 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374472201 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447768986 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368568961 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.344213478 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596726434 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.343360409 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.343181652 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337790269 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362548929 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347057365 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.349119603 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330419511 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938371403 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324694611 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341437875 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339726039 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.355344809 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410498989 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348870282 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53543169 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.359658683 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357670114 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.353292272 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.340289862 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568283833 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58091829 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.348653614 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421447885 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.805185334 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936411509 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363640231 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.342126539 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.340400828 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.340617716 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340331778 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340465723 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341909181 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537945248 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593209858 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362389639 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940849748 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349125659 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353036841 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.353174763 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582815319 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.355057896 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341869711 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.351762247 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347464073 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353868829 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588696419 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483024243 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.35700428 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340325603 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.861492907 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349572141 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342038322 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341473723 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37092783 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352953762 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172597025 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60255911 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337810852 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591098752 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353374923 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.365792667 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.341749767 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344082147 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3516665 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.358974933 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351523249 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.541511191 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349454719 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349734853 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901054101 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084176494 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889151649 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357895571 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.34889467 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364649557 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.065557485 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348109057 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342318069 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571589424 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066346536 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34930699 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810650827 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.355927351 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072372456 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591679508 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580815024 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354519432 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.35271959 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594770447 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560766453 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37625858 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343757672 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366582063 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.316092048 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877645997 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359778949 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430630684 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073889313 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358788687 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352301796 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.392183288 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.358936791 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730271702 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351052817 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347168747 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346043767 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356114225 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237735519 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349615004 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345698287 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96528353 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353334824 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.817512141 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351347289 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.543227852 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.5940346 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.572396379 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.352656194 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.356092372 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.604029605 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590552476 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348916017 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34931096 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889998536 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.224916947 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.353476726 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34696616 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109987298 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36200633 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622838438 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.356342653 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.353734351 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360999703 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349587687 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347611958 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.346926406 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350414699 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321579305 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812193562 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.345534292 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347431445 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362746748 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355270731 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600985916 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.362236899 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94173146 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583182398 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359880761 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380037081 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.354119355 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348894664 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.328698322 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349387424 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348589884 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390442007 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.576298026 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347754843 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.326821509 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384034379 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.562794011 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350510569 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351401226 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562983267 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.354562408 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.367519345 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084246519 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387242736 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360302364 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356967072 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356618808 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3902463 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416306247 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546907469 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.601090866 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598905954 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732457104 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364665723 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357989508 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.364886271 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445499896 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361116167 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.360022037 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.129637223 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947046976 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113968217 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951692307 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599416748 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353965693 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356773248 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35350825 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488712065 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351785629 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627972453 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350651892 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.34554463 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378660242 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350753878 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367111605 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568016515 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628850836 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352471707 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365371064 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356293408 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.35310319 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602096059 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.566924422 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824560348 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894939961 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358962774 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358600253 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081069584 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633173095 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352430316 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354806048 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353934122 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.372156722 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360705663 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.365869576 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352533151 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494802156 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59741053 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992893905 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602482171 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.395792863 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.870046332 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354010604 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611324239 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122404245 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551344604 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959452414 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054297978 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625244317 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424447462 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553473929 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.358086367 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4905478 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.362841294 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357190063 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354006527 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355228424 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.35415388 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601021431 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9614043 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625037252 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.358583621 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.365189651 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391208184 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.553376116 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.586173534 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065887582 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582657809 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606962514 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362730002 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355386669 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958215827 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606930171 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359148035 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.361774615 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564727323 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360653456 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382258903 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.875462764 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.355089315 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885105073 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.251496959 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377106115 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368484731 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.062523839 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96728318 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.369720818 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831537781 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364982898 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35854814 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637260606 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.36449527 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359434254 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643134353 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.363085287 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369792279 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563772268 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.965008426 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097518553 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.383844343 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358513482 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.366296378 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359686864 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372978103 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363685237 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367007985 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.748085939 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362372203 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360640956 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371595446 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.358070711 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372046826 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.364940238 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359040641 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.366299886 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.343955726 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.353148418 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371035369 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48337679 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893228259 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367433067 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.038656071 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.682299359 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61358601 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361278734 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.338529908 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.363800469 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362838012 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360291483 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361550985 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.353761902 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894384964 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.3672869 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.609863717 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371343543 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.570687397 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570920733 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360253982 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567447328 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375755705 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38872494 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.33146118 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360895643 seconds)
  done (took 967.336517886 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.369975275 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.370033232 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.376338642 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.406879317 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.371331619 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.470362114 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.356849094 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.372307575 seconds)
  done (took 20.333736765 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.363908699 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.367151442 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.362774461 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.365499587 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.355644764 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.821268781 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.369789831 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.366849711 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.373288215 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.36610604 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.371623345 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.017919001 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.38553257 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.360349515 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.349730968 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.368672703 seconds)
  done (took 32.208584073 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.406708388 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.520588338 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.232055558 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.389714052 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.383931693 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.360973621 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.575311976 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.384354915 seconds)
  done (took 26.49489687 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.368287337 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.366305644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.367685328 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.367663702 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.368354804 seconds)
  done (took 8.079782644 seconds)
done (took 1231.73870909 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.367919016 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.367455314 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.368513923 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.369340805 seconds)
  done (took 6.714321614 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.335918552 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.33593387 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.335958263 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.351008893 seconds)
  done (took 9.601194761 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.017184766 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.968388384 seconds)
  done (took 5.228240717 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.845135442 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.850890093 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.847410391 seconds)
  done (took 6.786218362 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.645377119 seconds)
  done (took 2.887851086 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.271199981 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.361330341 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.022875689 seconds)
  done (took 7.899067981 seconds)
done (took 40.358202731 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.355464951 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.61059267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.51068172 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.354233026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.514529448 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.511280551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.094305877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.366774021 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.368403989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367696432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.362092156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.515877997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.077660503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.602543487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.081364716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.600502511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.518417521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.368119553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.367909594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.362346969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.096243087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362455433 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.369502604 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.364982706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.525349817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.501249086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358331754 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.621498425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.355446606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.369951881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.505468241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.35562472 seconds)
  done (took 81.940950601 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.356327794 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.37922732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.369697524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.360825652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.364599516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.372112924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.357916346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.357106757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.357284438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.363397003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363122663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.358018474 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.360706164 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.371091256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.360263621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.357843575 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.377734267 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.363451435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.364185014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360508362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.361448408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.371973342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.359002577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.35884299 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.367800668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.359904178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.376864584 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.359133355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.359922042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358457711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.365918414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.382859548 seconds)
  done (took 76.90375532 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.358761653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.363575102 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.361718622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.367852952 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.359805964 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.38292623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.363140562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.358143993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.369798939 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364590508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374141977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.361395521 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.362743557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.372296632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.362798123 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.360080722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.390358238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.364985383 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.361671508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.371129514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.360414001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.360468354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.362326785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361676851 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.365838444 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.361960686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.360847279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.361930093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.36778797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.369152156 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.368026008 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.365441166 seconds)
  done (took 76.944327341 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.599636355 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.375878756 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.378118384 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.368445604 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.380253636 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.375511783 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.370426246 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.606036991 seconds)
  done (took 14.703319311 seconds)
done (took 251.73609757 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.370155742 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.867038929 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.399629873 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.383903368 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.388267193 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.396618392 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.586369352 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.40099445 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.586600389 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.392836863 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390877637 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.382332771 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.159366968 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.522399571 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.21153902 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.310776779 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.226191858 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.369352141 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.918938379 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.640964425 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.39535423 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.363716873 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.195630987 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.236535099 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.359552576 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.448118143 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.468783179 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.59434436 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.53278411 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.446199089 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.870488343 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.371660858 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.402077714 seconds)
  done (took 63.838880886 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.369759323 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.380970837 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.379400997 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.380236439 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.37764814 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.378351772 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.370110233 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.380052128 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.379426787 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.380026438 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.379127897 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.37907454 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.377955953 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.379902755 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.379394502 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.355936883 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.370675534 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.379827504 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.371420347 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.356590553 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.379379919 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.380274173 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.380576445 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.380004922 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.380606387 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.380726748 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.379501715 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.380579695 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.382342537 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.381135387 seconds)
  done (took 42.564367325 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.380542233 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.945812014 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.093094369 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.385785594 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.372952009 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.377568179 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.649116244 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.387224588 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.378165685 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.378592411 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.844138897 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.388149162 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.404596946 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.094745018 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.382264434 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.381208444 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.380885653 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.374910039 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.957941215 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.389300352 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.64789877 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.386982706 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.650401007 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.387962401 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.378990383 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37609293 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.380295891 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.170423535 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.400469494 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.852226759 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.113884738 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.648802264 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.107111845 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.143379835 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.117894257 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.3897029 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.383040575 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.846416487 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.378100829 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.376005049 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.649338281 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.377267873 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.098226395 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.052592609 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.392927773 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.383915601 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.199584867 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.848676212 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.609329138 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.388835565 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.13273718 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.384375594 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.386091327 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.379106213 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.60859423 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.384653421 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.376478261 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.242195314 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.387767281 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.648556999 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.390532894 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378961511 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.951372977 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.382399584 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.949463499 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.384384899 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.387647408 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.378155651 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.104298471 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.386308545 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.061080375 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.39462677 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.384593352 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.851066837 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.946992522 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.239068824 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.379629754 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.957539701 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.13282664 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.665192517 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.387773094 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.156921433 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.669200629 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.381478272 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.387727091 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.386967942 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.387271419 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.452553247 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.649655116 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.986434239 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.06059066 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.22702458 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.653511291 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.386803974 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.379512301 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.226324274 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.387545112 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.387699957 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.091767125 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.064439972 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.394884079 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.387369378 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.05714039 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.397709393 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.655517899 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.385603276 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.134503911 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.382278885 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.454513666 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.387725505 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386160472 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.384554817 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.653586538 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384013214 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.388727427 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.049522715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.875956173 seconds)
  done (took 192.449202648 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.374766889 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.390020037 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.376123743 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.374151707 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.376325885 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.383624339 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.374855044 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.375510368 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.380796585 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.374623539 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.37395256 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.385346927 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.382087391 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.376438741 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.375011914 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.377024727 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.376942817 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.393607066 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.376287786 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.376093213 seconds)
  done (took 44.83310129 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.390159626 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.914483057 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.889148894 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.391342081 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.390163676 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.383737163 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.43657891 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.394549207 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.390706975 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.666412728 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.547297859 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.39431278 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.391720632 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.391587768 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.891351161 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.36697023 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.667462072 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.919874486 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.390628211 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917342903 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.367180814 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.390220762 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.382285995 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.917441423 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.677052452 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.657274209 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.439407438 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.918725884 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.39190917 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.392617499 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.916980914 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.390127318 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.384626257 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.904668385 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.3923563 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.406194503 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.393755785 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.43900753 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.441259155 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.671390858 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.924668263 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.666323706 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.403796865 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.561092931 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.391334264 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.366936028 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.926991463 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.396505757 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.368257889 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.394600252 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.396347628 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.902995327 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387030512 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.903249808 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.393296528 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.392709781 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.919380535 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.903377171 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.895626689 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.549683024 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.384890504 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.660291865 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.395174781 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.930233927 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.393658843 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.39331136 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.394229254 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.551636722 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.922359799 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.662533154 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.673143295 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.672869904 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.394961702 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451506596 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.400763949 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.674782818 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.44964376 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.807470698 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.675547018 seconds)
  done (took 125.196092893 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.639606915 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.499704463 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.745178755 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.96493687 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.878110572 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520306582 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.49719001 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.628795739 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.398597619 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.483168133 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.016075307 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.485970899 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.120274395 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.455848616 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.498286094 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.51487051 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.769905937 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.382382812 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.038932221 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.978203165 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.400331871 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.500775805 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.895510395 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.569729095 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.382582185 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.945022098 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.302798704 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.891659002 seconds)
  done (took 52.669915121 seconds)
done (took 522.800758967 seconds)
SAVING RESULT...
DONE!
