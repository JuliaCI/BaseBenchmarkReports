cset: moving following pidspec: 10916
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.3366485 seconds)
loading group "string"... done (took 0.599385847 seconds)
loading group "linalg"... done (took 7.366279746 seconds)
loading group "parallel"... done (took 0.168013584 seconds)
loading group "find"... done (took 1.2441188 seconds)
loading group "tuple"... done (took 1.822050254 seconds)
loading group "dates"... done (took 1.459286917 seconds)
loading group "micro"... done (took 0.240560125 seconds)
loading group "io"... done (took 0.987611576 seconds)
loading group "scalar"... done (took 39.449140985 seconds)
loading group "sparse"... done (took 12.733818118 seconds)
loading group "broadcast"... done (took 0.995471584 seconds)
loading group "union"... done (took 13.570890752 seconds)
loading group "simd"... done (took 4.585676872 seconds)
loading group "random"... done (took 9.257730832 seconds)
loading group "problem"... done (took 1.988271277 seconds)
loading group "array"... done (took 21.903074685 seconds)
loading group "misc"... done (took 1.9855958 seconds)
loading group "sort"... done (took 3.316799457 seconds)
loading group "collection"... done (took 18.643338619 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.562813398 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144639916 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120624311 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143111131 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188814116 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13461826 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146175186 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087587642 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.901180856 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165432372 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144320863 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517457728 seconds)
done (took 5.031164115 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.204231868 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091763231 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098141947 seconds)
  done (took 0.910594517 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066952324 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132296918 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081860089 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069197161 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067724364 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082127849 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068148024 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067185891 seconds)
  done (took 1.296132569 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077637577 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072104837 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.088155908 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069284736 seconds)
  done (took 1.034377797 seconds)
done (took 4.245390288 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.927861328 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.243146163 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193563664 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467594459 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152454916 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190761589 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659029482 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324593977 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.220516901 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102872868 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107025228 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392990523 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108477519 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.656796105 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079526854 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.11114226 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161078441 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433720119 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082592624 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084149312 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104688718 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142011415 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103466488 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079985581 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171543473 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073239816 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.156906584 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097839999 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069528163 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.252126724 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191014793 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679218843 seconds)
  done (took 10.590496687 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10241369 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121920332 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069977714 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142811109 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12541772 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074376689 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074651832 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08559442 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094379561 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162726074 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118123892 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123757164 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068362752 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071254019 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103902393 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215154872 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109815954 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101538545 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074159945 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076694602 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1260436 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084544914 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097840645 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095631206 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.139511952 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196345862 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111431539 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113411493 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070555431 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099831745 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13142515 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134549548 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069380997 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087228709 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.162439531 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098635549 seconds)
  done (took 4.676279673 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.120603379 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.165726214 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093794252 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155433923 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087532095 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130234161 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067799583 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10119435 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253238659 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.10413635 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.494972123 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114288759 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105293951 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068933773 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.115185424 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088057337 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069052425 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.611925533 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146797316 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105069214 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103057605 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07470169 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088662485 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359415769 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070826402 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067203411 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085275016 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060427755 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148282833 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069535663 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.283826825 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088894233 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089977717 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120390429 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184586821 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099824306 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125208487 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083601764 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068045908 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175206688 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074717242 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084182796 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089902306 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121957744 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121997629 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070033049 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083575989 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184652713 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067414852 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101998058 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.978573851 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068737169 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168078959 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098252332 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085061231 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303082662 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089883636 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072206318 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083339048 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283257541 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.203765875 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086259206 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071107882 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068494166 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083708908 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071100014 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371953175 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067870777 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.000204305 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071315511 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077789884 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086732359 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068710744 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081893244 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074828554 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090968513 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086587096 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066385518 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086928297 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067875132 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083227136 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070331592 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102260206 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215151501 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068615828 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0678562 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083632562 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086420873 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114806829 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073332187 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083127312 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115881549 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07118328 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068627049 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122088221 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068611429 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105160355 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08508604 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115333823 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087459624 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.155051287 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069933214 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115550189 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074330344 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115742047 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099103923 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069269518 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.158222319 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.0654267 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084865363 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069273297 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066683469 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.088391047 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070760188 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10268476 seconds)
  done (took 21.842521296 seconds)
done (took 38.954376834 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.302127284 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09374075 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095375913 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07824082 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096067853 seconds)
  done (took 1.470084778 seconds)
done (took 2.243177173 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.139949916 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104465221 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081769132 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098550334 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064879528 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.12064857 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11779879 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082883489 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11829022 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065166817 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114698504 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065374525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080703356 seconds)
  done (took 2.062127378 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085494831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087204985 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086398853 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0820486 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080010362 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082565694 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080350059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105809055 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080889614 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089408033 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06570482 seconds)
  done (took 1.692635715 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083472991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084459467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085743833 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08168254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079990628 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081403434 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081170725 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102986999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08135645 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08911265 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065312723 seconds)
  done (took 1.68815281 seconds)
done (took 6.2064177 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081402636 seconds)
  done (took 0.845837314 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.738379126 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.782439034 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.100438847 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135938012 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.209775641 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.178416894 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.463153488 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.096873304 seconds)
  done (took 10.6647772 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104263042 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088698229 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071680835 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090025807 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071974697 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09009646 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073187733 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070381839 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087650366 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073483447 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086414784 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070796333 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085865573 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070265366 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072484088 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088730554 seconds)
  done (took 2.134644227 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095489502 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094555994 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092994583 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07774649 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091236354 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074852916 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09380543 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077259789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089176625 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075038873 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09325305 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076500928 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089424081 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067346864 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093575229 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078595629 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088706886 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076908749 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092674973 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077336711 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093121267 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06750277 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090077145 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07679578 seconds)
  done (took 2.907808327 seconds)
done (took 17.32321217 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.138488499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07859101 seconds)
  done (took 0.989150173 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085714746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099151459 seconds)
  done (took 0.96245799 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086915155 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082278234 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091862438 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095374558 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083498983 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06868831 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106160271 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068118135 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082921723 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069327207 seconds)
  done (took 1.612616242 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.073343314 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098263977 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074770519 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.10151044 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07662684 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082733067 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075821058 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085728059 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080772518 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080599031 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07452016 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101450856 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07416595 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103204555 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074958931 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087192574 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088835321 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069655787 seconds)
  done (took 2.285068328 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069695042 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069575479 seconds)
  done (took 0.922062205 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071075919 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066060631 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084745579 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067344577 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081359924 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065044906 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080525166 seconds)
  done (took 1.298657558 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.419029143 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111028822 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267234843 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074007316 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10742478 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266994392 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08537107 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073098713 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089637119 seconds)
  done (took 2.316316485 seconds)
done (took 11.164484864 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082709516 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087165833 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112740037 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.442520717 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108869519 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067548294 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145060327 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220363505 seconds)
done (took 2.048630912 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.132398593 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.652442212 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.432675617 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.217285103 seconds)
  done (took 2.089874681 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.398235821 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092095618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074723164 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068691668 seconds)
  done (took 1.421499146 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069599206 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071709998 seconds)
  done (took 0.931240859 seconds)
done (took 5.36403556 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070881784 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.102101441 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068218118 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067725086 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082682872 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.066248996 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068061089 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.085823418 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.065861019 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065042167 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083924967 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067983828 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.082801543 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.068226671 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06830379 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081352729 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065326065 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067381106 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08144989 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06530398 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065145146 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083435848 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065528282 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080617055 seconds)
  done (took 2.597436831 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089795127 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085562539 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073961567 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089867279 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07339369 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089705041 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074345843 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068823129 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090026813 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069624742 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088317337 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071887821 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086285961 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0730336 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08676201 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07285081 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089469768 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071557204 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070162685 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088553757 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073736095 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084242344 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072667006 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090105919 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072400245 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087925494 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071074949 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084676584 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074244034 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088679209 seconds)
  done (took 3.19325708 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074316948 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065143758 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082170768 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073347724 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065626913 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083303447 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066569333 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082328818 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067827586 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065906584 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083368712 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066009382 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065861178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083187795 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067356012 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085506445 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083171102 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066664533 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082252521 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06669132 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084858025 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06641959 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065775494 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08191159 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06566403 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065483509 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08149226 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066028215 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066290624 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082003624 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068509344 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084808362 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066116136 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073495447 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085374848 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065440977 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06942852 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08223531 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06616572 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06412139 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081401034 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065100883 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081420289 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072647659 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065303022 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08371197 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065235759 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065987306 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083077416 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067741235 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081739396 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066777517 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066859844 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082575263 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069471452 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081187929 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067812792 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065173659 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082834975 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065407997 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064711268 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081501632 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068129549 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066396639 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097426984 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07173682 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081743787 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067684966 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066014881 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083746115 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066799628 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095934234 seconds)
  done (took 6.095406212 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.12445945 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096385692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084881413 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067540252 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080872661 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066532682 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069041167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082025999 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067675347 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08826453 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065312395 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067758912 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084046114 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080708355 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081996525 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068113437 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088494596 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064365432 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065262949 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085708413 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066638245 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085707997 seconds)
  done (took 2.527126059 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.196644435 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091280165 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.115725232 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093583272 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085941145 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076258472 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087721429 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072247249 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072353837 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088261645 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070666739 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089101858 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06993837 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086456757 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070797231 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086824379 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07208166 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086605489 seconds)
  done (took 2.410442016 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081226137 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067396949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108158706 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067775111 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085242702 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070308742 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090576677 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076948667 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087142923 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068619466 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093376405 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070216204 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086832161 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068915185 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069799688 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084793141 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069802436 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084546349 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077356602 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090534553 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073053259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093184611 seconds)
  done (took 2.563924356 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085236572 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069593771 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103520069 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086765129 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064866889 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0660273 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092025859 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067997165 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091173071 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069836206 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068374295 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083837968 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072939569 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084111113 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072746057 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084144775 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071120447 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083761812 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070336781 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06405405 seconds)
  done (took 2.352780036 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092127138 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085989189 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069750097 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095791363 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069963623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086696214 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078098198 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086049711 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070339634 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111594122 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070492962 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086543595 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078558867 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09221385 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070215986 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095143615 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078118353 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094504929 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069767186 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086381512 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110803733 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070834505 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.20304324 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069674796 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085860825 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07060931 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069561437 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09197919 seconds)
  done (took 3.246057685 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069629933 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068460098 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082088508 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066677402 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065327485 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082204789 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066086307 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064963981 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084985389 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065513069 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067487686 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085001108 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068106281 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084462505 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068567793 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068106645 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084404766 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065709545 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065751587 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082298753 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068130191 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067740542 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084851996 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065806131 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081957361 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069394831 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066402487 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082437883 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068089465 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065727431 seconds)
  done (took 2.978784679 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080093133 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092429892 seconds)
  done (took 0.979286386 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068457895 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082959241 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082425566 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07167909 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089690927 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068148858 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093593121 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073013939 seconds)
  done (took 1.433714659 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086302214 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07901161 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086488332 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080612201 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096012244 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08479796 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159481398 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086483099 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075263115 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083521996 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082916927 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067973879 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09145521 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068634611 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091066753 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074419052 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065784889 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09054058 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070760478 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083903485 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070273467 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097176476 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071076167 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064970057 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086751709 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077037336 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097870193 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069460271 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088771107 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075639022 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09025261 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062413036 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068489038 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085874115 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066547825 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094655416 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084584207 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088608304 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078180301 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06883534 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097006148 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062956221 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090197691 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075154673 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095517865 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068615062 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086028257 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063973549 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065820863 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087572436 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064229297 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084566167 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064216728 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075373953 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088939289 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079206307 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083882611 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070002144 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0707284 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089297203 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07474622 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087234641 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071562357 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068341903 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092751354 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072057 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095896153 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063600411 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079154604 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066834248 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078435097 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109164804 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074952784 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08626609 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068994089 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083351127 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072442239 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08663238 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074715074 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07391367 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08543446 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074846874 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093112259 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068756657 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088030446 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076943353 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083297218 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070895186 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066702264 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102999642 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067172244 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083447207 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06663797 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095935337 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07197983 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068245326 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083599928 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076259203 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078529275 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070195947 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069579594 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086059461 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079177559 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091476376 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074065227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094607378 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076152631 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085567907 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071416706 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065325119 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086763014 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066955144 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092617312 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063280562 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071179071 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085939257 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069132742 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095064803 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067489234 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084924865 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076829373 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074520141 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084110333 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065115333 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088157624 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069053427 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072124427 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09429454 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067165084 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080599515 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063974114 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072001413 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086203782 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072147286 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090753437 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072503608 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079982622 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066905788 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072384974 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095456548 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068263083 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087100842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074834331 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086583947 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067976809 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073945999 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088305955 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067096512 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091653558 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069464323 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063511138 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089890811 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070995753 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084080404 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072991598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089008071 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071178367 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069294635 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084268695 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07432248 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086915369 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067927028 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067349269 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084240692 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07932287 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087939811 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064645711 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082473562 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076465426 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066187501 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085114419 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067952559 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087219453 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07046279 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066672418 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085761446 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0703524 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096805902 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07356439 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086800648 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074425465 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096735296 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068316506 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071262199 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085698035 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06964111 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086368742 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07834181 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073357243 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091156155 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070025492 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082974621 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075802596 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094877742 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068317796 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065799615 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085210268 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072264207 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092047976 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072554653 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086060985 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067266009 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0686009 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088973009 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071428669 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085412695 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06774906 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089578338 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068724863 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075325326 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08745085 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078766506 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089610665 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064319895 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089349938 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067475981 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074061571 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081116069 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066643903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084027136 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069894656 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067431688 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088860219 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063494913 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093262048 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076975037 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068082452 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085477102 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068171859 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092162908 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07059243 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07209641 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089481115 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074697605 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096252817 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067721954 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088405499 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079270552 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068211142 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080750179 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074248992 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084494981 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068563383 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067082742 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084664298 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071853202 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095204845 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075892856 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079490133 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07183661 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066119186 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085200835 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064369951 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090186554 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072623354 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069201552 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093189448 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069941547 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086977071 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073524352 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084878046 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069869783 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069715123 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089208077 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069421718 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088268507 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068801153 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071931271 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085185945 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066788556 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087882398 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069417646 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069221478 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092015436 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068146099 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085966662 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072078905 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070031143 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087215373 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069013576 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085314294 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072534309 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068717426 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086319955 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071362316 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081032698 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076494919 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068251885 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09428601 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069170749 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082669569 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07466183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088389874 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07429981 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068844532 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087734482 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069799023 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085823878 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071347645 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092626047 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067322793 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080000526 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094586747 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069152817 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088804114 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069054243 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069380116 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085601697 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06930476 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086909911 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068323164 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067736294 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090941549 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071435058 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086224088 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07099523 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086610984 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069735111 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069907974 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080807335 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068580792 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068269403 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085785547 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078362149 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086977245 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06828292 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084616148 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069808901 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0674301 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082802045 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076967816 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095942897 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068993072 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094135872 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068137098 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086513831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079594044 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065122841 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083921104 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06707583 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082965363 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07716449 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068530419 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09602473 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067690567 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085734376 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06560837 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068918692 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085595804 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063170551 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08364085 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073284446 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067898325 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085601146 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068890353 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088610501 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070563205 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096451686 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068596947 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069020788 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086564711 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066666899 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067447665 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085625052 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072059221 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087240625 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06651947 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065635393 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08677575 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069760815 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0874453 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068320535 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069736756 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093706413 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068322074 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089389095 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07242047 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062684254 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089930155 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068330122 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08578907 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067659078 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08926859 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073033447 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069458908 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096723173 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068202403 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086944489 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069004155 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066324811 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086438836 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068641875 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085822021 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068845882 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069626906 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095258009 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06584655 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089049624 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068940973 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068482138 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093938365 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069401275 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089467821 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076117494 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086718799 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071062486 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094766903 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07320597 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071883951 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087788733 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070574591 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092915167 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068444262 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092640892 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069945523 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069772483 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088760579 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066453414 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067922527 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087264586 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067800395 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093162187 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070190761 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085347792 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068561654 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066704636 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087666131 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072394981 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094270607 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071280279 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071826598 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082264509 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066317485 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087420072 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067071175 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070243717 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089465323 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074220771 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088925113 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06962148 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066842103 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095355573 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074446279 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090018303 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066455245 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089662465 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070255375 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070628691 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087415265 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068914601 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088441749 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072653983 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069194715 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086428175 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075809597 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090183016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069724571 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08715477 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070529044 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069521892 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081834249 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069971181 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069608381 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092213991 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070797703 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087001338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079814895 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083339694 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069039409 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071715519 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086367107 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072863048 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08201588 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070329535 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06883144 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088035835 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063413238 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086372711 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066962419 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069842562 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086067696 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064050208 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097454736 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078240129 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089368393 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06778747 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067413355 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082600642 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063464868 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086018434 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07100957 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07034207 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097295318 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067488368 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085250077 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064277352 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068511991 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088919658 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072102838 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083632949 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064956271 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067698252 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089893252 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074681901 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085307776 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069037732 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071697419 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089238152 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066742009 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090235675 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065860043 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071736768 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099934559 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069004952 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087077117 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075605394 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095044212 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069233354 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082027985 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070657461 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071326187 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087254731 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068969405 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087122299 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085378702 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089915817 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068225405 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067603289 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0903269 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068872071 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095259075 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069732132 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068883187 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091546365 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070689084 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095800264 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070787664 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095071107 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072171839 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090092659 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067726734 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068462051 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084888694 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067457821 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087814997 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070378848 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073052812 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094945035 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067655027 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098444303 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077692766 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088886726 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06607603 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067334919 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087285457 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06525386 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087649161 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06699903 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066877361 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08592442 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068095275 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086934866 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075187297 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069557284 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087351535 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068512962 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081076404 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071226123 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07096684 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087989981 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065615925 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086174488 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070115005 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071900052 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09087916 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066825328 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087763589 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070462721 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069429475 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082111815 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076418451 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085133194 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071972649 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068137394 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086920959 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070222168 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089927614 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074296524 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087965918 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07194519 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076632677 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089623207 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066221144 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083541781 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074177484 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065990704 seconds)
  done (took 47.330761117 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114581279 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085915534 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064524958 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08261749 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077806465 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084056776 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064871182 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064766594 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083035991 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067216749 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082266939 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06430327 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091934193 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08989036 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096080097 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086855285 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064484586 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064876419 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082118281 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06562241 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092375525 seconds)
  done (took 2.524122733 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.09099021 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10304343 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079008934 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10147211 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092286637 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080561452 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097364164 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079747492 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101700514 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093750845 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083456528 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099335575 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075892951 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095108983 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075975204 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095471769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101448455 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074127545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098545141 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079745296 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096349325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079623988 seconds)
  done (took 2.82604975 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071237857 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069640444 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098863708 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063438333 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067470773 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082015063 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072827067 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084261206 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072072288 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06672218 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085686429 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067027931 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087062239 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066416676 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068031399 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084379676 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.136043089 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072312978 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066885059 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088131744 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063113982 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089375192 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063605207 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063887444 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.086123567 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071839129 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086945883 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066950516 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066699778 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08576996 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067873848 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084376622 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07015608 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068356957 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085524212 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067333945 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066832999 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086208325 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063850701 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084539631 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069272402 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063576432 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087055121 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069582066 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083953645 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066260254 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069635042 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086486876 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063518399 seconds)
  done (took 4.576215194 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08942153 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13260892 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089530368 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110918866 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08501075 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095228343 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072113299 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11332574 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066375843 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.0868978 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084990849 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104146253 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087618455 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072643721 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093473668 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068709669 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087567189 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067192696 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090386264 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068222879 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090374234 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075441775 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101929145 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081928823 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090516984 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067608417 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086170562 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073141755 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10095948 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073319088 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092173361 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074111638 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102717544 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092394008 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0677056 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070440961 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104306261 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087107801 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071683519 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065116129 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089213474 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071912144 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093500903 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103778899 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069195276 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09215817 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06921951 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06482592 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100539673 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070952328 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096636404 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10320429 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072816618 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087295729 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073714913 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103329407 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068758428 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08528321 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071670666 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101178498 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06584189 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091308559 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083920252 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089350438 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075943653 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102828816 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092167778 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073171668 seconds)
  done (took 6.785674965 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079866927 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094753666 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084020384 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103384494 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094077911 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075202531 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093555478 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074320767 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093568969 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081150344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094014486 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11641897 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070898669 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097717133 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075910053 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095026686 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074901992 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094460589 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075051716 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094815711 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094230915 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085163773 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094635105 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102147979 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107061331 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088917033 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075458043 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093671575 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083529335 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094249293 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107199197 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075078152 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094260976 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102461194 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088808024 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09448811 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067683899 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094556294 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075447349 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093651984 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069998774 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10333437 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074224524 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089753365 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074841357 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094402889 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10316711 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.0878354 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097146252 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099557575 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075335214 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102593528 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074350879 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094391435 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102916101 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109285091 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102269437 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102479604 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07533116 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101469009 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103460271 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110156177 seconds)
  done (took 6.490328924 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092673609 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097688731 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099563656 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065111105 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066268327 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092528294 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065995406 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084645997 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07821421 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096275268 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08023531 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09108476 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075309924 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098928144 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091320254 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07693125 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092421582 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072876646 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096903056 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072854335 seconds)
  done (took 2.553824321 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079543517 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106618395 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069427979 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095071116 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071813524 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07460409 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09117333 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071655411 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088495081 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071859777 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098672131 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080752437 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088710155 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075729349 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098790466 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075069943 seconds)
  done (took 2.20755338 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08349513 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09930977 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083433061 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088102413 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066718303 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084219812 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068620934 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064512248 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084937531 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082911132 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088202116 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070394551 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087698897 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066990433 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064762928 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091810217 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064564534 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08544413 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068585279 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102761163 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079470216 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086354227 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068878183 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069898489 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089329466 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073485621 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089010044 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066400166 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086291379 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068842897 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087961232 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076294001 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084491094 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067289953 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066840165 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085736191 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067809963 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087889835 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072033252 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085784768 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067825685 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067704781 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0873468 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068979136 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083565521 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06883743 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064674029 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093362975 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066899151 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087890609 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069393924 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089520316 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069864119 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097855722 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072433656 seconds)
  done (took 5.185643725 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084918142 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071458097 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084432668 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065635354 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089934554 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070123243 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070728254 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089520823 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069392179 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085562251 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071096197 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089381704 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071147638 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071568393 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089374184 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071434868 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082646389 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071348081 seconds)
  done (took 2.274257056 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076261835 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067905571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095853276 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067908942 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087155095 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0710473 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064158621 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087454479 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066345779 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086862581 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068990918 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070198294 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086891505 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070513926 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087108801 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069178481 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070098409 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085689828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069166041 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08317656 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071624506 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066315696 seconds)
  done (took 2.545676998 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076106752 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094445981 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165567665 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110432179 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084608517 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101600915 seconds)
  done (took 1.509942151 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094848228 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101585523 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069038406 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108479015 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077039124 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089586164 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070925344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089859268 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080356215 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104283857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071076628 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099161581 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098877817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082775427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096038744 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075543638 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090122477 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07057136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088852621 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108395027 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071263044 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097817017 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07146496 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089957028 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071097606 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099023632 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079690736 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104465861 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089904764 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079391064 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096549441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070211569 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099994023 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103996846 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072424708 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099380773 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071240652 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109913602 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076668456 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0988779 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090750787 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077939481 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099141731 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076085508 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099859583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070969994 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095457618 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06976507 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09089894 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117121074 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077096375 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098980988 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096405434 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081396535 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099025819 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11641817 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085945548 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09841786 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096209047 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084902776 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099478142 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096188752 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080108322 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104939052 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076978726 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098728004 seconds)
  done (took 6.777443401 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087282446 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108110613 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071649356 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104268357 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098625945 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071647352 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090172182 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071369615 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089893976 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07094644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134225612 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070952382 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099015816 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099153169 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072182764 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090372177 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071737251 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099163718 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070840376 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11652443 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090604784 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079380951 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098732212 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099268618 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085588149 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09704061 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07048952 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089731119 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070781686 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090647703 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076077382 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090749569 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098779364 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070616786 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099873458 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070899542 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090333301 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077632452 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090494053 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076820512 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099636985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110051751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071603008 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091246482 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084760062 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090312284 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071056285 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090540445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070495733 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091237102 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105095731 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086460284 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105239026 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099314611 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071582055 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090104427 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07202614 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089510637 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071388329 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096774493 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08008859 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09086669 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116748186 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071644629 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091471465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080287527 seconds)
  done (took 6.675108315 seconds)
done (took 131.430612326 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208434971 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.189689356 seconds)
  done (took 1.275581916 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072542736 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097879255 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100063015 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130121835 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089107879 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10183391 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121006962 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081520662 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068453058 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0887514 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069522358 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089252581 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13410152 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068896601 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088262525 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070609794 seconds)
  done (took 2.355755349 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108669704 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201315307 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111718157 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067049345 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102153982 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080750206 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087708967 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08029953 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093545194 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067582773 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080444691 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098650832 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066408008 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098431947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073923526 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100615689 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066699433 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099981899 seconds)
  done (took 2.572671398 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111109837 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14616012 seconds)
  done (took 1.141347319 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.208265183 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124927878 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209619377 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.46682625 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.263798941 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283292577 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180061034 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17910455 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154561576 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176299652 seconds)
  done (took 3.127225704 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103182813 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17629764 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321770683 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141775973 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090969721 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12026005 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142562707 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.111528503 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085549043 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104697799 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084168955 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09988007 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122189704 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077671009 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09654365 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079550818 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12412487 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075927434 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096637893 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078374771 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120689261 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068414056 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097309228 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075492723 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100787166 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081694246 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087089366 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068121888 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077725944 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096769206 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081456694 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117743938 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100953717 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.137281247 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103365122 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.138021045 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07977822 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094346266 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077538233 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094101782 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081183492 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098831304 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087251903 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09938804 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067580092 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098736677 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06804802 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067768693 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102411146 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079661451 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.102571937 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100077108 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.136832193 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.080537862 seconds)
  done (took 6.392788672 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.773109657 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137083366 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073901585 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.838958757 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117963749 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086659786 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.762361631 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097372336 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213536241 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.79041793 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089325268 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104390075 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212291482 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.224271656 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940491027 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.2750154 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672926277 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.084592903 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.134441513 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136443901 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145800592 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160132837 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.174458455 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.410930638 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.079389548 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07235938 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.164128651 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.080266076 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143578746 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107968356 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075107076 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181531 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.235428216 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.16437847 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098543345 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072197242 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092043279 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153759978 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225402208 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197691372 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16229025 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070148668 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091985154 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146527587 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134100315 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068938686 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145654533 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17891777 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.156042664 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076075763 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100262457 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147979642 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145384673 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147703137 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105117638 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.299606911 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.271557841 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093186772 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124345202 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.08631602 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242855133 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08499172 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207107047 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142447333 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19336474 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072208691 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756721161 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154024631 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071647612 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098449177 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124758107 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077694269 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142443904 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148633797 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373216701 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147842444 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096355018 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0716061 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221250719 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08728168 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09224187 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146265972 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07861692 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12803694 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150305051 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.172571009 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153395179 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.219062873 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148643548 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163852013 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07753701 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128494813 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076082344 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21402334 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.180369224 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.144593061 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210615315 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145900912 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147556951 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.152598659 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100114291 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.157877852 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1231012 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083894084 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142239657 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199002731 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127253741 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104616147 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07635309 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143323642 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1299968 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109243805 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145609903 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.154001681 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.436261725 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172731593 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06965076 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108789633 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146863521 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146053456 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076599268 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241120609 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127822293 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.15258735 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126070421 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0694901 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124414123 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166663495 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082864888 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126762112 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143377659 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099877834 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219640172 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196764874 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082473531 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221619528 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.144998738 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099814352 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154278299 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1239524 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150708324 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101077173 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143991364 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076854239 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768904215 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148989703 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12603296 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096535899 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148501399 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093385365 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084677522 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107879393 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068758379 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757908326 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087297049 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104741835 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105315805 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077992846 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124942815 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141042331 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096739176 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144985969 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21059979 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07945522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123173273 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105164686 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143859346 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077059065 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10755009 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084150827 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106932436 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127105243 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094457558 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086544951 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151513199 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145034557 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201108433 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570557401 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074025652 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106405717 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.187284463 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093182969 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247157424 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162811885 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.187855885 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146261763 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103369178 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289791906 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147827563 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169540044 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089334167 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156228499 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09082412 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143280315 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148209957 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09265883 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078943258 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.145536879 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168829167 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150199724 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.920391703 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093653019 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208155686 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06872685 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175276895 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0788796 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09929054 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.257253395 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092339157 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.154647256 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147554215 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096563617 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086665455 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701647641 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087482918 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142890316 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098967316 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203262037 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147712072 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143387499 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143546774 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100743544 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145800495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.192229945 seconds)
  done (took 41.496328396 seconds)
done (took 59.247510048 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276265701 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.188707914 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255268769 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148995727 seconds)
  done (took 1.859087993 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.153088219 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107181556 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119879368 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087163098 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106841478 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087935466 seconds)
  done (took 1.573416866 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.442653912 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280149176 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.2401193 seconds)
  done (took 1.875486389 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.299309801 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.219538626 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461680479 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306696434 seconds)
  done (took 2.309546202 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.186031141 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117548789 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068196179 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107792159 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165228333 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266935447 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131767656 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194201136 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080840713 seconds)
  done (took 2.278790716 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.203745791 seconds)
done (took 11.014578248 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.274133247 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.148166485 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126861187 seconds)
    (4/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.155850131 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.302870132 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.172438934 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.250620693 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.202335653 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107180843 seconds)
    (10/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082491143 seconds)
    (11/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117202741 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.178564659 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.204918933 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081230325 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.193201369 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078502382 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099175914 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080654989 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.136738442 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075318901 seconds)
    (21/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199177145 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.273173763 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119648657 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075863403 seconds)
    (25/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073651596 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.26212711 seconds)
    (27/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.256113454 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067829609 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111987367 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068738182 seconds)
    (31/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.174522572 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.241457951 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.262352595 seconds)
    (34/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.269524581 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.295755795 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.257513689 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.272098148 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116941767 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096140045 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172267574 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112155107 seconds)
    (42/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073098255 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118506368 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.253953858 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099224816 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.264485526 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203966975 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123173989 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079335326 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.283505351 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.139221714 seconds)
    (52/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077982756 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075558934 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098069636 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068499981 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075702066 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077512467 seconds)
    (58/309) benchmarking ("sort", Int8, false)...
    done (took 0.168722696 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.22115004 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141587818 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.101252086 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069504647 seconds)
    (63/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.075534056 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.240407684 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104373015 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054127673 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.218168113 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.075876294 seconds)
    (69/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.114714324 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.115883845 seconds)
    (71/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.113506047 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077849212 seconds)
    (73/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.222281792 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122029518 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074200953 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.091346434 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073040207 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.271848263 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121228704 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103168 seconds)
    (81/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124323716 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.243476979 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056287333 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073652609 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052740586 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116553865 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078118559 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.140983657 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110369841 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.092319316 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110515964 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098494811 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090741954 seconds)
    (94/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.097532276 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12429249 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.073933691 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067862458 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075995381 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11476379 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.204985068 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098077817 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089101471 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079194543 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.245541506 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076092896 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096727378 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068616892 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05360429 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117182908 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064018847 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.256858876 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199633247 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149553433 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096243774 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054790046 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100592141 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.10061896 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06774098 seconds)
    (119/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.101989631 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.163192933 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077238445 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053281366 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097840085 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067884983 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066788697 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.101344918 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074291218 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117775258 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053001534 seconds)
    (130/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099981757 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077212624 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11250158 seconds)
    (133/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074189064 seconds)
    (134/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068088014 seconds)
    (135/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.158544031 seconds)
    (136/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.10023053 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076784453 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068202928 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06707485 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097919225 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072139691 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.255637421 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.16030827 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054328545 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067767312 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.150643238 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075801163 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.077601549 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.224098155 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107695377 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076151795 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075280983 seconds)
    (153/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068617009 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.264588219 seconds)
    (155/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143662785 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175176733 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091529679 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069321911 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092247455 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111850517 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.09048509 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055419223 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07891314 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119377779 seconds)
    (165/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082608186 seconds)
    (166/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214725878 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.076153217 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136724846 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097787656 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068416958 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054149722 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.130238651 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067737531 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097494519 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053664504 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082870534 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076628175 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.153706309 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092446488 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07674139 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104802147 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067952054 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.169172914 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053543515 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054634574 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.323622161 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109859429 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116644199 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054320208 seconds)
    (190/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.118387574 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074541219 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071376384 seconds)
    (193/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.076906738 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 0.131484385 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089717637 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055067551 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054552654 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054286222 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113371599 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113373911 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163535384 seconds)
    (202/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097783483 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077498763 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075556705 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.077211567 seconds)
    (206/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099349006 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069043487 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.076227331 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05321387 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052606214 seconds)
    (211/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.084681154 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.078088353 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072510474 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090571126 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074214598 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113885777 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064776316 seconds)
    (218/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074227196 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.104958212 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067579119 seconds)
    (221/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05366928 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097048004 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066484829 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172877004 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193300221 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073641503 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068659678 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126235641 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167194226 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076734718 seconds)
    (231/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08238014 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.241309729 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.121787404 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053474878 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053003005 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076976433 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098223166 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109063619 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071560921 seconds)
    (240/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.166097026 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054366829 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053235958 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05247033 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093910407 seconds)
    (245/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062579931 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063501865 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096846617 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067778308 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066869037 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08597112 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053233634 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053241602 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09294754 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074309466 seconds)
    (255/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062767236 seconds)
    (256/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095998584 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076375549 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052966514 seconds)
    (259/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089645606 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05331394 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074248215 seconds)
    (262/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104284703 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069445393 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.113403142 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.0551823 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196120153 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054626901 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052284166 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090688009 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092415969 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114006346 seconds)
    (272/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055063211 seconds)
    (273/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.102328897 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134199045 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11974392 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076175024 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.242693795 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087049448 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.167312217 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066184698 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090413516 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062625695 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068753142 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09892565 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054558231 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0670651 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078307213 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05491825 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067697745 seconds)
    (290/309) benchmarking ("sort", Float64, false)...
    done (took 0.152980223 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155086406 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073099923 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14006086 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068248782 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.076697004 seconds)
    (296/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072493026 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075390273 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097186646 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068919601 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052879484 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091007882 seconds)
    (302/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06238334 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052244245 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076609077 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074080814 seconds)
    (306/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070703608 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.118671562 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06847502 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075860932 seconds)
  done (took 35.584087515 seconds)
done (took 36.503675265 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08611153 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118882086 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077799829 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118205797 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084481888 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103197323 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076034638 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103113758 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084096837 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106148885 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08303683 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056005119 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100335809 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077415327 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099947658 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095571385 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103758985 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075256488 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075362633 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090947257 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075452703 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089792033 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070309072 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055995578 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102999609 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075332956 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096464403 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077894459 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067273979 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090595994 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071311312 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074653396 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089924551 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081226461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095850792 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076338326 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099505353 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080841349 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068642249 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089766026 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075791904 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066512809 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096917049 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076097101 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095626012 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073941643 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076409679 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104247862 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094458191 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092944922 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075654463 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101495634 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079911307 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073236346 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095693796 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075952355 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09573047 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095481737 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09917135 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070487685 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074772399 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.0998363 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073903381 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098482981 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07678429 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076939276 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10244006 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073608615 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.102678324 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07425899 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09135306 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077638849 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070594565 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092075313 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079111385 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077611701 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089736249 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073584832 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097161191 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074491529 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067337463 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092277467 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069940514 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073117933 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093370843 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056587048 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070629152 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097272166 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067748167 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098972537 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074593254 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074657425 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092681561 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079595935 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089394757 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074042717 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067719506 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0903009 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070557606 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070997235 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.09050235 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070445848 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076508748 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092741497 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073947005 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105857312 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067903205 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073861281 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090776345 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068150713 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107483488 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079228278 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067680569 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094290684 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067837863 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.097332596 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068308906 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067210162 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090102031 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068273709 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07400525 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.090957477 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069897534 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073723409 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104395808 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069847279 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.093440402 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07008583 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067128697 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.096745523 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069238986 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066663437 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093162766 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065297055 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069196663 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.09163737 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075620041 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092870826 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076776206 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069231365 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099843756 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073301057 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09552564 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073865654 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06657117 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.082667538 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07073134 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069970044 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.092643005 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068368209 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068837784 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090718491 seconds)
done (took 13.529394859 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070589324 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179585791 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.133308811 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100746692 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113801074 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067667447 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103109681 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132733243 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070887774 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.130907708 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090713041 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110469445 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118645734 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091010607 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068039782 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093789954 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070377381 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115765815 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.105930909 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.111792159 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147448459 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068254834 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124752128 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093560288 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.116619338 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121311647 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069275231 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072036629 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.095619444 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106371055 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.112467347 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071961603 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090296531 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105619346 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121371965 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089163478 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091827604 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087092313 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091629494 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068817797 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119458444 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127389699 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085644559 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.107918453 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072644152 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070182326 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092998332 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088778738 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117826451 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.107026027 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.091490631 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139406513 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.095127172 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086496738 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.090758085 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090935788 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.109074126 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070334297 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.090980971 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070681323 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067651032 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.094698392 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.092300767 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1200836 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070932413 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.109417051 seconds)
  done (took 7.470826163 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089841987 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.121725093 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088346315 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109763182 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068400855 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068214406 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092211139 seconds)
  done (took 1.613741528 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072150219 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091212591 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115622929 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092669013 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111977984 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089903097 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102438503 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068829924 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110006761 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070632154 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112454755 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108688146 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093358692 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077394045 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117252913 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069829474 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092379701 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092695258 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071735103 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11647139 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072306494 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113561715 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071841964 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069448706 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108160274 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069245594 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141532508 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074108769 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093132411 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072940188 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066975743 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144750243 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106872664 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080931487 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068337523 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108049926 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083888177 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091307907 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086568621 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097706513 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084937723 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068637861 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094311568 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067501312 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096347303 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080584171 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070293606 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094031107 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072065756 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11257877 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070685875 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082700228 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093331048 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073843414 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.092932994 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076057477 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079109 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093775128 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09070002 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093461651 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087277842 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109542183 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084620292 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085489198 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095635715 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083278795 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10842051 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071994421 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093539651 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073652899 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086214103 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.091430791 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071015253 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103561615 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071482434 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092849452 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.117417187 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070443581 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103333319 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069533276 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0697574 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094386478 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092334609 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096819007 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069777475 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095149905 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073660252 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067062045 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090961222 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073601901 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067799895 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.094715294 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072708621 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06877264 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095765942 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086249127 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093599316 seconds)
  done (took 9.54253029 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072552495 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06999502 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094686323 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070194062 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069254634 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094344437 seconds)
  done (took 1.459408249 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.104297175 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096349664 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083588618 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097790191 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110272168 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107474943 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085145874 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110471345 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086795481 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105783109 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084458667 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109274593 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090153411 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099894036 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084099782 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09928209 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08580392 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103395717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081959576 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09915494 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092173469 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099148019 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076934969 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110164244 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073747615 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074685385 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103920771 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081736377 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105978141 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085262383 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099434494 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072371461 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098826963 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085217418 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10940665 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074496568 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099778261 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073681056 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104143735 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072948173 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109018835 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077445601 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.104645934 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074673097 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109367439 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074644493 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096923783 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080526188 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.107944066 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074654801 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073166799 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09937236 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073224767 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.098499575 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074699703 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109939317 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074499945 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108603832 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076016727 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097974197 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073178072 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072414904 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110068797 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095444126 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084648524 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09623011 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075619923 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075910996 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100732052 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075328525 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097624608 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073504547 seconds)
  done (took 7.537884895 seconds)
done (took 28.593968983 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.664577399 seconds)
  done (took 1.650481873 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.804491645 seconds)
  done (took 1.793452253 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.529092557 seconds)
  done (took 16.523822228 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.663233616 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.827384922 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.857319297 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164003647 seconds)
  done (took 3.498393863 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.893988656 seconds)
  done (took 1.90327387 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251171538 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261327462 seconds)
  done (took 1.505385338 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.750387141 seconds)
  done (took 1.750247545 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.303004427 seconds)
  done (took 2.297998363 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348544995 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192659356 seconds)
  done (took 1.547235566 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53506086 seconds)
  done (took 1.53814934 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.628262983 seconds)
  done (took 7.63645606 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239608205 seconds)
  done (took 1.256880247 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.281291921 seconds)
  done (took 1.287055261 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.260605444 seconds)
  done (took 4.266431595 seconds)
done (took 49.455156314 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083234828 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083078016 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107642428 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080421849 seconds)
  done (took 1.357502326 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083335524 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074980856 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104163645 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074603882 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103975097 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075685635 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100383754 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080825406 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073848419 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100721036 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075195642 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098110027 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078585054 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099717292 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073320631 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077144721 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103027016 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075298061 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102552183 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07576574 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07187165 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102229654 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078277212 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098184173 seconds)
  done (took 3.097547698 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082599156 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074290442 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101089574 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074329662 seconds)
  done (took 1.343334703 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082507309 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117874742 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092894636 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.102584576 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096636967 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113249345 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072082153 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071451574 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098345594 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07966011 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092932842 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102473596 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114140515 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07872004 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104496347 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06945079 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069500462 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114579247 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078435351 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104617268 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07278012 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102005737 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070610461 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092337811 seconds)
  done (took 3.211037658 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08250683 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105875988 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105620684 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091064559 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.119136615 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066812566 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104237951 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09301661 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154562498 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066885176 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09767906 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067797215 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098254553 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069127971 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078161725 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136824383 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.138217158 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071076976 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099765936 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091723317 seconds)
  done (took 2.957032437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079615679 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071386868 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091458223 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070955588 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077648882 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099011223 seconds)
  done (took 1.508136644 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073076646 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069589318 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092412728 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06974965 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073466899 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092934752 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068804452 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06777883 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093460704 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069803647 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067407927 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092679545 seconds)
  done (took 1.946917363 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.462725315 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071740261 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094486041 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068923187 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07307635 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092647937 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083648251 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068706974 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118878561 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068359737 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092727093 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071751549 seconds)
  done (took 2.38793179 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278066557 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080680253 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.341043917 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174410758 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142694098 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161577638 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106904434 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143947 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206487756 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143360758 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208687346 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2316463 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138085465 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174068637 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117025857 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.135712381 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192607038 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231887608 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136993445 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212722699 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219118277 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164549727 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189864588 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135640258 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140814494 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149659477 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.097018674 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084421778 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24235767 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166624902 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209973808 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142955275 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123707979 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215844468 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23272427 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206540913 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170942167 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089935978 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.160796012 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170109467 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269310512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119645341 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227692513 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114843753 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10889859 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178724566 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150737845 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151079684 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141134343 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117097702 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18090301 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248942151 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19751601 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090867737 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140250318 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143684115 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147766962 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131301012 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256619459 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202849139 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194944079 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073872019 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124974309 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195047846 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164434885 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145230667 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186302269 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098973976 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201177753 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196996474 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149726563 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208193474 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.167612934 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117604928 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151499227 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177325192 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158817256 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238076677 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159396925 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074882599 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180716446 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107048956 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109085874 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171946542 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079560747 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243286524 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12847555 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.142868047 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118143168 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139415909 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140865364 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230094572 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188998366 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135309009 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067110216 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135081104 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153387313 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209570299 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091210996 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139407553 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152338026 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107011412 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172805531 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102083112 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158825517 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082280144 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157396228 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190948948 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080107446 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157392082 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130638193 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105714228 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195123804 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201366174 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119425319 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109710894 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212600302 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16014806 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135984224 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209596147 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202050459 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.134181196 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131273827 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183527741 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253550854 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121042772 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234866791 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110189303 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111953501 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115746057 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160042708 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14450172 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154944796 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086671682 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158108844 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235187956 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100890295 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09994025 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170841173 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110400871 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108770675 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14508137 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10455915 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123787053 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130078528 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139501859 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175763664 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158676758 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138419436 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159162813 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1288876 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233484752 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120352662 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10880492 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13424755 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095930642 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171518572 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199543128 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108473981 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236312525 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160894104 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133773631 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152587578 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087146295 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175560303 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107813564 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073390496 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205244363 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142712962 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115419032 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217702372 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133583854 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160676732 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158412441 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168860024 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165856407 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194504851 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111588728 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117175474 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144846792 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160801832 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101510433 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.099372983 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111855215 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134736697 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124589287 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087793412 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177412731 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186881455 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102027635 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144434256 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127973334 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186958499 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105371372 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16481913 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152349019 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125161959 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.193579434 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223998596 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170716 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131097573 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209457116 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073984788 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07635525 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120070098 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163263771 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111958463 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087479062 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14872871 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214441223 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163448165 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171195096 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142259812 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155211867 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223116779 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074605153 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146603558 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188848042 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158718965 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.159834364 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119106564 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103859286 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208462822 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109891145 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28868487 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149217732 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157261503 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189672015 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13486797 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107594454 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108795862 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20068323 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136711089 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19225458 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130313971 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117440433 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142023645 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084516786 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135327933 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161523061 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15245586 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198500836 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155823324 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170055101 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079982142 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174982425 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158357652 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154984678 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067310049 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153114443 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233468775 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128017575 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153067512 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195346927 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108112785 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156236526 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249329053 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183163747 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113254652 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139363136 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154099907 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164735391 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152616472 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175974573 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141035345 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169139547 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142053588 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113021836 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092444481 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128105161 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138250472 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098906902 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.171712608 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150839179 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099054748 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192377799 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14522124 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116082835 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151299471 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127393765 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119450304 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102065091 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244752893 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155192981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243896965 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131184422 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187938567 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239228451 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104218273 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082906006 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109284583 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178124975 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08790255 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197010017 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10035648 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136396095 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160457876 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206845227 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099796944 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096682244 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141319836 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169980458 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141423109 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10307476 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13714285 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232189563 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134726475 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083482307 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157458492 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134524376 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133796678 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246104089 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064478973 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127020885 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079093238 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109123949 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163936152 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195138347 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112212266 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155761676 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153945202 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156283436 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164352937 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13097245 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101710031 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143955492 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212655401 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163818614 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118673191 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118855169 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192357563 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196656089 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136760049 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125317803 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239216638 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195827343 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.230753741 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11764386 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149755422 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148189574 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145201868 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180856785 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112500041 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207155741 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113361834 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171480124 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150697838 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123915131 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162947377 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127211279 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117617284 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188323729 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152885501 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11121035 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083428521 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146235082 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155109678 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133264831 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10381074 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175096889 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100678444 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174100998 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238346524 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085346873 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137933074 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125875003 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085630633 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138705232 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13372805 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116147119 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123987312 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239627022 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121053113 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189049275 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205732668 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147002063 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173644122 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132318312 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667382812 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107328642 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194915442 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15135358 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247078245 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12892364 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151724421 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142404411 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156035728 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20512662 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112691759 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208179434 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166932759 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181906159 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082427453 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134853657 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144786216 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118635147 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137679746 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122034465 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147267699 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131776493 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155301345 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192079629 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086188365 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126019554 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197694363 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15064993 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206370499 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176270482 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114691451 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15293425 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179184714 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109374222 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156764677 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223898849 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14024363 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103972833 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110838141 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138558311 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241332275 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07682988 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230573321 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159638806 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142744292 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146935621 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.154212788 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168973326 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13753774 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184782944 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101272884 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.144901935 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148086114 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114976065 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080032639 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137777759 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145155685 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129749298 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134119888 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124597445 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217255856 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074405303 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125580343 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134083694 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179943008 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250308456 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119768544 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087122917 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150626339 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144830663 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14974012 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158295541 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111466381 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111601551 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086486941 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.141196362 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14244985 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124287951 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134067435 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143849791 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236607951 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086508099 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.259321613 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125976813 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141674711 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071517103 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109236835 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100578715 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126031551 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136452837 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127972472 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213851228 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.126968486 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121432941 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097657473 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.102109921 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086176932 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192507806 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145595215 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15956828 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102815618 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.091695355 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140976989 seconds)
  done (took 73.769081828 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140997639 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10630247 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121836603 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176897732 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151323264 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244978361 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184170925 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22965647 seconds)
  done (took 2.45392124 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073539691 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.12241217 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105817381 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118865865 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094195591 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070759668 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.311031433 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112370231 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068850224 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119078004 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122948518 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094233988 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.489405267 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067259117 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095852102 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.087390479 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070746289 seconds)
  done (took 3.313135673 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.457630576 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.63672045 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.472618175 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074792836 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.898306195 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090572102 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.363730145 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163041594 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073007825 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.43138068 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.747193646 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13094819 seconds)
  done (took 17.637604614 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079156163 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071570015 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111695585 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085934408 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100129848 seconds)
  done (took 1.557343163 seconds)
done (took 117.54137069 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083867024 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.375753933 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054753352 seconds)
  done (took 1.566427031 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087567265 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086704358 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113190527 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08537614 seconds)
  done (took 1.482361755 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078900415 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078567692 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113426414 seconds)
  done (took 1.377509187 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.296596558 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169238733 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092223286 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086817616 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079937152 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106050929 seconds)
  done (took 1.382103915 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077172219 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078556571 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101257285 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078901548 seconds)
  done (took 1.435549595 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080587094 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055920775 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056585737 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084544001 seconds)
  done (took 1.383666736 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095162039 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.111034185 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08593639 seconds)
  done (took 1.39477159 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114886893 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118056157 seconds)
  done (took 1.340798061 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08712057 seconds)
  done (took 1.189587645 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.0989116 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14558247 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.167372184 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.14158606 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.17603511 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.141273974 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089253247 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118907183 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106347478 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092026681 seconds)
  done (took 2.38565124 seconds)
done (took 16.677002922 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083608119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.395674624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363032424 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119954575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671563286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357997097 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053197165 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122109265 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127685876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096948512 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086121614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677463728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980953241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352070515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967929032 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325781439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676541558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070043001 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096272662 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071038035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.037210908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07014244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069929445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096344731 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651201766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.399616855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070310853 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325837439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096230458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072044955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356867625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096348339 seconds)
  done (took 16.135488591 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074845355 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146796769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076277009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086529004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099590288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072136905 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100531979 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071675173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157820402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070742029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114009191 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070171514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100836253 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07125678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08935636 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097924566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071146377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096496938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070711896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070758972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115564451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070126718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096206075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071267926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070751406 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108777387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071061698 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09608075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070700588 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072433244 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100079492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070827555 seconds)
  done (took 3.935886879 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120353837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157912992 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077272499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132172739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.142323438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072633939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174555787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097191788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15913543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069788424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114556783 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070169396 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131257121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070994449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116765054 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070620932 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096783588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070299483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070275273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09674677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089535091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09610209 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070307317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071106359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096964713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083735576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096903174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07348823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070843949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098270541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074084988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097552953 seconds)
  done (took 4.247399421 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076265472 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077581816 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111463069 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085942416 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097929204 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074349119 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074618188 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098744248 seconds)
  done (took 1.80860803 seconds)
done (took 27.234180007 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082510129 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071830113 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102513191 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083022995 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100928122 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081579374 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069649931 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10377 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076850591 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075196482 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105105179 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070204544 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099567583 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068974575 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076431503 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096938116 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081664152 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100172067 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08254252 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.108410502 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071913123 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077625163 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102650836 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08233143 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108194204 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081708168 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08134774 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103495453 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071404262 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099170286 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079227424 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113066681 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07071339 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08156611 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097499672 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070168275 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069299372 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096235051 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082037459 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104223636 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072551991 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105046347 seconds)
  done (took 4.764745488 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093783585 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092667716 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115067864 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064497775 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098342351 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063452236 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091421348 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090382669 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061287629 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.118157793 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056858155 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059742267 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.060522064 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.083304026 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058874785 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058233958 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089256951 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058395997 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059302162 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058898694 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086651773 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055866463 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061903969 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.088481778 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057768656 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063400246 seconds)
  done (took 3.061821855 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078982676 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085015908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11829374 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130476347 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135609282 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077227405 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108905476 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087828703 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114545129 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068835581 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074042056 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126511942 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088322683 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103712681 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070241066 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112021774 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084966041 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07151559 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104201106 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09130359 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114047609 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080049463 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090798216 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.109511945 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069301683 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099265972 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073230929 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082889379 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.102291915 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079233472 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101332711 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073837308 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098561121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081762174 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074239048 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.099078318 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089398372 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107226499 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078949562 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070538355 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101288529 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070849371 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118167154 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11465337 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096569712 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076522877 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077574131 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107190688 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070098263 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115625307 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079194444 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069234006 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.100362695 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069136858 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069658153 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11025861 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072418307 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.109168441 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079188326 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099670034 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082356822 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073672886 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113131118 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069223834 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10472375 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068874415 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070224017 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095802058 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092164513 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097327973 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110511436 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070163534 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098589254 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078701214 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104680461 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075381256 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069648295 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112723157 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079756106 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101075179 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078338629 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099882923 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072356526 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088041207 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099149336 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070992853 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071270994 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103319005 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07374501 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097437424 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083700513 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070250303 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100286362 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08822288 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096457649 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071120613 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076030838 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102478041 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069601131 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109746846 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074697223 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069948427 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106392234 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070001557 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099884106 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079300414 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074409312 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096561585 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073850009 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102906839 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070542545 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071030562 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100174448 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071210006 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106180231 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076531042 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074027243 seconds)
  done (took 11.553154974 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.206955122 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191585304 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071958865 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.18363231 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081378794 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109787582 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185720233 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101591676 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097991896 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070022314 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070083151 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.137257152 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.130851098 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.111448088 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.10876105 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069838589 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116924341 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.111125729 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187069569 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.18015963 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11796056 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078000782 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099897441 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070469989 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072348031 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.108467909 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08631848 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109778097 seconds)
  done (took 4.403475666 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08608985 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130740203 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075926768 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090938981 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122576188 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06929668 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10283834 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071896434 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109608614 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082242824 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098086265 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076302308 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077351757 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106025218 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070642073 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107065989 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079675905 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071437762 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101686738 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075203327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104968619 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084512873 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101864427 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069405794 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077155501 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097346525 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067463375 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116138236 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070725931 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119749337 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068297706 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076186904 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108205008 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070219275 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09728636 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071713593 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07174055 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099541666 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071414071 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068437498 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095755818 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059350172 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068723843 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.111210272 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075477316 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088879353 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075206295 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103224679 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07491382 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067572936 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100467381 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072335189 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07233834 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104959337 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074541592 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102501335 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07261976 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068558822 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103856199 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071890077 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066222826 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096695815 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074229596 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097412608 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077198968 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074175259 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096290447 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071801599 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07406118 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103800462 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072150644 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.100035999 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068823276 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072120292 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103020324 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074263835 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073081882 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096519844 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070157938 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097719951 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057593086 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069846023 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.0553895 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101420474 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068462159 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096082081 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072044253 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078791088 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111440653 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072110175 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103785255 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071143039 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068733541 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100524953 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065289741 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.1007332 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084890649 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116139937 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069562059 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067582679 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111675072 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075200785 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097118335 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058826155 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077099687 seconds)
  done (took 10.028266087 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097088166 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095511585 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100218258 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083536559 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123974821 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094079754 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105039102 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075868376 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071005638 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115186478 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069949857 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106504721 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073151085 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078511518 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122736603 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077474217 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099535621 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07852358 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078016174 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134899482 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083590914 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112785436 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080577567 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098071855 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07458812 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082615678 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.12641724 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080863825 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108331879 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084282103 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080149331 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125332141 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08533183 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102306099 seconds)
  done (took 4.353427643 seconds)
done (took 39.275005173 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.196065305 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.408129703 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191537904 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.135759789 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.229825611 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.212225604 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200876215 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.191282876 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.479454325 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.19424075 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.430230136 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.764186375 seconds)
done (took 59.769781558 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.305828522 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.331069063 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46494938 seconds)
  done (took 3.929594692 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.534053383 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.212615406 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.48276436 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.193248447 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.193645185 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.647756127 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.795950644 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.016592836 seconds)
  done (took 27.676901102 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.201178769 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.546501564 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.498391981 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.497813152 seconds)
  done (took 17.880903609 seconds)
done (took 59.461899338 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.196843494 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.263224751 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.203770945 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.184050125 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.296299951 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213529363 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.47749885 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.451945591 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.205776047 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.180275794 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.194852915 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.206990869 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204423415 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.458276082 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195495203 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.192767282 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.201539555 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.678980914 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.584508158 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.220791904 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.208168581 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.260092219 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.209065998 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.198767839 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.262157872 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.197156546 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194831831 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.218709765 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.404125271 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.200375679 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.284152258 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.67470383 seconds)
  done (took 191.259157935 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194838766 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.232536019 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.381644778 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248013532 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.752188174 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.379772907 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.470512001 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.82489185 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.210526563 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.206341021 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.328775125 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197371446 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.373194246 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.190912488 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.205866502 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.205960127 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.449642468 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.406643688 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.209078809 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.437503236 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.213204191 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.205840379 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.154494729 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.31156257 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.201766727 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.215109978 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.22430786 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.220787497 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386717654 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.378794323 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.231445227 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.204689218 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.756781504 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053575539 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.213849154 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.22374765 seconds)
  done (took 149.238510048 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.474257206 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197647741 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197966209 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197389722 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225088666 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197621847 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.727117193 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.727352252 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.699270152 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.251270715 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.257706525 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.43706729 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195813212 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288782215 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.195231342 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209678978 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200289272 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213543201 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.225621349 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195277176 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195841768 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.727104578 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.211970562 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.235373304 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203983637 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.196262146 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227408779 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590399859 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196090894 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228783715 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.514796938 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.241983359 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195989136 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.500095734 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.60580308 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305558899 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198305768 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227500418 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199615307 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.467586243 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198087889 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199042032 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202350879 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.765027899 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196245599 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.730680249 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201376692 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.080791613 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198165589 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198858855 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.412067849 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200880688 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.65137258 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.200631811 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197445726 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201478576 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198789985 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197091426 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.2276601 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.363072965 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296397107 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.202471313 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.20402907 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22743835 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.1996171 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199876244 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.257665491 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198008006 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.778925455 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.256978458 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310439263 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.731989962 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200435342 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199234701 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29421049 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316586788 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196351156 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.20191479 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200780744 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.201979986 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.307401842 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199651467 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.590306791 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205308667 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.200601276 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.260225631 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295338357 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199339148 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502022627 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201739901 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.19993474 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889012605 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29325753 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199793936 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203343192 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200956978 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.594565624 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730651116 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.380047715 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204395438 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.36482809 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.202631387 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.601459086 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.707723872 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.788706041 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.204153735 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308442638 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203138577 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.201182109 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200426699 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230297724 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.202813601 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260805704 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.202057949 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598059353 seconds)
  done (took 344.085786245 seconds)
done (took 687.193204169 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.88696979 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.83626241 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.96442126 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.848621133 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.833400159 seconds)
  done (took 10.509539664 seconds)
done (took 11.652094776 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383216916 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.382303588 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258629252 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.382904528 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231328905 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.399471713 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.359969835 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.222930453 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300492163 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276665975 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.300455564 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251375255 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229155523 seconds)
  done (took 18.122025719 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519074997 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545281501 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267678321 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517955851 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244005321 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524215486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399160253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.408842114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.394073474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216471227 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216675039 seconds)
  done (took 16.398673211 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519737095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.51539935 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270235193 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.51966327 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244472045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521012818 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399300903 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.407818326 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397366586 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21723003 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218065438 seconds)
  done (took 16.373030515 seconds)
done (took 52.038460312 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211855276 seconds)
  done (took 2.354693996 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244394732 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.409872489 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227371001 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216276484 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.213625287 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21284238 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.216733185 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213329071 seconds)
  done (took 11.100610832 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.212664909 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210758711 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21104896 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213236095 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210594418 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212760742 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212498005 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209974023 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.213523858 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211879833 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.209174565 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210401952 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208963605 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210792832 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212593284 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.212884896 seconds)
  done (took 20.528867683 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210013499 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211264747 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.21031256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.213240281 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209835521 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210583887 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.211752786 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210288743 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209974026 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.2117695 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.212406461 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212182044 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.212578081 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212548923 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.212148516 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21208482 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209912486 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211147893 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.218075882 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211450973 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.212328894 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211029617 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21158477 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.2128856 seconds)
  done (took 30.227957488 seconds)
done (took 65.356677153 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.244757214 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.858642515 seconds)
  done (took 9.249225563 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.215275524 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.214939189 seconds)
  done (took 3.581871608 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215892414 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.214012828 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21584537 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.215557878 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.215766807 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.214631663 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216371719 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213649706 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215506567 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.215003211 seconds)
  done (took 13.298430129 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.216064876 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213663556 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.212951689 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217003842 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214427291 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214196287 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214525809 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217021657 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.214063358 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212940688 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.215413531 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.21368597 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.216986476 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.215145948 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21581858 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212565687 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212932033 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213917697 seconds)
  done (took 23.011777724 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214624882 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214014878 seconds)
  done (took 3.578506326 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.214379714 seconds)
    (2/7) benchmarking "second"...
    done (took 1.214645849 seconds)
    (3/7) benchmarking "month"...
    done (took 1.213638737 seconds)
    (4/7) benchmarking "year"...
    done (took 1.214113743 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213112756 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.215572946 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.214201227 seconds)
  done (took 9.647706038 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216831824 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.39924701 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.479047803 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.840067215 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217634779 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218930436 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.068300614 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.22095411 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.223093332 seconds)
  done (took 14.031649062 seconds)
done (took 77.548471844 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.226188948 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.208758486 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.1265902 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.226245733 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.227371406 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.553689014 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.224239407 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.329427469 seconds)
done (took 37.271635585 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.212063247 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.923913051 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.927297997 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.216543303 seconds)
  done (took 11.218185906 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205633317 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.111503601 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210134151 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.226102161 seconds)
  done (took 17.903691024 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.822482658 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541197354 seconds)
  done (took 4.516017118 seconds)
done (took 40.999591783 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217714422 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215997011 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.217310182 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218610858 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.216297716 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.216058933 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.219067253 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218170839 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.216186064 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.217028408 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220991861 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217637005 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.219336578 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.219561885 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219832833 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215890945 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214067707 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21884459 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21652765 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215402407 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217042173 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218418507 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.216294065 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215942832 seconds)
  done (took 30.369121942 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222239017 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.216368642 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219161807 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221925689 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218062893 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220595038 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21979775 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216728418 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22079524 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.219277958 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218386939 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217003554 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220314107 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215870164 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219641066 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.216258934 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221005186 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217272159 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222349913 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217375829 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.221490364 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218976093 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.22043926 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222178345 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220201582 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217204758 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220546913 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222459015 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221574493 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218142113 seconds)
  done (took 37.737324502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.227445462 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231696496 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222621482 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223642571 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222254008 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223659735 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.220925423 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.222560719 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.222359706 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.221001667 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.22340287 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.223475865 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220282225 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221436777 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220569673 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221891013 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.22225742 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.222151417 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222241752 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222093212 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222602889 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222579211 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222173157 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.221879718 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.222515223 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223077433 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.22088907 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22043745 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223596281 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.222180051 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223335199 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.223156169 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.220961399 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223055592 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.222079604 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221301852 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.225634884 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.231216545 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.222523976 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222699915 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.223643731 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221774052 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.222524012 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.223004188 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.22201658 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222073768 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.224545016 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.22343363 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223855987 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.22431453 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221324822 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.222697572 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223505675 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.223759597 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.223903033 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.22287903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223841399 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.22205042 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22436553 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223455402 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.223952435 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223385549 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224884654 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223252981 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.224723455 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.223896301 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.225966516 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.223021281 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22349303 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224871046 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.224546351 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.225324375 seconds)
  done (took 89.227104976 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.223651502 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221609219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221087596 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222050091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222187254 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.223586423 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222272334 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223909125 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220981453 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224122081 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224578948 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22330996 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221437071 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22478769 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22404071 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.221630463 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225440535 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222405091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223891665 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.22638691 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223273654 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222930912 seconds)
  done (took 28.066352994 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224225668 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223808383 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.220302972 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224197864 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22186352 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223549544 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225017257 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22652276 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224433731 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222486933 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221240354 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224241543 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221968028 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220230383 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220419777 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222296592 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225982343 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222751453 seconds)
  done (took 23.172966151 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.221627005 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220573094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.225334969 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221401632 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22069016 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225098449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223026203 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22544335 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222755624 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.222996323 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225367389 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224674638 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.224339813 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221764347 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22279971 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219852024 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.224443659 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218601439 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222133968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221113275 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221746163 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225369712 seconds)
  done (took 28.058301586 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223358512 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224279937 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22035464 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22279394 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219628195 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222301567 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223336167 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220391549 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.22260057 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22313539 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218815951 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224648645 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220492608 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221100486 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220855977 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220877886 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222754206 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221693157 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221818452 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219904564 seconds)
  done (took 25.590577928 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225402606 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223171797 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225800112 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222898356 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224494857 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223686844 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223872969 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224255363 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22339271 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223514514 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.226921061 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224580528 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222753594 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224053137 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223602583 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22312325 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224573083 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223834463 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224785238 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223913558 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222153922 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224938969 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22378169 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222037728 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224531954 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224698514 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223895841 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224487816 seconds)
  done (took 35.429347915 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223452432 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223423018 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.221087804 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221786941 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.22173695 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219523411 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222435499 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221711083 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222855835 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221105754 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222026423 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224577237 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223881389 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223967292 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226294843 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223638051 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224062186 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22119221 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221580251 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221833295 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224931272 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224763592 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22478736 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221266962 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222644678 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.224534727 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221370058 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222412725 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224565213 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222290216 seconds)
  done (took 37.842395716 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243109986 seconds)
    (2/2) benchmarking "in"...
    done (took 1.243880573 seconds)
  done (took 3.643295393 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222410829 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226123957 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224229736 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223387554 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224166798 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227262508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225439061 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223505245 seconds)
  done (took 10.952759925 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225633869 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.225742568 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227462744 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226580156 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22475496 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.2274832 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232069669 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243704137 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226603862 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227488122 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.23393501 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234854478 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.228747969 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225079576 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226821847 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22838504 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225743916 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226003314 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227407786 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.2264047 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226823162 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227560084 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228020236 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.22430403 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.228808768 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238231773 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.230730669 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.225458423 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227936435 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.230212516 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.226671709 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224325594 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22745831 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227129195 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.228110973 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227534681 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236607361 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242977504 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.231025726 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228461426 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227813211 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224624078 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228467072 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227774269 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22966075 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.226299173 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228886043 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223854323 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225631183 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230524281 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234504771 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227032925 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.227332122 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231253918 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.230273103 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233354944 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246233343 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230820987 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237604224 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.240415045 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.241897282 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.236550378 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232253481 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229508877 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23770089 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.254865514 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234982205 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.24325492 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.227869908 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230397434 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.236039645 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242388421 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.24013932 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.229491894 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228923035 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228965055 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229685643 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228768903 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236992209 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.248995713 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230228592 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228838051 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238136882 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254177653 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230726264 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230163497 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.22791497 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.23013796 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229575374 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239140153 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247163524 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231022093 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229125504 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.231709024 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.228460223 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228985246 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230072941 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229027412 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.226696707 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231378862 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228600297 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.232932039 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.238228913 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229374201 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228958043 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.233532933 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.229939405 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229341148 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.234825217 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231555382 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229057029 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.228191893 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.235388886 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225325091 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232425506 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.238853983 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230318811 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233494113 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.228730285 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.228146454 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237689067 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257604928 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229560908 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229941972 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.233541959 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.244800603 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228844406 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.229989751 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.228840669 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.227893847 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.228830743 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.231386315 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.231102406 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.232325697 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230773177 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231681543 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.227611356 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.232265531 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.230023823 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.230622566 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230829498 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.230852341 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.231657152 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.233708127 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.230504995 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.231709697 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.236175603 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.230888937 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.231399814 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.23130463 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.229209726 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230948903 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.23095226 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.231038588 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.231312284 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23283848 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.230887838 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.229810971 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232516956 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.232448532 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230810572 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.23173936 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235851303 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.232347401 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.234491235 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.230524632 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.230033877 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.232004515 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.232558423 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.231699611 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.232635103 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.23135513 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.234783775 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.241669822 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234278406 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.231278694 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.233993215 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230982283 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232902131 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231974172 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.235335965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241606985 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.231432325 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.237967868 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.233683495 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231435786 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.231770837 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.232437758 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.229796734 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233100792 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.235797881 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.242631387 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244260871 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243096193 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.233492415 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.237260787 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.233465936 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.238506295 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.236610735 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.232502839 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235624229 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233102816 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232707926 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232035856 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.235129649 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.23308703 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.234225221 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.232276226 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234609368 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.2331547 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233098332 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.234090934 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234542233 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.23168788 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234262728 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234415138 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.232754885 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.229948221 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23324771 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.232616389 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.234475667 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.234544189 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240964365 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.23272635 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233757326 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232930958 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.232409943 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.232391598 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.233872498 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234188526 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.233131676 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240154279 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.249628058 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233014334 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240104999 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.249729498 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.233332342 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235913624 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.233377562 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.231967911 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.23694324 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24148655 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.232532276 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.234276622 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.233648707 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234000783 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233195842 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.241591536 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.231517604 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.234722493 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.233425982 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.233554246 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.23073389 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.234901484 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.234738044 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.234638326 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234596 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232262056 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.23524414 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233338364 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.232629622 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.233786365 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.234274816 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236858754 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.242848436 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239730193 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.234712661 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.237592333 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.234883165 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.238069105 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.234646087 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.233813455 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.232719716 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245951778 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.244077776 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239268833 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.234663192 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.23508281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239178459 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23623774 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.238921052 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23468474 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233678525 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23422888 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.232619561 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232062984 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2361212 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.234066232 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233948817 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.234796295 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.239097726 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.234883718 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.23233003 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.233745541 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.234836029 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.236043954 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.233264666 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.235592896 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.2373275 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234776058 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.232552649 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.235485352 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239705731 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249295007 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.235229629 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.234400395 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.23318354 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.234246075 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.233827913 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.235202499 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.239079965 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.243136893 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.238561722 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.245134751 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.235838495 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244557324 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.234815592 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.239536845 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.24477663 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.232524864 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.233615035 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.23590103 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.235797703 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241677438 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.251982041 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.237331405 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.240053626 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235463122 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.236522088 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.236006548 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.235170107 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237259917 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.234506693 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243605892 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.25191912 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.239644945 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237662237 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.233248285 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.236116547 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.23640365 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.235337321 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240479493 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.235574382 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.237376794 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.236283064 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.235988483 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.236382518 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.235805617 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237674422 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.235012655 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.236611362 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241622529 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.254361278 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.240631431 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.23765741 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.243446519 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236523795 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242969182 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.255109882 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.236086643 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238948762 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.235984747 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.23768017 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.235926505 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.237692007 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.236593018 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.237854205 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.240346491 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.240037757 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.239293348 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.23805518 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.237047722 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.236819946 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24505335 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261020895 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.237130131 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242603211 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.235874469 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.237678885 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.242417322 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.237140778 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.23460576 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.238839295 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248116333 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24741875 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.236560057 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.237249357 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236944404 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23843038 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236162978 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.236455334 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.238521807 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.239703296 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.237577965 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.238068155 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240630888 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.236885777 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237295239 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237797188 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.239640804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.248458343 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.235847248 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.237644967 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236675505 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237048237 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.238877727 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.235320074 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.237819301 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238599865 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236215681 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.237695629 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24470194 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.244715036 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239246171 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.236814968 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.23970483 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.236799542 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.237885506 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237916678 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.236036132 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236806238 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.239989797 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.237090199 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.237571069 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.235113875 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.239253779 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.237266347 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237709189 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239150084 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.245157169 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236981092 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.236361614 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.23890258 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238184463 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.236734914 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.237872046 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.244447878 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239156693 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.24792077 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.247612126 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242099785 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.238204007 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240763854 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.246210152 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.235726094 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239412132 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.23780528 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.239836107 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.237208459 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.241609838 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237939896 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.243540893 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.2390887 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.237848763 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24572925 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.253355663 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239500994 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.23898252 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.243086594 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.237356199 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.237020371 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240623386 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.237433039 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24523604 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.256002872 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240597638 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240278328 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.236093876 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.239964143 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243714188 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237910693 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.241043747 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.237370578 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.240551834 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238732042 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239032982 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.237612984 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.239662536 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.239714024 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.241010093 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.247149713 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.236327583 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239629992 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.239119123 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.239306217 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240162121 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242172181 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.239275742 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.23705188 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.239772628 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241750183 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241317793 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.243236978 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.242367598 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.241940563 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.242923793 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240933245 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244246844 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.251299116 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249235811 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.238148732 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.240840738 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.240869332 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.242229944 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240976161 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.241959733 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240930009 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.24239159 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.241996915 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241147414 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.241055394 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.243186459 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257200878 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.255279346 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241076844 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.241417047 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245513622 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243343207 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.239922484 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.242191368 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.243468757 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.243134639 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.250493832 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.243983951 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248535631 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257710654 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.242606524 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.246527212 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.244503641 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.251000512 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.244667039 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240830878 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.242804135 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.245162137 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.25861895 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243373322 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251663825 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272635605 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.259351369 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.243532986 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.242994068 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241879979 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.244318536 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.244871245 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.242746991 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.242895703 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244069828 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.243218044 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.24288844 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249666943 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.244006145 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.243155746 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.244609155 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.243370831 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.245788032 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.241288182 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.242735739 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.243899083 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.243405864 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.24250202 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.243700635 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.244584386 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255517223 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.255609647 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.245213978 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.246843578 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.24161438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.247836385 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.246569874 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256129264 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.254445225 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.245626109 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.245404473 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.246521088 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243920498 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.242712887 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.245781787 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.242328027 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243816233 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.244026651 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.256859395 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256150345 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.249928918 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.244789966 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244962811 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.246018447 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245927972 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246810232 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245103693 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.24649842 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.245213107 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249275967 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.245922239 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.248110367 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.247298685 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254261467 seconds)
  done (took 738.670427839 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243410854 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243675723 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242968661 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243234633 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243114083 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242668913 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243252693 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244531419 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.243874025 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244009755 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.243662987 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244890953 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243494606 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245114158 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24378028 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244729174 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244069769 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24474117 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243204365 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24429249 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.243779991 seconds)
  done (took 27.297578228 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.248292849 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.244671823 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244302784 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247373391 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244241574 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246690964 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.246037356 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249314478 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248946246 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245882113 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247819884 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247229388 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.24473039 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.243762346 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244055066 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247262637 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248023403 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244406863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.24960354 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246374553 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24799496 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246578864 seconds)
  done (took 28.602024963 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.247572936 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.247313749 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.246412208 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.24649529 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.247535395 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.245013042 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.249692757 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.247098586 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.247804949 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.2491574 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.246196147 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.247373285 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.255799784 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.254043355 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.251959377 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.249266695 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.391377843 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.249604871 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248797673 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248525976 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.246009171 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.252943441 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.248000443 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.245380062 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.246872925 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.249417724 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.250382806 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.250089682 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.249581909 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.250950414 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.254623988 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.250166278 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.248489187 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250410845 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.248397305 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.24934582 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.253765071 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.249856698 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.247577162 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.251533583 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.258246111 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.271595715 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.249528016 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.254430972 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.250132553 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.251057387 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.253430559 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.258519876 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.247754162 seconds)
  done (took 62.584999496 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.249991182 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.250555903 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.246664041 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.25011551 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.250349795 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.249989378 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.250600361 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.251274927 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.246692022 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.248322751 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.251232087 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.247110271 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.24856057 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.252493371 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.248811722 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.248755811 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248229279 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.248744153 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.247812187 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.249565578 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.250506933 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.251822542 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.251633361 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.249084732 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25182281 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.249135983 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.249501379 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.251007673 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.248769688 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.24952648 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.251034947 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.254114464 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.250864139 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.248780235 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.249535793 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.252037244 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.252859312 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.250720107 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.252946634 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.25073541 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.252801181 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.253119148 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.252834242 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.253507213 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.250654979 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.251002614 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.25070533 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.250744201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.251612993 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.253548734 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.252477072 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.252136381 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.252357583 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.250860701 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.252845593 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.253808415 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.25123779 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.251088689 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.254603381 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.252064669 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.250565675 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.25532113 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.251605395 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.253873894 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.254993542 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.250684833 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.250124356 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250636892 seconds)
  done (took 86.248035047 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253617925 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.253165706 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254686073 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254539986 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25373602 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.254622663 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253113828 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.254375296 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.253169625 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254542996 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253331775 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255475279 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.254156388 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.25454981 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.254248328 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254188209 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.254335232 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255165833 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255227064 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255311442 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.255705293 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254546783 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25464303 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.254457678 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25492649 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.253518374 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254686298 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.254961216 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254205726 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255341726 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253994693 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.255883324 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254564753 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255264942 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256352725 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.255464788 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257555791 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255261507 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.256863592 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.255053588 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256703425 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256911828 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256803776 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.255064289 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25663738 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.2564887 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255988502 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.255546592 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.257071069 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255479495 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.256959792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257205753 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255756976 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256200551 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.257932431 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.257857604 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257017036 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25807765 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256352818 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.256797277 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256770557 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.25887466 seconds)
  done (took 79.022581067 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258645785 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257461488 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.25608058 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.256494656 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256866973 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254357381 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256777533 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.25792854 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256742622 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.258416021 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258402869 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258252035 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255336877 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257493004 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.254507195 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254831556 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254749273 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256806231 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256717432 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.255818803 seconds)
  done (took 26.322090749 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.255295699 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.25941947 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.255308404 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.255912875 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.259130091 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.257466101 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.258757601 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260931988 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255350902 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259567462 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257970647 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257708245 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256984194 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257357871 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.260406476 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.257052215 seconds)
  done (took 21.312966151 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.256506789 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.259589286 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.25895321 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.258923177 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.25568974 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.258168396 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259198406 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.256686311 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.258019555 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.261207514 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.260951072 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.259269075 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.26096476 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.260661321 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.257033266 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.259307511 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.256893544 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.25544513 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.260254362 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.260276202 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.259305847 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.256320858 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.259366635 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.2586668 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.257430744 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.259956052 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.257179911 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.259295125 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.25860522 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.260701827 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.257932494 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.259263355 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.258182304 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.259848326 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.261265877 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.256850751 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.261003268 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.261263236 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.262088611 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.26155834 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.261510443 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.259636758 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.261883447 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.260107745 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.258785815 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.261650327 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.258709977 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.258547571 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.258565472 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.259292316 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.261639243 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.264007196 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.262414418 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.261712605 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.261781453 seconds)
  done (took 70.461759255 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262537436 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262599483 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.257931923 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.262789175 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262638581 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.260795808 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.263995594 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.259428066 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259743999 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.264789374 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259892545 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.263018552 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260543544 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262831696 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259786352 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261328633 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260601894 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.259217857 seconds)
  done (took 23.897576992 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.26038984 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260948142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.262954328 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260733784 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.26055887 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262999186 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261143334 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.263621202 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263409553 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.263287037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260122973 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.26280585 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262017316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.264110146 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.262324428 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261799131 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.261572242 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264782351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261967635 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262361927 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265114639 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264251518 seconds)
  done (took 28.965492406 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.262178187 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.26239739 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.278877174 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.303781067 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.29368768 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.262404197 seconds)
  done (took 8.857238157 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264176256 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262731408 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262263286 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266204749 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264444525 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262092499 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262376896 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262109511 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265047092 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262150102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263520426 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264202072 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265369469 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262712798 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26485174 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263756374 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26367648 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264261965 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263553378 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264855833 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263568321 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266582703 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262618185 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262525417 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263807144 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264247657 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265328036 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264907266 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263950648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267200379 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264993163 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263593077 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266520634 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263045385 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266212878 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266437913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264438205 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266646672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266960719 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264450151 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265090659 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266270002 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265974157 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261292435 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266426835 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264716227 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263528689 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266800101 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26357709 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268173461 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267688768 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265814588 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266458284 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267614158 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265996894 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268203389 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26506499 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265291037 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267860842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265902018 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264129262 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266517821 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264640717 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265046652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265704559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264809218 seconds)
  done (took 84.677742157 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263533599 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264853645 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26528535 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26555932 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265464783 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264893826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264339268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265314269 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264345837 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265432818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26795958 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264145578 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264185059 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264784159 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265811507 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26625329 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267023775 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266651062 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26618285 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26783292 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267402402 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264773636 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267045284 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26650702 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265542872 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269056238 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267602115 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26666369 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267024465 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268457895 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267634081 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26667628 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265764116 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265989386 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267019195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267513604 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266994432 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268929226 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266981468 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268752024 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267255873 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268891875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268203429 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268438051 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267685279 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26708272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266273854 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266906351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266556178 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267137419 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268994144 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267883264 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268669134 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267827441 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267072642 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267604768 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268290708 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268053115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269066057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2713054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268520865 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267195198 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270640578 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269284069 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269486162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268784107 seconds)
  done (took 84.825078953 seconds)
done (took 1722.986594766 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.28464481 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.338341326 seconds)
  done (took 13.823215699 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.429969168 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.385470442 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.267776106 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.315621114 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.26533637 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.28720525 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.287573522 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.266238989 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.270622743 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.269553686 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.270111842 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.45793744 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.272026565 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.267668908 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.267302549 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.360351115 seconds)
  done (took 42.14258221 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.296175749 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.274916562 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.374091609 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.286637879 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.294523292 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.433192819 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317864543 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.272689662 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.417566384 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.3055352 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.630362751 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.294190042 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.274315786 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.2614294 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.287533487 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.432511753 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.489185699 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.633111295 seconds)
  done (took 28.775367432 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.649635996 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.265796743 seconds)
  done (took 9.113861259 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.316964719 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.274221265 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.299266717 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.2643621 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.29609098 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.317440644 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.323100658 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.32475771 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.280515028 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.317323546 seconds)
  done (took 64.2156231 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.289753911 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.274283277 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.272625968 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.270714894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.264165924 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.261835452 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.2702457 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.269572907 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.351221915 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.378893848 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.284648074 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.279010788 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.273573604 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.273757351 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.271108687 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.303385365 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.417481411 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.271051847 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.26938105 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.277988217 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.273422727 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.351008677 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.306603155 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.271800955 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.380668877 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.365539492 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.2744214 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.280784106 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.3997878 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.271852096 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.273466989 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.274392552 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.274727072 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.819293058 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.694064705 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.276153873 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.294179817 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.283068208 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.271399279 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.393923545 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.274812666 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.281549415 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.266742062 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.666081257 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.425361386 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.375799159 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.382019244 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.275051423 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.273814718 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.329602766 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.273557047 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.275560572 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.30069069 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.001012932 seconds)
  done (took 106.46125345 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.268951766 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.757551089 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.433448859 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.278241678 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.088796017 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.020347949 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.268249263 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.510508815 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.300007686 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.269415822 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.536429949 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.730509724 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.26879995 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.330079345 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.792134907 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.326077975 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.267737558 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.981060568 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.267112125 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.270438541 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.67012342 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281689255 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.266767955 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.445539742 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.303313695 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.688056871 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.577988212 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.646092633 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.266663271 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.264300121 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.697898641 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.273631347 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.307503735 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.267588508 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.521936928 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.58523218 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.557059635 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.270941706 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287273309 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.266981963 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.290743153 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.685297187 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.567658517 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.27165511 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.265879653 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.690953275 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.267689109 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.2728006 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.273105965 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.472553387 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.217805936 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.268606753 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.558344133 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.268894222 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.523857581 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.274183907 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.338434945 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717138632 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266300133 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.407819997 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.302314583 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.271046837 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.267295304 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271501447 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.269642306 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.578542299 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.594217792 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.269503358 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.58182308 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.690878952 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.270167464 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.749615384 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.126201957 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.277483829 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.319845354 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.273104176 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.799289712 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715538203 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305963947 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.267153078 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.562280079 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.271473743 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.527672427 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.279585578 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267584312 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.68629909 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.281935472 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.301035981 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.271180025 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.268404273 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.059117428 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273230409 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.515612566 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.295080261 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.270356122 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.271202531 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.27634212 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.268857044 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.271384136 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.274513276 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.75328153 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.273918492 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.382483436 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.290279679 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.282855127 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.27200952 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.272527235 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.273800828 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489086193 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.813071421 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.278653565 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273114424 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.269248016 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.273415326 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.413587235 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.275247605 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.53696401 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.271945994 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271173995 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.272637668 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06676604 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.278152298 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269275109 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.276560483 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.085400984 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.475758467 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.286413553 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.268550629 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.275532873 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.283454332 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.479697147 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.271272672 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.341793595 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.275304447 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.934922889 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.297612561 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.299479699 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.843510155 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.277406274 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.114247241 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.291983801 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.27266104 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567532864 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.52874734 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.502732495 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.273454933 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.285828769 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909131941 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.282418371 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.401626029 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.287256059 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.266763286 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.471457214 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.417360355 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.274133555 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.823387087 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.273688096 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487240899 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.273445503 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579218473 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.724412013 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.275035474 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279531481 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941489992 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.915208341 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.924755692 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.277127776 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.530588214 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.265676301 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.729129868 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.274102533 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.273665839 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.844636721 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.276058585 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.27564573 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.274930451 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.274874713 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.337860348 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446836604 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.400470963 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.277324032 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.700661015 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320656533 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.272670845 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.274375123 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.278521838 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.626873423 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.27411369 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.281489717 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.319066133 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.277480781 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.279108661 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.711622162 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.141378474 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.275756713 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.428760927 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.862342363 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.27703077 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.274723682 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.952113727 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.475835166 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.73302685 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.314779851 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.529921882 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.263642625 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.292008739 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.008865348 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.253268016 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.682263882 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.250520973 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.250474175 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.807250207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.25041293 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.351508171 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.250739078 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.253097629 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.739091405 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.249195084 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.248209968 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.491426478 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.241054296 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486711385 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.239334094 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.276432811 seconds)
  done (took 1094.218328108 seconds)
done (took 1359.952199706 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.237267063 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.238855687 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.221687057 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.235542335 seconds)
  done (took 26.109173943 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.243886675 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.241569182 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.243090577 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.241533122 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.245772644 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.240277031 seconds)
  done (took 8.631050848 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.307192572 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.230365316 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.231724559 seconds)
  done (took 18.942098252 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.432682815 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.378559437 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.563947343 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.144858455 seconds)
  done (took 9.690236835 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.233315006 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.234984151 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.234790389 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.236902856 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.238331928 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.237922232 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.235199984 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.238625413 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.238941176 seconds)
  done (took 12.296219111 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.721090265 seconds)
done (took 81.564307245 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.226904039 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.564162675 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.35284636 seconds)
    (4/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.966888069 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.381887814 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.302840558 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.195440466 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.230931621 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.458423619 seconds)
    (10/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.242242681 seconds)
    (11/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.242282515 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.380274618 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.231461244 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.271370107 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.520097827 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.345969149 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.256200062 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.232202491 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.76008482 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.25737447 seconds)
    (21/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.664016267 seconds)
    (22/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.379855478 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.626015805 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.266688109 seconds)
    (25/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.492916445 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.68132783 seconds)
    (27/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.214619892 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.23214384 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.34075652 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.280813043 seconds)
    (31/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.216861188 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.336952012 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.006744092 seconds)
    (34/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.998363502 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.42998009 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.219165481 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.779606424 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.22935109 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.363339797 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.231663862 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.474979911 seconds)
    (42/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.297406662 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.335888624 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.432682354 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.033388217 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.811477918 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.232614413 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.231372159 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.26380788 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.230829213 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.305882145 seconds)
    (52/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.294508413 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.344622777 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.232978981 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.780542321 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.490616265 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.218739215 seconds)
    (58/309) benchmarking ("sort", Int8, false)...
    done (took 4.241519132 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.785607106 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.269889277 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.31736818 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.290311003 seconds)
    (63/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.651959119 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.209420349 seconds)
    (65/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.247246608 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.217673519 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.685415715 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.219778366 seconds)
    (69/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.927546115 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.04567337 seconds)
    (71/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.360965434 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.241708547 seconds)
    (73/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.772819838 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.766746157 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.973439968 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.348675203 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.908698276 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.634322034 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.030120593 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.770161732 seconds)
    (81/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.771869235 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.729171381 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.231690028 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.424218405 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.645929784 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.440381251 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.339122589 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.307032933 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.903630294 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.318435405 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.395595833 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.318769547 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.920980011 seconds)
    (94/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.515718801 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.33575698 seconds)
    (96/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.023003426 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.317282167 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.262515279 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.398225537 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.237322843 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.345497507 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.903773953 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.35136558 seconds)
    (104/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.36701594 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.432253248 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.262153165 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.920759357 seconds)
    (108/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.455254166 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.052278226 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.73087826 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.501394155 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.238127034 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.235856104 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.659051229 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.05524574 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.878065366 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.256982845 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.49307766 seconds)
    (119/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.298838063 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.745725817 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.260109707 seconds)
    (122/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.693468833 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.511089667 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.075721157 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.641818845 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.237459037 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.913256738 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.513334884 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.39552377 seconds)
    (130/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.246353725 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.340181331 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.229922002 seconds)
    (133/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.275832436 seconds)
    (134/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.236565171 seconds)
    (135/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.416961203 seconds)
    (136/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.416946178 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.807355901 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.849224496 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.922439354 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.263329341 seconds)
    (141/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.299855097 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.465099783 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.239006339 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.450732033 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.842699768 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.251991906 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.262753749 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.796934088 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.222331942 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.533023444 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.533893381 seconds)
    (152/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.253043301 seconds)
    (153/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.274312455 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.640952646 seconds)
    (155/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.253064051 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.241306399 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.574020506 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.248037276 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.263486537 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.251374435 seconds)
    (161/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.23835683 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.574874892 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.324978466 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.608769115 seconds)
    (165/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.919646434 seconds)
    (166/309) benchmarking ("sort", BigInt, false)...
    done (took 6.248090949 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.755162924 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.239065814 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.94525507 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.483247982 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.270781527 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.259119124 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.647526177 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.279183397 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.605812523 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.931154332 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.541687052 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.824605124 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.266516103 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.283446061 seconds)
    (181/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.252602032 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.091571509 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.261927265 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.826156935 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.063157617 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.255476024 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.596246263 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.240500573 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.261352091 seconds)
    (190/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.322232166 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.365513136 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.258317627 seconds)
    (193/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.777840844 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 5.211802974 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.298303828 seconds)
    (196/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.686053888 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.238409825 seconds)
    (198/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.549201142 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.570459358 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.290931912 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.353155806 seconds)
    (202/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.246582247 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.860658927 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.450427212 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.440282829 seconds)
    (206/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.415921513 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.366406248 seconds)
    (208/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.517714539 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.531801168 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.460430485 seconds)
    (211/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.569405903 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.567320295 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.26492708 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.073625665 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.259848302 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.251194277 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.398329058 seconds)
    (218/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.348548824 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.402103344 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.081715364 seconds)
    (221/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.752300463 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.259792264 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.272937354 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.231937425 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.307453572 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.326153725 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.317887708 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.225219443 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.236970381 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.258542418 seconds)
    (231/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.406222359 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.571268707 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.278435262 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.619339518 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.924422588 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.228778946 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.284519265 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.47259711 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.358683443 seconds)
    (240/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.388229544 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.001296644 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.751776473 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.462093679 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.299559816 seconds)
    (245/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.55160639 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.906374033 seconds)
    (247/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.260583985 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.426444352 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.754190372 seconds)
    (250/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.384242419 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.362467283 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.572349001 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.297536771 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.262396819 seconds)
    (255/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.421365912 seconds)
    (256/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.320625405 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.61556948 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.746007305 seconds)
    (259/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.337751856 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.496753785 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.253055974 seconds)
    (262/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.762516444 seconds)
    (263/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.33431854 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.962517671 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.221232167 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.260399905 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.221122059 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.550406345 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.997506275 seconds)
    (270/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.26423145 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.248939115 seconds)
    (272/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.228147852 seconds)
    (273/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.279166532 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.354620017 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.285016193 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.328740162 seconds)
    (277/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.496142516 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.395195214 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.234889184 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.315889109 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.353507283 seconds)
    (282/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.570904915 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.360029047 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.986146828 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.819476618 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.626877481 seconds)
    (287/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.239546795 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.23635225 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.235422814 seconds)
    (290/309) benchmarking ("sort", Float64, false)...
    done (took 5.478748814 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.34322872 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.278592619 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.233057037 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.270244444 seconds)
    (295/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.974192466 seconds)
    (296/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.322719553 seconds)
    (297/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.261550337 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.261417171 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.248250971 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.029122091 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.620493167 seconds)
    (302/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.576638289 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.939163383 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.817050853 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.257346541 seconds)
    (306/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.340734048 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.480124986 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.243953296 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.462113054 seconds)
  done (took 877.040300841 seconds)
done (took 878.210671362 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.269918193 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.262309318 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.247799771 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.268542008 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.359367601 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.274142662 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.257135743 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.247837131 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.295764235 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.296312774 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.247317663 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.275538212 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.248638617 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.248831975 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.247639527 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.261486288 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.174548209 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.247681358 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.265555785 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.257964314 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.264966639 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.247169084 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.298822599 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.275407289 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.252574343 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.251012973 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.250822187 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.268882528 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.360608509 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.252413286 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.252233291 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.261289507 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.173684147 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.245344493 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.244173594 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.265488466 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.259818062 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.258562515 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.253215878 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.278765459 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.527988139 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.246506447 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.250045765 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.249410753 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.248496521 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.251940785 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.250715817 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.255632249 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.261508012 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.264033866 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.520740596 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.264356458 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.252024692 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.250538327 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.260713068 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.248824897 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.252121447 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.264778912 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.268126287 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.26563865 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.165727531 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.254729484 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.251617629 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.26702444 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.257910064 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.558272705 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.244624321 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.254776916 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.53566789 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.255514855 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.558298879 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.257220996 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.251323798 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.263164657 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.283664989 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.182075984 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.244283516 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.249002088 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.258736993 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.249455309 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.260368568 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.262438289 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.258215823 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.253160188 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.262977293 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.27910834 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.261662289 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.251799229 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.26078068 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.269975223 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.257951728 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.263477825 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.254678874 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.248005173 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.260589456 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.253950584 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.254285226 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.25521355 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.256300498 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.262061719 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.534562223 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.267075272 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.248561284 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.249679093 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.25112364 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.264486256 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.53566757 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.2529341 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.274396928 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.298251024 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.253860903 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.172460527 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.254528877 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.268949541 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.263612424 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.256125633 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.248422799 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.172070696 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.532080913 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.267960657 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.255685224 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.251871398 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268855741 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.254739616 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.248444941 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.186288976 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.254261039 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.267755527 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.374974351 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.263133994 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.283694274 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.250025776 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.259273026 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.280409733 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.269168325 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.287320447 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.257828181 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.269036666 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.27059285 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.250358497 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.265260262 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.265075129 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.256054659 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.257865443 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.249076496 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.280886986 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.26704848 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268427108 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.277036478 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.374572257 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.252135574 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.172335723 seconds)
done (took 210.692156907 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.313072546 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.248374625 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.338231872 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.250452176 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.348171079 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.346523794 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.249325428 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.249544668 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.248786298 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.626992327 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.24824502 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.249137195 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.24175997 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.250416018 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.333455318 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.249847769 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.251806197 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.591047617 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.252053712 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.322098636 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.250768084 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.248914932 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.253110294 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.632712143 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.249724485 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.24418811 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.321238782 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.251115669 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.595186931 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.246450726 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.251099223 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.597505726 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.343206209 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.269751056 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.261846028 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.258127864 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.351394324 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.260891815 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.333312053 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.334802672 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.337931634 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.291582813 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.248702524 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.252249056 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.25510431 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.253062687 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.250143566 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.278980488 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.248494458 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.250815125 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.59142383 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.26241125 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.250026127 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.251266518 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.251144411 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.283720263 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.250905497 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.253675702 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.342825943 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.253621752 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.314680604 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.632997037 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.632519868 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.254208918 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.247038565 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.252298874 seconds)
  done (took 142.942090639 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.31914469 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.328900255 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.359396266 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.255099333 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.302149292 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.365815139 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.257045879 seconds)
  done (took 10.374585733 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.259781515 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.255612861 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.305351047 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.305761842 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.255117582 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.400635443 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.257723878 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.265267431 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.252033795 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.306143776 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.255159906 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.255791471 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.261217167 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.254248739 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.30494396 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.264780744 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.370779234 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.256545912 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.254645344 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.407481116 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.252650957 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.261569886 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.305152518 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.267943526 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.255538543 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.262644233 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.824856278 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.254950865 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.252839932 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.255657907 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.251876023 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.292989368 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.257758921 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.254070028 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256232305 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372178894 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.255977796 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.253682586 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.256163534 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.250773681 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.25536991 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.254877848 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.256457699 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.253311707 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.254377957 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.280926364 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.254298135 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.25526898 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.257403813 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.256811689 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.306383099 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.257642913 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.254403231 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.254989084 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.312210275 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.26401666 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.258206144 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.254208676 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.258179602 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.254900589 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.407097942 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.305539903 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.256285632 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.304018484 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.258026337 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.258954411 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.258993947 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.256275408 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.321178197 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.258985058 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.304409615 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.254962155 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.411446173 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.280271709 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.259030814 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.260571473 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.261179419 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.258511836 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.258416743 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.263514565 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.255570727 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.259397683 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.264731262 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.255207902 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.254567284 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360589606 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372985443 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.256811934 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.269004606 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.265167146 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.255316303 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.312378255 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.259575607 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.256477368 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.310028209 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.374064348 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.313841626 seconds)
  done (took 145.682346049 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.262754002 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.266774538 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.258552709 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.274930263 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.260636369 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.258831723 seconds)
  done (took 8.773854299 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.26253925 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.259271332 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.258821209 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.257741355 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.259338841 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.258783857 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.260101706 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.260325831 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.263856978 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.260331835 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.262025155 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.262351534 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.264458589 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.260776593 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.260436616 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.260140018 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.259926608 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.260048166 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.259998783 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.260405555 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.367821586 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.260593585 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.261611166 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.262903299 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.264750311 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.263548214 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.269220149 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.261987239 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.260938066 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.267533928 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.263641472 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.263106632 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.265152892 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.267039813 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.265026233 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.263309035 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.266003056 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.260824232 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.260785696 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.262383678 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.263603262 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.261878845 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.261974318 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.260464588 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.263432476 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.266871897 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.265526698 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.269729983 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.264051663 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.261981531 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.260006156 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.262591155 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.262748392 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.262459501 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.266092735 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.265747861 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.266150912 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.262969425 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.262974482 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.263878404 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.265158087 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.264198607 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.266112027 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.266387251 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.262520174 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.264698316 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.264308853 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.266968959 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.26394964 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.264616908 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.26254421 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.262267215 seconds)
  done (took 93.232775651 seconds)
done (took 402.188901607 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.464430876 seconds)
  done (took 7.660574428 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.34608828 seconds)
  done (took 7.5435021 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.800024826 seconds)
  done (took 20.006094942 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.305523467 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.360491561 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.270739897 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.257037866 seconds)
  done (took 26.38730881 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.711892902 seconds)
  done (took 7.908118826 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.257739918 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.262326397 seconds)
  done (took 13.714671336 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.60210032 seconds)
  done (took 7.7948447 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.316290709 seconds)
  done (took 7.514954219 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.282407653 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.269580139 seconds)
  done (took 14.001901336 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.242024197 seconds)
  done (took 7.438554851 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.183294755 seconds)
  done (took 8.380951782 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.267428274 seconds)
  done (took 7.465666434 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.324151436 seconds)
  done (took 7.523264659 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.599256732 seconds)
  done (took 8.797387958 seconds)
done (took 153.333437076 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.257355704 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.261274509 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.261510454 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.260358653 seconds)
  done (took 26.237153235 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.297951385 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.299815523 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.297640221 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.308654687 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.30215482 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.298408074 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.289942923 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.290050742 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.30913906 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.302465165 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.30040508 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.299569677 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.306128354 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.29174374 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.301913692 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.299824201 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.308580308 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.300875456 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.291576112 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.302504155 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.266993427 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.310112142 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.302322827 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.266425008 seconds)
  done (took 32.342468793 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.466253037 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.33986833 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.422264371 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.319333438 seconds)
  done (took 6.745634668 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.320554301 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.317868674 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.332191474 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.370421154 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.395497472 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.327927753 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.289426343 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.28865972 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.274507863 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.32202886 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.39496945 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.334245375 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.402018811 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.266682097 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.454854704 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.267057377 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.26735536 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.318119936 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.371675235 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.390911516 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.267855503 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.319199008 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.321391348 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.335552182 seconds)
  done (took 33.151043593 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.267285564 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.275117938 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.273151227 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.268727651 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.267169087 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.267032412 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.270901086 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.2692208 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.288311028 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.267317229 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.265340935 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.26567678 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.265262997 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.26721958 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.265157587 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.279920253 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.281004332 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.269028036 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.270784465 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.271204391 seconds)
  done (took 26.614219381 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.263688612 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.115809778 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.612493831 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.517621573 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.261373644 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.263026949 seconds)
  done (took 27.233498046 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.331110799 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.45273841 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.268446023 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.587446058 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.66140258 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.269365633 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.270025144 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.486450859 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.755986192 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.75170948 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.31887826 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.321933471 seconds)
  done (took 18.677358114 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.273612248 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.264358812 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.27040092 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.281612822 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.319647169 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.272773091 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.274359413 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.265252236 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.322658813 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.322743709 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.272499157 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.318748201 seconds)
  done (took 36.66212792 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350444425 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30938583 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.082558349 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020682226 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984510862 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474562384 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.999173501 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.688322388 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.270225911 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539464711 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.061554311 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360367829 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.520394591 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272172286 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267443269 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.21587992 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489693219 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696127359 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267905542 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.967358723 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294244737 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.263915354 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.135775389 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.287750806 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.478556611 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.244345849 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.526200498 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.041050996 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523872667 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278642904 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274528913 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265896193 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540437208 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895735014 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363264858 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276555268 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.955936017 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.811911765 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.253903486 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.048097839 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.810987166 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.2697738 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277967145 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267653046 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.202471187 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266696435 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698714158 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.274556869 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.977178283 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267549471 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279367922 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363129065 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.271676458 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.8381044 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28753875 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.255236292 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.264546551 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276570489 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838258897 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.452308386 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277065548 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.203373061 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.642880989 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.017266446 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844378629 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.369233264 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.270175194 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269361455 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204195005 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.096685999 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287275507 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416278381 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.293957358 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918183587 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971416201 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.066459172 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205039578 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763738687 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277318861 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.202606021 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495255162 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044585669 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203722447 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.216316325 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.202977504 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896863448 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277496528 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.569382639 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.279367929 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.694781697 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.28381829 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28963715 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29252847 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.491978209 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.165153984 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269274028 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.845933996 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406803383 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290597238 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689881571 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207447546 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.272248642 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52506817 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.479529251 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271609833 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.20971533 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459097289 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277670114 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.291385888 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.278715596 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.282636312 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.808363771 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284562133 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.47387042 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289744987 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.046133233 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937440057 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287936132 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.373672935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.082919404 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506317742 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.972687445 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431623581 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341274193 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.689307542 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269777905 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.122474905 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121290677 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.430309109 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.270559632 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283603488 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.281434349 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.268344964 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221815214 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.268600511 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.12301864 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.049097053 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.493599991 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278302458 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549208793 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20410628 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417864024 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279893398 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.495215816 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.38399703 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.270081571 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53292577 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284105071 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275613245 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298009521 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290151357 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369715138 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291640799 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.280341154 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.528124134 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.275101224 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.277087848 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.11001775 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.049015637 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278753613 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.277193446 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.108201743 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812942514 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245151658 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276509708 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163367033 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.286173929 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339962671 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.277905266 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.281403588 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.936463112 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.076899084 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.276936613 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.27054472 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495744617 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28079337 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.098081189 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357389522 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.457613608 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817271638 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289154673 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.205397565 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.98308306 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.965874611 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273973777 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.463760606 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274383934 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282717848 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285048954 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.779012657 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.809901661 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279168072 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.996814589 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.280769594 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283923509 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.279218885 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272885405 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.920457426 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.484022594 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287706996 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.286937111 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416044454 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.287689094 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.208070513 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.791197045 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27875243 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276529109 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.048510948 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305786476 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.005335987 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739752904 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534962932 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.001426078 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288072734 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.094104583 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.30589799 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.276289963 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.864071159 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295920671 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.280773362 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286542325 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.28546963 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.102451533 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.740740617 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840495356 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953533265 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761710487 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163908634 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.286004691 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.177561122 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.701394563 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214596589 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930693957 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.447137285 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.706985726 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224928046 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463075885 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.38919947 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978318159 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283476539 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506598333 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157518334 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.851965893 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29656427 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.488843811 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311820876 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.288950054 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.210417801 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.914817236 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520688206 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.828303245 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35722902 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702191102 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.859398588 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.065259127 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.276501938 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.518369469 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436593606 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.824429866 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664866524 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276167034 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.124587476 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.752492315 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.280589415 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.803837894 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865239126 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.281982354 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.468325886 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217250621 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.290590255 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.288461563 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.278888068 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.420507369 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.28041544 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.533808143 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289767028 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213921069 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.283382128 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766053382 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.153802102 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.283141832 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280638222 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948575887 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288726032 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541728989 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.292403436 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.896469626 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288337461 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.214801107 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213322732 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.971767332 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.289153717 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257082486 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71260844 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.634739761 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295056861 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309346802 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125022875 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.53661946 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.29280864 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.814834716 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506586159 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.066253999 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303536233 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.379250052 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.882153672 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.278404581 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.160981568 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.516665171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122694362 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.503092324 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.117462687 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.188752662 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.279470919 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.495693066 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.162476261 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.096995728 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519136961 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.992934111 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.295789692 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946146988 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30740328 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.089362867 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.304984688 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.65111089 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.289539127 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351959107 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291195367 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.293290904 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.291137419 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43722898 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.108210159 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298341115 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.296337316 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37464941 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.520004763 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.903361274 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.059359826 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821986043 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972793467 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.827424865 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296665623 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281551861 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282582659 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21569647 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431010266 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.812425303 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557785641 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410811384 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.767401131 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304679381 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.900956355 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307731915 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496756714 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55889286 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.15232107 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282409182 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942297615 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.165183393 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292708476 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.491357103 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72402806 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801177882 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395009712 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.294414396 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.70531602 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560950007 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373722839 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284424716 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.873810537 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.298740317 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.536540771 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.290972729 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.139590671 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436132724 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.292982519 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92179709 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.295966696 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.438884161 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.057028334 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.031827514 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.543762763 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.687359782 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.298404728 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828473868 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94056211 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551016782 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355414903 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294531928 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.394166183 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427500184 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.285881347 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168828479 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283312807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129359433 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.995884622 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.294124112 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827768029 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55113738 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.281547501 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.29242084 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312755556 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.295192721 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.507711441 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928895463 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511064596 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294832667 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.294397129 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.856895293 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829423684 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300683832 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220575455 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.289721795 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50848983 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.525317443 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310132317 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.738082426 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.997041368 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798654421 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.26177181 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307054678 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299354757 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.937184927 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83444208 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.916605549 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726194486 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946632795 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286409146 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562281342 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.291228841 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286855849 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576438795 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.291316545 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.295726591 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301788914 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.832127492 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999668158 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.309091276 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.055102314 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.226686244 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.512448367 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915811337 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225630493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287048167 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.458495049 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293461312 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418972488 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299244646 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.288638185 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29264324 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.04953317 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560637261 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.292304079 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.285604695 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.955517316 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301362726 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295243032 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534424303 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295648439 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.961343744 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.639611148 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545552564 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.287786139 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.274206819 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.293186832 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287716454 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.006027149 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260253376 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.794847541 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804468908 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.29340837 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.298186443 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.292439707 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.505179172 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501053018 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.138300767 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31515405 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29626783 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301542566 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.193620482 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.057077708 seconds)
  done (took 1544.279777101 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.33650416 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.330551439 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.328377899 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.340982823 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.321813822 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.328802029 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.387961159 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.346953971 seconds)
  done (took 51.949327281 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.304557608 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.447975218 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.322785277 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.305097732 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.302623689 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.295025056 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.714754769 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.302736584 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.298408989 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.301565997 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.296926349 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.292279155 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.908298681 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.298859535 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.293778986 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.28556125 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.302243257 seconds)
  done (took 64.506129064 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.291272183 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.552851828 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.374637928 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.29684364 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.925400184 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.303234196 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.497363232 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.342498919 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.308555493 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.594109099 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.942666995 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.33061843 seconds)
  done (took 82.991372853 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.300815809 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.29967924 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.300305699 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.299575029 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.299972348 seconds)
  done (took 7.729378273 seconds)
done (took 1960.319559126 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.53758765 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.90816111 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.902852981 seconds)
  done (took 5.039921003 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.441910651 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.489265711 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.611152425 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.617578227 seconds)
  done (took 7.38728941 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.569956853 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.682656022 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.480416398 seconds)
  done (took 5.962380583 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.580647466 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.303036937 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.409803263 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.294470485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.293760764 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.295771911 seconds)
  done (took 20.116583605 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.297577544 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.298776906 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.297712116 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.299433743 seconds)
  done (took 6.425075306 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.278714029 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.001653259 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.280481446 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.299439343 seconds)
  done (took 18.092840255 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.04333907 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.058269408 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.039833883 seconds)
  done (took 7.373350677 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.299358271 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.14152278 seconds)
  done (took 9.67412367 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.589267468 seconds)
  done (took 2.8220005 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.430866086 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.622888818 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.247639448 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.149414883 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.271932318 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.78345842 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.781178875 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.398988552 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.133927935 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.243231355 seconds)
  done (took 26.296910123 seconds)
done (took 122.252458187 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.933237034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.541638897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.500412315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.797730638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.51502965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.499975495 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.714655634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.765995415 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.364452196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.303330825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.800814518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.517556236 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.449003998 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.542357524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.44915479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.541141769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.516871241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.9720774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.604138286 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.68410558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.714843518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.436423742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.631841424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.513079184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.521255026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.449646448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.01340382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.297340525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.78234288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.087597466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.525620979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.040748428 seconds)
  done (took 188.261630284 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.297093129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.297206881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.300595895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.315770351 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.296414478 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.299813811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.296718918 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.305469455 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.295554334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.300688626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.294180878 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.293645489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.296426922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.313072401 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.295839807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.296304366 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.295177513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.300047471 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.296778825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.297446998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.296662083 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.30829346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.294818365 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.304481987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.299661237 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.296266778 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.309794779 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.308343314 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.296708815 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.295192078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.311106087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.298914431 seconds)
  done (took 202.838540804 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.298318062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.321769818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.296331851 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.322121404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.297580331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.312952831 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.298682263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.29827232 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.297902804 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.313213657 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.29614032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.306274656 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.299444121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.297006755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.294243171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.296827451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.316940111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.300851403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.299890219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.308183442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.296852809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.29796629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.319419196 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.298144059 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.300042623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.297757048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.298949027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.301274937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.299052043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.296892575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.300480354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.305157696 seconds)
  done (took 202.92192309 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.50016596 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.305921054 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.306679011 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.264686114 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.3062364 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.305976126 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.304156624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.496166034 seconds)
  done (took 14.026940453 seconds)
done (took 609.28343178 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.496443384 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.215026621 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.494699145 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.32580253 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.990491249 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.32836212 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.326899657 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.487310921 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.186120132 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.480617491 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.504160022 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.323882281 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.639478743 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.325631129 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.562753369 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.420106725 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.169675664 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.283791324 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.633850428 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.790922488 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.571615093 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.728525974 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.482084712 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.192021922 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.662500182 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.737243469 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.941013616 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.153582579 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.327547392 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.627867512 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.857457354 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.260907822 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.378836017 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.361501765 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.413390472 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.397975562 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.171256314 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.359290823 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.498158187 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.499492689 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.781124721 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.015685597 seconds)
  done (took 88.6439291 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.296275249 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.298116881 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.295715387 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.295716383 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.296140051 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.297854325 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.295047857 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.296472072 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.296441333 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.296707666 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.297789877 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.298977035 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.297889131 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.299080882 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.296929635 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.296839527 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.299684385 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.295741447 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.296771548 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.298338332 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.295711297 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.295455724 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.297958225 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.29702737 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.298624317 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.296735759 seconds)
  done (took 34.965136714 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.31226796 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.549617026 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.702089314 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.316165253 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.311662857 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.315747959 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.380631866 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.313392795 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.313346405 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.313235432 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.473186018 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.313092905 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.343308395 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.717430726 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.317440442 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.312310024 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.310715046 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.311806177 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.559003018 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.321885869 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.383295746 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.313842392 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.381005699 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.322960239 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.316361836 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.310000902 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.316910409 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.83228813 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.3133221 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.474405336 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000782546 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.381312166 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.795487038 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.718694264 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.012064953 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.315698084 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.311959003 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.47576624 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.314574789 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.310673931 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.383149353 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.315101785 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.718185265 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.943005281 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.325556387 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.312653147 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.849203034 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.476588385 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.535304479 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.321586773 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.73529398 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.31878805 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.315952841 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.314693893 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.536483714 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.321482252 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.315900243 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.885248966 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.331752671 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.386427611 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.321324365 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.315730884 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.566974309 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.316367683 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.555185507 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.315280722 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.322169016 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.318434375 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.717198165 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.315585269 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.960182679 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.326694641 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.315369529 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.47346705 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.556305478 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884205322 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.316231274 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.575593486 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.811971907 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.382146166 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.321599409 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.824865157 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.388039234 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.322020648 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.31648738 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.315228947 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.317822549 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.361973715 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.382820224 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.893211155 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.951861775 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.896327758 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.399940273 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.331193903 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.319501389 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.877617457 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.330728799 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.316464697 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.718334058 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.964616572 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.333195389 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.324392288 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.946150878 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.333394182 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.38916491 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.326650265 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.729882751 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.320556854 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.364039517 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.314118822 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.32410738 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.318377339 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.384949252 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.323711343 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.317160154 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.935658445 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.496388147 seconds)
  done (took 172.996568856 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.311114229 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.308817633 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.30843554 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.320636718 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.309007604 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.316348368 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.312499101 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.309588303 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.315413191 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.31057731 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.311582771 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.31227276 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.310735182 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.317090529 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.318245236 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.317485494 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.926635264 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.308660405 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.31107081 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.309878026 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.091495333 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.315464465 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.311864863 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.311839401 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.312267505 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.313980931 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.310432693 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.312849305 seconds)
  done (took 151.395478969 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.316895296 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.835880835 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.322768245 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.436312379 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.335223651 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.31650702 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.434261061 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.373750833 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.322105617 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.316732346 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.318151652 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.597233196 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.323586003 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.790436712 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.488763129 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.438942686 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.793671159 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.322816085 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.318897609 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.318906061 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.438590186 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.325867925 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.59821318 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.838132735 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.325639538 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.837996485 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.312380449 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.32112379 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.32061707 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.840046785 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.321739698 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.5945829 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.388637599 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.37646519 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.838956307 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.792732677 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.796217356 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.452675603 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.318342697 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.319856917 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.316595016 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.306005129 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.840713024 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.325743242 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.321677954 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.833494602 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.336614838 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.321072762 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.328787083 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.319032269 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.373427252 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.37927043 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.607324568 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.845437629 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.394536722 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.345980174 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.436536073 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.691176163 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.32042649 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.791009048 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.305703073 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.845925642 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.327196325 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.308681282 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.320773919 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.326399847 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.453949283 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.441482185 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.787821547 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.320068503 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.788357875 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.453485873 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.323290389 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.319009487 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.320911093 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.845614482 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.801409686 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.45809959 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.444753602 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.494338037 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.313039738 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.320408614 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.310200554 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.391380102 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.324696049 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.847576806 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.802131615 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.3256227 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.321431935 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.322079834 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.321822983 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.478778014 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.852968884 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.393036875 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.792880284 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.614660169 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.607015597 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.324828187 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.37406444 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.324759647 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.6063463 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.324634798 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.373170642 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.756573276 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.606351237 seconds)
  done (took 156.48644783 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.554078427 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.428639301 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.410526656 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.429799245 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.89803787 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.87491639 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.460275775 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.434610234 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.4177428 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.552221253 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.406433113 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.416014458 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.483977484 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.410687643 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.015000006 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.382388492 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.409757482 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.447996343 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.415450246 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.298744332 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.909910266 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.591193891 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.485772825 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.22042837 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.413191302 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.049355818 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.847228916 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.882329687 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.494583716 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.543557435 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.850531354 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.380502883 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.208512349 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.940621375 seconds)
  done (took 63.219241934 seconds)
done (took 668.943963083 seconds)
SAVING RESULT...
DONE!
