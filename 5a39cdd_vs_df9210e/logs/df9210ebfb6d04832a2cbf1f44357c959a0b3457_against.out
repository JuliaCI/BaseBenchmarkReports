cset: moving following pidspec: 24652
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.334861196 seconds)
loading group "string"... done (took 0.590659053 seconds)
loading group "linalg"... done (took 7.379721979 seconds)
loading group "parallel"... done (took 0.17177297 seconds)
loading group "find"... done (took 1.170489861 seconds)
loading group "tuple"... done (took 1.792097938 seconds)
loading group "dates"... done (took 1.224863574 seconds)
loading group "micro"... done (took 0.22940984 seconds)
loading group "io"... done (took 1.042947 seconds)
loading group "scalar"... done (took 40.108913828 seconds)
loading group "sparse"... done (took 13.260435493 seconds)
loading group "broadcast"... done (took 1.019540688 seconds)
loading group "union"... done (took 13.950721556 seconds)
loading group "simd"... done (took 4.715650061 seconds)
loading group "random"... done (took 9.531320219 seconds)
loading group "problem"... done (took 2.009498231 seconds)
loading group "array"... done (took 22.611010943 seconds)
loading group "misc"... done (took 2.046164437 seconds)
loading group "sort"... done (took 3.438809157 seconds)
loading group "collection"... done (took 19.4500389 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.561979719 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147079045 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119997357 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143961684 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192655597 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134837126 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146457653 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086975058 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.991739743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.166166632 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143000216 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524557798 seconds)
done (took 5.193834893 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200252936 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089915618 seconds)
    (2/2) benchmarking "String"...
    done (took 0.100123172 seconds)
  done (took 0.971956364 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066775945 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129783923 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082657358 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068716244 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068157466 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082811951 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067689752 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067397934 seconds)
  done (took 1.356887207 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074761828 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070145934 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086853642 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070215776 seconds)
  done (took 1.092371711 seconds)
done (took 4.478266371 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.942595474 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.257746718 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19338288 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.469275174 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153671046 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192179215 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672697996 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354023028 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216591633 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104509308 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107987135 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396672286 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109232741 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677549292 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079058187 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109460974 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17221446 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444505606 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083268146 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08369013 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106273348 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146574708 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105426846 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080102879 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171777382 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070157987 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.15546451 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096953285 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069287337 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250362525 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191443962 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.704969416 seconds)
  done (took 10.800524682 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1009344 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122315015 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070251357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143261916 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122979379 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073345579 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073465066 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085628397 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092901355 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163606606 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119308789 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124987257 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067463032 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070567172 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104711009 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232738683 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.09206481 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102952723 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073235657 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076723695 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126799312 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10078939 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083657508 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096527819 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153771347 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196566173 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099845002 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11427371 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07009144 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102168812 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131837565 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133795595 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066824669 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086032289 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.162241074 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097583325 seconds)
  done (took 4.74018714 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.119577076 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178497859 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094457964 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158213546 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087891229 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132090995 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067470469 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103130106 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256228555 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182564824 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495358212 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.118054752 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115101737 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108375125 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069288818 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088937748 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069164019 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.634538625 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149482503 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123216187 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087341042 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09179699 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072218554 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363515114 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069009281 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067474973 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086701169 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060647723 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15032479 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069228617 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.275248798 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.111651295 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071037311 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121908442 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18058134 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097875027 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128090549 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083288295 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068876572 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173903677 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074456006 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082959401 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067783963 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108276342 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120845973 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109538299 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085040219 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069098779 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.187181221 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068804843 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102749638 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.978754052 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168696013 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095828432 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06706199 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29957496 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104246841 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068171721 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065515312 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.299362388 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096500756 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.203350076 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068503696 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086436112 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067446862 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.090312189 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.727690312 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070647564 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.014353153 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071444178 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078908479 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087576906 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068658991 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092413014 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074386508 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103821782 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065386338 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067687428 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087776965 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066629765 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083774472 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070426162 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103741462 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215338915 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068716837 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084542613 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068405946 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086551403 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115953183 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086499552 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068099006 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117542392 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072153311 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068413197 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.124098303 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06952053 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106113663 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086448757 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116295895 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08521049 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.15729019 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068180892 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114521467 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078756368 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117669773 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099530443 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070257844 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159080085 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065080352 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084082867 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067880118 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083285994 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070736673 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069609332 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101224721 seconds)
  done (took 22.434871549 seconds)
done (took 39.880665753 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315533658 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096495337 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098301558 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.095700716 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079776414 seconds)
  done (took 1.550082329 seconds)
done (took 2.380072063 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152648309 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104590698 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08366481 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099325223 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083221113 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103937979 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120602605 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083793917 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122081253 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065617966 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117101866 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06465202 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082907898 seconds)
  done (took 2.149274551 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083874467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085962388 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088059589 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08192462 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081781195 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08327656 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079888084 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107640784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081211978 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091059859 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065321911 seconds)
  done (took 1.757741686 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08196592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0841442 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088772184 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080812507 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081181807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082953757 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080702172 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105736839 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081177283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091605138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065586127 seconds)
  done (took 1.759230673 seconds)
done (took 6.48972361 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081547753 seconds)
  done (took 0.909871099 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.764047021 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.930310241 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085990498 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138191312 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224707804 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159900137 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.465200095 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113722316 seconds)
  done (took 10.921279278 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101877958 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088512201 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083742094 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091798726 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073040639 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092449826 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075022599 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07239183 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092492244 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073706383 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087774614 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07151564 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087136641 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072687873 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087501283 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072582407 seconds)
  done (took 2.218392485 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106870798 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105562375 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095182088 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079413873 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093355437 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0750929 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096976332 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076058669 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091046268 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07528197 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094475609 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076910889 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091834253 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067618425 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095068993 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07947045 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091041974 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077528685 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095112944 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078354016 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09604045 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067339503 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092708621 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077643941 seconds)
  done (took 3.023910581 seconds)
done (took 17.904127929 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137107248 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078959635 seconds)
  done (took 1.048553111 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084703481 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101433874 seconds)
  done (took 1.026389207 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086409065 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084089312 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092579352 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098048014 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08416503 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069725946 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10626768 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069136068 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08444659 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069152889 seconds)
  done (took 1.683695693 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071291248 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096831079 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073052259 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.1010483 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075790934 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083954054 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075722771 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08739638 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080564863 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081782192 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073056083 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.103649261 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072217412 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105502098 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091322571 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071681939 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090405514 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070949788 seconds)
  done (took 2.348255796 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067937191 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069087458 seconds)
  done (took 0.978736677 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070843203 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064524532 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085261344 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068418984 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082952593 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065062111 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082615611 seconds)
  done (took 1.361806213 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.420044482 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111045361 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.271302559 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074291144 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.111039886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301130287 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068745269 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072416051 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091917312 seconds)
  done (took 2.404602246 seconds)
done (took 11.687195242 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081592987 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087178192 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115047908 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.453791134 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110703377 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067172552 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149513594 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.218013678 seconds)
done (took 2.12387507 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129364174 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638351399 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.420741942 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220153703 seconds)
  done (took 2.124733048 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.394481474 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093856161 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076457789 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069896047 seconds)
  done (took 1.482752315 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06933837 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070804051 seconds)
  done (took 0.988316621 seconds)
done (took 5.567444576 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069813987 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067243571 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.082894017 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069171867 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064240255 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082822696 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09814437 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087910179 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06804537 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.086113712 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067989207 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066874995 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084382634 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066697356 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064803054 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086103586 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066251653 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06489172 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085763192 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065184937 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084446166 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068384413 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06477838 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083231501 seconds)
  done (took 2.681303396 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087559661 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085577906 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075124561 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090615026 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073566843 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090124008 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077076673 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067738123 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091125394 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069352917 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08897548 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071872848 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088345189 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071996211 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086946034 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073287146 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091355637 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068544011 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068989059 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090783371 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072947062 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086984978 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072209808 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091936582 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072128077 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089983832 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070523857 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085635463 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074852283 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089400022 seconds)
  done (took 3.264256011 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073248272 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064841079 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083301222 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073041183 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064677625 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085327255 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065519218 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082818342 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066513339 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064938889 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085769606 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065792782 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064759112 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085468599 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065946776 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086599922 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083862052 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06590439 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083466797 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066294111 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086054519 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066208799 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065034876 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083246213 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066541181 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064293444 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084625299 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06519429 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083405413 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065796334 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068681865 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086197019 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066548364 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072170041 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086734651 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065535924 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068912243 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083409813 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067258461 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083142918 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066271089 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065542042 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082742881 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072962346 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065718264 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085395463 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065729463 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084860137 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066799168 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068659821 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083636194 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065327262 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08424923 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06844104 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070009522 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083585486 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066900414 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064623179 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085375331 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065714377 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082401998 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066654499 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067459436 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084413649 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080957321 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089883359 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066387211 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067037169 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084796687 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069048104 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066350909 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097355059 seconds)
  done (took 6.195862144 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.124480116 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095680297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086920783 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068146549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082286865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067013799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069651741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084269166 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067689599 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090062974 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065935064 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084623343 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069542569 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08130295 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083830325 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067857567 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088666164 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066721293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066338324 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087435067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066677209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088618112 seconds)
  done (took 2.611520983 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.195995979 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091106706 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113496341 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095582962 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087028349 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077310198 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089473138 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073492805 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07193987 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089157373 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071328489 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09074309 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069714735 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089554375 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071999028 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089169217 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072565598 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088336081 seconds)
  done (took 2.483990267 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080371144 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067733086 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109664104 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067219339 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087447245 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071653339 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092633554 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076180693 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089586224 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068301455 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095850658 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179958255 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088591511 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06965527 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088125158 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070838108 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071041827 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085917032 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076618087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092710802 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074187398 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096338149 seconds)
  done (took 2.757420331 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084745357 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0689191 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106370775 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088309597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065921313 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066413994 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093664105 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068522932 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092584173 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069874736 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085099729 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069406861 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072897749 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086721297 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073960133 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086903779 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070868937 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08591223 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071750054 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06511311 seconds)
  done (took 2.433311549 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091459705 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087216302 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071168659 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096413407 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070384727 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08744945 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079605723 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088212588 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069838 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11230502 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069807614 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088683634 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079057651 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094614112 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069399099 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09659915 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077183745 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096993764 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087248152 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070290508 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111879478 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069711378 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095743622 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070844284 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087574569 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07122015 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088134795 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077012679 seconds)
  done (took 3.220301974 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069110019 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068177114 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083927811 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067204545 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065761842 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08516925 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067127275 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065203822 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087226634 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065506539 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084752007 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070080437 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068117874 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086056914 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069148333 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067247862 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086737374 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066327099 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065347433 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085127502 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069394245 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084988104 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068644821 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066450432 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083385002 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069173742 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066123241 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084817983 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069920056 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064666458 seconds)
  done (took 3.066551254 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080629884 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093631532 seconds)
  done (took 1.040445811 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066826396 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082489515 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084716969 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073536805 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091219515 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069609127 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095672907 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073219885 seconds)
  done (took 1.500943853 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086702586 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079343354 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088553412 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098510854 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081048153 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08468521 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161785468 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089391039 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075306996 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08459359 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08358494 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067696604 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093803415 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068432201 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093235246 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075179402 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085018916 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075869391 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07081928 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086401569 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070414354 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098386602 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071962342 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083652626 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070588433 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076839976 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09960626 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069825196 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091642822 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076497251 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092355488 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063326946 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068425398 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088627364 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066815361 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097152825 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084312819 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091149959 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078542615 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087403582 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07914662 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082426781 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073810527 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093072437 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080987211 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068761477 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087901098 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064519323 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083470985 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072862348 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064324838 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086847529 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063933055 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094182613 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072493929 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078193502 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085868974 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071183543 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089340831 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072414735 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093649341 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07223501 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071075672 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086184415 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075663312 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090566615 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079905864 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081242821 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06354141 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066286985 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097938927 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091585166 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093445733 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070672048 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08739136 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066737529 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070891375 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088650517 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074102837 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094451278 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069662899 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092680604 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076312075 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086560824 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071950579 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093808083 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067903697 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070879764 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084603971 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08598751 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085497268 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067890303 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065445395 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09909126 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072324561 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087660582 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066646479 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094307391 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064333869 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069238833 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088577638 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069653573 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099617562 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074527914 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094630328 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078784555 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095690069 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069343922 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089516759 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067066233 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069732656 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086860218 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077318074 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061828847 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091496294 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069201478 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08760897 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078888047 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084973553 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070147364 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0939166 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075318589 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066661301 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084525279 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073691383 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087039961 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074748336 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076444274 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087549114 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063777877 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082811367 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073333716 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067963123 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091485408 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07415134 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090784681 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064162397 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085181599 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07410815 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096601965 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070018958 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07010156 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094369581 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070899933 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08645656 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076927315 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089245639 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068966344 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074965922 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089324836 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065010975 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09143014 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072739658 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066569844 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091794989 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072961213 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090059805 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071046533 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086150357 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076588099 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070511637 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087098968 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068704244 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.0863221 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080312043 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088381073 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065980533 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066034459 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095759148 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066660317 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086919844 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068497368 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071185031 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088376358 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067390037 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086004835 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072811567 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098271905 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074204096 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069330099 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094051908 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080588259 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087629341 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071586676 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086940608 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07096646 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068429476 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097896763 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073355206 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09416834 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070521038 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083934768 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075498755 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094228094 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069232263 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06660719 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086455129 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073344927 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092138455 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072945087 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068035829 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085688288 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069735742 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092039502 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071487842 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087275648 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068541051 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073954621 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0875639 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075153276 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088398491 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079537908 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091857659 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064958321 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090850775 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068166044 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075126981 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08387197 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06679855 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067810333 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089059892 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066904221 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090213403 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064655672 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093778899 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078108362 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068535347 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08691822 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069716555 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093714052 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071919144 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072030642 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091091572 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07531664 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098657228 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068340347 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089961867 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079940415 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086511224 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064289557 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074789702 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086367888 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067796009 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085017713 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067452653 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071896837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097440167 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076660766 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.083062066 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072192677 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085107054 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069172165 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06527553 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092655337 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072800628 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087997355 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076825009 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06927561 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089254225 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072462111 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086993222 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070761631 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08747551 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073564166 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068596764 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090580116 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068444523 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090723688 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069411663 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067066302 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090043102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069881232 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087212243 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075777605 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068537167 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087976039 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071007018 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088814596 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070173388 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068851134 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087725826 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071868757 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088254195 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070466146 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07083108 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084525705 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076231346 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087932793 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0765144 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087848234 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066128973 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074269183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091799939 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073936035 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089499922 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07015631 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088824554 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069443917 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071978961 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095315713 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067594594 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100606701 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077590424 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089115638 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074229063 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068221839 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090694104 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067934132 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088191388 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071383083 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069287547 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088934163 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073929663 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090717512 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069803741 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071052333 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088936284 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069832049 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08856509 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063984361 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069011916 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088830274 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068665524 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09922792 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070535237 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086943952 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068392745 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068482886 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08782863 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065722266 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095639072 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078623285 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088910424 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076552058 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086922297 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071575978 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097497125 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066844391 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066653712 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086381617 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067948219 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076332775 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089676788 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077555014 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087680329 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068546434 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065810377 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090035805 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067081379 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082192764 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067834949 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071444074 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088634656 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068454995 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088354043 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073231348 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087081537 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080553303 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067061514 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089982467 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068743591 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085518897 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069489931 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066819062 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092125728 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068883963 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085906046 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067123394 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067260366 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089275798 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07100184 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087440471 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070822065 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076008086 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087687697 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071891576 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090974767 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064772248 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089490008 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070220559 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067595367 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087313894 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074389409 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091576286 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071737116 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095756439 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070320056 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068875917 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089012147 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06736042 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087232401 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.07048658 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069425895 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087732861 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070368722 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095740622 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068323796 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071804061 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087876931 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069170598 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094783326 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070546092 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089716526 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07798796 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068079203 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090217212 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076566409 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09174421 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071972873 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088480872 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07150411 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073177143 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088624016 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074708598 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088123383 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070363448 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089108708 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067850972 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068280385 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088612795 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06873296 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094724628 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071242606 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068743918 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087349654 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067537986 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087904083 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074176513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076236615 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091321553 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071819331 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083808701 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068016013 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070498971 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086445065 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07169727 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091801273 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075338129 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090982573 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07037763 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067789973 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098714109 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075288292 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092170176 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066956879 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073566144 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090167963 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071262197 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089502405 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070080776 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088426693 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073964805 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069928099 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087923211 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077694122 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09174138 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07084069 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068983586 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090320058 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069417085 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083322024 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07153025 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069990173 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094823007 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070767356 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088329152 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080761582 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085896074 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070485522 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072294268 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088404846 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073836508 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083828844 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070856746 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087971426 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072621262 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064168334 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087673428 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066711879 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089186126 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06980838 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06403025 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099343597 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078170524 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092028229 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068829199 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066695568 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084063798 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063965296 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086983413 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070660741 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069726091 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099833842 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067397437 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088623983 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066015977 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087278296 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073249823 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071239703 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086377236 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065811903 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086411035 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072858065 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075010524 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087474046 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068195118 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091281902 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072033994 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066912168 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092642462 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065666649 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092258967 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082261492 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08948491 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070035124 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094479476 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078992482 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068500675 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084023824 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06953205 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091872878 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070097805 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069723272 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090361127 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084814206 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092227898 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068170089 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0883395 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072733949 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067748556 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097422064 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068984704 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089731345 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074291627 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08972076 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078951433 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090518807 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077864647 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090934639 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074309837 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066786355 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089031766 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067610382 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067050254 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090869351 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069346784 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093479326 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075540851 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088215056 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081082642 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098061129 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071108305 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064984709 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088638321 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067895182 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084011931 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07093093 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066405213 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08705127 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067995057 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087570027 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070926365 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07309959 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090203811 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06901418 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089045346 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064759939 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071024296 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091801234 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069692512 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085532296 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07008126 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070117771 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092534275 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071980723 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087367638 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071464879 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069689539 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08984511 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065110549 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095843333 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069158634 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070976569 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090120322 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070231729 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089413986 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073761657 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094759359 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0719242 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070300078 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098446749 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071443777 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08633604 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0667813 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092885207 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068771765 seconds)
  done (took 48.093809815 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11103812 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08630965 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064082139 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084320014 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078240007 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085848921 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065828026 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064436747 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086060683 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067166998 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084564339 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065519573 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093334528 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088158596 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099070588 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088137441 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065259048 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065751664 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084564998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06553508 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093978447 seconds)
  done (took 2.598726991 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089699861 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104922391 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079212926 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103756892 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094399397 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080524306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100145813 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078818653 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105008069 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094277622 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084927417 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100624599 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075907551 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095389773 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076380605 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097582548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10290448 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075741542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100500353 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078609554 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097121034 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098369313 seconds)
  done (took 2.921951056 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070971818 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067061602 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09097748 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064714816 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067731681 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083653477 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072979915 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085403856 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072804542 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066864775 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.096926914 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066787339 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089163378 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0675899 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068331384 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086198508 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137524972 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071210349 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087631652 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070378817 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063005086 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091052279 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063799814 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084180551 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068171675 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072020754 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08949573 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06639347 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087836086 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067899657 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067494083 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086416539 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069796581 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068460841 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087951857 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066637148 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087470438 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068504852 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063643818 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086821182 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070140645 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.084155407 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070364245 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069298399 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0867398 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066654434 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069507836 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088559397 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063244566 seconds)
  done (took 4.669836621 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089524639 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.145973473 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092609093 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125962323 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08531873 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097550394 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072212339 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127429511 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086687208 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068142138 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10585441 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082910436 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090374598 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073297856 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09523827 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069617013 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08938114 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068351658 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093598575 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06883514 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092843341 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076011153 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103549309 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082186565 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094055962 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066066243 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088034019 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072742792 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10303013 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092614662 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07424413 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093320191 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086078475 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091372734 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069436 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.09088963 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086519687 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089565765 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072124952 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08659296 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072877797 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093570045 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075565906 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105719187 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069540154 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094313518 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067882228 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084983336 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084174398 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091150991 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077216299 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105572518 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072008323 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088841744 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072353677 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104719649 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088845772 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068305779 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071652205 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101855874 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065368831 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093356898 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102608469 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071512306 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094954248 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084599215 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094260858 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07202375 seconds)
  done (took 6.954579499 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078417375 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09408693 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085470721 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10485026 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095227077 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076340759 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095347214 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076921313 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094649567 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080212875 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095059208 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117856044 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071913789 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099484959 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075312582 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096359916 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074550339 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096865684 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0943346 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076353606 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094561664 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084239583 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096010747 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104063571 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105755029 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090861327 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076070137 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096302913 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103203822 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076292178 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107025359 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075692289 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096445885 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104563294 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088977097 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095898037 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06726488 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096430066 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074817866 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097044913 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070318302 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106181831 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094301688 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070600923 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095209891 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076232425 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104937475 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.108803724 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079855232 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101916507 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075248056 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104790365 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094084714 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076488494 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104938361 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129620928 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084144314 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105792162 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094503202 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084177885 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104106798 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111693984 seconds)
  done (took 6.612510254 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091633646 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09858204 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099772917 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065816735 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066840478 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093493231 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065965589 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087452207 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079002615 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09760653 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080744735 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093285933 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075392062 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101038402 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092881142 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077394107 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092856294 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071437892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099410713 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071842561 seconds)
  done (took 2.623751319 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079483479 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106812896 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070962954 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09533875 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072945844 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07498536 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09295222 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070468198 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090287709 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071930862 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100782909 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079875311 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090830313 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075814389 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099880046 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075107753 seconds)
  done (took 2.272553053 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081917716 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100747924 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084238554 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09058546 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068250441 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086917588 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069358994 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064376969 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087161779 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082409203 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090568752 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070858749 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08977698 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068242588 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065050812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093319007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065558569 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087529513 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06790609 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105414986 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080910142 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087817891 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070235384 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091416028 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070523573 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095007089 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069942481 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066311018 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088195344 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068192209 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090550753 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07559852 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086327285 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067561305 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086194165 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068346789 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068813711 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090605956 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072128602 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088924222 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06767119 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088258208 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069942385 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069225942 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085891822 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069000677 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084362875 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075992396 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066219327 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090497973 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06741658 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091663766 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070850926 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099980819 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071914588 seconds)
  done (took 5.299429287 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08393427 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071531366 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085500949 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067678392 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091558759 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070564661 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071862856 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092904436 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071372986 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087106187 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070947209 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091304084 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072549417 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072725593 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091236822 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071382636 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085664571 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070958878 seconds)
  done (took 2.347196828 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07583588 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067977158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098143757 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069320454 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089039646 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073115334 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0647896 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08945809 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067039217 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089098334 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06974326 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069798627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08851828 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070912449 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088595204 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070987047 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070323948 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088270349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068391096 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084666977 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071995369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06737148 seconds)
  done (took 2.620774826 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076047668 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096228565 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.170154419 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111949874 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084151804 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103668647 seconds)
  done (took 1.571019845 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095230392 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104473092 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070908837 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110092486 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078275391 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091473363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072234149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091564242 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080964215 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105486936 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070574049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102823686 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100427452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08362689 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098183439 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077496422 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091842717 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070120028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090424912 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110646006 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071355093 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100840619 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071680924 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091607724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071335203 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099814409 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100445516 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08609915 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091559156 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080431965 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098966673 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071229615 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100789574 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106127801 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073599026 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100316031 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071045621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11271957 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098486635 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080709691 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092438407 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076875531 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100666926 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076496871 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102731012 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091571135 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077849859 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092791318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07160545 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118832714 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098814985 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080297286 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097728663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08064098 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10227419 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118048529 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105889181 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080796302 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098344577 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104230574 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080986281 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098050435 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078528832 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106352483 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099391682 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079433072 seconds)
  done (took 6.91731224 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085076241 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109413462 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071958901 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107476071 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099466946 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071611982 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092068087 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073062443 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092376275 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071268005 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134761907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070678681 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102565046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100035386 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071918147 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091131206 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072089953 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10090682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070515836 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118961261 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091980524 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079423463 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100875126 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099986992 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084360801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098535049 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070625885 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093746649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069564667 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092337726 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095811098 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072202834 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100610267 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070365583 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099873062 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070455575 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09256866 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076867122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092260153 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09728022 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08235158 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111111933 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070661161 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092174457 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106247984 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07199658 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090519855 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070780061 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091771583 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072029055 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107071409 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085665308 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106735398 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100519733 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071307577 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092261093 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070462002 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093256862 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071631163 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09812105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098703956 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072596138 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117902116 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070275075 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093683503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10076059 seconds)
  done (took 6.802779412 seconds)
done (took 134.406035482 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206873962 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.191060997 seconds)
  done (took 1.326269551 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072145517 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120499532 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082566643 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130328868 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090926371 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102703413 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121680216 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082691491 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068414167 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090861355 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068685969 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091589555 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135348628 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068743722 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090974175 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07162401 seconds)
  done (took 2.423784223 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106545152 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202382994 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115105058 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068375072 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104503617 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080142137 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088629253 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081259366 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095250915 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06849242 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101620231 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078192774 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066632446 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10069974 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095356568 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081210022 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066656569 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102376068 seconds)
  done (took 2.642832704 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110466062 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150557879 seconds)
  done (took 1.200996948 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206573205 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.129818787 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.212448114 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.486366393 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.244512146 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.296142408 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180941148 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.186323575 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.146738134 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.179802461 seconds)
  done (took 3.203991133 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102282228 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176475431 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.32479414 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142725135 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091114655 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120891261 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144070287 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112275913 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085314576 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106159848 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104141903 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080703283 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121592972 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078788538 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098712416 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080458942 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125306899 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076425525 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098849261 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079239412 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122846177 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067669402 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098766868 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076478731 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.104082558 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081826256 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.09067197 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068597413 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098187582 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078591877 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10198568 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117410899 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083120279 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136859008 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106354219 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.139922681 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079202895 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097753888 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076412017 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096259007 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078814842 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101962975 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108643306 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081798465 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068085627 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102903494 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067651766 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089340459 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082209509 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101512545 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082217719 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.103541143 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135786375 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101702103 seconds)
  done (took 6.521222213 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.770707718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138947231 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073553895 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.832077951 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118351757 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08633796 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.752878128 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095841907 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247077938 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762202674 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116649637 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079960263 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212479561 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.222903389 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.946492087 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29461897 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.646788474 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110267878 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111759395 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.138027916 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169313941 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161682535 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1542971 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413309654 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099555868 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073946368 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142360706 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102142566 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145926289 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106692838 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076415984 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158941061 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.254630232 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.165081358 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097885037 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073964606 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071932481 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176174993 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233389765 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196588642 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163678962 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070047833 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072561039 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167023198 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136937556 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070232593 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14610594 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178937808 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.157132761 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077332486 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101344267 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148514791 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145675699 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.146991336 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10596747 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298154383 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282818003 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095479275 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126016551 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087151244 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247333853 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10507546 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.186089275 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143919504 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19623204 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072957321 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815833495 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154080258 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0918651 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079814592 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126161446 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076418764 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.166316129 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151306667 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367434728 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16903458 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077297607 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093544448 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189162124 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085042449 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095982622 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14704019 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099048514 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105906901 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.174464133 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152615704 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153323445 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21469241 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.172401146 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144880395 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075546266 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130109496 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099880308 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.200734978 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201008734 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.146413581 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.201637104 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146286929 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.168193203 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.153931209 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079799175 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154787166 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125890346 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106565301 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143732633 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199153384 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127435183 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085372627 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097402701 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145590323 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131377614 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109030734 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.147394278 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156013176 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.43802974 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153644925 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092269805 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089977338 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166383072 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148359022 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078125591 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248041352 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128986508 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.150703119 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12631771 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070069395 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12537 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144488032 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104606805 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127155189 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144344568 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102434612 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.223949672 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.19855188 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.083431302 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22325198 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.144488619 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101038798 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156065186 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126615495 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151730842 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102336761 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14714984 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077469828 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807388124 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148444865 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12803307 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0984293 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171254364 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074430487 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1056012 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088876721 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091282639 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795917342 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111014812 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083341079 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109013208 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078424319 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127390171 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163650005 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077023908 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.145339423 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212510513 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079861486 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125646815 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109501557 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.14569486 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09920234 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086500496 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10966719 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085013485 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128556028 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098999309 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084819429 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177535317 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.146720257 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.202371686 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.555767903 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071825645 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10923348 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209078813 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072298044 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274646991 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143272748 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207191516 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.148407245 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10283867 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283000381 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.149360193 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170886212 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110963843 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157009728 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069740814 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165389619 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150574422 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073048733 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099875477 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.147875283 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.152789572 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.169801202 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956941909 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094828541 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.21612763 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069806835 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154145378 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100710129 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081049402 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.273902367 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072730984 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.176854716 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.149424604 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075894592 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109065693 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.82443464 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110694504 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145395657 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101400937 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203957339 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.149699157 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142987678 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144538476 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102209311 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.147974062 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.198547107 seconds)
  done (took 42.220760334 seconds)
done (took 60.468128601 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288844867 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196819 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262722144 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153253994 seconds)
  done (took 1.94414458 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152847436 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110127197 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123504427 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090392135 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108610307 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089948604 seconds)
  done (took 1.640179253 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.44065735 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.283346708 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244230505 seconds)
  done (took 1.932565624 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.30806967 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.238136216 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464240071 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.311858325 seconds)
  done (took 2.395150046 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199507939 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119761305 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.093298051 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087742137 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16711358 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.274482094 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131649054 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19597865 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080121568 seconds)
  done (took 2.35703637 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.208030992 seconds)
done (took 11.439558317 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.118683277 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.215595268 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.313685323 seconds)
    (4/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.288383817 seconds)
    (5/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.080255914 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.203216424 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.232796188 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.103229172 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.279338537 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079783437 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.294535856 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.196363386 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147290741 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.12946333 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.097490314 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.175893275 seconds)
    (17/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078866113 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105121765 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079610059 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127160885 seconds)
    (21/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.153291065 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08789429 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.28893522 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.119789654 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080812486 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118064624 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074328801 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067107385 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.279535735 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122221376 seconds)
    (31/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072930253 seconds)
    (32/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.223100348 seconds)
    (33/309) benchmarking ("sort", Float64, false)...
    done (took 0.155956244 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108394449 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142247927 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.254813585 seconds)
    (37/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.18616735 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078140752 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.103769556 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07606587 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.098695757 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092608143 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.205098353 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.151026942 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108483635 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115095419 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108050029 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.148603985 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.124228317 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089234372 seconds)
    (51/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098037238 seconds)
    (52/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095139368 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099677896 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.241499326 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120431257 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075226882 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.076821492 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078302531 seconds)
    (59/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.127155746 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068765165 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.292977618 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07748332 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.107511735 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06960607 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.143106704 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053307571 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098159054 seconds)
    (68/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147890109 seconds)
    (69/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.12627595 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071698816 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.103741753 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080093872 seconds)
    (73/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.174032447 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103337743 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.077746672 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.219974533 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.186610129 seconds)
    (78/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063695123 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07246736 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.136303048 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12901544 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.088413863 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075731504 seconds)
    (84/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099430124 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.299684649 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.070443692 seconds)
    (87/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108938903 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.092785958 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075779968 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.262895196 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073656385 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.25665387 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160746738 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123237978 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115051699 seconds)
    (96/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068647145 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.103982772 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093149543 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.263507365 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091708871 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091938029 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.177115249 seconds)
    (103/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.177279838 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075324574 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118954877 seconds)
    (106/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064364271 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087276126 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.253683362 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100894357 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082203318 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099535606 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072324583 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096021446 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117478205 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07485852 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.093285882 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078753429 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121776181 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171244426 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054814197 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053940721 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.158999291 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066526032 seconds)
    (124/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092690676 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054665284 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054467348 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.172335915 seconds)
    (128/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.245325584 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053879597 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 0.153722664 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05560329 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.144731859 seconds)
    (133/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054646709 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124300194 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075779081 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067932864 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092089932 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.162387556 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078165727 seconds)
    (140/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.136687327 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080393601 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07513321 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.185094972 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.118305237 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.108608555 seconds)
    (146/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.087718058 seconds)
    (147/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.105479554 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.289202618 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.099312395 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.166980495 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09154567 seconds)
    (152/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139303304 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068945367 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066410585 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.120125128 seconds)
    (156/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072233404 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097888065 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.153910486 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09985638 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076312819 seconds)
    (161/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094051782 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.1004665 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.086386863 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068420226 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067427536 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099383855 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.248438048 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089642713 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077439475 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.255811345 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076623179 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055110156 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.257250593 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077837479 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067146434 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.116136727 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198131506 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054891504 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05555063 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106947016 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072227742 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064593508 seconds)
    (183/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.105338778 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05450612 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.247686179 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068907706 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.076982166 seconds)
    (188/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071864223 seconds)
    (189/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06625041 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097652217 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065352931 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096132056 seconds)
    (193/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.08773737 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075380712 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097760489 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055851234 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.113483129 seconds)
    (198/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214846126 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.247959154 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.1018318 seconds)
    (201/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.218498724 seconds)
    (202/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08040825 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055169568 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055895221 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.078807885 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079037842 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161675522 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.099387223 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078609315 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080327498 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067418994 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092921018 seconds)
    (213/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054511524 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072946323 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.07727463 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053654449 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055102524 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100476509 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076833925 seconds)
    (220/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053349442 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100628256 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082456764 seconds)
    (223/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.24298333 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053243869 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.255304578 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.091272075 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151233124 seconds)
    (228/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.124804765 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.109182214 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161223075 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10717806 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076050155 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097380902 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087318418 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074856679 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11481325 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176930992 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091046406 seconds)
    (239/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068150633 seconds)
    (240/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075563617 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.169008834 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055001872 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117714513 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054816666 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07745286 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055966598 seconds)
    (247/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069870271 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076314052 seconds)
    (249/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055848425 seconds)
    (250/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055879831 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172436385 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055519608 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067594386 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093977128 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143478346 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09248223 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069211354 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.092433837 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055207756 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069538704 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054783098 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117929519 seconds)
    (263/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063548771 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099309369 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054466067 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070144158 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078600515 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069501111 seconds)
    (269/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06427689 seconds)
    (270/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07650708 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079264262 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068336347 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116691328 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067953743 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094244136 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056623567 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055640695 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091660015 seconds)
    (279/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068320637 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075480291 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091131021 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 0.169855622 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180635662 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078292567 seconds)
    (285/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12144785 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09968656 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071622243 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066394976 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204757295 seconds)
    (290/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094682918 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068773463 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144491989 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054666655 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068718578 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09984542 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069243845 seconds)
    (297/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075285045 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.119310058 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074180452 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096127816 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17302126 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078570888 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091673793 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096373758 seconds)
    (305/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.055097048 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069995804 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099169527 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069849049 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054506079 seconds)
  done (took 36.164828452 seconds)
done (took 37.124818821 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085872168 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118899373 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079165756 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120159015 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084515852 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105965561 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077089883 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105624195 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085788334 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108209945 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084276528 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056666608 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103411886 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078760527 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101721674 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096996625 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106783124 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075700263 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099910435 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06912347 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075736649 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092576185 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070516211 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057448413 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104818919 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076500321 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100595597 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078512943 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067554803 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092953563 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072725013 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099453653 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069398575 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08247986 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099721401 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076524377 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10317166 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081159603 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069892276 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.09261573 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076840425 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091416848 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076597894 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076368097 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.099440853 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073967775 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100414794 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08490119 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121734305 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071098979 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075856218 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.107130881 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079223094 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.101890929 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073400365 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100273291 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074464387 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119481064 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078371302 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070020132 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101187094 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07863975 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096703348 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078273424 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076038477 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102725833 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079595508 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098704278 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078942539 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073196381 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093004898 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077344228 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095730721 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06864348 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079218714 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103966863 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06840757 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096348168 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077383053 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074004488 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091950296 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071243871 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06993894 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099647044 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071126294 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056147339 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.09602612 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075496187 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090671495 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077816196 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074549792 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099963405 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071746179 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103031023 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068939097 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074228096 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092617337 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069518053 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069220138 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096555412 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068445122 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070816939 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102981514 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069224774 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098276962 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083666401 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067189003 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099982157 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068742565 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091284853 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086659037 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101579799 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069379301 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070345116 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.092244372 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076614258 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068370425 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.092498775 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068681916 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068008558 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09933823 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067784222 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093497755 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077930111 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081784476 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095157868 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073079341 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070294212 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093330456 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073296348 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092048826 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069258664 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070342601 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.090648559 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071471444 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068678351 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099942374 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070670466 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100653506 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070897043 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076804387 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096898279 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074110498 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07252677 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092621748 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061787729 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093254689 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072580241 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071587435 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09280393 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070604303 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067888886 seconds)
done (took 13.785114172 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070587491 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178413018 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132127065 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099672699 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116401951 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068007503 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105591974 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.135090973 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071984686 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133068431 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092607734 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113677663 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144651857 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069382296 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068395542 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09648366 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070813475 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117072162 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107328068 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113872639 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148870774 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067579883 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12708095 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093310555 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118212776 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133295977 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069313197 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095581071 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073481599 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121377842 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090173113 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071057607 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.093708845 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127251741 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102096469 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113679775 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069227085 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11194701 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070571435 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067671166 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.122487914 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130319902 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084988815 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110472817 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071534629 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.095981205 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070394279 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115168533 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094471931 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109425962 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116901723 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139401845 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073535119 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.11069113 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069012187 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115084778 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.087733482 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094510524 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070918412 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071149065 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092873295 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072594143 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117243702 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.098009362 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.097347112 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086244996 seconds)
  done (took 7.60132753 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089356418 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119945941 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088204816 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112072198 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069419546 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068700394 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095260808 seconds)
  done (took 1.670501169 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071236002 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091609391 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117809387 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092710322 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.115710347 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089906888 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104149855 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06934636 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.111555545 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07095556 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115691923 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110075476 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095286964 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078113333 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11932871 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071305054 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093306839 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095448602 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073708986 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118143762 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074163716 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115691868 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073240095 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068825606 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110740678 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070119171 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145676933 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074303042 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095647265 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073423927 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067059897 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147977452 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109105864 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081536374 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094221637 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086790826 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108932948 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069477976 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087263247 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100871007 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086156306 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09462219 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071417246 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067272848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099790664 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08217792 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0952468 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072566486 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072131201 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115620064 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070900563 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.10864145 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071686393 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074212162 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.097089314 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077051753 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103848481 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072299347 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09068929 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096601594 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087731301 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112335506 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084791895 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111849678 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072396697 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108267419 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085957694 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071524836 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097538773 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073427572 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112127454 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069394435 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070398241 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107324953 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070831855 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119039691 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094222988 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095492027 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082275444 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069926165 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096499971 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070070155 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118066154 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075121375 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069082025 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100192815 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073916403 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092674266 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069854737 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072661836 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093611967 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072135827 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071907398 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095174069 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073434016 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11310925 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070999177 seconds)
  done (took 9.732292736 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072582691 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071124219 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09672467 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07157856 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070051964 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096299409 seconds)
  done (took 1.517302665 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103128964 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097852495 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085320752 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09917621 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111758151 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108955181 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087050892 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110761196 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08795179 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108757969 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08599245 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110905627 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092204621 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102485784 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085505441 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10187811 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086299239 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10572736 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083791218 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102182246 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091757663 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101018062 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07716467 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112065233 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075478982 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100676686 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08324156 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105959677 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084356413 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11158702 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078507385 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073018228 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.10104119 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110614994 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087824955 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098668443 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077927841 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073386312 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106815315 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074020243 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112411476 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076706794 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10806775 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075179631 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111576818 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075097399 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09957656 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080736354 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110187176 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.0755079 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.099230252 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07704164 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096882042 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076019932 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074285936 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112669224 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074912079 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112530108 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076620755 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.10180828 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074284732 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098941367 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086076654 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099451202 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084940665 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100097883 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075443912 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101597162 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078698476 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.10147081 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076363958 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072975835 seconds)
  done (took 7.699150648 seconds)
done (took 29.235532499 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673356648 seconds)
  done (took 1.70568971 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.81317029 seconds)
  done (took 1.846342889 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.528722373 seconds)
  done (took 17.568240543 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.667685616 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.847548398 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.833913306 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16331725 seconds)
  done (took 3.546539083 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.906484211 seconds)
  done (took 1.958762504 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.250966071 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259075552 seconds)
  done (took 1.548143008 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.764269049 seconds)
  done (took 1.807651769 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.330068899 seconds)
  done (took 2.369291111 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.346925515 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189895128 seconds)
  done (took 1.586497133 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.537353218 seconds)
  done (took 1.587147281 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.823128203 seconds)
  done (took 7.879266595 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237497878 seconds)
  done (took 1.298423591 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.277884888 seconds)
  done (took 1.329172347 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.420010777 seconds)
  done (took 4.473697577 seconds)
done (took 51.542945161 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081854538 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083884332 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11032953 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081737376 seconds)
  done (took 1.406487107 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082694576 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075627981 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107026958 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075904679 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106319021 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075857702 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102716203 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082283993 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098939834 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078435246 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075482639 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100876667 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07861968 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102360404 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074258805 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078570306 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105048628 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075331944 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104273056 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07605988 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098649339 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.08011192 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077957753 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.100477931 seconds)
  done (took 3.170961095 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081256335 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075118429 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103006091 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075233993 seconds)
  done (took 1.393279593 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082095815 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119872185 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095201861 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103867628 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098557472 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116523729 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072889327 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071801675 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100094663 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079462932 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095168319 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103044585 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118295893 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078719584 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1070365 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070688643 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094869475 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.094499559 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079382563 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.107079959 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073740987 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.105374603 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071895464 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118163814 seconds)
  done (took 3.317986191 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081741714 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130384125 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084117843 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117118397 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097309112 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067605307 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.106190973 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095058648 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156910822 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067411928 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100284904 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068378622 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100296275 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069408215 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079289871 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139088408 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140471815 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071978554 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125042095 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070226304 seconds)
  done (took 3.027139389 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079029291 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072512565 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093589961 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071307596 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078137794 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101726552 seconds)
  done (took 1.563167192 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072490085 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069323098 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094203929 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069813671 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073722047 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095319883 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069436248 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068267885 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095156715 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069894405 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093879809 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070084536 seconds)
  done (took 2.006468258 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466537625 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071096051 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094991984 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070050792 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073197967 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094105669 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084404711 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069471037 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121155379 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068377454 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095707173 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072799959 seconds)
  done (took 2.449220856 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277671011 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080282507 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345579718 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174157519 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143888671 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163958444 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133257122 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120098933 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20816578 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145178024 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237281817 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206509302 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140635601 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197906154 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095593255 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137836466 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219093324 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205528482 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13614424 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233532489 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190221205 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162835689 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21512434 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134223527 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115355588 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178485533 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074762138 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107694981 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245718814 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171589388 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210557298 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117366024 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12696865 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242158661 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22979908 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201848082 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143467709 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115450825 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161296138 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173897186 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271651553 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119179272 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202770649 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140069936 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110717403 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181124026 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153210579 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152592902 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141921112 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119292473 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180745261 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250691602 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199965365 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092754417 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141906144 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146454142 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150009394 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132568213 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257955881 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229960824 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167031394 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07320305 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127052889 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195844011 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192389301 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148061214 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162709583 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124831148 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179299089 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220002557 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151133508 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182648337 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190976486 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094462233 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15312043 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203743659 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164399132 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214780832 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18521879 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078273489 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158602947 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134684676 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084241587 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176885794 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104453463 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220936699 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131670311 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14552479 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143768016 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142990022 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142532896 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20432199 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215574706 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135787804 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068688472 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136904282 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156354784 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209415337 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094798045 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142641592 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152456687 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.108070759 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17550487 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078331125 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185347602 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082964064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158814884 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166781137 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.1072983 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159608864 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135074473 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.106439243 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198615386 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201432953 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120775508 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112537838 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212430146 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186075144 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111075172 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211726283 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198306556 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.133061077 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133884367 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212774358 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256865465 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094169501 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233710341 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136163663 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088012543 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119810107 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160947144 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145931745 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155744337 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11213207 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161249385 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238442876 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079913993 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126873944 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175050895 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111153021 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085621178 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146135436 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132467009 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.126552885 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.106286076 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138418459 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204444696 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161602095 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139346498 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161766264 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131684991 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230588598 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09451234 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.137953655 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137271777 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073494017 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198059884 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202508553 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109126185 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209596658 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189970735 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110243521 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154398039 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114733037 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177256442 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108929719 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075746591 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205617611 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144407048 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118289234 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222846221 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135354537 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162739805 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158141847 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169669101 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194463237 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17020841 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138945615 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093207132 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147865252 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162589713 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104567232 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12547106 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.089551056 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135753025 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12683864 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087860699 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20772258 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163465669 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12813893 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146005912 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103032452 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21666564 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08218321 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194262994 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154636958 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099926849 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.222668185 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200304417 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200076263 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131056819 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183722562 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073905762 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105179358 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119622996 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165641483 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087413444 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115062897 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151416775 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187836501 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192563108 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175713199 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143406294 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158305767 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197177508 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101404476 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122029899 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217517431 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160021188 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16393241 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096751306 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.131614031 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184608035 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137531799 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285706499 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151254779 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160542669 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191900746 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.141760653 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108990432 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109275589 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201489233 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137834185 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191510306 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132411105 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119411944 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143213646 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085389515 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137449494 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1648705 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15236061 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200548725 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150796207 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169664766 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106877823 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14979212 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158551639 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155929238 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067103476 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154695692 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232012173 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128345924 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153315309 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223281759 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083347626 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157863775 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249841812 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209462856 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090342279 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141921116 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158032604 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166030658 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153680342 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206308014 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143672967 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174096995 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14419338 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08932542 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119874574 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12973575 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11383398 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127506755 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145231286 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.153117977 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.127056749 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167189955 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145211436 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145419522 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153011338 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130430202 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095138765 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129172235 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24851676 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156625642 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245334015 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132083063 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189201579 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236695796 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104788828 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085380504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111462097 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179435473 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113619089 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172087574 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101299977 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136826665 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163023056 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208309443 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099267806 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.099438896 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142791576 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172226503 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144250578 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13168245 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138266344 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208430972 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136388485 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08329342 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186318665 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111665439 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136779391 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245866449 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064118215 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128686237 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078659667 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112635002 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16478204 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226233012 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111265989 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.135700368 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157811232 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15789246 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190842395 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108563289 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129625014 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143640476 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187229498 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162822047 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.122549378 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146759293 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1662032 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227054807 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140642002 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.129728102 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241103721 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199022974 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.235628829 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118799791 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151404824 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15077135 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120954167 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208940206 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113772306 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212058764 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114964986 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174097622 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136338446 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12563122 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164568222 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.129978382 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119705683 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206119553 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155022141 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114463804 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083030881 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14650854 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184864586 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109837 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106656357 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177080122 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104176833 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17447648 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241730523 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084370022 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140034218 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129072119 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112685293 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115401696 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136643441 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119919981 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.127429597 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243353334 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.124646153 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219494083 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178935106 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151013917 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205163065 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133670083 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670606971 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082711445 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223271212 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153153777 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252821196 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131799044 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154341783 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144917831 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158768447 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182542462 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139533943 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.211225628 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169077121 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155614925 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112250911 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135942801 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146372564 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09557024 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140647994 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149688197 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149589059 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133387525 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155230936 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192670203 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086843054 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128102702 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19874252 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153679666 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211300658 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17934479 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117604202 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154367863 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180315201 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112640328 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159056476 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228116505 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14276645 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131224365 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087491891 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141202809 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242712226 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076935281 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233401163 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160866383 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145556068 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147408381 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155836276 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196998059 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140965191 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161660173 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128570647 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149383185 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152154475 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089596816 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.110444122 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140695244 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148281449 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102721578 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136874364 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153792274 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198800454 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102973118 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128084075 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110606245 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210999517 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252025045 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093629914 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11552576 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154654427 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149245795 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15081205 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160599498 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.113790077 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086189027 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.116321277 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116407325 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143555597 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151411394 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136514678 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145596567 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240668248 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089244045 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.259940223 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128379018 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142403697 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074985176 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110866835 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103899015 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12919904 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140026866 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129576166 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215263644 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.130183099 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122922583 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097780336 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104822692 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087330428 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194880964 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146124061 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159355896 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102555508 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.094573372 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141931064 seconds)
  done (took 74.858513433 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140826962 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.11160873 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125703537 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.182248285 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156332558 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246287558 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.190004622 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23280797 seconds)
  done (took 2.522112819 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073098292 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125901339 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106660702 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121241234 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.095534749 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073350326 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.316291472 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.115144062 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.096150117 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.096427342 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.126385228 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098481104 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.493096096 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068444646 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09862742 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.092610521 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071311467 seconds)
  done (took 3.397045314 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.455172658 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.668717023 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.456864124 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.103576878 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.961276921 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114558568 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.492078893 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169971571 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096779654 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.43972975 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728588569 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160663831 seconds)
  done (took 17.986451131 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078203563 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072298668 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114192019 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087735096 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102407465 seconds)
  done (took 1.591114079 seconds)
done (took 119.73386588 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08429703 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.386493887 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055824814 seconds)
  done (took 1.615686404 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088227831 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087453476 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11736714 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086381402 seconds)
  done (took 1.52732379 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078922252 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078113774 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116862236 seconds)
  done (took 1.418176493 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.303424255 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171394635 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092962199 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08745238 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080571294 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108302499 seconds)
  done (took 1.420624145 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076726748 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078024719 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103739408 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080050448 seconds)
  done (took 1.476238918 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080777325 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054916496 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057296862 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085906756 seconds)
  done (took 1.422983205 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095658077 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109361219 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08575407 seconds)
  done (took 1.433253712 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114096708 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118023906 seconds)
  done (took 1.376576786 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086450447 seconds)
  done (took 1.225696523 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097212523 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146935676 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168309557 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143373546 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.178673675 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143376873 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.119105205 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093398493 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108585273 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120731978 seconds)
  done (took 2.463892076 seconds)
done (took 17.162244304 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082545024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391212596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364931039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121717435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672428674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385598105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.02032176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123453235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112943141 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098987506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087005112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678709002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970655576 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347914161 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.956518553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31924162 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.68049087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072255559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097096195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072142333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.002995064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099232818 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071498909 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098502556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652897416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373216498 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099029158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320003493 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097810056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073348877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357521419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099213773 seconds)
  done (took 16.13609825 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074518847 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149482636 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07909939 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085934045 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101911627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072303736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102590863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072443346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153669097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070415679 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116047521 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071817818 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101242773 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072697557 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090002038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100342791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072534739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09794397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072059113 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072361036 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118115464 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071400243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098155803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072316186 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071018739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111393128 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071709737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098470299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072786079 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072218559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102566919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071608151 seconds)
  done (took 4.008013074 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119621801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.159689955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077097258 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134187789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.143464509 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074678795 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.17457352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097690661 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156607202 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07043093 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116424662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071268511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13383628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073031166 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119573944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072449236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09950625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073537955 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071480677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100571767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09042587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098580899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072012617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07106432 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099645496 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085042313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09959101 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075472725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096737331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075181566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074159596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099984254 seconds)
  done (took 4.333172888 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075535386 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07790286 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113957362 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086928056 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099867854 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075845551 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076168118 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100646404 seconds)
  done (took 1.857741276 seconds)
done (took 27.469213116 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083698618 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07327643 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104397482 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08521782 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102722751 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083702251 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069780248 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105688819 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078422132 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102827189 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080869388 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070663626 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101982915 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071097675 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076689059 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100014887 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082882835 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103264424 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083714035 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110080106 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074005865 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077994611 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10571775 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08265325 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110589385 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083017529 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110743565 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07777767 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072072724 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101477306 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079764112 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116615043 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072379866 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082636601 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100799531 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070949871 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098572867 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071063583 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082517758 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107643854 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072658807 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106197621 seconds)
  done (took 4.873004207 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095368721 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096222531 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118981215 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065158907 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100474309 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066088461 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120530028 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065204922 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065720436 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121682443 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0591119 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060791302 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.09013872 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057695886 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061015869 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058458039 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092276211 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059329256 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060445926 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088915665 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064121482 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05640029 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090765493 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063265579 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059240826 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064040125 seconds)
  done (took 3.158323411 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080288883 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085424768 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119489651 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132114249 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.13867615 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077291732 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.11158041 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089301911 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115836081 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070417977 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101374724 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101367189 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088372634 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.107164876 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071034295 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115169468 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086022283 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071005374 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106669366 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091772285 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115931679 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081096188 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120127361 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083872971 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069882813 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10197761 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074505816 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112067725 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07745029 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07946285 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103962458 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074032673 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100850854 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083019643 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102169976 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073507813 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090953507 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110035663 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079955677 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.098978322 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076318342 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071302902 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.122285525 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115051093 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098549382 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077343132 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10593239 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08129544 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07086471 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118025239 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081658792 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097684262 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075494319 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070183499 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098843818 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085219699 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099442599 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.084008233 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079923232 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102404938 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083673133 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.10229473 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087576855 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069567592 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.108071855 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069380239 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099168104 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070954651 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092196537 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101961973 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112685531 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10032917 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07201477 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10715704 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079083684 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075582213 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100238913 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086813826 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108408186 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076423583 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078426621 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104475801 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073213661 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117487249 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073675339 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071526159 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100972741 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078011849 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101428007 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072935389 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084335782 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100390333 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073378405 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115861682 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071589225 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071872605 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107037483 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075905283 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09778774 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084971242 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104141815 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07311473 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079422277 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09944743 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074244793 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108445404 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07709758 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068779585 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103418932 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077381145 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070450725 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100306663 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073388152 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100369421 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081751621 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076144602 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10554114 seconds)
  done (took 11.807198771 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203119291 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193978654 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073177033 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186292089 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082020125 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112559619 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186127489 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102965449 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100747828 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070798469 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099562466 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11123373 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133745305 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147958486 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083735906 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070193134 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118914167 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140252786 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.188997514 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154286026 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.121137273 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077886829 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101617038 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07254907 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072428661 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109990062 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087901366 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111680217 seconds)
  done (took 4.480891928 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087828304 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.13175011 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078299599 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119437105 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096023537 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098079717 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078472049 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073052664 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112790515 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083401414 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099848903 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078944725 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.104516243 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.082583608 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071599385 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.1096891 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080633861 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100365666 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075341835 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074926874 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10717307 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084011519 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103186925 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071117631 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077053641 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.099354897 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06863588 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11944259 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070238436 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.122430544 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068709743 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106382412 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081329907 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070739694 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100546959 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073014374 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100461855 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074050444 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072618182 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097644315 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071062213 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059780835 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098449782 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084076351 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105538237 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063343669 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07637874 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106277759 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076515212 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.096111887 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074905706 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072833181 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102590307 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078524309 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074562557 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10540784 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074397297 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097869196 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078595399 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07232497 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095355824 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0703264 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075213308 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.100647348 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079245846 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103512055 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070593642 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072822093 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104343271 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078157824 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072606333 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.103288511 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068817438 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101838358 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077014395 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074662604 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103749675 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069952313 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097394147 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072718026 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058926513 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098484345 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058071638 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074339518 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097535166 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070884884 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07217824 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108432944 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08536118 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101123394 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.0770436 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098520302 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072678602 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07343607 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094098441 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075292169 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084133134 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116893947 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071109178 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.098014503 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084184821 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103884528 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071541268 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058531079 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107326529 seconds)
  done (took 10.255339579 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097428397 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123366969 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075395891 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085626907 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125445376 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095184292 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10805234 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077697845 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072041704 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11809313 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071665722 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108145545 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075634419 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078849448 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124984655 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079315697 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102354787 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080894606 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078494177 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137557322 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083706961 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.115155365 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.08112588 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.101122107 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076517414 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083141259 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.129366827 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080969467 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110043765 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085627057 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109838348 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099406654 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085640446 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10624051 seconds)
  done (took 4.43762681 seconds)
done (took 40.154952458 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.257743691 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.449456117 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.216765935 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.176547843 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.257819357 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.220002913 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.231597471 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.219207125 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.346538317 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.220479427 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.465471935 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.936126978 seconds)
done (took 59.160978071 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.296111504 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.35954111 seconds)
    (2/2) benchmarking "String"...
    done (took 1.499900241 seconds)
  done (took 4.020116586 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.564634976 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.209485976 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.507881447 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.232436206 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.221115434 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.668032038 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.917183017 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.084759236 seconds)
  done (took 28.001569068 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.226092105 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.607579161 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.721957079 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.725771965 seconds)
  done (took 18.44429872 seconds)
done (took 60.490950038 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.237805141 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.290264012 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.243821393 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.20516605 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.3325654 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.243095341 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.584137652 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.448713749 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221137564 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.208929349 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.239635438 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.234337946 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.224428172 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.493551176 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.231132324 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.228507416 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.258352452 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.711526906 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.615121552 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.232285564 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.254742228 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.281832374 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.222299568 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.227032916 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.295459103 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.222677825 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.231663325 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.231912439 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.590331501 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.225109356 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.322266492 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.744298253 seconds)
  done (took 192.496366199 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.222090266 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.190136065 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.33677936 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.252071715 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.637391656 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.419677045 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.364828107 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.725289592 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.24066825 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.235839356 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.511859738 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.222946699 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.568355482 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.204797361 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240562131 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.226322339 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.485950526 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.564570439 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.248048919 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.498125097 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.246708207 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.416968258 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.314363331 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.464039012 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.230440886 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.227206445 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.241597286 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.246867447 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.412804508 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.421644523 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.269064671 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.254639135 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.822026009 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.082515412 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.237295138 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.234307901 seconds)
  done (took 150.683189194 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.507074765 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.223423638 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.223018887 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.223840682 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.255105432 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.22347666 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777231329 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774863669 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.728588735 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.71862176 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.284826039 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.225088281 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.44921692 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.223637952 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316722223 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.235926746 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.224725408 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.239527189 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.25057121 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226645179 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224493593 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775024539 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.237431347 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.304868209 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230110952 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224118354 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255364658 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.618488989 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225857561 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255905453 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.543761378 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.272637004 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.224409473 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.521329879 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.094504889 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334367482 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227385402 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255580191 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.224888813 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.492700052 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225673686 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.225233187 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.225951926 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.228036856 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.80628041 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.225615047 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.776885647 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228301814 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.123351443 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.224133468 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225542403 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.623604915 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.670219497 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226152582 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.225446627 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.228900465 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.226490821 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225309397 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.256925834 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.441653671 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.227061761 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.324847691 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227399625 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.229965062 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257786575 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.227517928 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.377151303 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22772535 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.908319695 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282437797 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.456258377 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.779584898 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230460725 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321420268 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345431747 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.22726203 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.225910722 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.227024086 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226974047 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.227532444 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.333561095 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.227744338 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.631420434 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233993705 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227661408 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.286042611 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.322151911 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.22783911 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561697028 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.23032755 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.228585687 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.923933995 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319973979 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.228360451 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.228903956 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.228353267 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.632618077 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782457859 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.42799785 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.229587946 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.48166071 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.227980001 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.645560879 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.759993718 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.823251097 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.228509583 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335131078 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.232800024 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.229724198 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.230114803 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.256934996 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.22845289 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.281797702 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.229451933 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.62546703 seconds)
  done (took 348.068021636 seconds)
done (took 693.919226914 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.923404025 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.862385037 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.999637772 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.877705814 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.860374723 seconds)
  done (took 10.692101619 seconds)
done (took 11.862489923 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.419279712 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.418761133 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288573701 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.423877982 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257338646 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.439152844 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40086135 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.248262993 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.332806944 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.306535192 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333164118 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27936091 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257818173 seconds)
  done (took 18.575219555 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.561630774 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.551059597 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293284151 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.555395965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269204788 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548039312 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432307031 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.465809032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429038465 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243958036 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243151397 seconds)
  done (took 16.76738237 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55628428 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.551454006 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297717971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.558422124 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271666301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550324803 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456258817 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.446471663 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426950206 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245190836 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24368749 seconds)
  done (took 16.776279496 seconds)
done (took 53.291132179 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.239207047 seconds)
  done (took 2.409767125 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.273937436 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.437046343 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.258122711 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.24459475 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.2410499 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.240766903 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.244980792 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.240586104 seconds)
  done (took 11.353627668 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.236876425 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.238626427 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.238425619 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.239467778 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.238487173 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.239672273 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.2394153 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.238971584 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.238979371 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.241048283 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.235814531 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.236995831 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.236627852 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237127462 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.236630125 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.237433754 seconds)
  done (took 20.983402592 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.239969305 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.237018852 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.237902827 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.237603555 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.237622776 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.237215822 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.238325634 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.237378765 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.236421635 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.237223641 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.238058923 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.237389622 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.237702743 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.236445685 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.237284006 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.238358308 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.237672535 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.237376613 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.242356341 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.238515833 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.238274711 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.237374193 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.239599968 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.237623443 seconds)
  done (took 30.885908986 seconds)
done (took 66.804769094 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.350621672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.882584939 seconds)
  done (took 9.407030252 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.241131273 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.241771644 seconds)
  done (took 3.659444389 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.241951111 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.241864722 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.240556038 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.241030453 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.242303518 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.241442826 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.241592472 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.240577239 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.241434512 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.241126587 seconds)
  done (took 13.587525096 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.241311854 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.243620422 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.239436631 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.24257179 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.240749511 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.238597246 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.241735082 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.241213059 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.240913003 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.242553626 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.241605008 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.239721349 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.241370652 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.239443346 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.241245276 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.238535376 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.239061621 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.241146036 seconds)
  done (took 23.508952649 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.242304992 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.243293576 seconds)
  done (took 3.661824514 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.239577206 seconds)
    (2/7) benchmarking "second"...
    done (took 1.239376435 seconds)
    (3/7) benchmarking "month"...
    done (took 1.238716879 seconds)
    (4/7) benchmarking "year"...
    done (took 1.242667717 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.239399594 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.239900467 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.240038443 seconds)
  done (took 9.854246821 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.242585329 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.431260257 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.512490346 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832425087 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.244570162 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.246342411 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.130986349 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.246365379 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.247600096 seconds)
  done (took 14.309759472 seconds)
done (took 79.164485428 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.24986073 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.236117653 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.147555915 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.243240202 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.253513618 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.579104515 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.249727253 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.361698124 seconds)
done (took 37.498425686 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.238154281 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.946402005 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.952075198 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.235835896 seconds)
  done (took 11.312150992 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.22144142 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.196585153 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.230215416 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.275003814 seconds)
  done (took 18.100689632 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.862523503 seconds)
    (2/2) benchmarking "read"...
    done (took 1.57054176 seconds)
  done (took 4.610978483 seconds)
done (took 41.440758842 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248206174 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.244282787 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.241800215 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.244396617 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.241407106 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.241244983 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.239804809 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.242447773 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.248373575 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.244047299 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.243718604 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244421626 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240630369 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242549691 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.242377839 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246043786 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.24609569 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243282443 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.244622188 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242704001 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.245516535 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244176716 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.243051427 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.242147542 seconds)
  done (took 31.02571873 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.246687899 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.243379072 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.246067037 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.245725345 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.244066331 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.246103974 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.246729354 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.246419874 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.247151126 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.246723857 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243179234 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.2434531 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.246178684 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.244442031 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246501632 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.243555693 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.247770663 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244722944 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248041668 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.243282233 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.247703151 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244961063 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.244235345 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248145884 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.245320255 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243542536 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.246807114 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.245568808 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246015636 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.245550844 seconds)
  done (took 38.548838623 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.25428773 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.253620449 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.246802947 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.248725206 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.247394488 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.245458735 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.247300987 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.248000004 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.249873544 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.247442829 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.247172985 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.247205524 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.246503173 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.248661936 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.248415189 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.247674664 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.25077334 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.247085134 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.248109424 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.24678517 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.247952965 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.248250614 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.248388406 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.247585723 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.247544749 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.247761986 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.248681975 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.248356779 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.248805145 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.249078289 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.248998575 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.248734383 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.2492427 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.249107745 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.249411996 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.249187729 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.254213703 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.256866885 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.249172229 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.248935177 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.25105828 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.249410082 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.249982448 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.249282106 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.249341219 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.248706561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.249349631 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.248951384 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.252371343 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.250976878 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.249025855 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.249347074 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.250361455 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.250849313 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.248348448 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.249231351 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.250797389 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.250502103 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.250607271 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.249563402 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.249766727 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.250568386 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.250650396 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.250293306 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.252228807 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.251365112 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.250074139 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.25037027 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.250449669 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.249937037 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.251285782 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.25098956 seconds)
  done (took 91.14317973 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.250798663 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246921336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.249324209 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24781894 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248286878 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250632623 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.249628016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255559415 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248210248 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250700234 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250867492 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249033271 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248671077 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252598901 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25000143 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.250340998 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.251773468 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249178089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.25137211 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25230962 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250795535 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.249183591 seconds)
  done (took 28.690868056 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257552839 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251545426 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.249528783 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253202149 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249500648 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25162136 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251586465 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252452268 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255157625 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249103505 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249952199 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2520742 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24911339 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248964819 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248238208 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250696626 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258744298 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250256357 seconds)
  done (took 23.714465435 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.249840568 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.250758184 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.252731787 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.250739667 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.250419906 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257709013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249626207 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25297445 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.25256982 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.25088557 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.252341387 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253133068 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.252376556 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254960136 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252530155 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.250458149 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.25237055 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250269111 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252360213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249073526 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25003394 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257909797 seconds)
  done (took 28.732414938 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25330619 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252100819 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.250419903 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249503652 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250227176 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252988244 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.255368039 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.251878405 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.252248039 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.252949245 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250086169 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.25273046 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.250380273 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.250741122 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.253229652 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251076916 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.253561028 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.252357379 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252179331 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250268371 seconds)
  done (took 26.22241848 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255145078 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254602992 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255414767 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255816783 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254711119 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.255129593 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255780663 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.254106945 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255201695 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255279439 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256299394 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256794217 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255967717 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254778354 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254579096 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256102682 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255564188 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255765038 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255890187 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256804469 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256227056 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25484716 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255790848 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256326762 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255599836 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257143546 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256487166 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256357276 seconds)
  done (took 36.345028095 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25467051 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2559761 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.252851759 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.252355913 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.25348496 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.252788598 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.252785066 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.253413845 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25583779 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250494704 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.255066631 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.253711133 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255631232 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.25498523 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25668613 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.256037375 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255372536 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.251975323 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253901513 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253110752 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.25615902 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25557808 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.256218624 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25362644 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253170308 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.257378812 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254241736 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252998449 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258108982 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25263987 seconds)
  done (took 38.819576338 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.276232679 seconds)
    (2/2) benchmarking "in"...
    done (took 1.275759321 seconds)
  done (took 3.741479649 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.254031006 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257304894 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.25834556 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.255918814 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252985133 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257592378 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256572218 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254996481 seconds)
  done (took 11.236991622 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.25683164 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.262206736 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.257377482 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.257634651 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.257875143 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.257202203 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26499569 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.275125592 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.258618872 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.259878206 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263987515 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.265687975 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.261077885 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258444456 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256232584 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259254484 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.258231813 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.257625853 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.259778512 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.258676853 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259739451 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26237481 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260556325 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.255335628 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.26016368 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.271069097 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264059678 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257942326 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257803662 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.262542949 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.259701039 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.256928779 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.259826678 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.259576427 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.259519452 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.258559897 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268812722 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274538563 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.265907273 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260574903 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259253104 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256843038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.261691313 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.260532844 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260777551 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.260284292 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.260013521 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.257608044 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.259886392 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.262393825 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.265592916 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258072115 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.257655442 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26241629 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.262528328 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267553562 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.278458813 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.26299323 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269066896 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.271298149 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273270345 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.268776721 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261014502 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.261377156 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270699724 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.287453712 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268104442 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.276193802 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.258019148 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260260776 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.267525713 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273171117 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.271291255 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.261734648 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261177644 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.260344006 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261873517 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260651423 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268554042 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.280819794 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.264601357 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262296453 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271634205 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282596724 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.259767054 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.262281558 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.26181617 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.263226516 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.262912077 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271834173 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.279625794 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.263649323 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.260276465 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262222742 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26247576 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262242976 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.259487171 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262404619 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.258488455 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.263511182 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262035081 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265115218 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271222205 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263339235 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263920533 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.270969151 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.262928937 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261513078 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.27030714 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.263257302 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263901397 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.264232979 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.26951408 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260745073 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266245478 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.2709162 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.264407452 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.263145878 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.264917575 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.265003002 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27280022 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.290592982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.262744045 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.263787232 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.26924032 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275374753 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262618336 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.26711063 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.263668958 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261271082 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.261102657 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.265128636 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26370423 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.264730912 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263815332 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265133012 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.261465819 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.262721666 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.265500797 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265157264 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.266147728 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.26524305 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.266340445 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.267721969 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.265698205 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.266647183 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.271372463 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.265356323 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.26568971 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265465418 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.261885088 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263454368 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.264456052 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.264345507 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.265802289 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264875504 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.264188136 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.26573017 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265387881 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.264960964 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265385567 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265850632 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268962033 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.266434865 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.268025564 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.263938367 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.26299274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266285917 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265418237 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.265825144 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267187216 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.264802449 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.27060692 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274315619 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266293274 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266401555 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.267526585 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266131816 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267120037 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267681393 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.269150674 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.273918649 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.267212894 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273094869 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.268043309 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267634515 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.267206566 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.268205951 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266282973 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267050935 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.27051789 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.274710764 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2815324 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275519267 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.268397459 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.27076061 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.268337856 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.271452724 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271751017 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268386164 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.267244276 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267858036 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267540664 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268218365 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.269830431 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.268342257 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.267742376 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267938126 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.266728435 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268436703 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269595142 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268349239 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269722023 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266068561 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267894223 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268090399 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.26695152 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.266029346 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.26689251 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26804251 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.267988282 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.2680718 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.274300261 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267141158 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268894743 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269392701 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.269371201 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268838007 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.268971295 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270804097 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.268109421 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276077967 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.2867117 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.270059169 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277178912 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.288815672 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.269847125 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.273555139 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.269675189 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268190586 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.270164199 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.276495918 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.269188968 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270818435 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.27086037 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269813947 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271165681 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.27629245 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.268011611 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.268898697 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.270611273 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.2709963 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269301257 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.271508938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.270639757 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.271272982 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271651782 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270221248 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.270155674 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272657036 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269472635 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272025536 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272227959 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273320727 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278778155 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.276280831 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272891494 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.27226334 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.271611553 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273630116 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.2715182 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.271758191 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.270084689 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282914736 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281653102 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279218136 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.272611169 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.272598337 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277488588 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272921313 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.275812311 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271234869 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272481189 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.271451849 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270764102 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.269276891 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271715329 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.271691867 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273535315 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272833083 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.278181913 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271625753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270802526 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272930097 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.2730146 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.273155144 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.272292697 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.270894319 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.275384214 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274523207 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.273217449 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.271942815 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279711859 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29057114 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.274028763 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.272816767 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.272973328 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.27242379 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.272705969 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272932038 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.2775465 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.281204602 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.276514521 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.282564483 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.274917728 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284364925 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.27453979 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276208744 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.281794702 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270707697 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.272294492 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274295175 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.27373481 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281935556 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291614174 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.273434864 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.278264095 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273682286 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.275161328 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.27331863 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.273913926 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273842983 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.275208639 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283180788 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.292389471 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.276776618 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275272333 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.271973577 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.275167327 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.275100656 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.273974124 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278088778 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.273652674 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.276301522 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27486229 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.27384364 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.274075525 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.275800829 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275234443 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.2723791 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.274014694 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282890833 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29342537 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278231379 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275214306 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.283702501 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276363954 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282885805 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.293799302 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27587177 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276010205 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275691151 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.277789931 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.274349137 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.275614901 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.275570821 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.276018749 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.280309777 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.275965868 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.278375508 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.274914021 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275906238 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.275348478 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284880339 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298434513 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.277453797 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28039767 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.273625085 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.277740374 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.281493411 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.27790208 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.275540415 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.279055262 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285124253 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283430876 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.27490232 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.277367706 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278907548 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275782965 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.275781282 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.276657199 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.275828509 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.277930862 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.277753249 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.27975099 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280591215 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.2768542 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.276072634 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278473657 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279223659 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.286767279 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.276297994 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.279562217 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278226637 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.277484855 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.277833139 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.277086986 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.278497267 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27815839 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2781621 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.279044449 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285217477 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.284238171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279751448 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277291493 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.278817903 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.277643524 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.278517876 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279003292 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279422845 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27869396 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.277754548 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.278398338 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.278596296 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.276329392 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.277785316 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.279614987 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27727771 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279703803 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.286603846 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277224327 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.275575353 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.279551466 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278281836 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278290115 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.27900469 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.287365884 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28077428 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.289832084 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.286470248 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.283030976 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.27919725 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281451164 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286575537 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.277294607 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.279710031 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.279311333 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.280671684 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.27938288 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283678963 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279861499 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.286730445 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.278829751 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.278478623 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287056747 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297942469 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280457794 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.281376883 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.284409655 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.280817425 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.276521088 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.279957848 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.27944483 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288675137 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.299046437 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280077139 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28111069 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.279943481 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282319074 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284684779 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280603213 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.281964567 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.277072308 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.280613566 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281105036 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281361501 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279225249 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.279441777 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.280149772 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.282953133 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.288997419 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.277937314 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28353319 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.279704379 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.282243484 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281574803 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28213607 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.279340286 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.278756022 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282222672 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281642528 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.281797869 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.281623457 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.283324936 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.283070788 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.282035301 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281142542 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284621746 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.291565135 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.29013261 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.277145078 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.280532214 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.282672692 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.283578991 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281730706 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.282974634 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.281447041 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.283475938 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.281478983 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282565843 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.282183268 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.285285055 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297011215 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29988291 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281837028 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.283128566 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285317483 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.281679537 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.280198164 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.283138783 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285081662 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.286588476 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.290380462 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.28326177 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290246344 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.298822539 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.283409074 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.287662562 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.286358678 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.290437907 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.284742127 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282617122 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.283923453 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.288263533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.298683559 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282846092 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.293603264 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313780371 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299752622 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.284307656 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.285078604 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282398464 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.284107196 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.286136943 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.28424572 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283882136 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283666854 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.282985763 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284834636 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289209604 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285096154 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.283019982 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.2853065 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.284482907 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.285783228 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.281113752 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.283466344 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.283550193 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.285417568 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.285058077 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.284912312 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.283205359 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297542498 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.296361237 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.284747746 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28588154 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.283507203 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.287871084 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287432361 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29642872 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.291738946 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.284794813 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.284933347 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.286251651 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285187198 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281518375 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.283989415 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.285653925 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284673891 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283963682 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297925604 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294251005 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.289913072 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.28546777 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286849849 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.285383249 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286671363 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286371199 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286602322 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.286512446 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.286340577 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289736665 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.286812467 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.285105631 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.288308049 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.294219394 seconds)
  done (took 760.827913483 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283321113 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28371774 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282113727 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28185645 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283312544 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283685238 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282103351 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282392167 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283181929 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282978831 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.283746046 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283357458 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283933142 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283958065 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284427133 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283135453 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28513168 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284586894 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284920023 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285305408 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285012407 seconds)
  done (took 28.174650839 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.287291182 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.285209942 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285669289 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287472855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284181662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.286356374 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.285299347 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28848884 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287022161 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284810893 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.288046513 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28720285 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.284849619 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.285506721 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286604758 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287937914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288176996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285856926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.288417188 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285187076 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288179985 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.284862533 seconds)
  done (took 29.5230661 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288952305 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28838352 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.287984801 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.28586939 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.288736357 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.285925157 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.289358043 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.289161253 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.289107479 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.28829046 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.287353276 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.289465137 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.295613179 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.293894277 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.289772889 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.28901541 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.432780695 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290091007 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.288933666 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.288262466 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.285898121 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.294818625 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.286768527 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.286514183 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.287921188 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.290049848 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.289160436 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289596621 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.289505507 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.290102794 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.29315245 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.28909337 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.289153393 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.290321958 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.288739768 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.29101182 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295190661 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.290872925 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.28880273 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.290625266 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.299901487 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.311885406 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.290832274 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.296013763 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.290284075 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.290902144 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.293294427 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.297094567 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.287118727 seconds)
  done (took 64.603268948 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.289528566 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289902722 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.286740007 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290907342 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290128428 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289298812 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289724598 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289093401 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.289182813 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.288520015 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.290178536 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.288843698 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287959341 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.292100417 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.29107096 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289421545 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288129735 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289206193 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288640966 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288280877 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.288906471 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290582649 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.291028196 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.290440056 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291868325 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289516557 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289280648 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.29203922 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288973187 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288813907 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.291314811 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291871344 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.292143084 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.290350069 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290189784 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.291990712 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.29224542 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.289397674 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291274622 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289545211 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.29259318 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291817401 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.291426764 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.293155718 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289333234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290868824 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290329474 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28926635 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.290058192 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292203982 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.292534773 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.290459266 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292843761 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290992361 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.293454359 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.29342007 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290691926 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290807423 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.293019384 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.29066718 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.290321399 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293946063 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.292575531 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.293243925 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.293896623 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.291523213 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290467486 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.294324698 seconds)
  done (took 88.993716945 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294513543 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.294444556 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294296801 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294282133 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295174031 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.29511015 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292263554 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.295346442 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293890753 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295419543 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295015876 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293529524 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294308015 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294377425 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295990086 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29629157 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29593255 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294890916 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294504214 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294672162 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.294865122 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295166212 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.295095412 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295460897 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29631195 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296119657 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294963853 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29493051 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295314746 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.295217396 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29573826 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.295836144 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293554237 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296246199 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.29599767 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295209534 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296603242 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296307589 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294391167 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.297815535 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29562433 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29576357 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296271368 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.295684385 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295663688 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295884837 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.295659151 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.296325535 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29609271 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298019361 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.294705743 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296299049 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296305999 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296247669 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296825505 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296331679 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295994168 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297336084 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297435499 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296735769 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296408859 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.296039292 seconds)
  done (took 81.550567278 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296762918 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297171836 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.293126439 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293321181 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296783141 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294205969 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29724867 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297461784 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295360382 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296534893 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297188877 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294705724 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29366472 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296692057 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294218095 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293325647 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294018242 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292674206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296015234 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293913116 seconds)
  done (took 27.133173816 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.295457612 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298108819 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.293833586 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295346358 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296637659 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293495037 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.29746955 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297082162 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295811155 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29704228 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298491409 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299266409 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295872265 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29648447 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297417911 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295191068 seconds)
  done (took 21.971794411 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.300171498 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.301812314 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.3026682 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.302971436 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.300083024 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299902545 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.304061346 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.301092783 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.299836295 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.304144796 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.302868928 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.304269838 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.302590373 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304522508 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.300629965 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.302875054 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.300308497 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.301876643 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.302946956 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303906859 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.301312884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.300946672 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.305043282 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.303193381 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.301531427 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.301615722 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.301031528 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.301428774 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.301191338 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.30420749 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.2996821 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.301683738 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.300443938 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.300507308 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304080048 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.300663594 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.304457851 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.303431192 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.303696101 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303484673 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.304381466 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.301484027 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.303784097 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.304873432 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.301940674 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.304399421 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.302689739 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.302137742 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.301321967 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303142267 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.304534937 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.304362632 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.305309334 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.305231015 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304563708 seconds)
  done (took 72.871999627 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303736523 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305836221 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.302520379 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304330667 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305589624 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30226415 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.304445147 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30300324 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302089104 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.304007985 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303875701 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305285255 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303680711 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305245967 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302977959 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305624904 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301971746 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302363153 seconds)
  done (took 24.705496635 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.304248151 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303455938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.306204731 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.30267128 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.304082051 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306206292 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303847581 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.30537764 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304475309 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.303260231 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304791433 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.307117769 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306529474 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.306662663 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304854109 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304251839 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.30661808 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305934816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.303971526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304868492 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305407241 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305623789 seconds)
  done (took 29.947598066 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.305715881 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.306627503 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.322848366 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.347801438 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.338038836 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.306076613 seconds)
  done (took 9.16552381 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305052024 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306209781 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303618447 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307787749 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308416759 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305366601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305248204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304764827 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308140639 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304476998 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304530873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307393792 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307986871 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306125213 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30751872 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306949273 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305920397 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305139835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305185152 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308063268 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304543486 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308240985 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304781842 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305505745 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30674789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306368062 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307554467 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305777658 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306575381 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307045268 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307739663 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305844192 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30814487 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306883507 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310083891 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308517823 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306298478 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30947178 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310000696 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306938046 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310086787 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309653567 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309136674 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305553187 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307948171 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306489063 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305467894 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307087142 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307547731 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308524134 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310142371 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305995074 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308493065 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310434461 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309591694 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310847476 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308434498 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307243454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309756823 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306950575 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306967545 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309756014 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30789353 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308260265 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310706706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307472877 seconds)
  done (took 87.525365691 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30704667 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308082176 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309023096 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309780972 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309345104 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309032547 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307938371 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305464015 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309307241 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308877239 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309925177 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308028039 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309039572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308919861 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308908026 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308961954 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308203819 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30821574 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308293841 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313453004 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308700089 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309317053 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308528875 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308583327 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308685213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311146088 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310417705 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309044021 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309684837 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309866344 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309643298 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310353141 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309360453 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309728571 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310462198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310578743 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308725764 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310116515 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309959061 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311992086 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310509855 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312486212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310809038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310235644 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30976068 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311317374 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309805828 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310067196 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310986111 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310095884 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309909413 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31228887 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311754419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30981519 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311151667 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311228069 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31080971 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31088826 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313125253 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313522509 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31144345 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311648096 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315118501 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311041708 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310721037 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310797501 seconds)
  done (took 87.705441998 seconds)
done (took 1774.09910286 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.335334103 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.394770966 seconds)
  done (took 13.973384486 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.47725563 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.427784994 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.311123048 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.31499275 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.312755783 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.325627416 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.327066023 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.307503146 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.309235461 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.308507963 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.309425041 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.508600072 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.310359197 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.309010905 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.309730615 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.400271216 seconds)
  done (took 42.82129928 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.335674299 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313468871 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424984503 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321133076 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333556428 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.500488673 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367579251 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311195372 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.488921628 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.35167875 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.881255725 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.334116874 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.307438777 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.428078492 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33103712 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.498364285 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.562887351 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.887133239 seconds)
  done (took 30.222115393 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.770287321 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.322607416 seconds)
  done (took 9.329401095 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.302230243 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.332622294 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.322007988 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.30253289 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.30835316 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.315197193 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.307445173 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.312365247 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.301640771 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.314354754 seconds)
  done (took 64.361456902 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.330607068 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.309881707 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310372635 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.3076481 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.302044915 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.30190772 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.30924019 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.303355391 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.976749703 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.439187137 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327570898 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315551926 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.309056291 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311128579 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309039098 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.346783283 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464040584 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.308172012 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306212244 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314521958 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.309824179 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.427629433 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.352515925 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.309189345 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438004991 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.996063623 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.314519164 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.316631782 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427721378 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.307514593 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310514497 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.309817713 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312697698 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.891091391 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.85299453 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.319830787 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334668581 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318298484 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.30680033 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.422811379 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.310594558 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314915496 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.31214252 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.838157989 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.470014869 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.42479092 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.540327121 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.311534406 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.311522419 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.371813297 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.311823578 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313303313 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.339753847 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.06526687 seconds)
  done (took 110.259294761 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.354368955 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.794089418 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473905174 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.321752178 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.145911772 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.048887335 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.303777531 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.595783283 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.309989508 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303978636 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.638963962 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.8155647 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30704486 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.328127243 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.513738835 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.357839806 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304107021 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.147137972 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.301481784 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.30158898 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725551888 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317506414 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302496541 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.464684808 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341502688 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759714241 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.823870798 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.68977738 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.304664474 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.301431769 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.7646816 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.302721 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.383534806 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303318879 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.573093575 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653683446 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.648385127 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.304961394 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.314094559 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308074344 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.332536512 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769391984 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661289932 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.302601249 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320776126 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76052921 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.302279419 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.302353575 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.308372416 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505363133 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.171922948 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.305174277 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.783982382 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302967684 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.648979337 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.356241745 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357242045 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785828571 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302165595 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.432149032 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.314763322 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303266382 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310132896 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307538385 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306430545 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.646542495 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875428612 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.302635277 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645324536 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.758062552 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302245297 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829181334 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.209384778 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.304483362 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.374220306 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303165578 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.941436821 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.786288805 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.326607706 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302659587 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630844592 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307868582 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619319001 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.321716907 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304009861 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733892757 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.321696263 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.344014207 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.303954624 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.321737515 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.000619426 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304591745 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.583341659 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.370021185 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305384022 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.304624569 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.308312603 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303799434 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.305174921 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.307407768 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.828764895 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.310238851 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.614884466 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324111925 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305144257 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305479719 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.306268942 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305054689 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.523199461 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.752134416 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.311433142 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305500068 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.308520156 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.305326854 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.445093448 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.305995589 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.60625458 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305720031 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304662872 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309466068 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.08030633 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350062867 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30458566 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.305805212 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.153953047 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.513876498 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.323978125 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.305804385 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304822893 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.306247173 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.683546076 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30612443 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.351236404 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309355259 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005642333 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.314629732 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.338511335 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.838712088 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.311037792 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302332715 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.326651502 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306235702 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.619996947 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.583585378 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.800578978 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.306218775 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.307610962 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.993377026 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.348083607 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45506023 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326188963 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314964459 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505092783 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.363152011 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307714268 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.849221796 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.307716295 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521387099 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.309284949 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632544702 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792274893 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.308198419 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309383744 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.005286186 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.978637744 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.892051465 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.313092845 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.638677938 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.308397229 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.757664929 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308411099 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.307475868 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.823103919 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.307824722 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316033484 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.307979483 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.308195101 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.470650347 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48338098 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.793825937 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307853391 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764641586 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328790604 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308626392 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.309012493 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.312020887 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.663026422 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.381357854 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.313630726 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.337868818 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.31144885 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307928436 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773963819 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.244471273 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.309430036 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.462636356 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.939764127 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.310780602 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.308150007 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.940607143 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.781202533 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.810890608 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.313040151 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.613446271 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.310555045 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350184404 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.072761546 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329983226 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820335142 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311403918 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.309978392 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905082059 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.309866168 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.656859431 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.310209981 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.309325893 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.857892367 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.310571671 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.312622852 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.676310988 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.309834454 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559509352 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.309954549 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.339919594 seconds)
  done (took 1106.407018352 seconds)
done (took 1378.619527696 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.311646713 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309629643 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.29773638 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312305854 seconds)
  done (took 26.479186631 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321880835 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.317628794 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319060453 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.317048898 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.320002116 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.316540347 seconds)
  done (took 9.160457296 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.386018765 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312451203 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.313006676 seconds)
  done (took 19.26067939 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.534327187 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.581271081 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.684173776 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.488809746 seconds)
  done (took 10.538789267 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.31980471 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318812814 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.31787162 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.319334559 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.32273256 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.32408489 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.321063289 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.321133343 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.323848923 seconds)
  done (took 13.136736534 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.235930614 seconds)
done (took 85.060309758 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.773659031 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.719083252 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.096195148 seconds)
    (4/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.617991197 seconds)
    (5/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340366373 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.136949639 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.313535792 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.399633554 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.878753622 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354548567 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.797296629 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.313362682 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.326160997 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.807456085 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.567366488 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.399890538 seconds)
    (17/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.324102227 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.353968436 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.339133557 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.951737588 seconds)
    (21/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.32764219 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.122287691 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.298871006 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.728863674 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.418209784 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.323045602 seconds)
    (27/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.698506797 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.695968736 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.566782283 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.721497053 seconds)
    (31/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.579685646 seconds)
    (32/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.201107688 seconds)
    (33/309) benchmarking ("sort", Float64, false)...
    done (took 5.591840185 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.062162792 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.420971824 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.901492813 seconds)
    (37/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.5279368 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.313238617 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.415816836 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.419180991 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.395698212 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.33348472 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.922111055 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.33091257 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.746464241 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.300817249 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.325393822 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.929883878 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.361539251 seconds)
    (50/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.721265138 seconds)
    (51/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.335713652 seconds)
    (52/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.036869032 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.441176898 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.603520644 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.388110094 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.572000718 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.897423491 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.345279731 seconds)
    (59/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.68981577 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.085605984 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.30100206 seconds)
    (62/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.414635999 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.439137893 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.373333398 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.300367239 seconds)
    (66/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.544786538 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.343183786 seconds)
    (68/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.763281026 seconds)
    (69/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.967738185 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.364750253 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.423437193 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.324402161 seconds)
    (73/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.503524329 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.326167146 seconds)
    (75/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.799099795 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.300715472 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.791965378 seconds)
    (78/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.747035774 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.380284127 seconds)
    (80/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.781826949 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.41233781 seconds)
    (82/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.60981328 seconds)
    (83/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.399941871 seconds)
    (84/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.316905919 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.739072272 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.504281689 seconds)
    (87/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.669170025 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.324381395 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.075944325 seconds)
    (90/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.160695207 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344916785 seconds)
    (92/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.725222893 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.317477804 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343399683 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.314524048 seconds)
    (96/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.464832288 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.342959307 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.345878616 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.834673464 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.334274298 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.783813341 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.88489867 seconds)
    (103/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.839275079 seconds)
    (104/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.334127439 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.172733451 seconds)
    (106/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.656982596 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.789415764 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.626805265 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.333691267 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.543274737 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.400969174 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.381075086 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.367014382 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.348497653 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.603094993 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.356806097 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.319119406 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.558083309 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.177786057 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.505525373 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.44668401 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.427373212 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.184039277 seconds)
    (124/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.329903073 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.486693433 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.628591713 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.318309611 seconds)
    (128/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.616924471 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.915358134 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 5.31467892 seconds)
    (131/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.303344194 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.329981099 seconds)
    (133/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.629379201 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.244304002 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346630612 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.768059844 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.726037581 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 1.851201017 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.341623172 seconds)
    (140/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.607410174 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.956391846 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596066982 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.942534473 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.33544762 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.304027784 seconds)
    (146/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.106790179 seconds)
    (147/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.93526987 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.095431868 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.582407423 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.420831722 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.379766654 seconds)
    (152/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.383578068 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.987138134 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.309762872 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.721883337 seconds)
    (156/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.369769648 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387443982 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.313098288 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.452004895 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.345847264 seconds)
    (161/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.437431371 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.267960823 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.679419509 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.127131998 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.332650073 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.347615379 seconds)
    (167/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.319472497 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.866314601 seconds)
    (169/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.449587992 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.728436902 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.739576889 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.621031576 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.982945053 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.345056412 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.262388837 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.729226871 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.337807281 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.749241896 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.307239091 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.574895523 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.118597151 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.331108571 seconds)
    (183/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.347741736 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.907660224 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.130732305 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.348207068 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.915053477 seconds)
    (188/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.954856203 seconds)
    (189/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.421737099 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.449794141 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.687214325 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.526602738 seconds)
    (193/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.642842687 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.3497718 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.405327363 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.849765584 seconds)
    (197/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.118974904 seconds)
    (198/309) benchmarking ("sort", BigInt, false)...
    done (took 6.322918259 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.345039289 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.383220203 seconds)
    (201/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.6987259 seconds)
    (202/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.309282726 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.376666052 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.306623855 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.328654987 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.428885247 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.336465057 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.176164595 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.308248933 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.325162893 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.380631141 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.270607805 seconds)
    (213/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.70029403 seconds)
    (214/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.348540927 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.186800375 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.077435467 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.642514212 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.965081508 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.525513424 seconds)
    (220/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.169059311 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.40956866 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.036202258 seconds)
    (223/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.665198845 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.189618633 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.520645437 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.340465322 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.324748722 seconds)
    (228/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.51321366 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.565368093 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.349219904 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.687606745 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347263747 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.371347162 seconds)
    (234/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.822155307 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.453839618 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.800683099 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.32340513 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.365390065 seconds)
    (239/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.532507786 seconds)
    (240/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.35507255 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.323729801 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.879284852 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.334268797 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.919131897 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.18278691 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.95315664 seconds)
    (247/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.375907391 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.702170655 seconds)
    (249/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.962418396 seconds)
    (250/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.322150697 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.368073083 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.154874887 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.233655416 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.45345862 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.324532406 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.925005394 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.535735632 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.424428044 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.696046262 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.97166953 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.328238138 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.144037737 seconds)
    (263/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.686846574 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.352059185 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.643384105 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.327079385 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.221790722 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.678643133 seconds)
    (269/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.139917599 seconds)
    (270/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.522956402 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.729673907 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.920473634 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.409056061 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.741509967 seconds)
    (275/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399795702 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.316965089 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.312006375 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.733101775 seconds)
    (279/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.443201404 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.350349355 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.202596292 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 4.34953268 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.339865786 seconds)
    (284/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.689751237 seconds)
    (285/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.327701585 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.409121751 seconds)
    (287/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.411740796 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.407871616 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.325348095 seconds)
    (290/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.391586016 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.441002631 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.429434355 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.464926982 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.327428661 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.09102391 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.066701276 seconds)
    (297/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335946331 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.734591347 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.354477984 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.368597123 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.427613427 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.010385515 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.481081646 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.448930138 seconds)
    (305/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.491489208 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.352860727 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350829481 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.326419731 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.167612671 seconds)
  done (took 920.249179107 seconds)
done (took 921.501019285 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.35966775 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352714601 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.336609265 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.358354881 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.448321213 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.367157089 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.348447287 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.338231512 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.385448128 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387112296 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.336701666 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.364933767 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.338600843 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.33714055 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.337254002 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35131783 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.374143493 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.339247212 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.354410232 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.348134109 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.354587567 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.336181766 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.38840217 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.364493527 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.341657467 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.342452107 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.340696943 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.357204343 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.450136833 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.341069846 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.341080662 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.350894848 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.374453166 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.336413154 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.332217753 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.357686237 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.349277891 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.347090413 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.341680936 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.370926981 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.777274394 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.338329472 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.340321787 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.338908297 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.340104461 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.344643733 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.341565968 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.345859087 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351437641 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353155677 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.829844879 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.355881109 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.34247671 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.340371672 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.350542804 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.339810081 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.343263463 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355635378 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.359134938 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355962573 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.366786297 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.345084514 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.341645499 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.355675162 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347245688 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.870595798 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.337766458 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.344638581 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.824148579 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.348455893 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.804427939 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.349325354 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.341497776 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.355250091 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.373155013 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.38308233 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.336379249 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.33957762 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.348272248 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.339529674 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.351077862 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353127896 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.346860086 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.342408304 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355947409 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.37147518 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.351171473 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.344058034 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.350985112 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.360318791 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.348725499 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.35254594 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.344646037 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.337941009 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.350461003 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.345682243 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.34467887 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.344561 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347264803 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.352866782 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.819604211 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36135109 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.339324816 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.337469134 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.341342565 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.355458051 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.817110231 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.346339452 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.364410516 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.389196062 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.344796015 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.372686327 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.345536458 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358541193 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.352720074 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.345568509 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.3380955 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.373077532 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.842078689 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.360450867 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.343434526 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.341459792 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359737098 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.344896992 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.340620198 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.385452205 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.3451514 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357666668 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.463238371 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.354492589 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.375552562 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.342020267 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.346244429 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.373237838 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358623493 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.375715242 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.346636487 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359046637 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.36149907 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.340670438 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.355346645 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.354862263 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.346329123 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.350493135 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.339231782 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.372325487 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356657133 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357200483 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.367211839 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.465437881 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.342597173 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.375475379 seconds)
done (took 226.951728963 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405921298 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.339333429 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.426701891 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341905742 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.44932407 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.440600319 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.341046476 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.34004379 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.340493972 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.714616188 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339551479 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.340328156 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.336318332 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.340412044 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.423957506 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342145561 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339302823 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.679140507 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.343856062 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412704096 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.340362313 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.340408306 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.34196828 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721991201 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.342541237 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.34215424 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.412194963 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.342045084 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.686481669 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.341692953 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.335622594 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.686714989 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.431089676 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.360212681 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.352805274 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.349971619 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.450470334 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.360797297 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423819096 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.423146247 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.427511661 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.381511624 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.342882941 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.343204654 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.344706049 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.345500422 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.341237882 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.37031536 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.345790696 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.342238768 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.680751108 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.353819505 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.351013274 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.342215262 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342348562 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.364852362 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.341461549 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.346473423 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.432759084 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345247901 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407492528 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.723742453 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.71633088 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.34420852 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.341470811 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.343615384 seconds)
  done (took 149.061388018 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.409975563 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.417256972 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.457309952 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.345512295 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.394988667 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.461976378 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.345681282 seconds)
  done (took 11.107369883 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.350616193 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.344667491 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395418688 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.393382932 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.345139464 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.49226139 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345479164 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.356694329 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.343611161 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39823955 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.346484999 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345897627 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.351848721 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.344355455 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393918819 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.357445307 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.460828664 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.347859818 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.347309384 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.496809757 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34298354 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.352957168 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.398338591 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.35746065 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.347035838 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.350495526 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.911713622 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34716068 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343236554 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.346319084 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344445344 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.383666957 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.346971056 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.340724971 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344436727 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.462769895 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.346824694 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343831792 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.347839478 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.341573081 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.346709931 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.348376189 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.347389279 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.344028387 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.347314622 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.369710251 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.347880596 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.347044452 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.347037465 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348367875 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.398232996 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.347754224 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.345868248 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.344653439 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.4033608 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354674935 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.348611111 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.345512653 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.3476087 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346148611 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.499088039 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395121205 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.347912089 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39576914 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34814274 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.348785877 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.348265073 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.348647938 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402329486 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.348691665 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.396605028 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.346045488 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.503939905 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37056933 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349255146 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.351128786 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.35064501 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348723007 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.348145893 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.35430372 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.346676521 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.349422194 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.354366744 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347270733 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347318932 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.450845371 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.457559919 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.348071869 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.360529615 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.356272298 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.347796312 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.40139651 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.349651995 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.347477213 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401536079 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.464416497 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.402218251 seconds)
  done (took 154.548753996 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.355166432 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.357908219 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.350180074 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.366637822 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.350395718 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.350184766 seconds)
  done (took 9.409406236 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.352028732 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.352602802 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.350469483 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.35109943 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.349999865 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353269918 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.351268138 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351553117 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.354636586 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.350406617 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.35094237 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.352749336 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353055611 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.35007107 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.351063448 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352186546 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.350942782 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.348171275 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.350922748 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35193242 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.44585201 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.352426415 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352895926 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.352508847 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.357098316 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.352306472 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358185555 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.351247272 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.351857161 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.359544114 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.355295054 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.352089959 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.352494547 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.358620327 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356213023 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.353230919 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355548805 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.352744111 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349545956 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351586317 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.352749038 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352522689 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.351691217 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.353373746 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.354432008 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.35846355 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.356925939 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358843447 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.353736268 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.353617818 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.354378376 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.351257282 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.353118836 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.35395491 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.35475856 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356714094 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.357311016 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.353551957 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.353733274 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352994399 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.353390098 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.353199471 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353822283 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.358046988 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.360801936 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.354150336 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.354010371 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357613736 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353382136 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.353094418 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353920802 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.350532972 seconds)
  done (took 99.82664576 seconds)
done (took 425.226797868 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.718408403 seconds)
  done (took 8.001172418 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.526740357 seconds)
  done (took 7.809683486 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.087716623 seconds)
  done (took 22.376983397 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.35402479 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.347068972 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.354002869 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.354418563 seconds)
  done (took 26.692351033 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.729320532 seconds)
  done (took 8.011701915 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.346639174 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.361042344 seconds)
  done (took 13.991982044 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.390790512 seconds)
  done (took 7.673731 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.080950408 seconds)
  done (took 8.370877881 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.371103478 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.380008066 seconds)
  done (took 14.287779567 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.33168025 seconds)
  done (took 7.613787974 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.363209155 seconds)
  done (took 8.645774765 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.358978805 seconds)
  done (took 7.643292178 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.411110975 seconds)
  done (took 7.695561171 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.459645494 seconds)
  done (took 9.743047671 seconds)
done (took 159.841927226 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.346848649 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.348395372 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.349680667 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.348873744 seconds)
  done (took 26.676921004 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.388843918 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.387289469 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.389208998 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.399731235 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391839436 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.388926543 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.379640942 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.380342615 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.399394968 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.391281755 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389468623 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.39039381 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.387525927 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.381197205 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.390152117 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.38958683 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39963333 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.390304668 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.381774958 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.392559208 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.355873747 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.399557399 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.392379525 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.355661809 seconds)
  done (took 34.576481376 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.555704124 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.425630747 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.508818493 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.406780412 seconds)
  done (took 7.181274894 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.406999276 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.408935763 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.421079618 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.458941475 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.489228386 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.418386007 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382948298 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.377845333 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.36379062 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.409222611 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.484239993 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.42621494 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.494979966 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.355540936 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.553038313 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.356281727 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.355259236 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.408467743 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.460902311 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.474548222 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.356959318 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.408687313 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.413622427 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.426223929 seconds)
  done (took 35.397885899 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.355925337 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.364031734 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.362409567 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.357132756 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.357123699 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.355599329 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.361845603 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.358381967 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.377856505 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.35787436 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.35532464 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.355872549 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.355748552 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.356872803 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.355931888 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.368932784 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.370304589 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.356510935 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.360120587 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.363023413 seconds)
  done (took 28.493700944 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.351654629 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.303116307 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702654511 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.605740716 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.350380951 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.35264136 seconds)
  done (took 28.953105477 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.430654827 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.565452732 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.357952612 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.720953056 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.795830712 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.3580756 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.357687109 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.604046323 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.922954321 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.922740513 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.418006594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.427279342 seconds)
  done (took 20.17059633 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.362570435 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.354820746 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.357335777 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.369425642 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.414200646 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.363043735 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.364433064 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.351383379 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.416540915 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.419285782 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.36164877 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417846155 seconds)
  done (took 37.841276755 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43978879 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39867042 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.300278519 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168771661 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.520177234 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565132432 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.139806215 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.81275861 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.357269801 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627751358 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363871177 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442157929 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609476765 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365527688 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354146897 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.393753579 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578043907 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858008332 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353752371 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.413737959 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378960569 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35371945 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.543403568 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.383480403 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56415341 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.330109744 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.614239495 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.129802264 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649662705 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366932542 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363849793 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354284822 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627587101 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016607043 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448972183 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364815314 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.135363693 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.898914255 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.338977148 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.456088544 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361759508 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355628994 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363419778 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353455576 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288549514 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358083465 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824249122 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.36098647 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.064829266 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354323164 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365284786 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448360832 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.358322308 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.924379307 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449633043 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.360699172 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.352695923 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361932817 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921995501 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.884682856 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363629003 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.291455197 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.818861637 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.521148399 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027577326 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.457485377 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.358775338 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358746618 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289552197 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.490710402 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372937654 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502780609 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.380783032 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005335003 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174806689 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.360454076 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28559645 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921497728 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363914246 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.291576513 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582734546 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13045659 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291283028 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.302595123 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.289781375 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073057142 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362828003 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.745867982 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362694291 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.817071549 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.36712462 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373778699 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379838896 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57986185 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.239532359 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356133452 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.367775811 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487194554 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379039133 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.819732853 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291607175 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360589115 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612697798 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.568421536 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356060181 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.39283413 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578097706 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372613472 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.374403873 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362812596 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.368743781 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.982586436 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370446839 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028904213 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37472638 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.133256238 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112373108 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362841006 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.459700197 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369980672 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611537973 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.147465079 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242470692 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425621584 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363424505 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358160307 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.542789181 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.211039195 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.263676629 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.359526086 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361991815 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.369547194 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.359292326 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308143971 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.362225978 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36042381 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.136050012 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.581504264 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359189953 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635527279 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292777436 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505188868 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368679942 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582458558 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.580602385 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.357194067 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618535835 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361242109 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368185623 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37162219 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377940393 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45685905 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381083176 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.358617015 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.618389807 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.363330121 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.363459809 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.537313893 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.14157796 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367351081 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.365538565 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.274727059 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987719995 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338861944 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367531023 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248612817 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.374277565 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427592545 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365842839 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.370842953 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.21791608 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272217884 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.365574568 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.358319596 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583642165 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371155884 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.538736223 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443207654 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.576019603 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994398606 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374901798 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.295326822 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.072456389 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.054887233 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360432461 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.549716466 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362044633 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370761907 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371564328 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.951181298 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992535036 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363982999 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.457772048 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.368756625 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373485149 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.366662911 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361742197 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.190645333 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.001736723 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372096969 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.374814479 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505749638 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.375336802 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296756562 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.878090187 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366936685 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363084534 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.136630912 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397136771 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.460499295 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85209843 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620860973 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.131879301 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373196688 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.57538873 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.396584956 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.363408161 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372239308 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376006848 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.366734343 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386724883 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.373720901 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.47338224 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.801557991 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929415403 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193958083 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943880635 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298001533 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.379517047 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.261479815 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831653284 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296672819 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.019363568 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558087875 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.831566734 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307849259 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582216185 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.582174858 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141616221 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373115853 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590979313 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291749316 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.365818262 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376191598 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577311809 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398956517 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.365286197 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294721368 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.66711585 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639789612 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366800728 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445980663 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830402724 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364391074 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.142542718 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.363972838 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.723907805 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542045664 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.993643643 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755141284 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378690542 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373160228 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852234993 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371695169 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.890585222 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040532609 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368334234 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.58532509 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300963151 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.376369785 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.376620027 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.364972219 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.690455828 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.36707358 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.621506406 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376418361 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30075094 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372340597 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946045473 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.220711927 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.370218237 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366356533 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126724197 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364746861 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663896823 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.380453293 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.176625491 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368663934 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300074029 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300617376 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.05996687 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365689298 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340638729 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87361229 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.803706839 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.439581968 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399787261 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211589918 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623131765 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.381423525 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.002359333 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593315707 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.242390482 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390434208 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.467069954 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36938849 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.353199281 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.267950909 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602634104 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286552355 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591207223 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.316144892 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.272772217 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36523879 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579608121 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.267772402 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367519774 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638863297 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.080398059 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.372700598 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194307437 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394242512 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367532049 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378996001 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.833749866 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376343332 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437506839 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379000065 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.379063518 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.379096334 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547078277 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369263988 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373200866 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.382911426 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462675625 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.942484934 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.183328646 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.142316105 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010184823 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214504536 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010188648 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382460816 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36951101 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372545467 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304016501 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51871429 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.894012464 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643734514 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4992718 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.892596068 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391913936 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376668735 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379642749 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582476802 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644804599 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.240729078 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382619201 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.030650013 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.265003634 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381267586 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.581385109 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881902619 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941503666 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484660801 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38545967 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.836657984 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643614875 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.461117995 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370034529 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963375301 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.385109009 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.739878427 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.375448865 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37596304 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517572408 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381936539 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030821257 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.379974021 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.531160867 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.144741142 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.585469104 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630342106 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.881148775 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.382682811 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017514777 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13767314 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634523961 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440798933 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380204952 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.475449653 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516680391 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.37228884 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.267058493 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371945234 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215987305 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.082055073 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.382745114 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013769996 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636051017 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.371250269 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.369288211 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396372155 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.380877154 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595885809 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09705262 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595853067 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381483629 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371962113 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.363093375 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013724866 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386222851 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307609296 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.376591356 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626282782 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610257673 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398917833 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.825673855 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.083381229 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944028357 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.343885421 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39484134 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372219255 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.141476271 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014610786 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.219092177 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883192974 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.030081139 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37492705 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649411259 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.379490411 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373491996 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650574534 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.377828752 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372785938 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386696088 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.013118897 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158590207 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.383973204 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.514553373 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.312932861 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.600494245 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093922368 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31098711 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375910079 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.5694772 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375073287 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504617912 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385911581 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.379016859 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375336219 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.109384822 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659537707 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.380084511 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.372735104 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.361852962 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377333437 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383365328 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652348377 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380471812 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.051091005 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.729476624 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631545058 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378087328 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.361893261 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.379035147 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373357234 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.094154568 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344285189 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.983629556 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949105498 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.376297912 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.387169912 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380549456 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.591950758 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588429229 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380427938 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387228917 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385331679 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391953933 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.280881335 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.144431115 seconds)
  done (took 1605.748813249 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.382008228 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.399195193 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.414797433 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.463416851 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.412234934 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.493276029 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.404333389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.50045653 seconds)
  done (took 52.780402035 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.382214873 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.532102149 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.407018839 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.385755343 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.38758558 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.385802611 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.858045571 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.380181175 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.386500874 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.387297266 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.393787857 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.380368223 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.058266489 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.387342598 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.377541374 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.373800018 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.387287385 seconds)
  done (took 66.167388207 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.382003985 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.464634333 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.483356768 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.374989121 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.420793709 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.396718713 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.377093642 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.420328281 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.391752246 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.756849737 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.029317646 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.41449704 seconds)
  done (took 80.224941875 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.385790496 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.386042923 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.386209101 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.386365135 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.385327119 seconds)
  done (took 8.242015343 seconds)
done (took 2033.741143349 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.623051824 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.113677078 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.035698739 seconds)
  done (took 5.46157879 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.527028878 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.574769378 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.695198146 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.716880155 seconds)
  done (took 7.827092983 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.669485432 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.751340849 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.574072656 seconds)
  done (took 6.307528154 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.827675407 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.377242807 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.502481705 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.380383747 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.379342593 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.380554546 seconds)
  done (took 20.454500713 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.382475923 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.386512261 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.382695088 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.385559112 seconds)
  done (took 6.849307263 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.364674456 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.075127735 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.3661834 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.379506612 seconds)
  done (took 18.499072608 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.129325817 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.144696807 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.126864198 seconds)
  done (took 7.712508645 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.387422918 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.224532641 seconds)
  done (took 9.926158449 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.684118405 seconds)
  done (took 2.997887881 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.515029515 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.711422459 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.570901263 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.396292133 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.553529804 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.312763662 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.082204263 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.642403338 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.366349315 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.634078061 seconds)
  done (took 29.098611492 seconds)
done (took 128.777228928 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.256582757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.625110792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.585475286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.231756942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.61342079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.584168612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.805935407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.193512218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.736596808 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.72615248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.231259007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.613749223 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.541817432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.625059039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.540760321 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38138153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.611927888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.298993405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.951778525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.111494293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.809125128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.864205318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.061098649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.889458251 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.611678632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.536775524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.463437839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.382015997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.126296734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.479788516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.535374625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.291372859 seconds)
  done (took 194.629339329 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.37944209 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393393323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.382734441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.380816914 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.381162767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.380249217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.382886196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.380879583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.382930463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.381906415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.381948045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.394871301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.380968165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.383610418 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.379951201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382321059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.384775997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.391265191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.377843818 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.380739541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.378051029 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.381657189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.385182733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.381793564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.384187311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.381767144 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.380913405 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.381361436 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.393269852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.381733985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.379114557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.381649897 seconds)
  done (took 205.57015492 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.380584302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.379875178 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.381215383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.395007435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.380487671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.394963236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.392422246 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.382255551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.387768444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.384057939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.38168004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405229288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.379059122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.383372356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.380025808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.397630887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.385188048 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.381905992 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.383752989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.384946696 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.383523416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.397065856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.394948277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.384059792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.389672541 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.385774435 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.392859308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.385572681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.381066413 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.382747768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.383951073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.383949087 seconds)
  done (took 205.683619733 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.584297936 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.390935906 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39048024 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.347137287 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.389720667 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.392318858 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.382120464 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.580070648 seconds)
  done (took 14.771400772 seconds)
done (took 621.971547604 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.76393961 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.463605206 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.590132406 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.414984248 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197893289 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.411122081 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.412053333 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.587438144 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.325257895 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.589753118 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.739484136 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.414221614 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.833813363 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.408246413 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.670944239 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.511705567 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.265368479 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.38268469 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.739394808 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.959510979 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.678965249 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.946414037 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.586201762 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.336195871 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.837190186 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.944287365 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.156566559 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.292634766 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.413362114 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.741234407 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.122405226 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.412521718 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.474091922 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.451697649 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.509815814 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.494066832 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.391198294 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.453456882 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.592768696 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.680546618 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.981102271 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.149881796 seconds)
  done (took 94.642381554 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.38087654 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.380198522 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.382374351 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.37802734 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.380033984 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.377206802 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.38085088 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.377659322 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.382239431 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.378099736 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.384264799 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.384155855 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.3812598 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.38451547 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.379946917 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.380177084 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.382086761 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.383738624 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.37980913 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.38156663 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.381958085 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.379080467 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.379750844 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.381744509 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.379884391 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.383784808 seconds)
  done (took 37.221857015 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.395780338 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.655739365 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.821722841 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.402023154 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.394508625 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.39851736 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.474994137 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.395758293 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.396613291 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.395274775 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.548116314 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.399025293 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433046783 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.841499418 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.396799868 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.395074097 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.393328454 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.39748245 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661787592 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.405530481 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.493414184 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398111688 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.473645247 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.406527361 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.416567506 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.397594424 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.400084777 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.915426527 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.398760385 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.552974808 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.207348379 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.473066263 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.869857839 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.835495368 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.211887621 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.397248829 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.397705202 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.556774776 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.399080063 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.39529935 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.478946591 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.398720343 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.832131299 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.033184829 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.412378803 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.397628102 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.9417406 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.55887674 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.657240389 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.407710108 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.852522832 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.404030776 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.400277914 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.39644851 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.655168296 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.406681979 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.395320069 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.949918407 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.415302822 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.476243215 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.397893201 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.398001886 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.677610365 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.400231351 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.661275122 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.398593633 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.403943599 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.398014852 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.835802032 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.404865974 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.057652661 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.414190258 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.400941006 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.55720884 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.6605135 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973966593 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.401347807 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.681887966 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.884489382 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.479240593 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.404357154 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.904334746 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.482413892 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.402752439 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.400585607 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.40226236 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.40009962 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.449109245 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.478577978 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.978619138 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.042360687 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.953003088 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.496992135 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.414493408 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.398898885 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.939840808 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.414513418 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.39947375 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.830909288 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054378748 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.414961268 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.406168892 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.036383761 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.418694815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.480964059 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.40661989 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.843533682 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.401229045 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.452436845 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.401205986 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.404477578 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.403080051 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.482086477 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.408237354 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.39874211 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.027903012 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.578178132 seconds)
  done (took 183.695723883 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.397049681 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.394116054 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.412092518 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.395394949 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.393665923 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.400649022 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.397421436 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.395964152 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.400164038 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.393661204 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.395358557 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.392663395 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.397646864 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.408121092 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.403892328 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.40347956 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.004454851 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.394961203 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.39336579 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.405899512 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.202405148 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.397254817 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.397580378 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.413734611 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.400239827 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.395906686 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.404256855 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.417115208 seconds)
  done (took 153.940680426 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.401064271 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.978981302 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.406045192 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.539156896 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.426481168 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.400374127 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.537681131 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.467386782 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.401747086 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.401493573 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.400887316 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.7228382 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.40743773 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.928813809 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.598125487 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.539351414 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.924805165 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.406174925 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.404572631 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.399982569 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.538725305 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.415275307 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.725824507 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.008267275 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.409176699 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.004876413 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.399629125 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.405258555 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.401049253 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.009227827 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.405039649 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.725707183 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.487738037 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.468288402 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.009830192 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.954845456 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.952980891 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.558649771 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.406540034 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.405053334 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.401776135 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.39512249 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.008725926 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.409794163 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.407740993 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.00457472 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.425161116 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.407506717 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.415243195 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.403641035 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.468292376 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.468811895 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.733992602 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.014857083 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.488749794 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.431198674 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.540716515 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.796346574 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.408831423 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.953404265 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.392280493 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.012327562 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.409714113 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.392646953 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.404739028 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.411584832 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.562501436 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.54413775 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.954947885 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.410520304 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.932083933 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.560463716 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.40682093 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.405449878 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.405598915 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.007998182 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.955804322 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.563807369 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.546497363 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.609264825 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.3996685 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.405715889 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.395051968 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.486554521 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.406937167 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.013734121 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.954217923 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.409248438 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.405433217 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.409842922 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.408943099 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.588811015 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.012101457 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.490623763 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.949082322 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.745853181 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.733132386 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.409613175 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.467825821 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.41045133 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.734655121 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.408898569 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.470457036 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.862750748 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.734605103 seconds)
  done (took 167.908997626 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.660082451 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.580242045 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.503816958 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.526618307 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.017624864 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.982215559 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.786334684 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.531460318 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.520583554 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.663056665 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.604593781 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.50047044 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.582028374 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.496299807 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.153288888 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.477745306 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.502491354 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540231125 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.508736858 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.458122526 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.06335654 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.719417049 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.588710355 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.444442687 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.50661082 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.168135331 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.965153274 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.979924251 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.597615089 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.726202459 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.951967625 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.546861264 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.404105129 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.090697362 seconds)
  done (took 67.68488278 seconds)
done (took 706.409238635 seconds)
SAVING RESULT...
DONE!
