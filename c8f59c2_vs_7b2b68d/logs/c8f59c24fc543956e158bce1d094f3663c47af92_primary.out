cset: moving following pidspec: 14377
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.452433372 seconds)
loading group "string"... done (took 0.502728664 seconds)
loading group "linalg"... done (took 9.327580624 seconds)
loading group "parallel"... done (took 0.170275284 seconds)
loading group "find"... done (took 3.10728976 seconds)
loading group "tuple"... done (took 2.150882176 seconds)
loading group "dates"... done (took 1.410096284 seconds)
loading group "micro"... done (took 0.192003536 seconds)
loading group "io"... done (took 0.515798971 seconds)
loading group "scalar"... done (took 58.09596388 seconds)
loading group "sparse"... done (took 14.212566906 seconds)
loading group "broadcast"... done (took 1.31391024 seconds)
loading group "union"... done (took 11.058088742 seconds)
loading group "simd"... done (took 3.816732072 seconds)
loading group "random"... done (took 13.812537125 seconds)
loading group "problem"... done (took 2.32980451 seconds)
loading group "array"... done (took 25.809602185 seconds)
loading group "misc"... done (took 1.254149288 seconds)
loading group "sort"... done (took 3.991668004 seconds)
loading group "collection"... done (took 24.431758117 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.759388607 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129518914 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204548288 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.24390448 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.266882471 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170657525 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161093531 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.181811318 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.666408208 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211174968 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142408263 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.392830402 seconds)
done (took 6.27409973 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.326383194 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.062752533 seconds)
    (2/2) benchmarking "String"...
    done (took 0.203012967 seconds)
  done (took 0.964743492 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078418142 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.166169036 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.116795159 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.101073817 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.100742699 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114918454 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.101253099 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.118193941 seconds)
  done (took 1.511081681 seconds)
done (took 3.573606462 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.610249949 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.308803655 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.533883254 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.196059849 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314691973 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.317551974 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.276841629 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.235492586 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094113435 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088530741 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.202452351 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.452009435 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.413155122 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.013023165 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.070877169 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096559206 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.165488782 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.847048846 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080982156 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.116534931 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.54008935 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.228121886 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119005916 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108635672 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188615047 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131013658 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.15227048 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105727481 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 1.115579293 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.137392611 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.218226913 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085297579 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.148933604 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.169290173 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.226107524 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11458189 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.740714095 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204449532 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099169664 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104282325 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 1.121159053 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.127765898 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.217104144 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110479971 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.070072667 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.172163024 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116501617 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079895146 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095564387 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103192033 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.19118311 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.525105602 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110386803 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.202861621 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096774247 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.806664031 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100950896 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.281619332 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.129887397 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09727941 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094129428 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.09128598 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169945912 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096070946 seconds)
  done (took 22.307832303 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.197661309 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.217287408 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.103784986 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.147261743 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.147079598 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084172575 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091301345 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099035988 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118241293 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.203608574 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.126445967 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.224902622 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078579127 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.11029566 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171736154 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25993061 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.113005851 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125752933 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093024678 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.096737511 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.148905178 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098711365 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096351219 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.116105337 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174344726 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207349483 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110979267 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124931459 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093844895 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10189955 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14803768 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151427915 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093667289 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091370139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.180699236 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127265974 seconds)
  done (took 5.589962313 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.244470683 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106422192 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.261736775 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.195084096 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.227207594 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128964863 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.188558964 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.206515996 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.316562532 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.316989472 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167929315 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132626084 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098445759 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081239312 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081706829 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100663499 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.847039906 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.175321597 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143902029 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.193305448 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116808918 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084087508 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.744521493 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086607941 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.103843862 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097435156 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082061204 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.23151757 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097111441 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.492042878 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087024195 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098531245 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135218731 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200578859 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140664955 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125404494 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113221521 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087127071 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215176036 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103467417 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079461362 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.099702274 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120696913 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134644217 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086874804 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111642968 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.141434466 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107336275 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087317598 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127896361 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.165388908 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.20535258 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.171098853 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105042897 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287432501 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11125039 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101114324 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112336632 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.827158119 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136896598 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085941934 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102247918 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081862924 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096067245 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099733772 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.82384387 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107509621 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083712112 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.102650554 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.145643102 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.561868029 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112286207 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120366424 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088734887 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087441357 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.126454209 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088567827 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081973692 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.105554903 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083678518 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090534557 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.131641531 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088324361 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082620632 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166133277 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099573347 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108380402 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130017721 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08928384 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.104344275 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115156334 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10118689 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091396329 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.211904531 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09748586 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.135332154 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116120702 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.134449011 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105277843 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.299932834 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083976671 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125812927 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105293697 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13322623 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100547842 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083302562 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104095151 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081430677 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082319686 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163420432 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087538786 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08372622 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089600989 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114452054 seconds)
  done (took 28.940394167 seconds)
done (took 57.527066398 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.452145066 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08521789 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106653856 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085080372 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085520023 seconds)
  done (took 1.584600807 seconds)
done (took 2.329618034 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314098252 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.208985444 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089466335 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.199660306 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09068737 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.205167501 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.172218827 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.123638349 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217271764 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087912367 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.198535372 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088473751 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089102322 seconds)
  done (took 2.856285985 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107552294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110366549 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105400693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12582885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089902634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104410833 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124269294 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112023603 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103321658 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117697299 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089279719 seconds)
  done (took 1.935496337 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103348478 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107250021 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095683466 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121655554 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088692563 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101761893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121225751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110896505 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102690083 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116705693 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090289135 seconds)
  done (took 1.906107893 seconds)
done (took 7.440787268 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.270542714 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.070905176 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.189802907 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.258274184 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.350000513 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.310261731 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.625473323 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.209322009 seconds)
  done (took 16.167639055 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.235686395 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098467549 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098971664 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09289191 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.115542137 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098759416 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098636985 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.121852227 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094636964 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097634832 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.11401855 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.096529524 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093810183 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09317819 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113465197 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099950838 seconds)
  done (took 2.579745511 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142033565 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120721287 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.121126507 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10248915 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097921321 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.121699694 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104114777 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100545817 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.11886288 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097645238 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104845107 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.118742613 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100349144 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096351219 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.119344506 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.12061883 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09711172 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.120439688 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120374246 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101250865 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.121312005 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100154635 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099763245 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.118742265 seconds)
  done (took 3.504118994 seconds)
done (took 22.998819334 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1429598 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08782751 seconds)
  done (took 0.983460886 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.173654904 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.190958152 seconds)
  done (took 1.125240857 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116264715 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094424717 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141460237 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107104192 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093979409 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.112440276 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118883902 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094454749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.113870416 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095890756 seconds)
  done (took 1.852608492 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.100123975 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097862724 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126918444 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16566143 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.121232735 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096563047 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098262146 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117573051 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100611049 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093545555 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117224474 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113088333 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099414458 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12952101 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099304318 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098897283 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.121399586 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098427949 seconds)
  done (took 2.759974365 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093794749 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095159937 seconds)
  done (took 0.951886061 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097012756 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092931021 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095495035 seconds)
    (4/7) benchmarking "year"...
    done (took 0.112737311 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092026996 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092661085 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.113076111 seconds)
  done (took 1.456020979 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.546674825 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.244355934 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.38874755 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072786979 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.1302336 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.34069053 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.110879742 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.092087758 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072840128 seconds)
  done (took 2.796145725 seconds)
done (took 12.685340643 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09176963 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.207960174 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.611935568 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131968387 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092755441 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.146979026 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.345298309 seconds)
done (took 2.402817425 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352882164 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.18315737 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085377337 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092632241 seconds)
  done (took 1.479259129 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08251154 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099552254 seconds)
  done (took 0.957103623 seconds)
done (took 3.211517959 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091897929 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.111653793 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087672602 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.11010632 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089857655 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.087385763 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109766682 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090293954 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088889307 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.088424303 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.109815501 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090105313 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087944913 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106874066 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09035311 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088604074 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088815834 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.106868338 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089858284 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088648564 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106488052 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089835097 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.214058296 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088964107 seconds)
  done (took 3.211543172 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110690473 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090832152 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111418707 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094034933 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093922628 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111760301 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09408445 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09145304 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.09420339 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.110110022 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094497491 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093914108 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109552339 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094822882 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093055898 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112035616 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095156095 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093506513 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109281774 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096503753 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095689612 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111083958 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096992571 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095974285 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11202507 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098001499 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093880235 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109846301 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097717524 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096528616 seconds)
  done (took 3.779757538 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098250413 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087416074 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092064291 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117446709 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089053084 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091834932 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10597849 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092592501 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093350837 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090471211 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.113546981 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092097606 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089918348 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109648161 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094213586 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093079993 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097687982 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.110236504 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090915542 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09137838 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111757508 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091045028 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089978482 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089334195 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10860578 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086990671 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090137021 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107461361 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093150673 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089995593 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092444857 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110329882 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09076252 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098992616 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111289291 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09093391 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095396419 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.086285763 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.110277082 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087676722 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086359795 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10727691 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090428678 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095198139 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09106563 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.110499178 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090849542 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090792411 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108523856 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092187771 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087019725 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089545955 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.110912987 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091925028 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092766266 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.105944827 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09269824 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086621071 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10936684 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091811186 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087379338 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085922589 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113527216 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091333402 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103772484 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113564092 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090575694 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091084348 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090433428 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.11436608 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093035294 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10000762 seconds)
  done (took 7.751505132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114503178 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099092699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108711589 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092048926 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090671167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090677104 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11444954 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090499986 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091343739 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115072943 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091239046 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092920056 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110167501 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092724152 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090307922 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092181345 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11422549 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090841929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090437059 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1095383 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092025599 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094683898 seconds)
  done (took 2.951140085 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.22011109 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11562909 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139509152 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123202608 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108034339 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12227344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096447949 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096653283 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111910879 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100733201 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099560426 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113307635 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108652504 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099708629 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119186804 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10084781 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094399224 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119567859 seconds)
  done (took 2.873228711 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104436884 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092802234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155607916 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093420679 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092339815 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111093178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099433105 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111505381 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110624193 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094908089 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09894296 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110017272 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093830438 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093096475 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092304824 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110994561 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092896939 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091737643 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118650354 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096930273 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097465746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118331039 seconds)
  done (took 3.066022991 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107028415 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092026437 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129974908 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097907492 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092118208 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091801827 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116711489 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092694679 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099133905 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110890219 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093267516 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093395676 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125238203 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09309445 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098030343 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111154079 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093136215 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093417536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111507546 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093403079 seconds)
  done (took 2.82494366 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.186807833 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128444127 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108758034 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115927102 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12818753 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110719107 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135194706 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110109672 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110383101 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136946465 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108523088 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110316892 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135994737 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113638473 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126172748 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116835109 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116070417 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13712456 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109072739 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107943195 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140863723 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109945266 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133417594 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109399736 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107689183 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127214711 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108548231 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112512841 seconds)
  done (took 4.195482889 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092482291 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091063396 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091881936 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109669463 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091533916 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090938659 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09145318 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.11160246 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091760203 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090540075 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110182447 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09257965 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091372443 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091212297 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109576085 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091619193 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091396259 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.091547395 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110677482 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092315511 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09085471 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109550593 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091876279 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091147275 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090269789 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109940936 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091025402 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091568557 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109339602 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093614698 seconds)
  done (took 3.690642504 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105529551 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101239271 seconds)
  done (took 1.00261388 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100711201 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106857583 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091489777 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111057209 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098986261 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092478938 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118302963 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09820795 seconds)
  done (took 1.615997886 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.185859948 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210307121 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.116923668 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103790852 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.210252295 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.189828749 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132177074 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096974971 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111993082 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084688632 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.203005773 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084799819 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090565777 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111206321 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09173038 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097744622 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.114604239 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102853582 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09896042 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113155311 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097645867 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096812311 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114170384 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103665348 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087061351 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114362238 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096175847 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10373938 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108578263 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094903689 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090245205 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111918143 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096354641 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098572591 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093844546 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.20789187 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121434786 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090322309 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092928088 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118361211 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127654571 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094944825 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114105851 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09292718 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096874889 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115792797 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100482331 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09665 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085307216 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108555634 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095779289 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088243065 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.114303571 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094694584 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092331434 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119160265 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096182412 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089246684 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108154256 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089894183 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091369161 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108120663 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095744508 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095629549 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112694848 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094784819 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091966723 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092958748 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.115120644 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095089117 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092111085 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128798013 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094489181 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097219695 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119443681 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093643402 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089809255 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118073464 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092021129 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093311726 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.116250258 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122553224 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094506082 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107296186 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088998119 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098538299 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113749241 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097332419 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085181293 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100844248 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.115513153 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095297663 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084755261 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111192422 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089605249 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097379911 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103831709 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093814932 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093981364 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098029016 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118444811 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091103484 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093355586 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119638328 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098804185 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090597206 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.163955137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090426792 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109500516 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095786831 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097884165 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087419147 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113297647 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092913142 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090595459 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109495907 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098127702 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092442692 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.11510947 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097582451 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095093797 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114348131 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095564317 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092660107 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088420671 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.119418398 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102064724 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094246692 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115627972 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095227333 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093249917 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113965261 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099322756 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09093803 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11900829 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090479942 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092803002 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09381612 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.118733674 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093951263 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088951675 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.113346117 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093633485 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090843186 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.116122728 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094054209 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089530869 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10665651 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09465624 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087856005 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.115372213 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102478185 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089148208 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.115616308 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090585472 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101961779 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090264481 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.119092519 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096466736 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098793219 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119248614 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086207541 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089822456 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.116025858 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096301352 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090556278 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.114658785 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094969479 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100705543 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086967274 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117766093 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086615205 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089672925 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118395712 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095173974 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096694978 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109071133 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134123899 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105451747 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119440538 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093616583 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092560024 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096871187 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113510943 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097394508 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099102547 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11904796 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092295117 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092020291 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119688475 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090913306 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096876216 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110627965 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097105784 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085727941 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095722298 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.107373082 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097819981 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094070342 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120062335 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098418172 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096122 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112406543 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102989074 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089570328 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.117198912 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086969509 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09940489 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103126312 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121242653 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100264846 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094986101 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11158479 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094736489 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102079601 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116468581 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094196406 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095793188 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106282509 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087811446 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099099823 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095571929 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110686841 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093673504 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094511111 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116533534 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091240793 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086136791 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.119324461 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098172401 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088551973 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114451845 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.094098279 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092232329 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120807611 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088552113 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090758958 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11460794 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099793626 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094310596 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093277015 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118097281 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099117492 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096373149 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115490804 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092538164 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100670064 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111482962 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094235727 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090477357 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095895086 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108516384 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09732746 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093079993 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111467108 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090200647 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096418755 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120731903 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101019061 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091927752 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119075198 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10004722 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099450984 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091103554 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.120232678 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089504748 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086527134 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110226726 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08718944 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095878115 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110712123 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099276731 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091644684 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112620746 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098684477 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096679263 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091148044 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120730716 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115637122 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.109515254 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08868076 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091787161 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092683224 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111635914 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091095871 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095452292 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116096886 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099997423 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095328044 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111609584 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094483593 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099472705 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.111397196 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100788236 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099366128 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099251099 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.112018156 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098900775 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09087203 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118875592 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087589979 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09264118 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114391432 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094475212 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090945853 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113748823 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090770412 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088225045 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.11087234 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100958998 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093152977 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098267524 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114896594 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091630367 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090844862 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111600086 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110960688 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092417408 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122135154 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096129473 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087884081 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087608627 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120613033 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094605048 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101334045 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111428416 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097399746 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101189823 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119834093 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096081353 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102174027 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123218882 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100605182 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0992856 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087223033 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113414912 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097883467 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093909567 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.120318373 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097221581 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088739986 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118474423 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10147722 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096430349 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113539718 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088913891 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095618794 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101099449 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119303859 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099239436 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096008648 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116423115 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090874336 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097802591 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.121693408 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096085194 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100994756 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115616029 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100364509 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091389415 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099943086 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117597427 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0892529 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088579421 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113720676 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101628776 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089433999 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098999321 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.123193669 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090564798 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093615257 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120185395 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091028265 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097034267 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121439884 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093627409 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105013424 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.117164201 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093003447 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099166242 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.1002668 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10931425 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092796367 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094294254 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123177326 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09387786 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100785372 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116526829 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10096207 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096679264 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120406652 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101686814 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099755353 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088089624 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123786901 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09747692 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097027283 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112860371 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094025854 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090789828 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114672194 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101296121 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092854475 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123294659 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101690725 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092736444 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093260533 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.122673491 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093887847 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101741639 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112868263 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095903956 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089089053 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118227604 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094030463 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103022109 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112518777 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090160697 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099517124 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100009994 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122534367 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096875587 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10148141 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110261647 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088076423 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097421188 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113653978 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104865011 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097972794 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113970778 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093857466 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097704604 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096965752 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124222361 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089202964 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092024412 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11696243 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096665016 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093518876 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.112615718 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099217645 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093572444 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117452855 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094177758 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089379243 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114270677 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102683169 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093660863 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091856653 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114434454 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102468617 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095360381 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.113572333 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089792494 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099923461 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117825458 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101911912 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092094322 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.116679293 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092721149 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098564978 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123304856 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09389078 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096038679 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094091504 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122415287 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099230635 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089128443 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.114064016 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105478776 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100571798 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116949718 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097992699 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093614279 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123881186 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103060243 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097350299 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088744246 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111306892 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093190133 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090516678 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119824525 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099301944 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094139764 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114681552 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099709747 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100411373 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.119874741 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098784559 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090254563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103157252 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113888644 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097911474 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089580944 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.111679774 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098561486 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10109442 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115198867 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096863994 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098268991 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097740292 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.112859952 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093754659 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098269201 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121390856 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101131576 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094840063 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.115079648 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100474998 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105848307 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097532235 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116581655 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101461925 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102528191 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117319318 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095670965 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10131896 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123274824 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09825181 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103270045 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115295038 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094553434 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102589442 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.123439859 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104951614 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094559091 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110688936 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100730197 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093155631 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089904031 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121111071 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103204954 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103206281 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117928195 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09252273 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105215056 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123422259 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095522064 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093765276 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114862371 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100439728 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092967758 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.121600799 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093859562 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102390116 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102496414 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123835511 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104131538 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090895637 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123703091 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097935778 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103599767 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.119451992 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090857783 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090840742 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.120412379 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103347569 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101962268 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100562439 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.121130558 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101401163 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096312108 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117517668 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092705854 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103399252 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.122983377 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097615067 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097607943 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094159599 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118895007 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097230242 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102886897 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.123241999 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096750432 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105056237 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123743739 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094360672 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092289459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116629356 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09828233 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095750305 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099721968 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.115252924 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090088202 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100868204 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124852399 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095314774 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102624922 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123640164 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095051752 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09760906 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124255815 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101412408 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097317403 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095899486 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120414405 seconds)
  done (took 62.39352707 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14457488 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103872636 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120287852 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099324921 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113521838 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121713383 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097266419 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098710458 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120260475 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107592313 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098241752 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118299122 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113449483 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117798989 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136522808 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107947945 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097483625 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120663528 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099000299 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098802927 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133429817 seconds)
  done (took 3.216787414 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115242448 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110087952 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130473785 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110976961 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103777513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129924692 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110166383 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131104591 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111333012 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105755278 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132740343 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108482161 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105482129 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127405237 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105715189 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129640438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111112035 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103966852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132226941 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108976497 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105919824 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.13130322 seconds)
  done (took 3.410726951 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127648076 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10145962 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096451651 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119971262 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10101969 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099090394 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121668265 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101452007 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106424078 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093458254 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112606428 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094102469 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095855835 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119184639 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092616246 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097020648 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127024742 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101704483 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10209329 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097411479 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111564746 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098437867 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09976988 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11000519 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10340882 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102685475 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098022381 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122759255 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089124882 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100677328 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118647839 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092822697 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089476741 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088438691 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110677482 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100775525 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101732141 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119526023 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098701517 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08915624 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098735251 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125263485 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089190532 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098336876 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120362792 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094026831 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101586522 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097551232 seconds)
  done (took 5.83107831 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127062457 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15715099 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101262179 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126434165 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135411144 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108015272 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100907175 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152166766 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100875119 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100450902 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137169399 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11160232 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127827568 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10559632 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101100217 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125311536 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103935284 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101706788 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128001612 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101187728 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107094135 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127282526 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110546321 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11053298 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127187891 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101254985 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101438179 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128340482 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111154917 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106160497 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127637739 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10660811 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134117335 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103982008 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102385786 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123779567 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113621781 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102111728 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126107167 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100348515 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103416014 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125620165 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105849355 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112721667 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12579351 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103964198 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102429017 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.427152713 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115517762 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103429633 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130252248 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113532594 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103707043 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125330323 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105605468 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11000484 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.125244279 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101272725 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103231633 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133972624 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101446351 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104600453 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.13414981 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102924122 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127862209 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113445851 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103989551 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127123289 seconds)
  done (took 9.089296831 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132452109 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106598961 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135348915 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11353448 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104983741 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128577385 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105795716 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105575925 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129314 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110909635 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105402161 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.238136288 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126414539 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110705279 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106395234 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130230038 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106358846 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104938624 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129619695 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105778046 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105870796 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.137340021 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105629005 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134261487 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116349153 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104589348 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12907186 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105993297 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114258594 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128159733 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117841242 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128769448 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106673342 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113543838 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138745506 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106547487 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101094001 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1290324 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107453468 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106549234 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.126146628 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114902809 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109294205 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125096635 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106454598 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105291951 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136916783 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.117506004 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13321701 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111620689 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107190587 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13654844 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106258903 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10504136 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137183996 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.121454342 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136710332 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114644747 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105566567 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136464909 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113606207 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143018466 seconds)
  done (took 8.289884768 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100573892 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098736578 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099860813 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121292519 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10046941 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098686781 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098990661 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122294671 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099455595 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099203886 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120919776 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099522362 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0988368 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099553512 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121381846 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099604635 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099270375 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098479982 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122053998 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100181176 seconds)
  done (took 2.966583251 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109597946 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116281546 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123905281 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107783678 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101879994 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128867994 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101764408 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101926998 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102664871 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125942481 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110234758 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109307895 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124426298 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106705329 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108340872 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129817136 seconds)
  done (took 2.680415226 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118982379 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117512499 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.202227043 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103270954 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125193294 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110586409 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101464998 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127270444 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100620617 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107354853 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105277983 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.128809746 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101527645 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103182325 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123656995 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104817589 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100368211 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12643619 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102535944 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207003489 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105333367 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103963361 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125995841 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105734116 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103972789 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129972394 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10796338 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101287182 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103261176 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124965193 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104704726 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108442142 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.124940609 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107225926 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103018757 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125737358 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102289264 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102325163 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126380316 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103320541 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103841348 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124523587 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103301753 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10375698 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100675302 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125885841 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100705474 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107564656 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125272704 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103471748 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103056331 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128874908 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107107405 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109215145 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131388775 seconds)
  done (took 7.191168095 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114257337 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103476916 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136137912 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101181931 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103161652 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103972021 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127620209 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103944014 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103480059 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122998183 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104120992 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103693633 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124910926 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103392757 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103943944 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103256706 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123592602 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102801411 seconds)
  done (took 2.863343795 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108204123 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102774661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106485957 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12590351 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101989017 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101975397 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123952844 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100720839 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101500617 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101951442 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125406939 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10355395 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101205677 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125734006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102100204 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101933213 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12417878 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101551531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102681982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100787747 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124747916 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101529461 seconds)
  done (took 3.269924968 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114047813 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.232087683 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10801157 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.238492339 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09846266 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124936628 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108939622 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098944426 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.141537621 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098255022 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.121452945 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099574744 seconds)
  done (took 2.465472599 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129585054 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138681183 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12688506 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103185468 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110654365 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130272222 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107338789 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106652599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138326179 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11801801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128738438 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115216327 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114646213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1371423 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111272181 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110627266 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12894021 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10828472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102567722 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143917742 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106751704 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137250833 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107108523 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107291227 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130291359 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114771159 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114292816 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141497602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107282776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13870905 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111951317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106397818 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137462732 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117776778 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103253982 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138797329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10666084 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144406771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111619851 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114776676 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12563511 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112596092 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137255862 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112848428 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116380652 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130826622 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113404645 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10755432 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131330807 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127810946 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13518828 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114527833 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111730549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13777604 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11430015 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150669718 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118442227 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136383544 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111603019 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118625699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139100301 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112382867 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138909075 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118520379 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111519209 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137941284 seconds)
  done (took 8.918041324 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141444593 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104824224 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131019245 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11819436 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115348118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131257962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107836688 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107978117 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129505505 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104877164 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174771038 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107911348 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11488933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137826954 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108061717 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129971416 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108174021 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114895826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128031574 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129735632 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107647767 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139409139 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115305306 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13873936 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118917078 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111323165 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131969995 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107890884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107445716 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130958134 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113681216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129930838 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117466195 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103667583 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138852155 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108344365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107769081 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136824103 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108299037 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112036174 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139601761 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123215808 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130604038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108256015 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118262874 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130680025 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108353862 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104662052 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131827169 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104938693 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117194442 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140187869 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119102157 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139193818 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108732403 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111011882 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131442413 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10814413 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10798957 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135178572 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115699 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130888991 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128650368 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108512612 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132419842 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116612036 seconds)
  done (took 8.871466896 seconds)
done (took 169.19629836 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176847838 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217462291 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.201193741 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188629294 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093213669 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.16925637 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136295125 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.203075196 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094336996 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093907263 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116601699 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096842762 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.204745869 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09348612 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.118551808 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09685219 seconds)
  done (took 3.183374157 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197606623 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.344494716 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11042766 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120755719 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099934147 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099316331 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121480951 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100708826 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098187067 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129349549 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100517112 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094574038 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127476685 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09529061 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099203747 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122322189 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105630541 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099579842 seconds)
  done (took 3.162729911 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11822963 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153246443 seconds)
  done (took 1.167074878 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129672007 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213022759 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295530878 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170717449 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118610823 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140880904 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148444854 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133031023 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190372463 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135599786 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111151775 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096647555 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150038283 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10458816 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114745667 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12099695 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12735153 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113828441 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.136496198 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100590375 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145339292 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103296166 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103767734 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137015468 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180159153 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132729868 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103710954 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101851779 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12312271 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113519464 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104834002 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13781145 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111205762 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179958918 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102114242 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174531831 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105522567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122500703 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114767527 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09995014 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125146082 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103467487 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112411641 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120407839 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103191963 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105238243 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125999612 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104446591 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106086535 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128321137 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109165558 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128974991 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151402633 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129866305 seconds)
  done (took 7.902315651 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.910207017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148149146 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098483124 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.068919449 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148780163 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112122079 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.906937188 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.150697096 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248737357 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.90676447 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115973477 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106532332 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260293994 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256877917 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.277427597 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358176274 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.765549935 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113728359 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129801702 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166630058 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104606529 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139674326 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115487242 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445597377 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099951816 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099229168 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126958673 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108773818 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177243349 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100604414 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103076027 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197023238 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293824934 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211723572 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100360946 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121873179 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098793149 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187079796 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270172555 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219906526 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168761963 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120577135 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099321918 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103751322 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137871023 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09796134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180461356 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193430254 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169372586 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128178939 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108559824 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106447894 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126266755 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.156254857 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121772609 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360346452 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362438547 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121677066 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105908999 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111256257 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262824344 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125874317 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24129486 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121407269 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21526662 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122600926 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801084691 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163505359 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122895795 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104912922 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103249792 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12860518 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102864267 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180726124 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.399137418 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128419753 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10396783 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099429054 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227073848 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099516426 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123354443 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157306946 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124315529 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104880097 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12913339 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108024561 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191647625 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248255452 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129466953 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106362617 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104277926 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132404896 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.10148162 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230857709 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230564166 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178915419 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227774565 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105811431 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182854258 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164757125 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127824635 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18932652 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104743696 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110875552 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126891834 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22948449 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134701347 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125398209 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105355296 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105936446 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161441619 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103658014 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129519683 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16618014 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481750717 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188184056 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097845753 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128115803 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1064055 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179686956 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106011665 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267329107 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106571653 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188106044 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10471583 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.121478018 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105198014 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183268278 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107063196 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130313359 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104335056 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109563304 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282273046 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221385485 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13170369 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249052132 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171981716 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126964679 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172634802 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130526725 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16196019 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134257646 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103284503 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10068075 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78822286 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135660058 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104844967 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128165181 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181976213 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100011531 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125043206 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09935216 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097575956 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81701011 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12702607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098723239 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102858261 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126338692 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10523964 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106609367 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127101638 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158116615 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270454365 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109033279 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104347418 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12309666 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155168894 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125315167 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100278603 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101768667 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123468215 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107489298 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105403697 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102644897 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187856221 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180962258 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.2333435 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580175873 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124044615 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100034299 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244051565 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100057975 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351874774 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107407373 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238495202 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184938392 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097504298 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358654547 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186029522 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204628885 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105158694 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193142438 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098732178 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105324357 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181676315 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100563277 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130090146 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155085015 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134163709 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107427418 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.259542781 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125791415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224684438 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.122430024 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190803175 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10177181 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105172452 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327543118 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124879078 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112140657 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18400238 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104484865 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099982966 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.887359908 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125702018 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109509736 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104547304 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256808844 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159987104 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130112496 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107150148 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108833812 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182715344 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230070109 seconds)
  done (took 46.563264436 seconds)
done (took 62.872636529 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.222751301 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165561557 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.354654946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146821394 seconds)
  done (took 1.903651993 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.261619302 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165025315 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.244781617 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097573931 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.251493644 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097743366 seconds)
  done (took 2.046229902 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.170742522 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164144128 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142357978 seconds)
  done (took 1.407552245 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209518333 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.207886492 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347508297 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.258588679 seconds)
  done (took 2.038563773 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.274402143 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115337921 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124763911 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.227079575 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.242544251 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206170491 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122519212 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174861831 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129247651 seconds)
  done (took 2.580216661 seconds)
done (took 10.898855854 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.268276433 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.364255608 seconds)
    (3/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.363588694 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.29710098 seconds)
    (5/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.390251511 seconds)
    (6/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.231153627 seconds)
    (7/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130152654 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.2384959 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.253056342 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11096886 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128329796 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.284172938 seconds)
    (13/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.231511772 seconds)
    (14/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.219090709 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.132869341 seconds)
    (16/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.382347155 seconds)
    (17/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.393963297 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122482684 seconds)
    (19/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.098848534 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.147280391 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.211598556 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.240495387 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.130514502 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.155462926 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18649683 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.138289513 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.282340233 seconds)
    (28/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.169880541 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.201208408 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.30698855 seconds)
    (31/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.233805989 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.128657073 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.131257822 seconds)
    (34/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.202117253 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.112271958 seconds)
    (36/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.110927025 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.190029472 seconds)
    (38/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.172071881 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131352249 seconds)
    (40/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.098486336 seconds)
    (41/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.210033692 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102548446 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110998193 seconds)
    (44/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.228177131 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120912443 seconds)
    (46/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.178209882 seconds)
    (47/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.104866407 seconds)
    (48/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.398079811 seconds)
    (49/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.176958118 seconds)
    (50/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.161368495 seconds)
    (51/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109880942 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109533203 seconds)
    (53/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.213917776 seconds)
    (54/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085476862 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109122186 seconds)
    (56/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.131709975 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.174214682 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.145637654 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202045945 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.131591664 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118881528 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.110076567 seconds)
    (63/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086118494 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.132376471 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077964314 seconds)
    (66/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.137051018 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.160821638 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.192941574 seconds)
    (69/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.154920259 seconds)
    (70/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.145179635 seconds)
    (71/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.097271866 seconds)
    (72/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081781699 seconds)
    (73/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.131592083 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085819921 seconds)
    (75/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109868929 seconds)
    (76/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.175144688 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132442471 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.113627577 seconds)
    (79/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08571928 seconds)
    (80/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.216017204 seconds)
    (81/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082578728 seconds)
    (82/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.230273277 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121931148 seconds)
    (84/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.232123513 seconds)
    (85/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079211609 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106036668 seconds)
    (87/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.107875729 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124404786 seconds)
    (89/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079250581 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10979804 seconds)
    (91/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.137097881 seconds)
    (92/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.143912365 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099969835 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084959128 seconds)
    (95/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.112003489 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108223608 seconds)
    (97/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13433894 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.126284424 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111458447 seconds)
    (100/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08182493 seconds)
    (101/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081644111 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.129300381 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080137915 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127542755 seconds)
    (105/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.141223406 seconds)
    (106/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112384264 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.131296794 seconds)
    (108/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109140415 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.161748641 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081720727 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.148301471 seconds)
    (112/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078852555 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.10505945 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107968548 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103595786 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.141219844 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104559176 seconds)
    (118/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109792174 seconds)
    (119/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085365953 seconds)
    (120/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.105295373 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111831889 seconds)
    (122/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114786105 seconds)
    (123/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.178677471 seconds)
    (124/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141257767 seconds)
    (125/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.080558848 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103776604 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.135340814 seconds)
    (128/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080612975 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109885552 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10174094 seconds)
    (131/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.106440002 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101014801 seconds)
    (133/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.168034846 seconds)
    (134/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079955768 seconds)
    (135/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.112086041 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.178018937 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10325517 seconds)
    (138/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.126727218 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124870768 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123855694 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.137446669 seconds)
    (142/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079670397 seconds)
    (143/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087250411 seconds)
    (144/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087915579 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130094546 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086817814 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100770356 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081474258 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.137025944 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086675827 seconds)
    (151/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.08250735 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086437877 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.146595388 seconds)
    (154/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.166754097 seconds)
    (155/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087507706 seconds)
    (156/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079996975 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104029919 seconds)
    (158/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.105276865 seconds)
    (159/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112564384 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083693394 seconds)
    (161/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084941179 seconds)
    (162/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.138724484 seconds)
    (163/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.08058406 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081437172 seconds)
    (165/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085161458 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.102898979 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.127981708 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.103928999 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109185812 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133810871 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126427739 seconds)
    (172/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082011826 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124568424 seconds)
    (174/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081243572 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080083368 seconds)
    (176/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.136669684 seconds)
    (177/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082134118 seconds)
    (178/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.10553423 seconds)
    (179/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083841248 seconds)
    (180/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.081737489 seconds)
    (181/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.0827226 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102679887 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129264692 seconds)
    (184/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082599051 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122797598 seconds)
    (186/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128228806 seconds)
    (187/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.102268801 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10226028 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085888366 seconds)
    (190/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.104266332 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087894208 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087439122 seconds)
  done (took 27.56508415 seconds)
done (took 28.495001634 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.22592419 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132762553 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111734181 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110190409 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.236436421 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119085116 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155097446 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113521 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120773458 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138443024 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101681924 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124597897 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136549347 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.220354628 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141055158 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104433182 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102309798 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148377807 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126861174 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127532418 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235356256 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1295912 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12303443 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101840743 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236469945 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102919023 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.137561208 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115128398 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1233601 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.137354408 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.113014511 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102089938 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.152883827 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.127634247 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101830058 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110554282 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126724076 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086836391 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111050295 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.137201805 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125386545 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111625647 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13547002 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104013925 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111620689 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11050672 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126853911 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114756492 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099833506 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137708224 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105235659 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128360877 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136866148 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102681843 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100092896 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127713726 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122623903 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102299112 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.148141534 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102878167 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102994661 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100573892 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137754319 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102826623 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11147926 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12780934 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112722714 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112251496 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134211131 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105402789 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102170325 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109945965 seconds)
done (took 10.092788056 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106775031 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146548035 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.248924043 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.252341656 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155712818 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.120214798 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11581843 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153109763 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115727426 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1198489 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.16578882 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135093018 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.256718539 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117301369 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144990085 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115281071 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113788912 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138222815 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.250935612 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127573975 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124946755 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.1447638 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128655956 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117954036 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.132054153 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129954305 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.137524471 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115532639 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10662152 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124363859 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150879661 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106663075 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133392033 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126459936 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123087859 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115416423 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14450413 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116174271 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132062604 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108846454 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11166413 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146219781 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108542993 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118196175 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140308694 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123133815 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114050816 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142360282 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109395685 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113745051 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107051043 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154632303 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118201762 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147237788 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119463656 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118089808 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142956656 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12153836 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10989037 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117680677 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132099061 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106224193 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107485945 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151749674 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109809285 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118308061 seconds)
  done (took 9.791947146 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125382285 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136252313 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143045286 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11844062 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111889299 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12641398 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101131994 seconds)
  done (took 1.838516755 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102464776 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.270566599 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259460159 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.260202432 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.248529579 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.269443342 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127028654 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102000471 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165678052 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114367197 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.269003342 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.326585525 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.140972257 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118179064 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.2647007 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103044947 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.263717614 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129701759 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118755395 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.264439633 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119372303 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.159965104 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116595414 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104492128 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263148686 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103867608 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.332988294 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122093738 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112386498 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.142202371 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119124506 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.17976853 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263018852 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.147088886 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111684104 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.259135327 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.251674462 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116857179 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.334847608 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108872434 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248980334 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11729208 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117198143 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145421356 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118618367 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.247291921 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121451757 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.14642309 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117760715 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.273165882 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.1130942 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.265063037 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141504517 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118028068 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11363093 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14613234 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125086926 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117442658 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.272325692 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146362397 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.230787379 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.26166428 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.253847224 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.260508966 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156182221 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.265363074 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.210818988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.146253654 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112663769 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118103287 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.262211975 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.145486029 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115483261 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.251380919 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120424113 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.263756795 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.264152515 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114287787 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.145500695 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107713138 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115367743 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.131544102 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.253582596 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117816309 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115187344 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148066454 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117057623 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117703096 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.134852414 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126709199 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116608404 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142182326 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122442246 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117042607 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144983311 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.26667211 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115560226 seconds)
  done (took 17.79566403 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105928764 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104925634 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108533076 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13119713 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10555595 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105873589 seconds)
  done (took 1.668956297 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142073304 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118815668 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153005979 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119818449 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166381423 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.252784938 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261007004 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139194306 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138201443 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129669632 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254653333 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255766463 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256598482 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121805852 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259326832 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119674297 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261710794 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115797477 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155211846 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115366068 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116846144 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.151311071 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116708277 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245363394 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117564322 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147899883 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111890485 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126461472 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154486684 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112317565 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120450233 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145911572 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11075766 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111762536 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.258304775 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.139207996 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116013146 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119772074 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148427534 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119642589 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259886051 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115979064 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12341744 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150607629 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112809107 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137606186 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123095542 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111061051 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259602216 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120065478 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149670988 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120016518 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118567592 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149971236 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111036606 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111909762 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150134385 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261035778 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123324202 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109769615 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.148581884 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119289262 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111689692 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151227471 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119971052 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120396525 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.137774992 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119561573 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115886525 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146577019 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122195427 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118951998 seconds)
  done (took 11.787524029 seconds)
done (took 43.853903141 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.704042742 seconds)
  done (took 2.708305504 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.20626338 seconds)
  done (took 2.216908519 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.034994115 seconds)
  done (took 20.071472497 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.423522922 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.349110945 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.050190321 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149188385 seconds)
  done (took 2.97861411 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.100543861 seconds)
  done (took 2.123512494 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.341395368 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.252763986 seconds)
  done (took 1.609990139 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.732671522 seconds)
  done (took 1.757536486 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.798020893 seconds)
  done (took 2.815785024 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.270526091 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.243483267 seconds)
  done (took 1.538034341 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.683315315 seconds)
  done (took 1.706423212 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.818486765 seconds)
  done (took 20.846587964 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254565682 seconds)
  done (took 1.285875809 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291210496 seconds)
  done (took 1.322155073 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.805032679 seconds)
  done (took 4.835040126 seconds)
done (took 68.836350979 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119631414 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.144624466 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120927459 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145379311 seconds)
  done (took 1.549206292 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123621656 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120118487 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122112596 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.145515501 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12429297 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117695414 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145171604 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121007357 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116622652 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14809502 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119570512 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117521997 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147632111 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118368963 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116972068 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148468461 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122723567 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118694703 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144850543 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119689312 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119728493 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146063546 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123564247 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.1214769 seconds)
  done (took 4.100485823 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115993522 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109911114 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110660022 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134644775 seconds)
  done (took 1.505206773 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126408324 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129600769 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154107726 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126930666 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130135193 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15539539 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117752613 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114220181 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143872346 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127988971 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133430236 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158198889 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131388775 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119745045 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15532911 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113837102 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120181623 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157248069 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126086495 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126148095 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146606562 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125321593 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123790113 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153663745 seconds)
  done (took 4.248726602 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195908083 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130408064 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177538847 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164045791 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179326156 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117543439 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147269915 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151916246 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127054215 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.11951017 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148679801 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165232465 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150835033 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120919636 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119138823 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.15096801 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130307842 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124272297 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.192698038 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123327066 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151645471 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130802248 seconds)
  done (took 4.252786405 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123700437 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109477259 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107812034 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133514255 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120301541 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110885679 seconds)
  done (took 1.751564986 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110543038 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.1036115 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104233646 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129423511 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107337322 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103784217 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10260809 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129969111 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104495481 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103825144 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129206794 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103516236 seconds)
  done (took 2.377379135 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206722726 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145880701 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2502013 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392529874 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190274406 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159715282 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.316579364 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188256831 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178178524 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164994096 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182651369 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190789695 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154746774 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215782747 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139923939 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.186843871 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172462783 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238735386 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170203068 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214788836 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184704563 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175675691 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216139496 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174142257 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140409126 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161539187 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.145938461 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129909676 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193773035 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164230242 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203252104 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175681837 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14362832 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214409179 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235227747 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204928434 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273103165 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160268355 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173590789 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.217113084 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258194635 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141190091 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219905408 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152982792 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156544209 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190529047 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177729654 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.181504575 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160512869 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143872625 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211738937 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20594658 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169626179 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163700007 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304492701 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160974172 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141328727 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206860244 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215585166 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201169507 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207986016 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122319325 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202300307 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218605871 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213274677 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168874477 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163193168 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153753141 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163820483 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235127805 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212131725 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157869936 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.239294885 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15999339 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170730929 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193064774 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155565103 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237622326 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196814833 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120462735 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149565388 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16214094 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125716546 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187397224 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149997286 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242363501 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13209508 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.209936123 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180127305 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183866817 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160469289 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191439009 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161205276 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179304645 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102032179 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14190331 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.189384349 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156535758 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157735351 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151264487 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167820922 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125297428 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150358087 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152248201 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167775735 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163925873 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157858202 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197678489 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130149442 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210114639 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146486365 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18945412 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165713112 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222598279 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129875803 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1606404 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248787014 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168738497 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162651549 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170542428 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222472076 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149334982 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163673817 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163471207 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226319073 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140954936 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225402266 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137609259 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16234341 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138554561 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202159018 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186024144 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15983499 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126235397 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193647879 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213942639 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126741326 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138430523 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210634187 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131356229 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152627789 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136179747 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13480988 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.172272675 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14952069 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167492528 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153305528 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195184597 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163774249 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185508576 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13354275 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201214344 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1310784 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.19824197 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147143013 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.147651248 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173070751 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226233797 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128258977 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20927354 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158957364 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211348245 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19933729 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129074514 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209874803 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127398882 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118970995 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191468203 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166525716 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190949771 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215547382 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20544086 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163658661 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192546692 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14844681 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196003905 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182059395 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183678315 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137448694 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199612046 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166892382 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.153545992 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122463827 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125160819 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166319613 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130044819 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165240775 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178311362 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192517289 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204012117 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166389595 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166126642 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190381054 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152992151 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159160743 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203388922 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138632434 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216930938 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187882481 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206886505 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138180979 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190433364 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119987814 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155404608 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133436382 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185452563 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138236923 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13487169 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169915252 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188255434 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19692588 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146739261 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218489097 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191193028 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229294591 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120301332 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159057657 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193626089 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166108832 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.213137229 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133402159 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187460989 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191125561 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170353646 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190898298 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197838915 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208018422 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18997772 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.19448835 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130118362 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171655488 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160729727 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166547226 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159263339 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140123615 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159350082 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146802048 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.166036337 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139341742 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214115496 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14303453 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203127507 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151633179 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198942617 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123661535 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170308878 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172095837 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173471362 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105834897 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193707803 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188883935 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178851375 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149187826 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199031944 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128134311 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.348038602 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178042682 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199086071 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134723557 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170094535 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170216966 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186171859 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155984431 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213916797 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138591088 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236452136 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198132877 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137883037 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12885605 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174709018 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14722787 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169189392 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152104329 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191327333 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142195178 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215035864 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135629887 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198568407 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205023627 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14535354 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148430956 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167787398 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254376761 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167846624 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201561456 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164226261 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190799961 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181055496 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152708036 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126423828 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131071416 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213725921 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12837233 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205376605 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191875028 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182442823 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202126751 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189787332 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140556491 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126153333 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194692216 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148335344 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214223191 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162202819 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137678611 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212357102 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128749473 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129158673 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189340069 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312602601 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146750644 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16615409 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.136308116 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283993027 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156842152 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133163931 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185875662 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169087214 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160944629 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182935134 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174055863 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167953201 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157348431 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164384032 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205958453 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183023484 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196095397 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173870295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176760607 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158413162 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185179344 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199028243 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146798905 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146040918 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189445389 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192198952 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202192053 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129754908 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199995894 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167568586 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200516281 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203201538 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138839234 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209114441 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127838254 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1657275 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166615741 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122125166 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18878965 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192823892 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130180661 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169645595 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200167353 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129376438 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157069346 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146572829 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196332509 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139882872 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157916241 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1852473 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158451854 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182202709 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239826866 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128937067 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199322693 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142578327 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157719917 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139682846 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142991158 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161624045 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175672689 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204893304 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130640217 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199496807 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166203887 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192893453 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152802252 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170645443 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.262272807 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126691948 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221166462 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147626874 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227330095 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177778613 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174402136 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199045214 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148353922 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194412222 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14580639 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.25139377 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165028528 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.196536305 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130472038 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172779863 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137328776 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131797207 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180335781 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165677842 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172070066 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135301284 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.195986375 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14433672 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.1749286 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140753862 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229540782 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152083446 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216755008 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183396925 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168223976 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173838726 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205712472 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127535562 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193675048 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199062255 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144137114 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151067325 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163974204 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135981817 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246977357 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125006958 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189003993 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173395723 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198699429 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17127611 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164569251 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176350708 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170656688 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173915482 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156337967 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14977603 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19732642 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134994751 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125121917 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202155665 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15907826 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192938152 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139979323 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.204751386 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195898934 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.152869649 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134761271 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315122195 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160573352 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223480025 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133578998 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165606255 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146144282 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156077669 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.198218642 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199767513 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131631194 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128423733 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.174112574 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160661073 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16702962 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1708711 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210741534 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157193662 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215780094 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134436578 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285429453 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14238745 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201697716 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11775443 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12743471 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169372516 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134983157 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140245418 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21099401 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243580416 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162726838 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.177327229 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134010757 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.156530869 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130716063 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158613257 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180264473 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166203537 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177566505 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103581817 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169032319 seconds)
  done (took 85.037526911 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246154836 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.210750194 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.191772291 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.25016617 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.218508932 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.311540176 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.258494813 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268976942 seconds)
  done (took 3.078384339 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120361046 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162212387 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141082186 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145415419 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109751666 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.498118092 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161811638 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121320805 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162306604 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15601132 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13841858 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574959148 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115966144 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146445369 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122508874 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137072389 seconds)
  done (took 4.138601563 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.215010442 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.565164397 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.2586412 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.310073299 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238009736 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.214581896 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 1.350175815 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200375551 seconds)
  done (took 13.47875285 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.175132187 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170880389 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.469378194 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.328370668 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.21489681 seconds)
  done (took 2.491855563 seconds)
done (took 129.033044568 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127205003 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124104818 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123223631 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156220564 seconds)
  done (took 1.652537239 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.198844839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091682259 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094307174 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122323586 seconds)
  done (took 1.638194773 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.376896112 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092341142 seconds)
  done (took 1.639779123 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147797356 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134331258 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164809436 seconds)
  done (took 1.594620726 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13961992 seconds)
  done (took 1.274594765 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120549198 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116021807 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279581643 seconds)
  done (took 1.660410098 seconds)
done (took 10.596531095 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12112511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933386711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435301794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135188211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713479347 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.43023858 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.624345805 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177001279 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172794599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109493254 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16286687 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693336702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.633629807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.883260993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.582929226 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.908414332 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696905591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112354162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145773565 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113078276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.599240727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136581894 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113079533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112851921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.691554212 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.452183829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111341952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.890963439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13983971 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114558912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.40074733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141496904 seconds)
  done (took 21.810754287 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113754968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169300859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149144804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113975247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113765375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141215095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123258272 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122575085 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203561081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111477933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162626057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111714695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117241166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110975564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166777912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110501063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113583439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144109526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119925515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113378873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163984122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110183215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112551045 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143652346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112203933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132636559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141133869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123137726 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111345584 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146344448 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11696236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1116598 seconds)
  done (took 5.29343934 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16169193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177967743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150602671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149154721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190940831 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11474895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199244261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179541965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204853494 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113321045 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134613976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110354536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.184161617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111989032 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166480458 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112855901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115446105 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142765221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120480125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113567026 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163072203 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114155229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143573914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113289197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135218592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141977203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125801751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11162872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144998815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118101401 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112960593 seconds)
  done (took 5.635220443 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127004489 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126886806 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13529821 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167501119 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122474094 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126161085 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157991529 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123571301 seconds)
  done (took 2.232152357 seconds)
done (took 36.11498697 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137856776 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129357301 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131693982 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158174723 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.275140225 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118786474 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130980553 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118985662 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.158321949 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133592477 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11056846 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152771941 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13231976 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123837675 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.274354232 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127432965 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.279343693 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.280310995 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.154594868 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127796349 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120347287 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.281790234 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157013472 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121620563 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.27813027 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11544834 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.265753836 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122371916 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123731656 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144118047 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.278763172 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124734576 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119424125 seconds)
  done (took 6.640497371 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.225465962 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154467129 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121870385 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120506456 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121689636 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152497465 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.230387816 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154838615 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.1209709 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121600519 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.15146982 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216349439 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158784787 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117008874 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121840424 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112328461 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.264923633 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121872202 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145635419 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095693034 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116812829 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119270683 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.278414664 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115326746 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.155216316 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122156735 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122265268 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157025276 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12429758 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123592114 seconds)
  done (took 5.621031417 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127240203 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132675181 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138341544 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219428253 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149565947 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164337518 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138409011 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131950998 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176223527 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114317261 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12901906 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181987947 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130864756 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123699249 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144230352 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133393918 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.12991268 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145728936 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123381542 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131456382 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134199747 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.162192622 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138045906 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121385408 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.145203241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121495897 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120194404 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156720838 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122770779 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129320566 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145880423 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118419947 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115797198 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.179189337 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115337363 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126670368 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.16898825 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127515098 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127220298 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178218822 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118261337 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114602073 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171305304 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171124415 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115569933 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.159175689 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127604425 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128742628 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111132149 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.163174032 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156650158 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.14461881 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136900439 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112971629 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110267653 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153466793 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114519591 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117047077 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.160905168 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116748016 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135319862 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.152518627 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126371796 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115702283 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.155499732 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114350435 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113575407 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116954467 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.173233971 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121398678 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150709179 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.145836981 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126619034 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126289314 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.156803529 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127705625 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113051178 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.156462424 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126569587 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119418956 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125506952 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149396093 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117346207 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130046565 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.1682355 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12933614 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125571764 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.157827473 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118028417 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115484029 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163825302 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115921934 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118472328 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157065434 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115621058 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117948728 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126221987 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.158605155 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112354441 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13981324 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14910283 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114227585 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138005398 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148347426 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120476773 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122848234 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186876138 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115009876 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123239275 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157812876 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114680784 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121229243 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116040594 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.144384701 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130033435 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129502851 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.153691262 seconds)
  done (took 17.114149852 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.374279439 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.365884446 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212524023 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.412366056 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127197809 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.284547078 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.395618674 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.369512283 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114011077 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.147598168 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.206149469 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329187671 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147535032 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.148235749 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.368815337 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.447814698 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171731894 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.186258672 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.152133801 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127353485 seconds)
  done (took 6.252729834 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135561373 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149255153 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169135824 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142201044 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124790938 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163498026 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115635376 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135481474 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157944666 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123893967 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118079332 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162400331 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129082476 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131915798 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160239022 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149174416 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123295218 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149790487 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138601494 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118208328 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102020865 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.171106186 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123230266 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167656586 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13336647 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125146501 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143805298 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121288119 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121366621 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122811497 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.14940147 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13395216 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121246913 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.13641644 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127071047 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129822654 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150753598 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118522335 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119576938 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117296899 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159499962 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127909701 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122098348 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.131617156 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135884039 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112000346 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127474172 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158389695 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108024072 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13416308 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157863511 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131302311 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122124608 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13486289 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.152949058 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131821093 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123936082 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.161977511 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120076234 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112765807 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.144156251 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118691071 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122259542 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158214253 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128492597 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134407455 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.160742089 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115556105 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11927264 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147831858 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119192811 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128916323 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165605835 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12510299 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122483663 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124802882 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.154715275 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096734857 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122309269 seconds)
  done (took 11.798194449 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140075564 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125769695 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131499473 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180286334 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128523048 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119669198 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156586393 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135338091 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128613771 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164652641 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130142178 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12772134 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168265322 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126783511 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123946139 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163719353 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128057416 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152260633 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164536076 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142883533 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127988901 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152305192 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126972012 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126630907 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174002783 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126737695 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140438739 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159623231 seconds)
  done (took 5.16177986 seconds)
done (took 53.73613593 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.325059423 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.592274479 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.281143433 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.280259173 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.293889538 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.317022577 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.280429865 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.280904786 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.833021504 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.250651357 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.281738271 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.295785169 seconds)
done (took 29.492189755 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.562427667 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.502489178 seconds)
    (2/2) benchmarking "String"...
    done (took 1.681653163 seconds)
  done (took 4.373731185 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.271397641 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.272615394 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.607099827 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.271037051 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.276969788 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.271989266 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.272630759 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.284901872 seconds)
  done (took 16.428509101 seconds)
done (took 26.810355842 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.333180776 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.596987508 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.553458509 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.253993053 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.280967364 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.278399578 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.276175134 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.344596335 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.273494835 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.253471828 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.787102536 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.572723459 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.284906342 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.699945712 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.250104291 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.279911643 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.291061593 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.647773226 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.279678582 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.249967681 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.282925014 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.252276564 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.282783795 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.280894938 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.285086881 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.276206353 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.260120089 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.274604334 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.607848107 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.302195272 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.254041383 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.295457614 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.330540916 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.283179795 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.30510507 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.291442718 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.612055276 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.292046705 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.273631305 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.283375002 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.605398983 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.304356092 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.294190693 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.283987789 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.258661524 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.302013126 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.267717913 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.468320797 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.32350741 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.285724253 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.345379604 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.684636992 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.290321346 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.286942425 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.28347285 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.645035797 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.285979243 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.395023068 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.315198671 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.287150621 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.280916938 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.300018389 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.314941796 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.285940552 seconds)
  done (took 149.682088557 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.283896507 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.286289129 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.286111942 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.297441944 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.28164629 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.286140019 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.283909637 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.285128857 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.287044882 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.286755669 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.282338348 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.287227866 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.286532457 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.297516814 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.29255934 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.31561304 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.288689085 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.284404882 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.29726343 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.285740736 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.29142826 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.284467319 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.288259492 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.287328298 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.290974223 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.378095916 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.312133128 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.297539233 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.289837277 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.284428558 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.297436846 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.290062165 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.051931394 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.247099789 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.306286016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.324636813 seconds)
  done (took 83.483783938 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.285210011 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.286261402 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.284291529 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.328605824 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.291941175 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.29166146 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.911003488 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.908471951 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.351247041 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.313475827 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.827422747 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.580701289 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.286242405 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385441473 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.299074764 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.284842856 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.386053073 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.314119763 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.284296976 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.287052424 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.909639138 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.299666739 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.829170944 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.477303434 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.300831621 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325731645 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.678486978 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.285929167 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323622997 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.633675902 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.340251089 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.286033511 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.661857769 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.530091222 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403504803 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.289147733 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32559741 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.288683987 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.579787276 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.287091955 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.289492051 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.292570515 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961317357 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.287559333 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.288345886 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.907142731 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.307806321 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.28789499 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.288949244 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.284912558 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.417335822 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.051015566 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.286983911 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.287523085 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.292425315 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.291060966 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.290179219 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.325918191 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.324809252 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.218559917 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.287495987 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.290981695 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.291527086 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326695385 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.287024837 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.340385674 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.28889847 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.290108051 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.349514768 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.454986909 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.564039324 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.911427144 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.28834379 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385931479 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.408970373 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.287556609 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.292321321 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.289459715 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.291271466 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.405218499 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.28523292 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.030575956 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.476099021 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.308967572 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.822159997 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.38799892 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.291633593 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.689431527 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.285766437 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.288943168 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.091915879 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388781563 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.288311104 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.292651321 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.293200972 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.029788425 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.912099297 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.617845817 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.290368559 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.970747468 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.290033949 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.21281568 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.912757342 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.969877106 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.292073943 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405961261 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.475102805 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.309975382 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.290655048 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.826865693 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.293955048 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.355100883 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.293069251 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.695380607 seconds)
  done (took 388.412444079 seconds)
done (took 622.752033777 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.26544849 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.290732152 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.267097094 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.268802898 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.271538161 seconds)
  done (took 12.552491696 seconds)
done (took 13.742430794 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.577265238 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.575682564 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.390054071 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.578913701 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.358194293 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.593709438 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.563747108 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.336274746 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.481043784 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.412939942 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.479348037 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.382907212 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36027675 seconds)
  done (took 20.278369967 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.678806641 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.303646853 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.420505778 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.650258109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.369632759 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.687026053 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.713459931 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.302788714 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.541840482 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338989826 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.345068461 seconds)
  done (took 19.542563339 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.669668747 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.301354104 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.423510769 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.664595546 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.36631851 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.692154288 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.710439086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.3007131 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.547295784 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347263364 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.344686919 seconds)
  done (took 19.556171913 seconds)
done (took 60.569496235 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.35897449 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.43493785 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.351930298 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.336676961 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.334195781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.329138712 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.338018612 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.334350549 seconds)
  done (took 12.006713144 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.331733247 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.333622663 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.329163645 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.331283259 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.335421076 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.332830173 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.329102116 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.329119786 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.325123606 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.32850162 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.33117717 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.331018769 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.333490034 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.329661475 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.339540385 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.329402992 seconds)
  done (took 22.492488885 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.331852954 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.332142167 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.333053246 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.327405112 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.333121831 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.33166152 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.332683088 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.333823596 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.334405094 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.332613037 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.335472129 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.335055526 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.335518225 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.333326047 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.330633386 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.335139266 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.333199704 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.337271451 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.338035933 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.336443971 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.333049684 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.333259348 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.334780632 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.331916579 seconds)
  done (took 33.19913538 seconds)
done (took 68.891614571 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.307989165 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.307843965 seconds)
  done (took 5.808211226 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.43217053 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.452096108 seconds)
  done (took 4.080803991 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.336055444 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.334800745 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.337712987 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.335865685 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.338628187 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.334801024 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.336566054 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.335600079 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.339933032 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.335943837 seconds)
  done (took 14.560200498 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.337859025 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.337307698 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.336328314 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.337791768 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.339026702 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.337666822 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.33867554 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.336549362 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.335743463 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.331792542 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.336297304 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.337178701 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.336059634 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.33703413 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.337648034 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.338721286 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.337124434 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.33853439 seconds)
  done (took 25.261803754 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.358184585 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.363300179 seconds)
  done (took 3.917416454 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.520072769 seconds)
    (2/7) benchmarking "second"...
    done (took 1.417322902 seconds)
    (3/7) benchmarking "month"...
    done (took 1.502631864 seconds)
    (4/7) benchmarking "year"...
    done (took 1.492475266 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.418387282 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.369349552 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.418496235 seconds)
  done (took 11.333291335 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.33803726 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.695622467 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.883857088 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.54131304 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.322030826 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.363129767 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.280579674 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.373697801 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.358922737 seconds)
  done (took 15.354517569 seconds)
done (took 81.511349525 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.303188346 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.313450195 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.323560839 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.325353455 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.69708655 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.357048197 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.302572066 seconds)
done (took 16.823972029 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.285276361 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.301410815 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.304561076 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.314138342 seconds)
  done (took 10.401456498 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.302928885 seconds)
    (2/2) benchmarking "read"...
    done (took 1.739091193 seconds)
  done (took 5.238574124 seconds)
done (took 16.841357061 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341744366 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.341571019 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.342033508 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.337675971 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.346045751 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.339184124 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.340640384 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.341848918 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.343759286 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.344723375 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.338203203 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343429915 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342113127 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341580867 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343125896 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.34304523 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343803356 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.343451217 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340352987 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.345807173 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339059527 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.343240017 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.343982709 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.343915522 seconds)
  done (took 33.412323383 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.344570494 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.34457615 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.34322989 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.342418334 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.342800785 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.344102208 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.341661465 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.343158931 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.34493709 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.343036011 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342615426 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.34358594 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.343161445 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.344221287 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34438262 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.343263344 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.342861686 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343796862 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343930817 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.34393843 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.341356747 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3434765 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.343083153 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344512455 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.345879599 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344636075 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.345314093 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.342999413 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344300208 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.344596963 seconds)
  done (took 41.509147568 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.352753098 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.350619657 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.345044227 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.344177427 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.34544316 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.346756177 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.345301872 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.344152423 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.345552462 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.34444862 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.341310093 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.347250443 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.34523657 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.345536538 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.344567281 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.347642323 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.3478501 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.349085523 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.344702563 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.346688919 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.347019548 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.346327909 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.346848925 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.347744221 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.345846354 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.345100379 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.346367649 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.345087738 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.347438805 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.346891738 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.3474409 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.346973033 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.34675925 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.346587231 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.346667198 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.344797199 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.353864273 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.354983899 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.347683459 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.346127465 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.348309586 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.346784811 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.34634984 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.347880062 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.348581408 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.349001713 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.348335777 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.347892564 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.345129014 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.347738285 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.351450907 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.350758571 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.351072507 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.349506107 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.348768024 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.347239618 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.34826391 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.348827669 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.348622824 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.348815307 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.351931485 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.347516678 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.349098164 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.352802056 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.352339288 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.346380709 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.349945199 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.35148939 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.348936272 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.350984368 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.348098875 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.351360463 seconds)
  done (took 98.245308921 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.350181751 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.348951078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.352109511 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.348868037 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348761948 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.34982591 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.349353224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351816946 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353485244 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.351151358 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352544063 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.351699892 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353247504 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.354491727 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351639898 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.353844927 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.350822336 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353441175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.353066825 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.349745174 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35031445 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.352760152 seconds)
  done (took 30.937138795 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349282685 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.352831879 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.348456881 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.351397339 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352873574 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.353090501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.351314158 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352679556 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349889186 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350793072 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350757733 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351451675 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352111606 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351007206 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350269612 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.353466876 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350468729 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.353875936 seconds)
  done (took 25.532330264 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.353322934 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.351986171 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.351546171 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.353266711 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.353458216 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.35184153 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353072202 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.352198559 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.352657206 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.354872431 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.353845556 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354235549 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.351772666 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352717898 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353182552 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354838698 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.352567111 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353383485 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354953797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352034291 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.353476863 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353949898 seconds)
  done (took 30.97808667 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355398616 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.355586 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.35214066 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.354973981 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.353505219 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.355006737 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.355074971 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.354610038 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.355286241 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.354095727 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353556063 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.35638254 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.355303422 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.352867289 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.353662013 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356088648 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354514845 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.356390572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356921645 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.354327251 seconds)
  done (took 28.304388359 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356994769 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.356685721 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.357163645 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358596927 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3580148 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.358799538 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35887769 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.359806788 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.360509042 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.357085492 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.359602433 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.358988737 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35736807 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.355643479 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.35807235 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361467264 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.359021354 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357091848 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.360780166 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358431613 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.357728033 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358876014 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35862221 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.358932795 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.360432845 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.361905659 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361635163 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.35948007 seconds)
  done (took 39.257102039 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356898178 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.358250585 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.356618673 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.358223137 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.357112521 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.357350959 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.35922536 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.358405633 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.357819804 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.358222089 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.360132458 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.356970743 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.358611175 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.356607708 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.357792496 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.358143309 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358051956 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.356959848 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.358657829 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359641614 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.357783556 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358936706 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.358184934 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.358223835 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358696662 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.358538401 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35603487 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.359545442 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360464274 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358647423 seconds)
  done (took 41.957908266 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.388126102 seconds)
    (2/2) benchmarking "in"...
    done (took 1.383067428 seconds)
  done (took 3.983851857 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.360428376 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358259246 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.360476985 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.359897093 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.359037556 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.361764998 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.360684414 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.361336592 seconds)
  done (took 12.095421562 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.35199944 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.359321531 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.359874045 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.360058566 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.360450376 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.353688831 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365647964 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.365364968 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.355760953 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.35483346 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.364590986 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.357710363 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.358202953 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357033251 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.354399676 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359896395 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.363593303 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.362922477 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.364991525 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.364154827 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.364674097 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359679328 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.360182465 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.364738072 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.356429963 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.37610048 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.369782079 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.36368263 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.357906896 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.369141146 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.360257405 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.366402948 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.367558751 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.364550128 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.362737678 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.363991329 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377285478 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364205741 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.373202067 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365784573 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366609608 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.363816516 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.359910363 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.364609494 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365085533 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.369307368 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.370210974 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.367231335 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.3608183 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.364419805 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.375972531 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.362895449 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.368612517 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367894619 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.366452326 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.376936131 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.370427971 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.361084605 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.364472186 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.376916366 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.38459311 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.374879376 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368835171 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.369462626 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.378787624 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.390241664 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.379602811 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.3707454 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.366605558 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.369348365 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.380258062 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.387245124 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.38357273 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.372062886 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.366893443 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.369014244 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361639912 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.371188124 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.376950239 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.376753007 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.372404689 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.369945228 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379257167 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385889504 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.361184827 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.371754816 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.368115457 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.369242136 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.362016078 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382056964 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.375803655 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.373559445 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.360966852 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.364848142 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.366428231 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.37060006 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.366266269 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367733076 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.374015927 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.369836556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.369094631 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.3697554 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.380867776 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.375445229 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369054403 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.380919459 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.375068436 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.363961856 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.382313142 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.375461433 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.368849978 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.363913107 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.374550423 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.374058111 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367525298 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.374737877 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.373639902 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.373744035 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.375051324 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.373484366 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379763656 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.398390466 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.377331363 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.368944333 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.377567566 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.38217744 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371843515 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.375278867 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.377712836 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.373883159 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.373272747 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.375193452 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.377976208 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.370136873 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.377193916 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368297184 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.374491338 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.374173211 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.374085071 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.379376805 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.376035249 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.370340321 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.378937853 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.386215105 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.377572944 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.377846582 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.389659467 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.374217978 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.379368424 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.378947071 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.380283904 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375266855 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.37068359 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.378449312 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.369187101 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.376636163 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.370541254 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.378524671 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.376675693 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.374301369 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.374796404 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.367404822 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.372500372 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.378743205 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.382053472 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.375710207 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.37973977 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.377366772 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.375310226 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.367378632 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.37551954 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.366814663 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.37658937 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.382614926 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.376104043 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.374819033 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.381716698 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.381991523 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377510995 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.377838969 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.374453902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.384208704 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.382119682 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.3878056 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.385019562 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.377102214 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.377356856 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.37304688 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.371308251 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37847704 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.377510087 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.387667455 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.393042439 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.394831703 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.372979343 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.385056927 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.36975079 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.383069454 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.388066178 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.38474327 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.379911231 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.378158842 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.373076841 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.382235827 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.378993515 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.382152507 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.371728695 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.380408081 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.384838672 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.3791853 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.381139878 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.374447477 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.377298538 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.3811477 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.379073554 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.379812266 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.374592468 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.382093701 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.370869439 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.374561388 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.381855682 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.37742942 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.389864521 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.385188787 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38527127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.391641773 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.380387757 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.372654651 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.381238215 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.383205434 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.378801103 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.392800299 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.384665746 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.377681198 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.392671442 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.381887948 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.3735878 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.386766292 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.390966407 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.38195332 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.375488741 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.388714724 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.380922183 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.379144234 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.381432094 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.37525575 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.384126501 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.391309817 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.388768223 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.374510683 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.384195993 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.378197744 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.383597104 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.38413146 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.388790432 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.383979625 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.391299759 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.388894775 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.381891301 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.378250684 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.384572577 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.381543421 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.385623898 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.377912303 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.389935899 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.391024027 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.384317867 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.387532241 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.384595555 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.387152723 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.376443541 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.38677167 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.377915027 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.401731114 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.404294219 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.39411597 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.390862763 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.387098177 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.393988998 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.386672076 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.378602056 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.385074806 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.381304774 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.379033884 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.379677821 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.389632997 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381359529 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.388795112 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.391090585 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.389240908 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.388656267 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.38406078 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.379538487 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.387557943 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.385201708 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.384615809 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.37709516 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.386666977 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.386321752 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395059595 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.386897524 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.380081713 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.400062466 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.391946071 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.384629987 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.38540285 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.381913301 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.378739643 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.388342889 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.389880585 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.384510767 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.391228172 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.387653347 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.390680338 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.386089042 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.400940161 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.395261577 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.385917302 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.392193588 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.389150814 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.378242024 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.380114609 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.390866813 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.400215768 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.398554313 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.381086171 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.390537372 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387115708 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.3885624 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.389691595 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.385491829 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388036565 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.387558572 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.402316035 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.392583513 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.384413548 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.399705298 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.396706313 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.38783172 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.38897593 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.38118346 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.398958415 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.399064783 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.389650947 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.386302406 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.382716895 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.38924035 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.388033073 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.390819112 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.389540108 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.38970661 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.400579012 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.392452071 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.391585201 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.388755162 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.399609824 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.399467628 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.40159625 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.40132813 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.388381442 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.394147468 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.392233328 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.386938172 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.382627637 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.385509778 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.393061785 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.382749859 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.395124827 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.389831975 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.392941658 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.397757494 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.396277278 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.382508558 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.399948485 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.413531916 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.383747403 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.394500446 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.390188655 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.383811726 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.391442236 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.390572573 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.382959523 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.385033948 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.393860421 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.397063551 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.384386381 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.394250693 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.388022527 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.39311291 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.390207302 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.391122572 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.391768115 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.391337404 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.382924951 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.394100535 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.398510593 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.403244924 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.389926889 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.393307138 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.387144412 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.405211585 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.402560968 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.391794305 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.396166091 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.393400795 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.387541879 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.394707176 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.397254846 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.386056426 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.396159106 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.386879854 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.392977697 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.390729575 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.402798638 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.397317704 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.397630104 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.384587244 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.385936857 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392472744 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.392993899 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.394719747 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.397604751 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.397788015 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.386465416 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.386211752 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.394228414 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.39232503 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.398212091 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.389531797 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.394605836 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.390450001 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.399602003 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.393164941 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39448983 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.382877739 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.386611175 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.407873934 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.402255273 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.397122637 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.392346471 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.396436726 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.388362236 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.39477604 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.393656344 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.390398039 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.391408642 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.397320009 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.389780921 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.388761657 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.389516083 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.395626706 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.406858791 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.39767997 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.389317245 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.410718709 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.410762291 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.40278907 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.389235042 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.392505779 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.390365702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.398623665 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.394597805 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.390980305 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.411310195 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.403488391 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.400670714 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.403035121 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.396843133 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.388419714 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.398487615 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.399916218 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.399935005 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.404292403 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.398409672 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.403509064 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.396683964 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.396528357 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.387789467 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.392242966 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.394589214 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.395426053 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.399408123 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.403419178 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.40296968 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.399271095 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.401835248 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.398431672 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.396551894 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.398424618 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.390711137 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.399922085 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.390246553 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.407445947 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.399143773 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.391104274 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.402290403 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.398581482 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.397007678 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.399434243 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.40580768 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.401429051 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.395790136 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.403188981 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.413786278 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.410064576 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.399984593 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.395164986 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.401711838 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.403453121 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.400661356 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.399154599 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.397777538 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.422613518 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.412763453 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.395401258 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.398873209 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.411428856 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.412588011 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.400445057 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.400234974 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.406113934 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.405164721 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.407227064 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.402112029 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.413387554 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.407937978 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.395520548 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.404145109 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.398730244 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.397557679 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.409892626 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.411603739 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.401034238 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.404672969 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.423819328 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.413093872 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.41107469 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.437344302 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.413462145 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.406897553 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.405419712 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.394530338 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.402372117 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.403630378 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.406774981 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.40199721 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.400911526 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.399939546 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.395120636 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.41240412 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.418352222 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.409580926 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.400463844 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.394027132 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.396515088 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.404827318 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.40384053 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.405706969 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.403378391 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.403287806 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.403359743 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.399936193 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.422527124 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.429628237 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.406393928 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.402267983 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.407437566 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.413149325 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.412769459 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.408010753 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.410928861 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.402149464 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.402037228 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.411357198 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.416219898 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.405841204 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.39809811 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.399355323 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.398650415 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.406872759 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.418909136 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.429843418 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.414112087 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.409121858 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.40663041 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.404947584 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.39883291 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.410952817 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.405823743 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.399194618 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.403218734 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.407817642 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.407149959 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.403242689 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.402732847 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.412574672 seconds)
  done (took 827.703485639 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.402531705 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404890035 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403211959 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.403183603 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404396327 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.402541901 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40715883 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.403245762 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.404569674 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.404125832 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.403857153 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.402914714 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.406916061 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.406075102 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403975533 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.403570314 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.404600055 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.406076988 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.407111058 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.403642181 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.403910162 seconds)
  done (took 30.742784541 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.404569952 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.404134213 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.405835058 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.404847991 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.408308976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.407630747 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.404501439 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.407204296 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.405990245 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406059318 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.407437147 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.405883108 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.407410118 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.405726455 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406680556 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.40667853 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.405475025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.409215306 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.40364679 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.407385673 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.408997471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.408909541 seconds)
  done (took 32.193905734 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.408401166 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.410061643 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.403139673 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.411442335 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.407330639 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.408009706 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.40634441 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.408983293 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.407003642 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.399690213 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.395228611 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.400574612 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.410262157 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.413452227 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.413235579 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.412550576 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.407209813 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.409153426 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.409356944 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.409172144 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.421791346 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.421200909 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.409367211 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.398198612 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.410581332 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.410222137 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.40837749 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.407650162 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.400836797 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.414321402 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.410235687 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.403684784 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.420975671 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.409128144 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.402487984 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.412219739 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.408118518 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.41120662 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.410562963 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.419995448 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.433504289 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.409168443 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.423011264 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.423972699 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.410747833 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.408035966 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.415935923 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.410785618 seconds)
  done (took 68.954454266 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.410980894 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.410864957 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.410321313 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.41044989 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.410494589 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.409467363 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.409304563 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.414794018 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.410444583 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.410041039 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.40890549 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.411079509 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.412418647 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.410453592 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.410363217 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.410976144 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.41235551 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.411053039 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.412206398 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.410998215 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.413321624 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.4102213 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.412708418 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.414611522 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.414364913 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.41132577 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.411314525 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.408605173 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.41248744 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.415038952 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.412956773 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.413152538 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.412253402 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.416168774 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.412951605 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.412392805 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.409658868 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.411981579 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.412937008 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.412362005 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.413291592 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.416344565 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.410770741 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.414606355 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.412704647 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.413349771 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.412565243 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.409283332 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.411935973 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.412394202 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.412794742 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.413733618 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.413266101 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.409683034 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.413223358 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.412609453 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.414676685 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.413245497 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.415091123 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.413770355 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.413033319 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.409123604 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.413148907 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.412202557 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.413654697 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.417252641 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.410279757 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.415928659 seconds)
  done (took 97.291752675 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.41013302 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.414268392 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.415447244 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.419156864 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.422973061 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.420282076 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.415380266 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.413541834 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.412595764 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.413662939 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.411280373 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.412850685 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.409691344 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.416282894 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.412796069 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.412964106 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.413245847 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.411130145 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.412422627 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.411173167 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.411846925 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.414143866 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.41519791 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.415967072 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.416948832 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.415807974 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.412011821 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.414698126 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.415431459 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.417051218 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.418032838 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.418022083 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.415677091 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.416498495 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.415729961 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.414040151 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.415070381 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.416237009 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.416222761 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.421307906 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.42056186 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.421187778 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.425659646 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.420641829 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.421136096 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.418866184 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.416489415 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.418384419 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.418217638 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.417466984 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.419454876 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.416379206 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.413022494 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.410998214 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.413008595 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.414409053 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.417095917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.412277358 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.41599026 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.41585812 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.415684076 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.411654164 seconds)
  done (took 89.034029469 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.420630445 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.418047225 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.414298424 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.416643345 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.414930349 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.416862997 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.417557428 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.415445288 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.417022304 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.416229186 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416961123 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.418721334 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.418132152 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417764787 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.415043631 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.420268806 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.417434507 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.418420038 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.416669605 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.415516037 seconds)
  done (took 29.606526851 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.419803105 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.417075594 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.419207987 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.419971073 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.416044526 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.41825612 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.419037295 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422159899 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.417700254 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.418913397 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.420803511 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.415685682 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.421618839 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.42049642 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.419914502 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.418602393 seconds)
  done (took 23.969826121 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.422529359 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.416699777 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.419001816 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.417188037 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.418959073 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.416685669 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.418155339 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.419367854 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.417938133 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.419313797 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.416474889 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.41538264 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.41548859 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.421224026 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.419492731 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.422310197 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.423005328 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.417200469 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.418577111 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.420532038 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.420176337 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.422165277 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.420716838 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.416159904 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.423055543 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.421060108 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.422944985 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.42103287 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.420077791 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.419486933 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.42263056 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.418175314 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.421713264 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.424090801 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.42255122 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.423097728 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.420151962 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.423236014 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.425245138 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.423728674 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.420548382 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.424133125 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.420294857 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.421059689 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.421969651 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.4204212 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.425046648 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.424744865 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.421044255 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.420579042 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.421580565 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.425458363 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.41993287 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.41898247 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.422318788 seconds)
  done (took 79.407053581 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.418131873 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.420153219 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.426113824 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.42173289 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.422284914 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.424014116 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.426662706 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.424723144 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.425837881 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.424049525 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.426934389 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.427066319 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.424533315 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.427443602 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.425511861 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.425799956 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.425772719 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.425092953 seconds)
  done (took 26.910072155 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.422578877 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.425508789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.427881366 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.426513525 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.425416808 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.425865049 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.426165855 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.427724643 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.425168801 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.427507227 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.426154402 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.428801595 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426615843 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.427626096 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.427084338 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.426884173 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.427148103 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.425989925 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.42630875 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.427682529 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.428235601 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.425681856 seconds)
  done (took 32.655105793 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.418302286 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.418483523 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.41789134 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.444232538 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.438633642 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.418963333 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.415165504 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.418675378 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.449940736 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.477177929 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.469229152 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.435976182 seconds)
  done (took 18.492666421 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428090751 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429235031 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.429720497 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428501977 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42787969 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427970205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430196396 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427546617 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431783889 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43163352 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430812745 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430101831 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430836211 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431142396 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429146472 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432653551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428904402 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430966466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430054897 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428886243 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429836504 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429802421 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428617494 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42989971 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430098269 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430018929 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430287818 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431562142 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429984288 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430614815 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433293367 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428845666 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430321621 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431469393 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431047552 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430474224 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4303615 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431521215 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431105939 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431591405 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.431283824 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433455539 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429888395 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432343317 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43101703 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431067735 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430300949 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431562142 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432917552 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431864555 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431852123 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4338382 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430007056 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431643297 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432733381 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431800161 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432914688 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431464784 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432519247 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43202959 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432112143 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43200291 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435887552 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432512961 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434465794 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433874657 seconds)
  done (took 95.719377865 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432062904 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.433966638 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432340803 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432806853 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431367843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432701952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434916689 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43177872 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433276327 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434420466 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43493827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433748104 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431626535 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432070378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438720943 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434337705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435020473 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435480867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435449229 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434646752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435164276 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432748327 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434718689 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436409197 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434533539 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433426625 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432977406 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43591095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43347726 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434355025 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436981616 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43606041 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.434575584 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.435601133 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438297705 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437342905 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435522143 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432726257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436822658 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435263311 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.437902684 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437040074 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432840028 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435530384 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433772898 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432805247 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434165336 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432763552 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432514289 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435403482 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434662187 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435896423 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431533926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437009693 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433698517 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432988301 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436195133 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435621387 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437631699 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433832124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435261635 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433007368 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439651928 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436428334 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433151799 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434114422 seconds)
  done (took 95.96205237 seconds)
done (took 1936.056910569 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.645501568 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.608189002 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.421783385 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.475638977 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.423209753 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.397071443 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.407827559 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.420540628 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.424410604 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.422699353 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.422170096 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.680810458 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.45630209 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.423417461 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.420502216 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.577122901 seconds)
  done (took 28.90597701 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.464786689 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.440577744 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.582258471 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.430961996 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.461139576 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.698616493 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.501549115 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.428870948 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.650679461 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.456704865 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.409205109 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.466356022 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.427134274 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.400481094 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.456050103 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.6937378 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.807917404 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.400851393 seconds)
  done (took 31.456189158 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.035599989 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.455580211 seconds)
  done (took 5.768395129 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.460665145 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.433503799 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.432036714 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.431003761 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.400453089 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.398341297 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.430866663 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.405602905 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.407875471 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.591497844 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.43291427 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.451544362 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.45117113 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.433482917 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.440381351 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.492133811 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.64653948 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.440779375 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.439330309 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.446045129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.431370009 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.583626242 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.488177302 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.442653986 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.590734339 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.418412635 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.441317783 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.449522177 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.626030028 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.439489687 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.432820682 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.432737571 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.432365945 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.401619927 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.073363031 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.422754179 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.468613432 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.449633295 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.439569934 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.648446007 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.437986074 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.44550365 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.404716689 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.074144624 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.619401322 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.610619759 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.440171128 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.436401794 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.434503507 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.513332876 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.435013628 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.434549184 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.535606169 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.371337375 seconds)
  done (took 91.664377714 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.435766099 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.400748378 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67530913 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.431539164 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.403583165 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.403398924 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.400702701 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82440309 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.43613074 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.402645895 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.847396306 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.1877949 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.421200838 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.448295486 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.449333676 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.435410886 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.404472175 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.401066714 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.403068714 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.405108709 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.104195722 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409663547 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.40734775 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.559933145 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.482425034 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.100637169 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.405139369 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.409096296 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.426454719 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.40303973 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.139909342 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.408493497 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.449317961 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.408850455 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.805468908 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942809977 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930102215 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.410891985 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.45180033 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.408693592 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.407948036 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128720978 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.95176754 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.407963331 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.418957257 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.130661239 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.408984271 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.418466273 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.416503594 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.7681393 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.408149179 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.408736544 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.406694594 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.408820702 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.407844322 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.455698382 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.433925362 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.131097887 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411838824 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.405710111 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.421136515 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.405312366 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.407200665 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.41175669 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.408673198 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.935861117 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.585679087 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.404519946 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.927592677 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.136410503 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.407970106 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.222577745 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.409331103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.421490819 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.482222565 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.411174912 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.410609198 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115770238 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.413873161 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.40991302 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915428771 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.409511083 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.839825302 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.435476258 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.410354906 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.137647113 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.417778336 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.472063801 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.40853156 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.407529477 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.412709396 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.414698895 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.846899665 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.495873114 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.413172723 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.410517288 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.416634127 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.410941364 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.414547688 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.41508365 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.222464254 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.415279834 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.413485332 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.41744205 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412959498 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.414406469 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.410141401 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.415816843 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.786930517 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.414778862 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.41972621 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.417804946 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.411059535 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.41815932 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.57433791 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.41478438 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.891323889 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.419054546 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41772826 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.413947402 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.414587218 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.430725932 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414515631 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.438121426 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.41511473 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.823666613 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.437692949 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.431326288 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412736913 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.413914018 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.42825851 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.413573123 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.449939689 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.414779841 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.350765136 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.428813399 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.432411901 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.411766818 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.425518566 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.413168812 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.420370566 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.416471885 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821126764 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.828742677 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.585046185 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.414757282 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.416482781 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.371221508 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.425299963 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.68426816 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.439007572 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.413793542 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.806302254 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.664337413 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.414356114 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.414246672 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.412652615 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.788779076 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.419645263 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842951677 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.184138639 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.418684387 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.425175506 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.359603271 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.270930123 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.422391493 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.416359859 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.841747474 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.440985058 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.412919409 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.416208793 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.416573853 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.415214603 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.423929607 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.423448471 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.413120761 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.415239676 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.531678365 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.703963541 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.440363541 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.416561352 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135543843 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.433650676 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.417593885 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.425824891 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.418741308 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.416204882 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.445161567 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.418034375 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.461457634 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.420468413 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.424344954 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.170481596 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.432532587 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.419210082 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.701042919 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.317862349 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.423109251 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.415704469 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.422485499 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.456255227 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.165157106 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.474994202 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.891659198 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.429563284 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.491230694 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419295429 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.423314445 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.162846616 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.422213049 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.421724019 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.294961112 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.420261543 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.111791311 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.420195124 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.419593861 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.228466692 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.416590336 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.420002432 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.416094463 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424687944 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.829990182 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.424548191 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.463702752 seconds)
  done (took 523.068798287 seconds)
done (took 682.143498922 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.419857023 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.423993302 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.427833455 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.420628978 seconds)
  done (took 10.98840949 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.45818997 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.448942775 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.457387144 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.449558215 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.460725906 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.515374755 seconds)
  done (took 10.090345567 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.415940952 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.420758044 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.422853912 seconds)
  done (took 8.551953499 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.745298826 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.442563332 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.923264194 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.432368669 seconds)
  done (took 9.839378806 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.456304465 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.457025855 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.454166134 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.454046566 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.456431715 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.458748211 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.456307677 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.457428071 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.457652541 seconds)
  done (took 14.399841838 seconds)
done (took 55.168706441 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.576836831 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.395864376 seconds)
    (3/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.766781656 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.766592037 seconds)
    (5/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.686152897 seconds)
    (6/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.593609006 seconds)
    (7/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.583311956 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.583019041 seconds)
    (9/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.418946501 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.50068867 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.418302495 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.11151446 seconds)
    (13/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.61681915 seconds)
    (14/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.395798446 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.633197908 seconds)
    (16/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.823176746 seconds)
    (17/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.740337511 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.668779109 seconds)
    (19/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.663961388 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.664396499 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.41327078 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.628345336 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.686848796 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.578624419 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.923306029 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.481288228 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.39677343 seconds)
    (28/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.633757687 seconds)
    (29/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.397615856 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.404756848 seconds)
    (31/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.836430945 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.669788875 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.671328805 seconds)
    (34/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.394367538 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.133567195 seconds)
    (36/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.394842319 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.789499699 seconds)
    (38/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.739025892 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.579213949 seconds)
    (40/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.569728874 seconds)
    (41/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.687486446 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.674852018 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.552438337 seconds)
    (44/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.873391791 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.419580241 seconds)
    (46/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.410698945 seconds)
    (47/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.401392943 seconds)
    (48/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.596819819 seconds)
    (49/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.694874886 seconds)
    (50/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.001687575 seconds)
    (51/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.485001969 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.479999586 seconds)
    (53/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.917575483 seconds)
    (54/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.73754344 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.487583511 seconds)
    (56/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.519722934 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.399684485 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.521464706 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.434826175 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.586209601 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.598820562 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.399038453 seconds)
    (63/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.935801822 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.667748043 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.399959241 seconds)
    (66/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.577183942 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.78334263 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.647984915 seconds)
    (69/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.585639836 seconds)
    (70/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.686771412 seconds)
    (71/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.557619024 seconds)
    (72/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.594561082 seconds)
    (73/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.716052021 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.398925799 seconds)
    (75/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.49293091 seconds)
    (76/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.74254247 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.590015322 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.628706555 seconds)
    (79/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.664727826 seconds)
    (80/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.846339328 seconds)
    (81/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.597967102 seconds)
    (82/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.503206309 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.586047011 seconds)
    (84/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.412086271 seconds)
    (85/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.554229207 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.61875976 seconds)
    (87/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.831693612 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.579251524 seconds)
    (89/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.644407644 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.493717811 seconds)
    (91/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.49233223 seconds)
    (92/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.622957431 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.623773736 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.855570251 seconds)
    (95/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.695748041 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.629754873 seconds)
    (97/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.681507892 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.631716855 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.489368585 seconds)
    (100/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.602365985 seconds)
    (101/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.426968332 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.464619698 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.402707915 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.588536713 seconds)
    (105/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.42989538 seconds)
    (106/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.594760549 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.628463788 seconds)
    (108/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.48842922 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.697151921 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.401462923 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.936268851 seconds)
    (112/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.404926213 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.401824422 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.588981392 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.673529713 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.427510999 seconds)
    (117/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.551864941 seconds)
    (118/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.507731186 seconds)
    (119/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.400476485 seconds)
    (120/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.529577539 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.500463223 seconds)
    (122/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.660397247 seconds)
    (123/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.429498542 seconds)
    (124/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.622480345 seconds)
    (125/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.489184554 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.427415526 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.542544202 seconds)
    (128/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.734741757 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.613028724 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.613158139 seconds)
    (131/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.733720678 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.612100603 seconds)
    (133/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.405120232 seconds)
    (134/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.448116203 seconds)
    (135/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.859786918 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.402980504 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.79822525 seconds)
    (138/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.723666675 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.638310221 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.596070632 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.614116642 seconds)
    (142/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.405011979 seconds)
    (143/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.444993599 seconds)
    (144/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.409781858 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.449748114 seconds)
    (146/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.697674823 seconds)
    (147/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.629178753 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.627432301 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.56534822 seconds)
    (150/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.679497302 seconds)
    (151/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.76082587 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.782487075 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.749618439 seconds)
    (154/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.617862928 seconds)
    (155/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.406362848 seconds)
    (156/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.616584692 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.610012838 seconds)
    (158/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.407330779 seconds)
    (159/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.501359146 seconds)
    (160/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.780793982 seconds)
    (161/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.627789819 seconds)
    (162/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.566556683 seconds)
    (163/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.581941391 seconds)
    (164/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.405912651 seconds)
    (165/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.923529242 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.64441847 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.564123553 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.788062993 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.49687813 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.501537242 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.623911952 seconds)
    (172/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.835733999 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.586009855 seconds)
    (174/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.407219451 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.406931426 seconds)
    (176/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.407962982 seconds)
    (177/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.489817456 seconds)
    (178/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.43348613 seconds)
    (179/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.859119445 seconds)
    (180/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.579090888 seconds)
    (181/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.867283262 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.637579471 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.619738865 seconds)
    (184/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.683223684 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.718171075 seconds)
    (186/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.433205019 seconds)
    (187/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.617038522 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.672826132 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.752802923 seconds)
    (190/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.406265141 seconds)
    (191/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.790482295 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.786960548 seconds)
  done (took 356.653738938 seconds)
done (took 357.954262489 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.489368725 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.611728 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.45970392 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.460462465 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.463010624 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.429257101 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.492990135 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.462556587 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.485114273 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.48794955 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.430943209 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.472336461 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.485585353 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.475279294 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.504043985 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.462436948 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.462667914 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.472751667 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.486726699 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.486618375 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.463696256 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.472511554 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.498247368 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.461078116 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.480395308 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477469306 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.480374984 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440746062 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.470824817 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.485832382 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.446766729 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.479844888 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.488642654 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.474735579 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.4746473 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.472735534 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.470537001 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.610571498 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.494672681 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.476091408 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.478407554 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.487981747 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.478885618 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.476216214 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.476142881 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.500258168 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.480054901 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.486751213 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.446927155 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.44593052 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.492464021 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.488208522 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.473565528 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.450617359 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.446971504 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.488563246 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.476052716 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.494051234 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.472465459 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.475918341 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.506336456 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.493045589 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.485126356 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.484879746 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.472774994 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.48873736 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.475818328 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.490281062 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.474338671 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.475209172 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.472932347 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.475684093 seconds)
done (took 115.827537011 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.65021376 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.435495743 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.681581505 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.478077485 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.682822935 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.643840254 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.473648988 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.475910588 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.474241173 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.332189519 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.472806702 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.475249611 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.441323509 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.47459883 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.641062806 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.472830728 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.473772049 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.235633037 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.474424576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.662058911 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.439751173 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.477181701 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.473914874 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.33908453 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.435949432 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.438444652 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.662128404 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.473456017 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.245822811 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.44359838 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.445221142 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.239807869 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.66455008 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.492777259 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.48535795 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.482427619 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.685576776 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.479359631 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.652308858 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.655565558 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.691397488 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.513016006 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.444965941 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.443604525 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.477859091 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.475996564 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.476806652 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.504112569 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.440232239 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.476455561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.233698084 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.484123435 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.488062623 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.477967415 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.475802195 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.494961545 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.477473358 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.47781558 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.669088925 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.477744831 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.653788306 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.342154683 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.337327882 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.477923974 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.446838805 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.47646457 seconds)
  done (took 118.61718142 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.589909653 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.601979204 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.644380825 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.468494213 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.56059978 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.648392509 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.471815585 seconds)
  done (took 12.303625063 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.480770075 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.479386869 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.560008015 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.562652694 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.476306031 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.702108558 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.48388367 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.48887404 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.477989415 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.561531254 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.47753838 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.480142342 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.487097347 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.444914887 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.560601806 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.488203633 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.645654521 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.475473313 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.480345161 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.68017567 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.480359898 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.486051055 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.564876232 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.490268001 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479328761 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.485301937 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.32707574 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478201104 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.479440227 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.480525352 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.478706056 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.58980545 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.482132329 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.450349587 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.481059637 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.645032444 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.48514675 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.482846178 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.482944794 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.451061829 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.480989517 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.481419529 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.480852349 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.48355339 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.482939974 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.506882684 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.483064851 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.483720311 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.484404895 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.48386586 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.56782535 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.484531937 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.483108292 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.48229499 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.569764074 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.489241334 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.484790908 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.483718216 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.481502641 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.480892298 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.683703144 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.564397469 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.484238045 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.563424721 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.484263327 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.48647094 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.482682051 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.483503873 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.621682548 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.490578515 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.568729096 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.48469292 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.718084472 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.508105046 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.486037924 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.481774812 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.482729054 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.483749784 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.448908901 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.489320255 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.484675461 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.481123263 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.489885271 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.483811384 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.484793772 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.690426834 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.647718121 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.484876534 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.498798066 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.491714693 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.485615525 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.569343071 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.483800279 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.485860388 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.567772899 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.64834376 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.570567388 seconds)
  done (took 153.00169177 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.497560968 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.497667475 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.491091919 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.514071657 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.475884608 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.477822424 seconds)
  done (took 10.274881813 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.481338793 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.492232427 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.488935639 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.488329976 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.487789963 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.487158807 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.490007424 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.480615308 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.488848338 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.485880991 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.488177861 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.489968802 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.487167537 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.489625322 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.487403182 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.487255537 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.490196484 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.489180153 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.487460731 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.490416414 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.452826997 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.488597188 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.488571417 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.48270014 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.495621545 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.489085029 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.513064056 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.492751697 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.493175983 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.491565582 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.49405731 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.489700541 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.482963721 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.488652153 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.492592808 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.484071263 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.493477837 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.494329621 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.489553455 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.49122818 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.491128236 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.492189055 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.491629278 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.493089799 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.484316546 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.489106052 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.494070859 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.513395733 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.489712274 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.490172318 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.490521455 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.492826357 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.493216002 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.492346757 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.485056096 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.487573105 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.498836549 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.492769297 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.491450763 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.485647721 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.494089996 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.490948954 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.486398445 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.495199844 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.492170758 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.493747703 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.488444515 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.496241177 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.49476585 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.492522268 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.490805989 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.494278637 seconds)
  done (took 109.620908849 seconds)
done (took 405.1334329 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.799396138 seconds)
  done (took 4.123153649 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.71561656 seconds)
  done (took 4.044677958 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.508208132 seconds)
  done (took 26.843885456 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.521661379 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.462986041 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.456963347 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.462208079 seconds)
  done (took 11.227812769 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.042989335 seconds)
  done (took 4.370245406 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.464495101 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.472181064 seconds)
  done (took 6.262754712 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.86124688 seconds)
  done (took 4.184675859 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.315911053 seconds)
  done (took 4.645101657 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.492280199 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.476700843 seconds)
  done (took 6.302960244 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.429818834 seconds)
  done (took 3.752448269 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.100356268 seconds)
  done (took 22.425138002 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.462815139 seconds)
  done (took 3.788291584 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.498247159 seconds)
  done (took 3.820591501 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.727383768 seconds)
  done (took 7.048769679 seconds)
done (took 114.170302526 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.454642102 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.453511791 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.451466419 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.452479676 seconds)
  done (took 11.135006414 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.60812426 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.604474563 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.612243219 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.598331464 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.599699794 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.612547936 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.5241075 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.556015399 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.589771437 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.585589829 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.61593461 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.599733039 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.612118902 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.526080377 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.58479308 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.615075143 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.586517112 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.613732445 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.525345227 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.5886919 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.492537074 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.602030468 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.585161004 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.493755456 seconds)
  done (took 39.25536313 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.04696945 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.611645098 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.69506234 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.578017917 seconds)
  done (took 8.256237333 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.656441437 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.662594315 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.67393591 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.720894814 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.741417536 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.671953187 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.525697297 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.522103963 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.50913737 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.662506175 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.735973548 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.650498712 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.880704941 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.493192396 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.875864452 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.493732059 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.492634992 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.656945551 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.708258082 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.739824387 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.493038326 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.657926891 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.668747821 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.654688421 seconds)
  done (took 40.8748623 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.510579523 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.519816451 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.494512536 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.518040807 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.496979539 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.496076561 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.496129431 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.511705225 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.493751265 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.49581291 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.496511743 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.517535156 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.496343425 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.497291939 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.510587205 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.497237393 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.49858072 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.512157517 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.511248113 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.498187305 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.497695762 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.511494094 seconds)
  done (took 34.405211725 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.458347252 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.458610065 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.89659111 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.801597046 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.458076338 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.458244934 seconds)
  done (took 14.858685033 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.588616262 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.789946473 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.487935372 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.96148358 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.071234058 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.488440464 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.488649709 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.832271408 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.217701637 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.1932912 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.573338411 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.584122115 seconds)
  done (took 22.605516177 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626133323 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470542448 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487426438 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533644677 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469421077 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.47024695 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.557121266 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101860928 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.502666785 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828897516 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483649701 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635012805 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.806696648 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469610207 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475702531 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.449673733 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795834303 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146350384 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47847537 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475566061 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539074068 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478280653 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476458564 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.790736168 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479040666 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471379985 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.821393628 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471927052 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905269239 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863373687 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867769987 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479625726 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831206817 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062336559 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653866529 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763220938 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474446715 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475927909 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.44177629 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.495220936 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479136208 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478506659 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858537039 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478895815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472135388 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472668207 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128554127 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.508960672 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.47382436 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475147783 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867714393 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640262006 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.500971248 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472871026 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482926565 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474072226 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.501866613 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689292612 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197534197 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474063147 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477112557 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.499525603 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468071882 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501535006 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32026412 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.504131147 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.501847686 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502283356 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4744625 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47448876 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552436661 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476183528 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.522884649 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474326588 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477361612 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48716593 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48100153 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184164132 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477035941 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.480712666 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789225083 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476642805 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475228519 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.474371985 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474406697 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.463908714 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51063337 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.444475097 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588437329 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118529808 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.775625518 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531848289 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536783134 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.78113355 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.443243166 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475284532 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.493804904 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484064 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526360091 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126253136 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479767853 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.503664118 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812172344 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.7743 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49475684 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.462906002 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123494475 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481231936 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.538692734 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477604799 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.773887797 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.326863703 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887082918 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484887988 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548518076 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478521814 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482206222 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484153118 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.530983305 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.497494548 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879051798 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.463553221 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486387969 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628465673 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485507341 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478353288 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489633703 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48543247 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478754875 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.763341064 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485755766 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872928604 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.486162661 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479396298 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.497094917 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492764408 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.480741581 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.784533145 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497902701 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837145841 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481841232 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480278393 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47894191 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.783971621 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.479487301 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.513256749 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911450262 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479867167 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505520151 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873865943 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549888013 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676124806 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543498024 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.479561542 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.822467159 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.507868912 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.508736411 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498460594 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480296761 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487929435 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.51631007 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493592167 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299318859 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484171975 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49127204 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482029105 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.526663482 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634021198 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511494234 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.765186132 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.482025961 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500006321 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.511871028 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.496605259 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788151063 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86679584 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.507563357 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732497896 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.114397229 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32370059 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531980848 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.482101111 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.481782216 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.480898234 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48124786 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481126406 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482717321 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765419542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886245311 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499151184 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330222929 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4882007 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502716861 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.518277149 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875528725 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.526270415 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489497792 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.498869863 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493697418 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502414518 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.877374281 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792353413 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.528563723 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484626712 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.134526604 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512988419 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484453574 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483308178 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539016728 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484227917 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190823149 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914746841 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478341834 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898035078 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491715532 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.552717633 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.483840788 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492723062 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504080023 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.49247317 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51956216 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.77043638 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505382423 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490399233 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206497838 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49789858 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245911718 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488259645 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.501123083 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490579145 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102195538 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48655028 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487940331 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863959377 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129655105 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488914757 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124413796 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.507893078 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.506007852 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886446035 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80782626 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487878102 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.497657908 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884854352 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792113648 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540240277 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502851934 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491940281 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.454461492 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187720031 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488432642 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.744178432 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103641112 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495394072 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488327252 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.524242293 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.490020065 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056131789 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492823424 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488535868 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489490668 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494668841 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195404598 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497459698 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488789321 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326734776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489561696 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.11513615 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489679309 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.776665594 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.880825906 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.866001116 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.495457209 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.49195837 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.825129159 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886253692 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495291825 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493775431 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253244285 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.440942804 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.518856343 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490732446 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502651978 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49491077 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949598479 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.513782584 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.509008164 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49776246 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491443779 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491022008 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.490785525 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49950507 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491437563 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145311495 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.495162827 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496157856 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.528032161 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495187412 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.829902113 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.536881122 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313541478 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811669067 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483964057 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575979599 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.518794254 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491203875 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.46418766 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490432827 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49033037 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49166797 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.797290564 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.491033741 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.461490669 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.545022311 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787587584 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491236491 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491099043 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833079053 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.497667895 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.501450219 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510212786 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553769861 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491548821 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497283069 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512673783 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595646765 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644332496 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78963568 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.896474615 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.894662583 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065016019 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49756886 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501297127 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.537535185 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653514179 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493997736 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.512878907 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.492898922 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315817047 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507384144 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32320388 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895595173 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499789114 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498052231 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493159012 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823295476 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494492002 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84553329 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494948205 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.50573156 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54840172 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499124365 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512197047 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796207185 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850390612 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495774358 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515020451 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499837724 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.49428653 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902271302 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.799920228 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185625281 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216595351 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495996034 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500225902 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158649365 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860391604 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495526142 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497715596 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494577767 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.511762076 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.508134798 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.530085425 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501035363 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811558509 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885457502 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102250223 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888153375 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.529189501 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.457275537 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504384252 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837742216 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414130456 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.791035578 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332666885 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450182178 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839033442 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650817189 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793125089 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.504046429 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819430879 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.506068544 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497461793 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498368613 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498108384 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.497791584 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.884527006 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330824192 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839169702 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.525894599 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.496458244 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563396086 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.793665661 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.811416801 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.49077882 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81225294 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903392254 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514845219 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498604885 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333057297 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903394698 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504615845 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.527176675 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83662699 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503860652 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56401439 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.452714413 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.498714606 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212965769 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.798849281 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549981391 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513112666 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458367926 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334757304 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.517083492 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185412964 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506425852 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499273616 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866532539 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.530274695 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51254765 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878015843 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.52871472 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.508523186 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802797269 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.329691017 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.506843642 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.526261895 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51807042 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.50933111 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502175032 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566698461 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501081807 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507607846 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.051401229 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507400208 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501519502 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543807631 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.510751821 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520264762 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.507500011 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501714987 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.53424119 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.491767214 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.476029668 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.522660389 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722056066 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211511883 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509247161 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.198901899 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.934035396 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.839946336 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.514979035 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.473151649 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.531717615 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505657668 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503895712 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504026036 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.510799593 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229531912 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.517862851 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.900097002 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537793389 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.802231275 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805967225 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509576253 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8073688 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520957868 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557546878 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.47022949 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505272702 seconds)
  done (took 1058.012119026 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.525913805 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.518060711 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.546302641 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.511718285 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.512591231 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.651942053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.542877136 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.5686038 seconds)
  done (took 21.737332311 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.495015881 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.532567514 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.511651237 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.532248619 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.497245844 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.157917708 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.50185488 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.533878855 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.548270209 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.506544093 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.521742953 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.333623711 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.530880498 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.496060847 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.511081472 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.534221496 seconds)
  done (took 35.112845216 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.891675332 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.756540618 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.501760664 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.521293595 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.524334484 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.497000422 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.944794936 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.518327785 seconds)
  done (took 29.516162147 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.541052113 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.541098068 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.539169122 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.541050856 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.542371974 seconds)
  done (took 9.065973264 seconds)
done (took 1326.161817609 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.535066087 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.535644721 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.534527889 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.535700734 seconds)
  done (took 7.501379889 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.474357389 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.475415694 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.479424723 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.514830412 seconds)
  done (took 10.303724377 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.035472667 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.25036836 seconds)
  done (took 5.646528375 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.508830767 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.367661838 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.337964136 seconds)
  done (took 8.576720056 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.905438813 seconds)
  done (took 3.266808719 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.050598195 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.100357734 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.499001793 seconds)
  done (took 8.011215463 seconds)
done (took 44.669198368 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.509433916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.274492029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.658578022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.497814003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.66723457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.658949856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.936595289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.517030343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.49971613 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.519277347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.51897193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.66436982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.925088519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.269194218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.924805033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.27098034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.664090874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.502289363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.509055097 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.512324717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.937855435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.499264536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.52899199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.505943528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.667908956 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.651016026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.515903664 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.273833356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.505456944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.506995757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.651935487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.51028137 seconds)
  done (took 87.617683857 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.5000902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.502025222 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.500685877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.501213248 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.498865184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.503516334 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.5044205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.501090537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.500313693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.500630352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.500768429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.50101427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.5031225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.500836105 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.501522924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.501700391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.504800156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.501792302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.501888125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.502371496 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.502711692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.508391047 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.499717388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.502174823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.513746545 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.502181248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.521833189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.502174613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.502331127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.516417067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.502467178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.503472613 seconds)
  done (took 81.4758096 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.50244434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.502109381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.505087554 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.504321395 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.521318318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.508649599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.50500563 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.514012711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.516260971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.502875401 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.522503106 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.508329307 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.504600132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.511483199 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.502821972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.514747441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.502999159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.502735369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.504445781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.512567206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.504040004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.521560179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.503498735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.537397109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.504200359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.503184658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.504278652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.503910239 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.503477223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.50429241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.530626904 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.504026106 seconds)
  done (took 81.660329783 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.830565745 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.542775866 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.544653618 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.515793105 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.544042158 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.54221958 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.51593614 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.835261174 seconds)
  done (took 16.238832396 seconds)
done (took 268.358515081 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.513521866 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.543477142 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.577935085 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.515140368 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.659775311 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.575115384 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.842458597 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.578727294 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.831535979 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.522136859 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.737881612 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.535438689 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.526438802 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.748585976 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.523098922 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.526613475 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.514092191 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.521214534 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.526074091 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.869052902 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.579453854 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.528759418 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.533005769 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.521605785 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.489397569 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.628536842 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.629781204 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.768340164 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.727332575 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.625161621 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.532182969 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.522102986 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.528636148 seconds)
  done (took 72.173504817 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.535851033 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.546041085 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.547134591 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.546409917 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.545431091 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.547224895 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.537368753 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.546912565 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.545620641 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.54635153 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.549464984 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.547546863 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.548220133 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.547588419 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.548290324 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.517690134 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.537073394 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.545603669 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.537777674 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.517869556 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.545792311 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.54819101 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.547912482 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.547471155 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.547872184 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.547976178 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.547443847 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.548372318 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.546686 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.547784813 seconds)
  done (took 47.688914073 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.548107549 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.530726498 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.509624723 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.553994751 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.539216894 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.543292482 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.961027935 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.552422483 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.555366363 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.554628281 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.512509797 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.552702756 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.609682558 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.513133129 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.544164799 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.549642661 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.5514424 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.540865777 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.511916774 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.58600776 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.963786596 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.549879982 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.954436105 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.567527268 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.554910369 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.543613611 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.562959507 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.513096603 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.545077904 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.514238787 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.526367843 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.956061242 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.521304211 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.512568951 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.537419528 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.556892186 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.55182143 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.51393833 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.544655434 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.546957403 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.962979231 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.548970927 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.518406007 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.514661956 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.56552401 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.55193562 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.514672362 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.515468831 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.870547994 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.564168251 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.514227892 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.557443722 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.554790033 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.546080615 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.871039536 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.552233703 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.544458342 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.535053655 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.55597964 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.960844253 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.556950783 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.54567812 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.514590787 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.56643474 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.514914013 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.548122984 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.566863216 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.547003987 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.518425702 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.549327956 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.516597117 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.545457841 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.555234084 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.517472578 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.519265683 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.521050896 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.549182406 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.525095475 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.520682274 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.981671342 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.557108344 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.515354432 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.009766745 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.556081538 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.556514484 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.555001163 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.555619957 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.729679661 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.957521135 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.521351144 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.517994433 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.536409553 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.966128933 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.568107089 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.549076108 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.517415099 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.578173383 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.556261519 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.51821073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.519884338 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.548042597 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.56934377 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.520232776 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.557611831 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.962017167 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.565285082 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.518095003 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.551157587 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.673802583 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.556820458 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.569613775 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.567550105 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.984230747 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.556086776 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.558217145 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.519188438 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.545905733 seconds)
  done (took 225.900628081 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.520643023 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.522270255 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.521538528 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.521139944 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.519141296 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.550204464 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.521623804 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.525452992 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.547596939 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.520712236 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.522833455 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.553834953 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.549051524 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.520962827 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.53616413 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.522485995 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.535951883 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.534881147 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.522916427 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.522125753 seconds)
  done (took 47.970691665 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.559637717 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.319034634 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.303374542 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.563718473 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.557817723 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.549465963 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.627397102 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.560575406 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.55848296 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.997180019 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.790992905 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.56059985 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.560054739 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.55836884 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.305134333 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.535532766 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.997725409 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.36415804 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.564856606 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.361593747 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.533737426 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.559642326 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.550567429 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.360157322 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.012989921 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.971197385 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.637089674 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.362482618 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.565834524 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.561494447 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.362197804 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.566479019 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.551856769 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.342394308 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.56693229 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.581308628 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.560957298 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.63189055 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.633195185 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.002343035 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.368862619 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.981826391 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.584481518 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.779902388 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.561498637 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.530794245 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.3703582 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.567668836 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.531642676 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.562718206 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.574348177 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.320612419 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.559057335 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.317858368 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.56898283 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.563207794 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.361979411 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.325470299 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.316265707 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.797273383 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.558727964 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.968024076 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.566299178 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.37225502 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.56755241 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.561611781 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.563604282 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.789465826 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.367236085 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.975535926 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.010335392 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.008124078 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.568525928 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.64435254 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.564090307 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.005294248 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.647178807 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.038125519 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.007503608 seconds)
  done (took 145.82351569 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.934362184 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.703532272 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.135620948 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.355077695 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.275963375 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.773480273 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.701418875 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.884379222 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.538015484 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.725512441 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.520109924 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.682875734 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.475907865 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.649994668 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.690142231 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.75692258 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.16132233 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.541404113 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.406783851 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.493407157 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.5419069 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.719437926 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.473519083 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.040528757 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.533153553 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.428684193 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.530365628 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.294206337 seconds)
  done (took 61.355767379 seconds)
done (took 602.283848471 seconds)
SAVING RESULT...
DONE!
