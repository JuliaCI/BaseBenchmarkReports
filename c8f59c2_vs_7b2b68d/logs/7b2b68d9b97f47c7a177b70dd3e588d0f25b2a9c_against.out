cset: moving following pidspec: 18968
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.451374438 seconds)
loading group "string"... done (took 0.509018011 seconds)
loading group "linalg"... done (took 9.437814823 seconds)
loading group "parallel"... done (took 0.1684775 seconds)
loading group "find"... done (took 2.969199016 seconds)
loading group "tuple"... done (took 2.101760287 seconds)
loading group "dates"... done (took 1.334730066 seconds)
loading group "micro"... done (took 0.183846843 seconds)
loading group "io"... done (took 0.490311861 seconds)
loading group "scalar"... done (took 56.688934327 seconds)
loading group "sparse"... done (took 14.035148464 seconds)
loading group "broadcast"... done (took 1.311682163 seconds)
loading group "union"... done (took 10.462758009 seconds)
loading group "simd"... done (took 3.59885255 seconds)
loading group "random"... done (took 13.371683718 seconds)
loading group "problem"... done (took 2.329420941 seconds)
loading group "array"... done (took 24.518809829 seconds)
loading group "misc"... done (took 1.147310562 seconds)
loading group "sort"... done (took 3.787257374 seconds)
loading group "collection"... done (took 22.01112886 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.710162235 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127724064 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200511391 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204167583 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276620931 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166578236 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156677116 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.14946363 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.636029833 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208391863 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135836268 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.358276775 seconds)
done (took 6.101317284 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.326460718 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060608406 seconds)
    (2/2) benchmarking "String"...
    done (took 0.192303086 seconds)
  done (took 0.952375788 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077257171 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158948146 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108584897 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094053231 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092451421 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108581405 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09348598 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107831939 seconds)
  done (took 1.464069698 seconds)
done (took 3.523418307 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.501088721 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.947128053 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.510103554 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.188115123 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.303986492 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306140397 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.2732814 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.227914736 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092174082 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086377394 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.196582819 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.427195037 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.399541031 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.975785469 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069166756 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093193904 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.15957553 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.785444155 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079103495 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.1101462 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526425742 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.219784513 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115288264 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107079119 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185811478 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127296844 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141977901 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102351912 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.678449194 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132323042 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213275445 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082553235 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140927488 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.164321524 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216165058 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109900777 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680477524 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201018859 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0963068 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100757575 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687182846 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12006457 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208936136 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107191983 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068471906 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162808623 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113268245 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078325253 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091857771 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099993302 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159870121 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.459236402 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105945316 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.194682229 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092226113 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.710713353 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098820807 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273602181 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126021751 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095139123 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091358545 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08867629 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156388393 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093904749 seconds)
  done (took 20.294729239 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.189158551 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.207294727 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098275765 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144455381 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140223349 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079689603 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08646784 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09466993 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.113309032 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.195762743 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.125476221 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.216343433 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075980541 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.106041627 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.165893721 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252909536 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108782409 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120858874 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088969624 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094151358 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142220181 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096391448 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092749503 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111902288 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169873069 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203301411 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109457495 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12260323 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088811223 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096197778 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143010784 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147458207 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092335136 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087949732 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172729717 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123808691 seconds)
  done (took 5.427421253 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.232289036 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102243938 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248774862 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.187735326 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.12512513 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181100963 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.194289092 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.30053703 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.264006408 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161024038 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129427213 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095652806 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077057425 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07807159 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096338229 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.80904548 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170630358 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138470751 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184402011 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112599793 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080429711 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383652279 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099332743 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084872943 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092142374 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079801419 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.218761408 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.214137915 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093484305 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.476704265 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083302353 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113882289 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113077438 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194383238 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098157105 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120736164 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119687496 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109853844 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083580531 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206928758 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097277733 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098939537 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07703752 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.077557907 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132058344 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113831794 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107287665 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.119871389 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.131837994 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085206925 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106186897 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.077193755 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196165937 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.162248984 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102430344 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275864969 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.1060403 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096770686 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107685481 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.789743515 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136460509 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082054568 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094226228 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093692291 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07792164 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.476888716 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101898712 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.343968322 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083939375 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157287599 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094774063 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115641451 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084299687 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084100709 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122736907 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084898157 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080972447 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097158863 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083855915 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07753486 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106610415 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11186681 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10064555 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080119057 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146872517 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112062644 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104016021 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122569987 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08756337 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083722867 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128660984 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080658511 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102508496 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185684506 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113694626 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11149253 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112954727 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143879191 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085404227 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.259114934 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097384312 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121062113 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098871163 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115193979 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111131451 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080671642 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082603171 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094782165 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080212435 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146508924 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09882416 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080496968 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088039827 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109007786 seconds)
  done (took 27.214550398 seconds)
done (took 53.63507692 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.427213754 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081202784 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.099689493 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082756543 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080563876 seconds)
  done (took 1.546936311 seconds)
done (took 2.2967355 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.297170891 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196821607 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08608455 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18599097 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086484322 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192479504 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161483245 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119035948 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20423058 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085538112 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186965186 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085567934 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085771801 seconds)
  done (took 2.751649285 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103098585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105376877 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101308902 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119374328 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085450461 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100844388 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119201053 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107691418 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100433023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112915686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086279267 seconds)
  done (took 1.893929598 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099697315 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103551856 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091929008 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11779368 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085869789 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097567854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116237268 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105966827 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097415949 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112114117 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085966519 seconds)
  done (took 1.867438171 seconds)
done (took 7.266172535 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.197823759 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.902414686 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.180657889 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245068455 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330382096 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.296789068 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.600528671 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.199978922 seconds)
  done (took 15.835228558 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.224503828 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091609205 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094536044 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093218139 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.113289337 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092191192 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089495878 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.110352859 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091031618 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094735721 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.107015145 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096340952 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094824978 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089239421 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.110025165 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089937135 seconds)
  done (took 2.498244225 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.134622217 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113930131 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115003102 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098024337 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092610659 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116373388 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100263798 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096107194 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112426937 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095072844 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100034788 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113137292 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097283949 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092921593 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114891077 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116774137 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092598507 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.1132878 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.114955051 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100414934 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115942188 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096916165 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.096348285 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.114833876 seconds)
  done (took 3.393148319 seconds)
done (took 22.482468825 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140568643 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083413679 seconds)
  done (took 0.982044854 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.16644449 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183572576 seconds)
  done (took 1.116250887 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11103479 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090562983 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135665855 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102298833 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090007884 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106535475 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115438911 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106019418 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092506317 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091530145 seconds)
  done (took 1.811277677 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093937505 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093496596 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.11998984 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.159866349 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116938684 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093544228 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094464247 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110351114 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096632959 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09011977 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.111374568 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108963786 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093997289 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125651034 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094676564 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095478692 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116195712 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093709751 seconds)
  done (took 2.678476781 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091406735 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090551808 seconds)
  done (took 0.952027698 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092995066 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090064386 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090791503 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107729622 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089062512 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09044558 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105509366 seconds)
  done (took 1.436345782 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521915113 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236656491 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372586137 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072521093 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121042278 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.318481841 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.102967145 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0712247 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090838786 seconds)
  done (took 2.711868807 seconds)
done (took 12.452393143 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090534628 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.207488955 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.603228595 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129927346 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089754779 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.144696682 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.346098551 seconds)
done (took 2.387371397 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344839312 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.181618347 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08454008 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092045993 seconds)
  done (took 1.471325579 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081515813 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098099067 seconds)
  done (took 0.956752461 seconds)
done (took 3.205997215 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091022469 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088319471 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087147116 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106039044 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.110527743 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.086669401 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108854554 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08880871 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087719954 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086988855 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.108399818 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.088208144 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087543674 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106560757 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089369465 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087882195 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087010436 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106301646 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08849582 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087152214 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104797545 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088878132 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08765996 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.205904047 seconds)
  done (took 3.177593254 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110535983 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090012355 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109675609 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093154653 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092401066 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109547799 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093639491 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091682538 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091374049 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.108678834 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093393511 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092133503 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108639234 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093909707 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089841453 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110497501 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093739364 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089736411 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1081347 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093962019 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093004634 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108303228 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094307523 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092048438 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11089378 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094453072 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090787174 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108896459 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096352476 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093650177 seconds)
  done (took 3.726455578 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095760711 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085492995 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0877481 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114494308 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087351401 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089051897 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103951068 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089624107 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091204405 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08832883 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109101025 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090001529 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087455814 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107972809 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091303929 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092316418 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096693372 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107700218 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08937617 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089232366 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111327634 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089423732 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088946157 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088451821 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.107843812 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08588187 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088761078 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106507748 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090827611 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088150874 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091517224 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.111777691 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091986069 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100395239 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.108875577 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089869808 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09547946 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104388763 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091156424 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085606486 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085234582 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10660797 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08969283 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094439873 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106727957 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090541681 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090006837 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089515294 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106831393 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091048869 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085029808 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106581221 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091939206 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09106591 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091665358 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104824154 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089694996 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085307706 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107561723 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090594412 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085730804 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085990824 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111249762 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090696729 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102520649 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113008225 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089329865 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090317491 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107020872 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096012978 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091152513 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11689161 seconds)
  done (took 7.669652544 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113133032 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097266069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107996904 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092237498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08903737 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090208538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113106003 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089893415 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089983021 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114615762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089539529 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089632138 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108031056 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092363701 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089491757 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09040123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113530988 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090096164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089310659 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108012129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09036631 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094402019 seconds)
  done (took 2.927066563 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216325833 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113949965 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138407405 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122926596 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1057279 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119895624 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094272882 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093911174 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110949793 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100117969 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097483695 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112035057 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107167818 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097823263 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116976048 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099560216 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093412088 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118041897 seconds)
  done (took 2.846668141 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103250141 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090445999 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.151849128 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091277808 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09046723 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.1106522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097200768 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109412097 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109610587 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.090801072 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096860432 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108922789 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092528945 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091538247 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091386552 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109630701 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090836761 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092292113 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115705147 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096527079 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096180597 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116415433 seconds)
  done (took 3.03548915 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104205081 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091686171 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128330355 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095903746 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089666291 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090763078 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115187483 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091349326 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096972597 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110098149 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092597949 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089627039 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123558519 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092051021 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096898914 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111389095 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092622463 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091790932 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109967825 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091542646 seconds)
  done (took 2.797128182 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185394316 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126042913 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107007602 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114655363 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125963015 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106118104 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132856141 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108911126 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105968224 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136509398 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107367215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107711882 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133892934 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110494568 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125125967 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115732175 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114021762 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135621995 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106408573 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106640028 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137014071 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106645614 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133307595 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107500262 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106386434 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12511591 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107848911 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112124175 seconds)
  done (took 4.145389368 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091447104 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090801421 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089298716 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108554097 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091487472 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090339701 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089641288 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108242047 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091449129 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089007548 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108479577 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091165085 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090232703 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089566138 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108335076 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091197631 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089174538 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108501647 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090200787 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089681795 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089170836 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10962658 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090665579 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089735713 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0894597 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108683653 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090820627 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088992532 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107874891 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090724456 seconds)
  done (took 3.655419031 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103772553 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100125372 seconds)
  done (took 1.003138108 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098024477 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105328687 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089402012 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109284707 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097029099 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092381929 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115704309 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096463174 seconds)
  done (took 1.604396481 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.182783998 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210000447 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.114086435 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103152014 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.207314771 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.18756163 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129520591 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095476038 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110531653 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084133464 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.201634161 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083119579 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090150012 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109342396 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090282151 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096039378 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111723775 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100998808 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097158654 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.112441603 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096727244 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095950051 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112487908 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102076109 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086597185 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11330568 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095017111 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10182936 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108327183 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094378202 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090113624 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.112931889 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096109638 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09586212 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110422352 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.187682247 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118900664 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088801516 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091173396 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117646315 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12505913 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092888139 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113496206 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091217047 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09514492 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116969972 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096908832 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092106475 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103198109 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087768005 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091934596 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087230995 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110516079 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092871097 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091236672 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117334195 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093233783 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08826709 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107751901 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087974036 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09200779 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107848282 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094501193 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.093825689 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112664258 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093775821 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090528063 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111871069 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093729307 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093540946 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090973649 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126636564 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092529714 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095505441 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116407191 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09292725 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088836716 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116281197 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091258672 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09181838 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.116494772 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1212613 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092945898 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106375957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087401547 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098409023 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113330473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094758 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08525295 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118863091 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094650793 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093835746 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084862328 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109706199 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087254042 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094938819 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104983881 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092796647 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091600684 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115292734 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097661721 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091800291 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113154054 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097869778 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097651734 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11002258 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.144105337 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088262062 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108835628 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096280749 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098037886 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106800243 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092137415 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090966875 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109073018 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088541706 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096757556 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091513174 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114503946 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096496419 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094394824 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114426982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094456564 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091614653 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10850898 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096956114 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100373169 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115280511 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094960679 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093456787 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092427536 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111791451 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096189746 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089212741 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117694925 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090275097 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091997313 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113727102 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098463988 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092976837 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108380263 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091219631 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093182939 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.110453711 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096779766 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093683212 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10751046 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085945007 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09295351 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087863687 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.113120181 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101390757 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088291395 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.115029642 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089465078 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100762115 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.1103002 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098091594 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095387479 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118782354 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099363125 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085695255 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088939662 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115504702 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094563282 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090042456 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.114101172 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093211714 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09864781 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106809183 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097603683 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085739185 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109206625 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098811029 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094459358 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095951797 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109635031 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132812769 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103174363 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119411065 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093590044 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092596203 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.117546931 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091924399 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097363149 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11961123 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09843633 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090474564 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.112942715 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098266686 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088412849 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094448533 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111644295 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097973003 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085272436 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113997667 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08674937 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096343467 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113900728 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097828921 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098725474 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115333451 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091623314 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101201277 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109435704 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097465118 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085272086 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096604812 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.123570253 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09881068 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097149854 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113409254 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090047834 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093436463 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121735941 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09563807 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0930596 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112993629 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087419217 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087506379 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098835962 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.117047007 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089295643 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093189434 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113466175 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095287117 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091249313 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105861856 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097561499 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095832298 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108332281 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094834336 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092564145 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090872729 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120019033 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086352182 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089243193 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115270315 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097654597 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093096964 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111877914 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095500622 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099159817 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.116599813 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096229765 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091316011 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100838521 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112112511 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093581104 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089534151 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116776861 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087028036 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095817561 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112938803 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090795764 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089770913 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11658829 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100894045 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098746146 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11077526 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098466991 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099128528 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099717429 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111563069 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098829607 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088536748 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106759596 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08985619 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087019166 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115132169 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091562551 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097978242 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090188633 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112159374 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097054032 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094299282 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.121794957 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099268559 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12266504 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090321542 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085605718 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090500964 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114264321 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090632405 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089138012 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115349794 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095618584 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098522374 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115243775 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090141141 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093484863 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120017287 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09096932 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099963829 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099080477 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.120584748 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090629681 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098062609 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.111157362 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096765377 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08737382 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112255476 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094182437 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09239506 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109553386 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091127091 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089934062 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106227265 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091163339 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101205188 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091724234 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.11888523 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092198666 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090691841 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.111320791 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09077977 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10931858 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111631654 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101042179 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094975486 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106693875 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087855935 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098664502 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092508831 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.12063657 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089570818 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099186286 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120946246 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098353219 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095010266 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121408316 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102827042 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.09991096 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118756233 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088760519 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091120037 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117317712 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095246051 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096666343 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095785434 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107832707 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096731295 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099847613 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116264645 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093392672 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087139014 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.114787851 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101870147 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097472591 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096662921 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.11666721 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094720565 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089123344 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1173446 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099702204 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093634114 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121600309 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094463618 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09821661 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090131643 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.120219757 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095652107 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088368081 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.108841983 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093126926 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100173143 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107825723 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099511537 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098870464 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089554684 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113593565 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099185029 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0895873 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117097153 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098543606 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09030038 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124866158 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095120895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091846037 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118405909 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100682426 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08713224 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091600614 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114104664 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100821619 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090662576 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119016043 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095115308 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098542768 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117834398 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100098483 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097946254 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.119445776 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08837262 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100105537 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116435477 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097317194 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090878456 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091494107 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108995565 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093449663 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100212953 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111347191 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102294153 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100093245 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.11213025 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092257681 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099701645 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111510898 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101641208 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090392221 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093734895 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108353863 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09613953 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091087561 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.121755566 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092740285 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087546188 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119072683 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099276591 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097815162 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117098899 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100761556 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08812224 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086133998 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117594842 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091208106 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102686941 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117871554 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092809009 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092317047 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.118504175 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095843683 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100470249 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107756021 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091949821 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09472245 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093880933 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114245953 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.0891605 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098293435 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113705731 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09641275 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092153619 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109286523 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093770863 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100778458 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114054379 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091098246 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091449967 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119462957 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095208406 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090501453 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088341331 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120357345 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096356387 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100540579 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112667889 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094205974 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09038377 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117843617 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101625842 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091889688 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114203908 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092820393 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099631036 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119690989 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087850906 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090787173 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124075415 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100485474 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094552247 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096320978 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.11441874 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101922808 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100529683 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.118204137 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089161827 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088079426 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113840455 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088868145 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097663187 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117723908 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094582907 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091913573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097590972 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119877325 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097659905 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096618501 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108893876 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101511652 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091132958 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116746619 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089347745 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088880366 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097293727 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121181472 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094007625 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093450641 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117254785 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098060654 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.0893233 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112036663 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099054216 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098784908 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100226852 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115374099 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093775123 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096833473 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124875377 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098003943 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092887021 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122608748 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102155728 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093879605 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11611302 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101536166 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100172166 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117118525 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101966179 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092426209 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112789343 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101675359 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101726065 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123692405 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09421191 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088743058 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097879416 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113439216 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089467593 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09774574 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122543586 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102275715 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093497644 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112762873 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105409912 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098545004 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115884638 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09418132 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091737783 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118870633 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09308579 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098767029 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090679618 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124551034 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101564731 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099199905 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124573034 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089560271 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098660032 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119071426 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103044808 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09573047 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108807133 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090499637 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097746228 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100884826 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.123009428 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100036325 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098376896 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.118562144 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096973644 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094645137 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112616067 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103390592 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10083049 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095780337 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117630042 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094441479 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094105682 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.117518296 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10182489 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102073315 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115339248 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105718122 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102062699 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114108156 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093171625 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094723148 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096419734 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117476461 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10086108 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091844571 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110768834 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101437689 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102244148 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114986061 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10398543 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102670389 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113212301 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099120147 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10220322 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099126292 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119240093 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096232769 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098735111 seconds)
  done (took 61.736959639 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144129641 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102961138 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11865643 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098390724 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11349034 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121559662 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098453651 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097515264 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119459046 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107455075 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097273822 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117812049 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112536028 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117533242 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137233513 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107231443 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117258347 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100107702 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097881651 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097653131 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133028509 seconds)
  done (took 3.210199845 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115319413 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110633552 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129878736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111971851 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103062826 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129294095 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107629748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128520882 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111990079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105239151 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131454985 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108861329 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.103727646 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127713028 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105178389 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126131333 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112314213 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103397296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130253784 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109778416 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105609589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.129616203 seconds)
  done (took 3.397159164 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128327841 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100851373 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095518571 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11959824 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101998725 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097362311 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121167993 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099196064 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106948656 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092580907 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.11123712 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09320424 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094804793 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118463179 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092733999 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097434876 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12839873 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101176134 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102660541 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09758308 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111215679 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098450578 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097810413 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109725825 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103759284 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103625328 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097034966 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.12261259 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08998351 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100242705 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119328443 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092388565 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089419402 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088177484 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110533609 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10113381 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099978496 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118767407 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099257455 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089091986 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098513714 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.12443391 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090090018 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097243302 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119035807 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092286875 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100747658 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097566876 seconds)
  done (took 5.815651418 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127026488 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156374844 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103011912 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126812005 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134039042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107315113 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100274972 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130126743 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09963355 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124371333 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113527425 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112073749 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12486525 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105558884 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099886794 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125088882 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104055481 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100785302 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127781752 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103320541 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105220084 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124000336 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111413469 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.111102956 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125647472 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101577582 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101291442 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126772685 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110077406 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.105387494 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.128457327 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106761621 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133519842 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102838637 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101693099 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124747288 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114594251 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101489582 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125347993 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101304153 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102994312 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125522735 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105828332 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112486442 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123535402 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104941208 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101464439 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.36705317 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112084015 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.102362389 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130282769 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112672987 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103573087 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125813066 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106014808 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132212344 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10441663 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100849417 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102558153 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132771074 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09975228 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125448844 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113430346 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101307226 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127921365 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112999705 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102121157 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124750919 seconds)
  done (took 8.998780362 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132047658 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103812643 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135037702 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112785642 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103638459 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128351657 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105654846 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103879062 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128582762 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110654156 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125618209 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.215493115 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125682812 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110610993 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104424173 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128245428 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105430446 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104559526 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128175238 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106153653 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104656046 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134961785 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10613249 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134368414 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115606321 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101936427 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127072584 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106147437 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111646879 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128443638 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115625667 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126614076 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106973729 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112288581 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139078021 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105972066 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100842503 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12780892 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106497691 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105946643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125238062 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114187845 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129081428 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103707392 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106878116 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105214287 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136964344 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115933458 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131852452 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112505647 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10519152 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.138280922 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107322656 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127494635 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116411382 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118899547 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136722973 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113582391 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127376603 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115972359 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112970721 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.14277933 seconds)
  done (took 8.246701135 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100226711 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100067474 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100770775 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121396373 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099749556 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098494369 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096778089 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121101852 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099495892 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098996877 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119883122 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10016155 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098060235 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09848054 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120451351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099532001 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098436191 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119020582 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101750579 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098589633 seconds)
  done (took 2.960749408 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109870187 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115120575 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123007123 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107753367 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102008782 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128513549 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10162689 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101320496 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10039454 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125130088 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109934162 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108588738 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123724602 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105656802 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130789886 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107643716 seconds)
  done (took 2.671602792 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118722569 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117121039 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.201654205 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102532871 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125755866 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108483138 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101219715 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127116095 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101379862 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106183964 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104479906 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.128493086 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102906592 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101166636 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124798761 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104691944 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100155125 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127880577 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10295569 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207248491 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105735024 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102712363 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126653815 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105984497 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102648319 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129757212 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108316707 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101474776 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125420977 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102907639 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103537049 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129179626 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102418192 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.1056443 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101411011 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124285149 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102036649 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101288928 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12678386 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102525119 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104373538 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124822018 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103379068 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104119595 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099839861 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125646494 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101410661 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106843126 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.12509405 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104369347 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101148827 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128657981 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106602383 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109003736 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131469092 seconds)
  done (took 7.176135318 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113233464 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102311544 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134389436 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101248769 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103027836 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102682331 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126194888 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103594458 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103358115 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122489319 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103896801 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103909792 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124691276 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105398459 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103975652 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102353099 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122111059 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103056053 seconds)
  done (took 2.855951515 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107878592 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101344172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105505875 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12413492 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103241411 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101663627 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122465154 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101376439 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100389302 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10134976 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12438551 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102994941 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100635911 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124286056 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102957646 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101809664 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124330336 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101926369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102537969 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099912426 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124155593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103041245 seconds)
  done (took 3.261528089 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113355267 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.229681023 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107987824 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.236799177 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097540756 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122613637 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108180935 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.12347471 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116776861 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097679391 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.119504931 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09924607 seconds)
  done (took 2.452269455 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129965898 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139083957 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126341136 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104050801 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112532536 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130597822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108484047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106898859 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140596022 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118291998 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12968381 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113964073 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113816917 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136171227 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112633876 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110036758 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1302908 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107144421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103457779 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144192778 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107291437 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136529443 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107608028 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105738656 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128830699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11542201 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112785292 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140547063 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10633552 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135996345 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112255336 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105414453 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136670313 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11690034 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125713751 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116062594 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106270707 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144708556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111784117 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1367375 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104283303 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110683768 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135572896 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112951444 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113969451 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12853499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112238854 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105584446 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129374413 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126307961 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133091156 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115530893 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110619374 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138091443 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115478512 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150106239 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118769223 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136760059 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111412981 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116427375 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137080212 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112256663 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137649348 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119396468 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111129564 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137788961 seconds)
  done (took 8.894490493 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142780936 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102772845 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129993975 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11926775 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113766632 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131002273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107944104 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129406888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109549964 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104468173 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170839183 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108210758 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114627356 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138210033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108045584 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129697777 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10890065 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115889807 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125731352 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127561892 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107323494 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137004573 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114808385 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136328999 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118085757 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110855508 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130929708 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107605094 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128444337 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10961331 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113090009 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129010191 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117163293 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104269265 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137319208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109301888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106945862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134215391 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108425101 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110684396 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137533131 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12221205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130373493 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108307278 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117114334 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131969087 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109112688 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10432402 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130539715 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105198853 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139784325 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119022398 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11822076 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139616777 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10811724 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133051766 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109426555 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108412739 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12917767 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112730187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114745667 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131786172 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128383504 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130677791 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109291831 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115288334 seconds)
  done (took 8.842816953 seconds)
done (took 167.888110287 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174526593 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.21634902 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199148649 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155375345 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092678895 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152640639 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126302583 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200940288 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.09356567 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093225472 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117836563 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096272369 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.160869758 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.118249395 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095631295 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095656718 seconds)
  done (took 3.070871583 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19533741 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.341208753 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108938993 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120739027 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100947334 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098175194 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121515522 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101232496 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098528451 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129078704 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099366476 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096389143 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128194584 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095966533 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099247327 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120826538 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106765532 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099282248 seconds)
  done (took 3.158285143 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117676137 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15747617 seconds)
  done (took 1.173464377 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129146242 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211198086 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293662623 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170081265 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120164372 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139076135 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14905394 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132809696 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188804387 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134817004 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112560962 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096907575 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147458765 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105083405 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113937114 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120881573 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128322953 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113480911 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.137383532 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101102522 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145007546 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102818941 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104041722 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135739818 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179756728 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134157912 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103346661 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101834807 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124307707 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113403108 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105087386 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137778764 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111032905 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17903834 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101938033 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.173685565 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105029976 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122148075 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113536784 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099217505 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125205517 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103617156 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111350403 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120260265 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101879436 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104549119 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125445422 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103207119 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106170206 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1285176 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107012351 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127844121 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149978569 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128411162 seconds)
  done (took 7.879958338 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.907313283 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148389331 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099385194 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.060134183 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145550492 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113294016 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.895565072 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149430804 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248590621 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.920581381 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114300848 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105944688 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260530756 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258010044 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.26561115 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359774522 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.759742283 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111301304 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129552159 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167084097 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104749982 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138138376 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115920747 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455617715 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100775315 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098137061 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126077066 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106708961 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177428778 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10004694 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102478604 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194771905 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291859321 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211033679 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099851874 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121031382 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0992152 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187333669 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269612707 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217208418 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.166822471 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119939763 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099512235 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103568896 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136207614 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097636298 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180548099 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189992596 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168252192 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126263332 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108462606 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106050008 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125347085 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177814651 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098161086 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356070001 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359376356 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121641027 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106470244 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110517616 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262473182 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125562196 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23707966 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120194195 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214759922 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121893573 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805928673 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162175162 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121498341 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104216046 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103416224 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128084654 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102393537 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182704798 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407476886 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128469619 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104034389 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098009531 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226187352 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122499237 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101071023 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179938176 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100227201 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104726096 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129659924 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107097488 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190704348 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270166758 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106109233 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105047297 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125031403 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111311222 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099773232 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230196452 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229132839 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178325959 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.225714667 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103894357 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182360969 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185558303 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104067145 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190286349 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105635989 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109773946 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126758228 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2254888 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157429656 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102377404 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105744243 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127578305 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13941731 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103302173 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129395225 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188206684 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.471443052 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186238906 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097077708 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127328692 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105899012 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180519604 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106231805 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261116375 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129630591 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163851492 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127660368 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097801753 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104916065 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180954436 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105757513 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129239201 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103693214 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129713283 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256753739 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219620316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132351817 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248506462 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171435977 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127726648 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191472463 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10726804 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185586659 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110773654 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103019176 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123689751 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797226379 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110953005 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105034586 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127520266 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181294772 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12319283 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102401011 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099817722 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120443109 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790125127 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103956306 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098121905 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101473309 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128364927 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104973126 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104590954 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127576419 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179477921 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247940817 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108260694 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126209415 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100859334 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177324994 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102475182 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100093455 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100084236 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124968266 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106541341 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104520484 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12662099 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186229617 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154786233 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229144922 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.602471865 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100526471 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100161969 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24122914 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12323271 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328493798 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106852624 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235070255 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182621198 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097398489 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380804221 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162154629 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205772186 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103421183 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191653981 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098634261 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127934844 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156704564 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123960735 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107221246 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.18051248 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109577831 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129363239 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.265884719 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101078985 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246558728 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098745168 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190865543 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10150809 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126614564 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326968744 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100834262 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110948187 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179618442 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104544091 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125295891 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.974435436 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101064877 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108028682 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127537168 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233768205 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182311871 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106414091 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1059699 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131235613 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179990347 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205353139 seconds)
  done (took 46.489771082 seconds)
done (took 62.665023815 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.222116094 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164269213 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.346901725 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145747655 seconds)
  done (took 1.895885154 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.259016388 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16476334 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.243629654 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098007854 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250446792 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102130166 seconds)
  done (took 2.041332072 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.167338947 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164400096 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141413514 seconds)
  done (took 1.40131905 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208706568 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.207246676 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345114557 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.23090541 seconds)
  done (took 2.003364744 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.272573209 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11646481 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124529593 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.226519098 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.241263082 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206284193 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123196811 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173308631 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129408495 seconds)
  done (took 2.583342966 seconds)
done (took 10.853654784 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.281974056 seconds)
    (2/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.164042578 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.233490796 seconds)
    (4/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.25828026 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.265516934 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11106992 seconds)
    (7/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.331372167 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.46905874 seconds)
    (9/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.363315614 seconds)
    (10/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.381221453 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111592054 seconds)
    (12/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.220206704 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.133605049 seconds)
    (14/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.208824111 seconds)
    (15/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.394347633 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134733963 seconds)
    (17/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.144324079 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128554616 seconds)
    (19/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.337764041 seconds)
    (20/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.162600985 seconds)
    (21/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.197289684 seconds)
    (22/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.343759915 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.12886506 seconds)
    (24/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109940237 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.169320763 seconds)
    (26/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.132041023 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.249986259 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102668294 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.233248446 seconds)
    (30/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.304151876 seconds)
    (31/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.284597922 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131190007 seconds)
    (33/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.175693502 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.240605457 seconds)
    (35/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.130706216 seconds)
    (36/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109432282 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.111078511 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.119485865 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105532834 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.249498837 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112150086 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109253977 seconds)
    (43/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.113413375 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106308142 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098789936 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.133235937 seconds)
    (47/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085763839 seconds)
    (48/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12745259 seconds)
    (49/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.147309235 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135027995 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112560612 seconds)
    (52/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084956614 seconds)
    (53/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.203805665 seconds)
    (54/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.130970496 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154257815 seconds)
    (56/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.12204478 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.165890997 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.255757174 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174018289 seconds)
    (60/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.198844909 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119656836 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08545996 seconds)
    (63/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108835907 seconds)
    (64/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.143247476 seconds)
    (65/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132898673 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105995882 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.144799978 seconds)
    (68/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078568371 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.187105567 seconds)
    (70/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.164208172 seconds)
    (71/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106377493 seconds)
    (72/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.07844119 seconds)
    (73/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085537554 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148179877 seconds)
    (75/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.247382856 seconds)
    (76/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.110173857 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083286918 seconds)
    (78/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093050101 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101005093 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10268729 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103602909 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102346185 seconds)
    (83/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080516314 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127605962 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122095275 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102035112 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129289486 seconds)
    (88/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085345351 seconds)
    (89/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.236690853 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149634181 seconds)
    (91/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102175284 seconds)
    (92/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.140723482 seconds)
    (93/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.170784707 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121230849 seconds)
    (95/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083139483 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.127457409 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101794439 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111119926 seconds)
    (99/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080724581 seconds)
    (100/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.221438425 seconds)
    (101/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.13854129 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127330158 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.215156341 seconds)
    (104/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109425228 seconds)
    (105/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.197441308 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111141577 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102729684 seconds)
    (108/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078809743 seconds)
    (109/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.134363665 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106593233 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102632953 seconds)
    (112/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086664791 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.130932432 seconds)
    (114/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110262974 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.085130588 seconds)
    (116/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080784156 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.106465075 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111497 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.237881019 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081422854 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102974128 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100228108 seconds)
    (123/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.109677704 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.132353143 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.13043614 seconds)
    (126/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.10703058 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.160420889 seconds)
    (128/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112625286 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123468005 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.15019417 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.194186425 seconds)
    (132/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.134051962 seconds)
    (133/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086468608 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110441419 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099724134 seconds)
    (136/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.161514952 seconds)
    (137/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10007795 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085531408 seconds)
    (139/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081762423 seconds)
    (140/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167625297 seconds)
    (141/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.087527541 seconds)
    (142/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.217358996 seconds)
    (143/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080145457 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103193988 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079806448 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.12683659 seconds)
    (147/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085111102 seconds)
    (148/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08589989 seconds)
    (149/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.13440082 seconds)
    (150/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.08165333 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.114356092 seconds)
    (152/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101493144 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101715309 seconds)
    (154/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085103001 seconds)
    (155/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.104451272 seconds)
    (156/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081154734 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110038295 seconds)
    (158/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.084592671 seconds)
    (159/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081118207 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.14867987 seconds)
    (161/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079740098 seconds)
    (162/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110640605 seconds)
    (163/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078677532 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.10488743 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086240715 seconds)
    (166/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080061717 seconds)
    (167/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.142368034 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.128365277 seconds)
    (169/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.084699737 seconds)
    (170/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079403743 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085976645 seconds)
    (172/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.081707807 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.110777215 seconds)
    (174/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111523889 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102834027 seconds)
    (176/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.136380821 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123648196 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100728172 seconds)
    (179/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082205286 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104109258 seconds)
    (181/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082479413 seconds)
    (182/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085937325 seconds)
    (183/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.08239714 seconds)
    (184/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081819343 seconds)
    (185/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.104378776 seconds)
    (186/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087164716 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102998642 seconds)
    (188/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108896599 seconds)
    (189/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078376237 seconds)
    (190/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.106277551 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086373973 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100392026 seconds)
  done (took 27.414430704 seconds)
done (took 28.346796196 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.223815892 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13122828 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110099266 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108528954 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232257608 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118865534 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15243796 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111007063 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119522462 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136859093 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101365893 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123035479 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135924338 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.243212003 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114383819 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102801271 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101798141 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147886055 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125453733 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126838406 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.233816535 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129298286 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121149135 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101669074 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233714497 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102006268 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135253443 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113937394 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123108183 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.137048154 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112380422 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101901715 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.12628212 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153134977 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101575277 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110479971 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125986622 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086669331 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111099603 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136201328 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125972165 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111683825 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.1360335 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104070776 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112561521 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110821076 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126648438 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116239851 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099498128 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137273112 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103214872 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12553838 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134921976 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101220274 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100305633 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126944006 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121718201 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100762674 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.14739954 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102856166 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103141329 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101456337 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138481158 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101284528 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109893094 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.127394203 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112611946 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112321337 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134927423 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105478148 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101675988 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110013361 seconds)
done (took 10.037329328 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107393335 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146222226 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.247664735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.250649192 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155281688 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118873566 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115026289 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152294646 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11610862 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.118864697 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.16528247 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134253735 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.253460373 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.116268137 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145342854 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113400105 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112410663 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137439475 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.248099077 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127931492 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123825104 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.145345717 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127027466 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117299693 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.132079994 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138265278 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13389035 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118631497 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105616922 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137228484 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128135848 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10579844 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134147017 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125558425 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122597085 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140308904 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11974784 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114209077 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131503664 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10665644 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111997902 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.14575394 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107297025 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117658259 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140875037 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122913535 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.112849825 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143081813 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108887799 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112813019 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130282978 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130536781 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11825603 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148240289 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119605852 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117895229 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143605483 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.1203065 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110201374 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.143064073 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108088815 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105562446 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107421691 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152128354 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.10887858 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.14349192 seconds)
  done (took 9.787521514 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126429555 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134812535 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142344847 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116678874 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110521177 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126176241 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101053563 seconds)
  done (took 1.831291186 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101935239 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268826574 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259343035 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.257189759 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.249281072 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.267076491 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125735612 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101582959 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164767601 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113358829 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.267063919 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.321747898 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139576827 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119086024 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.262733551 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101653499 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.260530756 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102424826 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143365229 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.260287918 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119671853 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133163652 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.142324035 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103180369 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262031785 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102680515 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.303317901 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148221642 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111885876 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115519439 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145308771 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180820689 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.260915372 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.143935133 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11248267 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.258413936 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.252240456 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11799168 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.331299951 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108222422 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248504156 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117993776 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119073801 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144037101 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118193592 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.247859592 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.147934594 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118798487 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116528924 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.270625894 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.11199846 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264629532 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142779609 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118040848 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112945508 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145653368 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124270342 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11720401 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.269609913 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148871096 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.258544191 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.259363359 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.225705797 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.260226807 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155030329 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.266361805 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.237808803 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116879179 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111184041 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.143778409 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.262772801 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118780677 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114534607 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.250827148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119748608 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.261493099 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.261677829 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143284771 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116385471 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106427081 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.143903006 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103873196 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.253691968 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11651335 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113764607 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150113642 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115211439 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.143655 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109332269 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125237504 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.141660263 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116378835 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121781268 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142369501 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120249998 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.263637366 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11283055 seconds)
  done (took 17.716786053 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10634432 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105210166 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107879431 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130476089 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106756453 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104534383 seconds)
  done (took 1.668174563 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142809921 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118443484 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151695548 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119418957 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164803639 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250894754 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.258560603 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138960758 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138813183 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128332101 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252591269 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.25619899 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255299574 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121055548 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258599505 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11909196 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261234826 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11562909 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155036754 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115240283 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143308866 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122839713 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11627114 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244643749 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11811942 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146797648 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112160492 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126382831 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15419789 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114161374 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121130837 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146159787 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110305787 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111065799 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.256604698 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.139542745 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11522401 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121137542 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147328861 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119898417 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.258058864 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115582576 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.150773363 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122203459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112125502 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138086275 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121931357 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110752981 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261138166 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.14795841 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121167712 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117589464 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.147193229 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120723453 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110332536 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141248199 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122051205 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26183134 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120600881 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.138344408 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120152709 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118486226 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140071025 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123005027 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118586937 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.148438988 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111120415 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118353598 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141900866 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119509751 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120532437 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.145218956 seconds)
  done (took 11.784785692 seconds)
done (took 43.762812717 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.75215256 seconds)
  done (took 2.758575025 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.12371685 seconds)
  done (took 2.131977816 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.361514827 seconds)
  done (took 19.401776441 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.417087955 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.346732151 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.041716617 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148612264 seconds)
  done (took 2.962272367 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.090594551 seconds)
  done (took 2.113091267 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.337694549 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.250278404 seconds)
  done (took 1.600063388 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.734669751 seconds)
  done (took 1.758253057 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.764097585 seconds)
  done (took 2.779403652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.268135425 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.24120267 seconds)
  done (took 1.537596646 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.678987321 seconds)
  done (took 1.707583834 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.678326832 seconds)
  done (took 19.71190268 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252319516 seconds)
  done (took 1.285941529 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289056171 seconds)
  done (took 1.320538946 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.628518404 seconds)
  done (took 4.662020848 seconds)
done (took 66.746385628 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118741008 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.140964015 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121326741 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144884835 seconds)
  done (took 1.548253587 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123819237 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118158321 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121185033 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143583762 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122725313 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117574728 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143194885 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120805167 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118287947 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147403521 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118720125 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116775743 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146396131 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118041966 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115580899 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146285641 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122431351 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118143516 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144232168 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.1196025 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118535883 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144888816 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122228462 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120322912 seconds)
  done (took 4.082433527 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114737775 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108933336 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110432967 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134178655 seconds)
  done (took 1.505915033 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126122952 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129770133 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153387173 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126689435 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130565556 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152883618 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117840124 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114655432 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143505889 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128227898 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132761506 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156987491 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130620661 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120281287 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154922425 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113812098 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11934283 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156238863 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126270038 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125982571 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145913108 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124688202 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122182507 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153306785 seconds)
  done (took 4.242271032 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194976051 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129224184 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175964346 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161751924 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179174042 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117540994 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14552947 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149810531 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125105643 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.118966805 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147120525 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164494591 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150045966 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120110455 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118115299 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.15004422 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130143156 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122008881 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191674793 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122615173 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149484162 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130392699 seconds)
  done (took 4.232176172 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121487377 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108478879 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106053571 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.131179461 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120102634 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109868231 seconds)
  done (took 1.740863207 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108674434 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102402128 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101626192 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128224545 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107146656 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102631208 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10167096 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129112368 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103121982 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1019307 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12769934 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102045449 seconds)
  done (took 2.358489861 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201199887 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145570117 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246741084 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388140419 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189181948 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157686254 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.313479598 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185439643 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175639933 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162325041 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179994327 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189450767 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151893268 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213550201 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139415564 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.185346474 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171524186 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235976167 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166905931 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214366505 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18304269 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17381086 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214499414 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173600986 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139255069 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161396223 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.145814702 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128304654 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192435644 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161491626 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202120046 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174732136 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141638193 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211572994 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260527264 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177738174 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270680021 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160291054 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172883088 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.216020557 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253228571 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14095738 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217206671 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150403134 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157690863 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213733884 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149372207 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.209011704 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133154922 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142325501 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210526702 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206183132 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167111405 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163539022 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322611905 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135517583 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139362764 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204983539 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213715166 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199801525 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207291653 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12119076 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202981957 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217640107 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239916123 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141600479 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189495885 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125171365 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161076349 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231144198 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209762917 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156995313 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237767736 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159382768 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169725214 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192333257 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153713821 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235018783 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198874312 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119880887 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150519281 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161588565 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124400177 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.215733649 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122210513 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243069946 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130473785 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.209996676 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178465712 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18263796 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157713282 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191630514 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159318234 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178500562 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10244089 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169772916 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.16031466 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183225185 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12792346 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148811242 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166797119 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126263473 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179631153 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12246271 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194097588 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135127728 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155784056 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197643499 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129911842 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209108714 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144923737 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.189167422 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192624216 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191224876 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157460177 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132639213 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246358353 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169025754 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164059829 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168845354 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221705707 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147981946 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162970374 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163211746 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22214431 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169438027 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197895417 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167811843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135116135 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168330763 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172194732 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188131884 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158198609 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152962677 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16420021 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214621706 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125650266 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165569379 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180612003 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160299155 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126107028 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133618319 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16416501 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141992708 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.177946302 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137843017 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151515427 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194600165 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189607981 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156481701 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13342402 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202298281 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158399752 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169029177 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147356588 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.147340943 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170219342 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224069066 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128434489 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20886874 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187276957 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181514423 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200074185 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127570203 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211845934 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126799015 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.149397769 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163473512 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196924833 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160516222 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216361452 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206768543 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16263807 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191569543 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14776495 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197230248 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.210848531 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157694425 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.165443524 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170293513 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196251004 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123311841 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121268074 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155568805 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137070434 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128917232 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165566795 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206560206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163479517 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203943043 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16449948 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16540609 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217890767 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125569809 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157724316 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202422319 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137893862 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216521947 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216112887 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17693493 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167064751 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161646673 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148460848 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126056183 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131907346 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186309726 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135570452 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163211397 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140716638 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218127598 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165799715 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176889463 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215797344 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163681499 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226555626 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119691757 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189409561 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16313108 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196166985 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183351109 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133764636 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184342506 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219451231 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140732282 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221051993 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166368922 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206983793 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220337796 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163077442 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157204279 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143574473 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15878339 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16597362 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157809663 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171724002 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12870666 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17394244 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137274579 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138280852 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212461654 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171751449 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172208142 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181984524 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169102719 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15411883 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141550892 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201461932 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144281546 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105385538 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192498152 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218331186 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147630854 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179958988 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167717557 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158160824 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319855758 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208985095 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168427843 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165795874 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137321373 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199203404 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155630475 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186446265 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181969439 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170725971 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235434967 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169098459 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.165675538 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131577347 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144717146 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178221965 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137831773 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.182107724 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160911803 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170394084 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185003065 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16435868 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168103499 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205758148 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14306966 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.180453325 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138632434 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252573529 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195595613 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173424567 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192154394 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161363118 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210256206 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124475396 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125338913 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160956711 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181661439 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159156622 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176138391 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195945937 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210166042 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201051544 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160901257 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139795361 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156970031 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165801531 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177027051 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209505063 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135635614 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13534256 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212663915 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127577466 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16009927 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157107059 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316807326 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146497191 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197288007 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106952498 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312962843 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129672286 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158970704 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15760426 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19747595 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132482699 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182249712 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200309899 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138714218 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187290996 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133577042 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205914314 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210563997 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16651035 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202327405 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142111437 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189592406 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153908329 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199173093 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144809616 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175212295 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156648552 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22163391 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.171543602 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.161248718 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167138852 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199052477 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169065214 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200184884 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137775551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209411686 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125997238 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194358724 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135967011 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154227154 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157191358 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194979822 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12936233 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200885741 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196678852 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132514547 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126008063 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175032034 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163955626 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167864224 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129069346 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215243852 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128686406 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211406493 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208382364 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158296037 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167558878 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170085875 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130259511 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137321163 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171684821 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130758387 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175454714 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199339595 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128832584 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20248818 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193993663 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161766311 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184114684 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141232066 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.292198051 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128202895 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217475071 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149822614 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224725365 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147356308 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203727933 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166937989 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180304562 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163799601 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175916085 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218969466 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194081384 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163910787 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160028172 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142365241 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136325437 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163891441 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149319058 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19825887 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139896422 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165600248 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165781627 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172693888 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146719286 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139471087 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227313403 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178711972 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184426944 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214679255 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136603753 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203851342 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202651748 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127730349 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.190477853 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170033703 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141240726 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181486277 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132899721 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166093677 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212372118 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.155683834 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158498088 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2026067 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165614566 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201770002 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133753112 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207282295 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139024522 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204663596 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12541951 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178549521 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168740103 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161732997 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127467257 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169918325 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188452177 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161812407 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171085653 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175336961 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22301572 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123620469 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132024261 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316840151 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19010539 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192507441 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162826852 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135622135 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173788092 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158599149 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19525395 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170490675 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128535549 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157257497 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143315432 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186833815 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138536262 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197042655 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181505413 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18582803 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182258093 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.16308282 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2534661 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171468802 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170697266 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116593667 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158435441 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140884186 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162756032 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142882486 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20770679 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24415088 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163630585 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.173509285 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136037411 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125630222 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157567523 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160200679 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17741425 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167108191 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174117533 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104691665 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139319323 seconds)
  done (took 84.688168728 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173131304 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.168255684 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.182365718 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.403518353 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208296111 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.301203037 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237752092 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250464881 seconds)
  done (took 3.052832277 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119207967 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160426546 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141575196 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144304524 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109518187 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.494689653 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.15995358 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12098431 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160448196 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152067522 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137378992 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.571562417 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117434626 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145150302 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122260729 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136261671 seconds)
  done (took 4.109936605 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.020510359 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539826398 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.055712951 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.30532032 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235396834 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212248918 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.794896614 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.709137035 seconds)
  done (took 12.995079891 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.174515488 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168776979 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.465384041 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.327430324 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.213705667 seconds)
  done (took 2.479234335 seconds)
done (took 128.061598409 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.1246456 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124430208 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123490983 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15489344 seconds)
  done (took 1.645753626 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196790598 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092367332 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093931219 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121307185 seconds)
  done (took 1.631195001 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.37459575 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093105764 seconds)
  done (took 1.628419787 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144284409 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133722102 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16342176 seconds)
  done (took 1.582046502 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135628979 seconds)
  done (took 1.266110865 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117255483 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115357896 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.277999877 seconds)
  done (took 1.6467548 seconds)
done (took 10.532419451 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120452678 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.928188354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434346225 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134398516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711655372 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429130408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.434789787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175056689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172308713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108376421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160920883 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691553723 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.449977822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.885203768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.406029217 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.90352167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695511698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111097298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145686193 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113329914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.415385574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136860421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113011298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112924765 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.690980117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.451067834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110294124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.909322129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110695502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114461134 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399966085 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140096796 seconds)
  done (took 21.038057843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113394238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167655468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147189318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112600701 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114235616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141259164 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122921288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122454678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202702732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110155489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161849772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110483044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116175877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109802232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167080814 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110761501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113180664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142121984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118983217 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113014441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162260019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110309 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112841305 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14269992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111717209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133255493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140560262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122810589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110108695 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144746131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116165749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11103912 seconds)
  done (took 5.27589116 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160727003 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178217217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149011827 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151083528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189313739 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112743108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199188319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178560905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20331971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112347876 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132298947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137262357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152418125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112990626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165240705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112028073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114045508 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140758472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119958621 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112870569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16230402 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111091362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111942168 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141501513 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112779006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134108814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139080466 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124287733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110282809 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144011609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118254703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111123279 seconds)
  done (took 5.599760836 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126036279 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125520292 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134124598 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166210242 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120955465 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124771942 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15528064 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122211142 seconds)
  done (took 2.222487231 seconds)
done (took 35.274695548 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137039005 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130558921 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13140868 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156511523 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.275130238 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118673611 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128287334 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.148385978 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127079009 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13183108 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109533552 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153096634 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130765023 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121245586 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.273894676 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125774443 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.281226614 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.276826753 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.153606265 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12619859 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118790455 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.280719008 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121954824 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.152432862 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.275768378 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115093826 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.264759925 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121441141 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121862703 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143055831 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.276670727 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125460228 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119086303 seconds)
  done (took 6.60729657 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.225732686 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153161795 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121211504 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119903306 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120871865 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150739071 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.230251487 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153841561 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118885579 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118600556 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150916398 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214556195 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.156684241 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116128105 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120583141 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110403076 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.264270966 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122447135 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144276168 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094883924 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115705286 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118457941 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.278748156 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116675312 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.151867776 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119631483 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121982062 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155922691 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122161275 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121451198 seconds)
  done (took 5.588103976 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124769847 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133104217 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136747626 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.217163299 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148212912 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162992165 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138086275 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132010502 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174174313 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112326434 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128010832 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17968088 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130931873 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123489097 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142392478 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132395886 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129198204 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14232159 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123854297 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130742813 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133243201 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.160588019 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136750071 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121064906 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143386041 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120714653 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120202576 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155141307 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121945954 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127580749 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145887616 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117408994 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116101216 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177088372 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115607718 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127427028 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167226643 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125989206 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126799504 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177574816 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117608112 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.113388093 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171128116 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169267126 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114199089 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157834805 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125161866 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127051841 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.141022333 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132976477 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155035847 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142610314 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13398708 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11271119 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140925463 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122613148 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114052632 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116428982 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.158794914 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116471515 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133210934 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.151887891 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125353441 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115288543 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.153369782 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113170187 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.111978695 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145892784 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140871546 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120430817 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149171832 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.144340073 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124988939 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125993187 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.155369827 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125861815 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111324143 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154802157 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124418755 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118295141 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156606926 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117295991 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116028792 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130126185 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163735836 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127328622 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153610875 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128067892 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116206258 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115385483 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162003073 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114073863 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117503909 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157477078 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114465463 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117666499 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156466824 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124670393 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111199755 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13870039 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.150013281 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11394354 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138107227 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148491788 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119335217 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121834068 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187211726 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114261108 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12347925 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157966735 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115488429 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122756742 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146256448 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113896187 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129837181 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157594761 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123789345 seconds)
  done (took 16.999827563 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.374266309 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.361577544 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210551985 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.41019497 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127325898 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.286484126 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.394127633 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.369922949 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114166892 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.177835114 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172537653 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.327983538 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14735142 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.148421947 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.368727056 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.444736722 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171267729 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184961021 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.149672036 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.159315092 seconds)
  done (took 6.27369039 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134252128 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148707388 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167609512 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142388497 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125407079 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162960597 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114608149 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135315811 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157508787 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124023453 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116103172 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160386806 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12768579 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130787861 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15861633 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148214029 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124201618 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149175115 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138072446 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11760029 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134068026 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139934554 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123010266 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166843633 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133801162 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124673117 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142417902 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120754741 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121497643 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122689206 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149035153 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131671562 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120859015 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.136211875 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12659459 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129524572 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151366315 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118376576 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119881585 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117975617 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159695866 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127469212 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122945244 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130955829 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136181772 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111760929 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128949917 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158626037 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107713139 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133638572 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157705879 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130338223 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120914678 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135319023 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.152300582 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132653251 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124311129 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.159814177 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119973357 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111994479 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.143221634 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119168436 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123643935 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158244494 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126695999 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133113436 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.161649257 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115805788 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117854442 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147272918 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119418119 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128283562 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164558147 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125558843 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120408608 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124642037 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.154233161 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096161739 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123437974 seconds)
  done (took 11.761377826 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139762815 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12416977 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131563518 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179038689 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127321498 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119576938 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15534629 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134842985 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.1283504 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165424667 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129817695 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12712245 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168769437 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125304342 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12454384 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161945524 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128940209 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15115763 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164981315 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140894243 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129121168 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151018506 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126971593 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125140145 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174249114 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126677841 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141154961 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159940241 seconds)
  done (took 5.152105167 seconds)
done (took 53.53098589 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.299073856 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.589590408 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.283475992 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.282896728 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.321789873 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.298225145 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.283302576 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.281833744 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.805791714 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.258070946 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.283039484 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.285428964 seconds)
done (took 29.452126909 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.329021798 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.501653737 seconds)
    (2/2) benchmarking "String"...
    done (took 1.692786841 seconds)
  done (took 4.381356595 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.272352301 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.272420956 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.603808277 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.272400632 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.274485953 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.27365994 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.273933648 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.278643045 seconds)
  done (took 16.423645913 seconds)
done (took 26.581406128 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.294366762 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.612230578 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.539500868 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.255702698 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.276886886 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.276341286 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.278950626 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.336238219 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.280703154 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.25197485 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.78015689 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.551210248 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.277995547 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.668999948 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.252912748 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.285699459 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.290734178 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.664644227 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.276416156 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.311117427 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.25798986 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.254148241 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.28321709 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.279513617 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.286549637 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.28708979 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.326360915 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.274814416 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.605613325 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.290118108 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.311237343 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.281708729 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.314841713 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.290682007 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.275457445 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.295212541 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.610176057 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.287779612 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.257181308 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.284588354 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.596010429 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.282399808 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.275995502 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.284100653 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.255969422 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.342867484 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.261733493 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.458686052 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.297187792 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.288906501 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.357964725 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.700602709 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.292703562 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.290270502 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.285652665 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.675874076 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.303121019 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.390166445 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.306929603 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.291788083 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.277723934 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.289115117 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.332955539 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.281534544 seconds)
  done (took 149.713462519 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.278858506 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.281259718 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.282721637 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.286701473 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.282583142 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.282356506 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.27911182 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.278040245 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.282365446 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.311654366 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.283653599 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.284011395 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.282643764 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.292812165 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.288627905 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.297461221 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.283251802 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.295923316 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.29336915 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.279358639 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.287022743 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.281698672 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.284020894 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.283215624 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.286829422 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.357530521 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.288918933 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.310860551 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.288987168 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.279633395 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.289042482 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.286577225 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.019526506 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.241328594 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.292874185 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.310969153 seconds)
  done (took 83.294432416 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.280319585 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.279633814 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.28056829 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.313631503 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.27922608 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.896885002 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.879507862 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.333757666 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.522693704 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.802345256 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539128335 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.279742976 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372665198 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.293805727 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.280475052 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.375822303 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.304492422 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.28411071 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.280832709 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.876519703 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.293118909 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.502345794 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.464086879 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.297471068 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315863979 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.673854336 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.282121071 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.280451446 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315330393 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.620156237 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.334668466 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.282311459 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631136823 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.437840455 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.28160704 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.393742389 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.284932114 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315661439 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.28257078 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.567149007 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.282144468 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.280559281 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.282658989 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.28569052 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.931945815 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.282840087 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.899100786 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.285951307 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.285704278 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.282395966 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.282064639 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.515455004 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.117396354 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.287327949 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.281836748 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.287001651 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.282771503 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.28275076 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.317349713 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.435801229 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.186797148 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.28594544 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.286742678 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319555091 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.28439217 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.396793056 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.282831427 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.828875376 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.338910905 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.391187385 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.880519793 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.28458158 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.38120057 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40351081 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.286068291 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.283792583 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.283533332 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.284798227 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.284292158 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.398417075 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.285926234 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.017458645 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.466526016 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.303865247 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.894219789 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.388839112 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.285230545 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.698003007 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.288803556 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.286859803 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.050310938 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383838615 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.286808889 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.28593692 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.285723275 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.021041782 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.905063486 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.654096586 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.28995859 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.022561389 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.292203429 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.189299491 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.883792205 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.997028393 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.292202871 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399083989 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.467237139 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.305351818 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.286537066 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.887240619 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.289469003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.344930804 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.286147281 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.690151869 seconds)
  done (took 388.072979263 seconds)
done (took 622.25488592 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.262570401 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.283986881 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.267018034 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.26258423 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.265071557 seconds)
  done (took 12.525543018 seconds)
done (took 13.708592134 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562262911 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.565604606 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.3815217 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565752531 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.35170052 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.580184533 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.552804236 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.336349126 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.469369114 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.406283578 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.472122607 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369618232 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.352277339 seconds)
  done (took 20.149748373 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.662600181 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.299835335 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.421139867 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.640309987 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361395678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.672662424 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.705722564 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.298293729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.522477964 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.35691913 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339516918 seconds)
  done (took 19.463289083 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.658828682 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.296815747 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.417528863 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.636877567 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.364952625 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.668935484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.702153256 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.299807887 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.538216696 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.343671706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337126949 seconds)
  done (took 19.448054882 seconds)
done (took 60.242715363 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.352665377 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.424137315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.343871382 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.329619988 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.327790497 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.327065265 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.329662382 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.330468839 seconds)
  done (took 11.94341997 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.330184585 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.328220579 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.327522934 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.332221297 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.331968681 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.330657132 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.33378623 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.329541697 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.328442535 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.327598294 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.327214864 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.329514529 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.331272433 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.329546586 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.328503087 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.326595302 seconds)
  done (took 22.458639468 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.33086477 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.324850527 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.327999113 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.328606033 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.329903125 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.331937742 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.330497893 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.328815557 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.3290343 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.328941271 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.329443221 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.329750243 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.326526928 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.32958842 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.32880068 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.329081094 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.328268909 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.331882497 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.333217513 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.331401849 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.331909875 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.325801347 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.330363239 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.33128745 seconds)
  done (took 33.094540585 seconds)
done (took 68.684831222 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.293374668 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.321195384 seconds)
  done (took 5.804884825 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.433451628 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.444703827 seconds)
  done (took 4.06980322 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.331952198 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.332337723 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.33087371 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.332623583 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.332077774 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.33203091 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.331603062 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.32962369 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.330521361 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.331133519 seconds)
  done (took 14.505645796 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.328445677 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.332613106 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.333561552 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.331315945 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.33379524 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.332707951 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.332366497 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.331897583 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.332533348 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.332284015 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.330315748 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.332690211 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.332102078 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.329582204 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.327744471 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.332550809 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.330876852 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.332771926 seconds)
  done (took 25.158748261 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.350705281 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.360588802 seconds)
  done (took 3.899549167 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.511700126 seconds)
    (2/7) benchmarking "second"...
    done (took 1.414060685 seconds)
    (3/7) benchmarking "month"...
    done (took 1.496302986 seconds)
    (4/7) benchmarking "year"...
    done (took 1.483166959 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.41378998 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.360651309 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.415797637 seconds)
  done (took 11.285073612 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.325874261 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.68866425 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.882411164 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.532898283 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.313516404 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.351424926 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.270786599 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.368882733 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.360566173 seconds)
  done (took 15.284739281 seconds)
done (took 81.198778841 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.29324155 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.320279206 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.336507527 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.320039231 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.691370809 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.341989718 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.30356025 seconds)
done (took 16.796343027 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.278324709 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.283079993 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.292195747 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.310500588 seconds)
  done (took 10.357054134 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304063037 seconds)
    (2/2) benchmarking "read"...
    done (took 1.711451435 seconds)
  done (took 5.203703837 seconds)
done (took 16.75132585 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333263818 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.337547673 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.336062358 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.334413825 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.334937355 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.335175304 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.332275564 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.33426618 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.335321761 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.3343759 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.340577458 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.333224777 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.335346206 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335639399 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335254225 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333660028 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334414872 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.333875907 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336368891 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.335609997 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333832605 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.333555545 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.335055876 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.333540668 seconds)
  done (took 33.229971634 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.337577495 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.336776066 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.336851844 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.333661005 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.33696359 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.335634231 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.33472846 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.334686066 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.337994867 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.337748327 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338171704 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.333179101 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.338397292 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.336136669 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337965533 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.336858898 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.335242351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332684973 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338372219 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.338837502 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.335574098 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337435228 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.337024911 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337442143 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.340270924 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337154466 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.338078746 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.339019369 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.340367445 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.338105285 seconds)
  done (took 41.306252214 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.347160837 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.344167788 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.337928308 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.338921242 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.338742657 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.338761095 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.337402333 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.338836734 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.340031508 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.3374742 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.33801512 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.338971807 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.339680556 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.341231591 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.338654308 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.338232257 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.338593057 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.334974441 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.3387194 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.338527546 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.337340803 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.340053509 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.339620422 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.339136423 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.340279236 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.338718911 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.343092093 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.338133571 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.340477724 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.339548905 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.340545261 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.341362753 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.340676213 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.341819445 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.340903058 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.340009369 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.346402081 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.342859522 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.342457515 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.339774213 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.341695756 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.341277825 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.340865902 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.341992023 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.34121001 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.341079407 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.341323642 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.343606265 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.341959268 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.340892163 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.342252112 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.342004175 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.342381458 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.341600492 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.342216772 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.341696455 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.340747521 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.34283396 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.339723019 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.34208589 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.341448937 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.341854505 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.341724042 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.34198022 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.342272575 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.342028271 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.342116829 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.342342696 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.34171629 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.341921413 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.343968881 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.341538963 seconds)
  done (took 97.736543315 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.341096798 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.343683509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.34387236 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.342132264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.344046404 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.340419896 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.343333674 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344122671 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342400385 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.343572042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346096875 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.343418811 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343307553 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344370049 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346548887 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.345653732 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.349687275 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.345464392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.343438785 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.343894499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.343927884 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.344425224 seconds)
  done (took 30.770886927 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343966087 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343442766 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.342492017 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.344512665 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.343989064 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.344757389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.343160258 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.345859972 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344348188 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343723179 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344734201 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344855656 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.345795579 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345467674 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346580735 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.34538142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348748398 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.344694392 seconds)
  done (took 25.408788786 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.344480608 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.346255624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.345877573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.344433883 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.344509312 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.346398449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345751579 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.347005649 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.346837751 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.346350817 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.346603643 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345233148 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.346792214 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342379083 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345819326 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.345216246 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.346762322 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349097955 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.345875548 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348188202 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.347042945 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345946227 seconds)
  done (took 30.813938561 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347895776 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.348366507 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.343582798 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.345752907 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.346647433 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.345591853 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.349315789 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.347092392 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.34619577 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.346883707 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347166704 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.347680176 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.349233237 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348073522 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.347910024 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347304221 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.3450385 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.346801782 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345790062 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.346661681 seconds)
  done (took 28.141482587 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349502475 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349306641 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351183485 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349653752 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34998459 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.350078805 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35022212 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.34931537 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350004145 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.349091319 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.348515618 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.349549478 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351054069 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.347814062 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.348498716 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349730088 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350881212 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.347858621 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349728133 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35147612 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.350860888 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351217847 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350261929 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350535428 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.352364851 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351742355 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350935828 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.35180619 seconds)
  done (took 39.006227609 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351151777 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.350954615 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.350111841 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.351744869 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.350349231 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.352600216 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.349080076 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.352403263 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.351366678 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.351644367 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.351577739 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.351309828 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351174964 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.351197384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.353221174 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.351103587 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353394521 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.350782177 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351674678 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353653352 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.352791232 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351336228 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.349686996 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352339847 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353069689 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.352629409 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352309885 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.352688705 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352609155 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.353704965 seconds)
  done (took 41.76366946 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.379996018 seconds)
    (2/2) benchmarking "in"...
    done (took 1.378967535 seconds)
  done (took 3.967594971 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.354769486 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357692623 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.353579251 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.353955206 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.353604812 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.353646089 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.353024641 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354603473 seconds)
  done (took 12.044947546 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.346093801 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.354595441 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.356024463 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.352750584 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.354207892 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.345110366 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360636573 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.358649868 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.348166132 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.349646558 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.355784559 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.353359739 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.352235155 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349538793 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.348147694 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35379953 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.359514362 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.356192013 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.356214641 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.356063016 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357302978 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.351472139 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354265092 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.360584611 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.349010932 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.367139076 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.364442294 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.361246915 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.349236589 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.361724281 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.352493707 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.359620103 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.355953365 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.357412629 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.35647962 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.357180127 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364841786 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.356420184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.366248599 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361686846 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357418426 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.358071791 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.355017772 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.355217029 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358200508 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.361654998 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.358428121 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.357454115 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.350534031 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.355920959 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.362972484 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351738444 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.360105569 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359664592 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.358662508 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370078345 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.364738352 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.355078324 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.358517867 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.369469749 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.375170963 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.367744529 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362136135 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.363860726 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.368713997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.37868817 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369943064 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.36623959 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.361973544 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.358558375 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.368706943 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.377194475 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.375068365 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.365569602 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359313709 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.358601538 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354686863 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.365015761 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.369055799 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.369411781 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.366463641 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361494852 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.369767203 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.372719813 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.354883188 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.363531005 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.361009944 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.360362166 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.352554748 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.372504003 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.370693508 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.360714516 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.352784177 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.356734819 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.357941886 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.36300922 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.352419466 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.35728454 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.365144827 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.362138998 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.361367881 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.35982348 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.370197775 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365593488 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362255214 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.372515318 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.367685863 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356219042 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.373954048 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.369628778 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.362446788 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.357434559 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.366230929 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.366924453 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.360968388 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.367555818 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.368552593 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.365326136 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.368721888 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.36234077 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.372644315 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.386277194 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.36949601 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.362597856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.365512682 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.373100727 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.364582395 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.365235132 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.369916454 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.363913106 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.363512497 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.36485331 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.370008644 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.358039385 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36723825 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359806928 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.369504949 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.362659246 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.366166606 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.370962397 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.364056072 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.364064383 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.369599584 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.374337547 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.370767261 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.369718104 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.380610691 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.363889081 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.370163343 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.368144022 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.369876994 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.363600567 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.360118071 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.368352009 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.357173213 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36799945 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.358197505 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.370078764 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367692777 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.363717411 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365168224 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.356513073 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.362606796 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.370203641 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.370831514 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.365837304 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.370605089 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.36705799 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.366710948 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.361770446 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.368407672 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.35860887 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.366608771 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.372161082 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.36763858 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.368574523 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.370610466 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373927229 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366843857 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36712378 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.365056408 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.374217071 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.372993521 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.378031452 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.375071369 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368358644 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.368103933 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.361163246 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.364363862 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37028333 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.364509482 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.376085604 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.38118325 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.380943555 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.365279272 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.370284447 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.360329062 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.371491444 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.374975826 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.375106081 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.368797387 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369632828 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.36226995 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372945959 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.366479006 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.373314372 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.361213602 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.370424689 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.370522816 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.368801159 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368547356 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.365125621 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.366816968 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.372313057 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.369111952 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.370302047 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.363601335 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.3726858 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.362146611 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.364225158 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.373029768 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.370862244 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.380737034 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.379921986 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372325279 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.381346608 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.370982372 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.364798135 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.371595159 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.376030709 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.371679667 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.382429707 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.372744187 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.368669507 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.385238165 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.375374969 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.364599018 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.378155211 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.380619351 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.372556733 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.367404682 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.377753205 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.373799001 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.371966715 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.370929292 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364719494 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.374240957 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.382920062 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.382894361 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.364565215 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.375582119 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.36761218 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.375325451 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.375455146 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.377221922 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.374936715 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381903103 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.379803466 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.37313481 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.367391272 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.377537744 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.372968588 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.372626225 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368403482 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.378167922 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.381182132 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.373983731 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.377705782 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.369600073 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.376145178 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.364410726 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.376325718 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.367451406 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.391754496 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.39389583 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.383244755 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.380802335 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.37944937 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.382612412 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.378735453 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.368570193 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.369906257 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.371767178 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.369996911 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.371083782 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.375566334 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368346282 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.376866499 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380348786 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.377310131 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.377118976 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.374352074 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.367723298 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.376820544 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.375241712 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.373262689 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.367072098 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.376003331 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.375635477 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.385510406 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.374541762 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.370093362 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38873861 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.381109009 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.372357337 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.37360994 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.37039787 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.368110777 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.379718608 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.380894246 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.373017756 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.383776037 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.372881216 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.378880233 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.373177832 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390216941 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.38513913 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.373337629 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.38417972 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.377158017 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.368315132 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.372617146 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.378299783 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386856527 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.387790096 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.369057615 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.379782722 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.376104251 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.377747827 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.376405407 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.37707742 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.376933268 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.376272918 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.38856254 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.38123598 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.373445254 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.38716767 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.39005882 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.377227021 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.377125541 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.369808828 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.388374527 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.388535861 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.378833928 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.377185185 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.373300823 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.380759453 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.377365935 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.378060017 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.378409293 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.378372557 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.388941638 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.384164425 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.388581397 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.378478925 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.390899081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.39147995 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.390386725 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.391865893 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.376241141 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.384095841 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.380042602 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.375157065 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.374971636 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.376376843 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.383346723 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.371749787 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.384092209 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.379475281 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.382933751 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.387571772 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.386258965 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.371614575 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.390574807 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.400787069 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.372813051 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382590063 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.378841751 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.374141432 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.38297845 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.379457402 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.373393222 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.376741135 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.382621492 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.387330609 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.376101109 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.382936964 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.375766848 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384077193 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.381423993 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.37951083 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.382109834 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.380336633 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.374068379 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.382915872 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.389058064 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.392572128 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.37960337 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384418298 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.376591465 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.396486802 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.392637918 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.379685503 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387814261 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.382539218 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.377576297 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.383555689 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.386619695 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.377977115 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.385594774 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.37522935 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.380204564 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.379805491 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.392739538 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.3857904 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.38548191 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.374900188 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.377109757 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.386307923 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.382637695 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.384527669 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.387122273 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.391070261 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.37698069 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.376050824 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.385327701 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.380277478 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.389769677 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379023757 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.384032634 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38271019 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.387626388 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.382696291 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.382000742 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.374140804 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.377794899 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.3988063 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398272085 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.385080114 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.381444525 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.388640623 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.378704303 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386042038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.384125383 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.382892127 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.381161599 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.38701786 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.379158062 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.378775751 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.379436868 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387319854 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.396975481 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.389141385 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.379623764 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.400757666 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.399109063 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.394429207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.377055141 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.382933542 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.382100475 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.387010038 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.385312406 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.380352348 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399773673 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.393172484 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.39006762 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391958991 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.38799906 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.379209256 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.389753543 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.387699931 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.388649213 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.392761887 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.391500413 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.393567506 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.385364228 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.385707987 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.378889872 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.37893031 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.385350609 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.385610419 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.388823048 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.392786261 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.39261522 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.388438781 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.394580694 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.387975384 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.387931524 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.388004369 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.378791954 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.38905087 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.380642398 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.396480936 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.390728737 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.382926418 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.392991385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386271886 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.383257885 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.389984439 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.39530404 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.386408845 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.382228565 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.389520413 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.400718695 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.400274924 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.388237848 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.383684825 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.390607423 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.393295684 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.388658851 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.389521811 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.385612444 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.410998983 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.403961845 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.383911041 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.387363435 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.401546104 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.402308842 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.388463296 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.389624337 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.390928343 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.390832801 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.395010986 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.390019708 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.402689407 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.397863164 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.386747574 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.393146433 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.387636235 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.389516781 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.40089679 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.401658339 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.39175254 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.393765226 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.411242519 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403207908 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.400715621 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.422320743 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.399143355 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.396753805 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.39763199 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.3848708 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.393495429 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.39482444 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.397107551 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.390695912 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390669931 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.391051753 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.382178907 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.402874556 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.408438532 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.402349 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.391032477 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.38234485 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.387593632 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.394021125 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.392296814 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.394943728 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.391879652 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.391420655 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.393152369 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.388517772 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.414413802 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.416423485 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.399555977 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.39308155 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.391953404 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.401888746 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.401493095 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.396552174 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.401769107 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.392886414 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.400455393 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.397960313 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.403991318 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.395101011 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.387962394 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.390162464 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390333785 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.398078485 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.41158111 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.416247485 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.405897147 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.398543209 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.396427856 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.393758312 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388650889 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398386065 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.396011183 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.390650515 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.392536369 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.398630789 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.396695907 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.392570312 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.391283766 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.402532543 seconds)
  done (took 821.930599157 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.392003201 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396180269 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395871709 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.39475802 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396392586 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395383589 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.394972223 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.393864611 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.394516789 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.395456015 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.39625444 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.397541056 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.392902198 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.397920783 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395418719 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.395612669 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396057628 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.396817779 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.394710109 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394974459 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.396128656 seconds)
  done (took 30.549137429 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.395953983 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.398091475 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.398527494 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.39718696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.396310034 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.396359481 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.397918199 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397849824 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.396389024 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400221215 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.397246466 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39638644 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.39715616 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.39808973 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396075087 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.397390478 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.397440764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395186706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.397880206 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.397296472 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.39661091 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.396581577 seconds)
  done (took 31.986442271 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.39765406 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.400536898 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.393113328 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.402535965 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.396834052 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.398945424 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.398418472 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.401140047 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.398717603 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.398056206 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.393463652 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.393773538 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.401888536 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.403378391 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.402004822 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.404099083 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.399390104 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.397637786 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.402096943 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.398490129 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.409548169 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.412604564 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.399260827 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.389729169 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.402494689 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.400729799 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.398805812 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.399863838 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.39492585 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.40492775 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.399100961 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.395373183 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.411026779 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.401852708 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.396435748 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.404363222 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.401565171 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.401493444 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.396250878 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.410197065 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.420785003 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.399594948 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.413301719 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.412912633 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.401616993 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.396864993 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.406966906 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.401281337 seconds)
  done (took 68.516066954 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.400445615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.400875558 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.399287577 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.401027323 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.401964314 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.404508143 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.399938218 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.399102078 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.397777678 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.399216409 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.401699546 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.40228726 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.399763824 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.400567 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.400804878 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.405672537 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.400718346 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.402134099 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.401010911 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.399623304 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.399529507 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.401514606 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.400629507 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.399547317 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.400258021 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.397901716 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.399241272 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.40224738 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.39965606 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.4014954 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.40607154 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.401742009 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.403372803 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.400656605 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.402433577 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.399816486 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.40310587 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.402417653 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.401309972 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.400761997 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.40149952 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.401702689 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.402795775 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.404462956 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400256345 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.40192199 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.400878562 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.400441914 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.402341807 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.403342702 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.40528408 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.402866244 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.403244644 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.403126194 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.405666601 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.402925609 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.401557 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.403923572 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.401711768 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.402745838 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.401471374 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.403872308 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.406212061 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.407125655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.404941718 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.404027705 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.40361627 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.404119198 seconds)
  done (took 96.581463679 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.406301807 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.405987312 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.405270321 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404615978 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.409154404 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.406817515 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406768347 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.408119706 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.40811342 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.406075801 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.40820987 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.411148442 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.408318334 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.407690461 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.407566912 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.406656111 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.407071389 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.408251147 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.407692208 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408050703 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.408307649 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.409406671 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.407140601 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.40592194 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.409629534 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.409073039 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.40866314 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.410451776 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408415553 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.410974399 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.409619687 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.408895084 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.409386207 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.409038817 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.410745179 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.409902823 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.410515401 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.408196252 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.409936557 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.409752734 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.409313503 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.412147802 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.410613459 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.409719071 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.410012893 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.406947141 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.411289941 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.409423992 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.410429147 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.409355128 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.40723782 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.409409883 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.407637801 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.410326341 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.408138353 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.412172106 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40717189 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.411644944 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.409784093 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.409388722 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.410386055 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.40747507 seconds)
  done (took 88.598548184 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.407782093 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.406299013 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.407615731 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.406092772 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.410478455 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.410559192 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.412075935 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.408773071 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.411196215 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.406987788 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409149376 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.411237281 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410883116 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.412644443 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.411823529 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413790399 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.411890507 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.409688341 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.40888356 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.41175718 seconds)
  done (took 29.455559957 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.410831294 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.413971707 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.412536818 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.409123115 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.410842399 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.412232449 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.411318158 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410214525 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.41309897 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413451948 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.412384285 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.412886582 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.411804671 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.411671694 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.411196424 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.412876805 seconds)
  done (took 23.84921665 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.413713993 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.41332358 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.412968018 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.412718964 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.410326481 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.414150291 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.413720348 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.414030792 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.413305561 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.413885243 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.4129361 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.412092418 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.411539484 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.413236278 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.414286272 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.412644653 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.412815414 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.413413395 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.412692285 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.415605993 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.415000469 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.415240443 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.413322393 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.415759085 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.412150665 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.415046215 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.413363738 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.414224183 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.415250361 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.41392666 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.415887453 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.415851695 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.413439098 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.414352621 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.417179936 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.413720208 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.414684646 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.416222272 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.41544878 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.416172964 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.415701816 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.415768793 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.41373732 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.417617003 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.415037485 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.415346044 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.41538299 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.415722977 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.414694983 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.416278006 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.417356774 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.415052711 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.418284964 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.415613186 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.418410191 seconds)
  done (took 79.06024188 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.416354482 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.41683059 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.414294932 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.415640844 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.415793447 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.415643568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.419050146 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.418558254 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.417414324 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.416798882 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.418358857 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.4194884 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.417950565 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.416634406 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.418771898 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.417269263 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.417823104 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.417729028 seconds)
  done (took 26.771513474 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.416310901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.419488469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.419262185 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.41756525 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.416476215 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.418698425 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.418105263 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.416917892 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416738259 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.417976267 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.418444832 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.419728724 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.420841016 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.418830006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.417928425 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.417463352 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.41880619 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.416988571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.419271264 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.414443484 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.420279213 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.418313041 seconds)
  done (took 32.461958256 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.410349668 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.411410837 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.407210931 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.435664131 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.427543125 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.409743306 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.412687046 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.409656214 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.440968576 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.467831001 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.459808751 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.42721124 seconds)
  done (took 18.38524459 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421197486 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41946612 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420074438 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420686807 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421957639 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421657391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4200076 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419742902 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420225924 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420657473 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420738 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420732064 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422294972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418599041 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42109426 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421965391 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421567505 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42140254 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421144267 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421357003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420770896 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421950865 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42057569 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421592927 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422050248 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421924114 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421558915 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421321105 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422966705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422818014 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424144997 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424154916 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422838338 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422542629 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422230998 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423144521 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421130159 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422764305 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42256407 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422972014 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.425552649 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424161481 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423807734 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423819258 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422560719 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42262553 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422540744 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423257594 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424075995 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422789658 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423216667 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422112896 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424175169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423789715 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424774547 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423656248 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425321404 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423968719 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423852502 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423177277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423614273 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424323163 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424029341 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423601912 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423790064 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424286357 seconds)
  done (took 95.148713466 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42442122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.424632281 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425469608 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424732224 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426971474 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423926185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424641849 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42402941 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42685477 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424405925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42470743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424552732 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425171665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424133404 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425434827 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42352327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42537155 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424568725 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424882941 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423892103 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426978529 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426004173 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425296821 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425722712 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426531265 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426340459 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42849164 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426755246 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432088745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426645036 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426925239 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426794636 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426068287 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.429427025 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427821582 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426908338 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427050954 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425827195 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428253481 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427523361 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426022821 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427204116 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427709976 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427007932 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427738332 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428635792 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426438655 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427828916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425537703 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426055436 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427868586 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428088307 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425838859 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427016662 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426976643 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428026637 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427442554 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428570281 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4280207 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429158066 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428037043 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427336605 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428664567 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428571887 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427702922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428092986 seconds)
  done (took 95.428484309 seconds)
done (took 1924.107638248 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.649738071 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.597204435 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.419284394 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.409571496 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.419566762 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.402096035 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.4100101 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.418528291 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.419306394 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.418500565 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.420589867 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.678975308 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.433708783 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.418822743 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.419062019 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.572351205 seconds)
  done (took 28.778771309 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.458622985 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.439366766 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.567208232 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.428652833 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.459104402 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.682638484 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.498794016 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.428146345 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.630881483 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.456889315 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.392503125 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.455219899 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.424341741 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.408719572 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.449366012 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.679381365 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.768825491 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.3954931 seconds)
  done (took 31.29762891 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.008366497 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.414262596 seconds)
  done (took 5.697028162 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.464208403 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.430345507 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.430582968 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.426172281 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.394094529 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.393279481 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.424956064 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.401981705 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.394848256 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.579497016 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.434671197 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.445249497 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.445780361 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.427098446 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.43223199 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.482226825 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.638875516 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.434285603 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.432063743 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.43808008 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.424269595 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.571645947 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.483261943 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.440669236 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.579507771 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.403481965 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.434835394 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.440688093 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.617577556 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.435215958 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.426149163 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.427638669 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.429403836 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.398699094 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.062496984 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.403411216 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.460321945 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.441093452 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.434094168 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.638470297 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.428079856 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.440185306 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.396937557 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.058424748 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.600319985 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.589736586 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.421919715 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.429127894 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.429403488 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.50810351 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.435649883 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.43074032 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.52614491 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.318432952 seconds)
  done (took 91.200744943 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.416794692 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.397923856 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.667245813 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.427993881 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398275158 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.400133355 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.399558352 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.783451653 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.454630508 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400532637 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.822124588 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.152450322 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.402323578 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.451456431 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.414081428 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.438081477 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.401014193 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.407297185 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.400281558 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.404906727 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.090767478 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405981794 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.418109175 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.60188848 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.474788309 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.083015166 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.399580491 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.404354283 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.417341129 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.408998867 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.124907643 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.407278118 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.431013329 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.399451774 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.789951013 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.922708328 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883067113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.402018581 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.451765131 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.403415057 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.404661934 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082522366 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.900861276 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.401168542 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.401587102 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081182181 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.402050638 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.40580754 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.403307432 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.766833617 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.407309896 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.403344937 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.402235508 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.407381344 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.400020002 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.438417972 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.442287528 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.083246899 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400682656 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.401965641 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.42211122 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.402402149 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.402808556 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.406442956 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.405035026 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.90311687 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.588304141 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.413271199 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.906385302 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.115155286 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.402230968 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.18990313 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.402192626 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.43442354 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.520294096 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40342707 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.421599563 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075892332 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.410824659 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.402983787 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885963012 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.406164499 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.813950503 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.42283254 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.40429408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.114074352 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.421400235 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.460060458 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.403869793 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.418172241 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.404436277 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.408634994 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.801949466 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.479348876 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.404815724 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.405163953 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.408873014 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.405592708 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.40791996 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.413729707 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.190635904 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.41841459 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.410552976 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.413753244 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40541608 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.405993737 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.406253966 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.407484499 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.774622597 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.406932754 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.410889611 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.40663914 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.40599702 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.409050411 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.610610121 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.410345478 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.838670336 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.409533992 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.406042067 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.425922738 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.404411483 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.409869789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.417223447 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.408920716 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.407000778 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.833101192 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.429271348 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.424578433 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.408413598 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.413346768 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40631389 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.408285439 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.448036584 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.409454163 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.351710717 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.426027918 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.426663265 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.407903058 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.414184444 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.409188138 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.418972832 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412562589 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802646132 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.799615859 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.593498796 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.411492132 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.405882061 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.345360678 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.458079969 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.676303879 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.428756548 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.407586467 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.799882094 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.640145091 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.409496138 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.408875319 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.412057288 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.784032663 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.411169186 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824395896 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.166029493 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.412489955 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.412282456 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.35310426 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.275669343 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.411949942 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.409964145 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.813448693 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.429684599 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.409805325 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.410329903 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.410553465 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.409588259 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.413651136 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.420186673 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.410918386 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.411397078 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.529557634 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.696280233 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.431380695 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.416200621 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084100778 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.422190629 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411270735 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.411593611 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.41107916 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.409970849 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.448965962 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.411835402 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.448561301 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.411467199 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.423575582 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.11969036 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.427403094 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.41601652 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.692043032 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.302414784 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.417500019 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.411934018 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.411383459 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.451724832 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.117283979 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.41485953 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.849914574 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.415596774 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.484608762 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.41152356 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.530364092 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.118289763 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416468812 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.411758506 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.277989401 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.412572577 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.193403994 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.413768539 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.412890424 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.202935792 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.414747085 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.414312393 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.41385158 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.413139129 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.807622184 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.414896894 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.441611954 seconds)
  done (took 521.100469493 seconds)
done (took 679.347526054 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.411703053 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.418813384 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.418455657 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.421084553 seconds)
  done (took 10.961905561 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.453178298 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.441607833 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.451365289 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.442274468 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.452734737 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.446223364 seconds)
  done (took 9.979161666 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.414283758 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.418195847 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.41854687 seconds)
  done (took 8.543433491 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.733073877 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.437782905 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.912570237 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.426065913 seconds)
  done (took 9.802610654 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.45411061 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.452171537 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.45415028 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.452643664 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.455173804 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.45535616 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.453382864 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.453261549 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.453679759 seconds)
  done (took 14.373361864 seconds)
done (took 54.95220398 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.643999282 seconds)
    (2/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.490176021 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.55400404 seconds)
    (4/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.392047201 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.726945654 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.480406482 seconds)
    (7/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.731574804 seconds)
    (8/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.762835553 seconds)
    (9/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.413185224 seconds)
    (10/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.073209659 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.554014097 seconds)
    (12/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.394528242 seconds)
    (13/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.012956606 seconds)
    (14/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.906286267 seconds)
    (15/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.583371531 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.597673839 seconds)
    (17/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.432013457 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.577533847 seconds)
    (19/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.4278227 seconds)
    (20/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.548640228 seconds)
    (21/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.685855373 seconds)
    (22/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.398398707 seconds)
    (23/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.552846909 seconds)
    (24/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.48176273 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.728950658 seconds)
    (26/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.581087791 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.657660168 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.653173843 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.652243417 seconds)
    (30/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.769951403 seconds)
    (31/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.393453526 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582917702 seconds)
    (33/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.394505474 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.903463423 seconds)
    (35/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.686606167 seconds)
    (36/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.489179036 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.395619024 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.777794299 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.451277358 seconds)
    (40/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.823550677 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.552299982 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.479475567 seconds)
    (43/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.395159748 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.602709186 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.54434918 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.485780629 seconds)
    (47/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.082760594 seconds)
    (48/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.551813467 seconds)
    (49/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.56494293 seconds)
    (50/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.482393396 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.604574088 seconds)
    (52/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.766452493 seconds)
    (53/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.400332962 seconds)
    (54/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.817823971 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.787159108 seconds)
    (56/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.577709009 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.395548833 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.462117005 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.426942839 seconds)
    (60/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.621040567 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.658890562 seconds)
    (62/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.396558529 seconds)
    (63/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.501297477 seconds)
    (64/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.419903327 seconds)
    (65/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.732203097 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.567431515 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.623606256 seconds)
    (68/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.395647449 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.737941466 seconds)
    (70/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.551866827 seconds)
    (71/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.713099829 seconds)
    (72/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.505540405 seconds)
    (73/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.396079138 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.586771265 seconds)
    (75/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.692117482 seconds)
    (76/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.905419257 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.658241526 seconds)
    (78/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.865192983 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.607137542 seconds)
    (80/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.398482097 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.591708974 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.459565982 seconds)
    (83/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.602144309 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.421305879 seconds)
    (85/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.629784835 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.604846049 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.611305599 seconds)
    (88/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.682297937 seconds)
    (89/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.697498264 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.584206484 seconds)
    (91/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.472634265 seconds)
    (92/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.579478857 seconds)
    (93/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.607748373 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.438601794 seconds)
    (95/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.594656695 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.673275561 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.623035373 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.485675588 seconds)
    (99/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.604540005 seconds)
    (100/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.400203266 seconds)
    (101/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.849978269 seconds)
    (102/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.586559855 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.670644291 seconds)
    (104/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.486476807 seconds)
    (105/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.739517085 seconds)
    (106/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.487747011 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.611179048 seconds)
    (108/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.604171452 seconds)
    (109/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.485162324 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.62555846 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.458114611 seconds)
    (112/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.400275133 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.64049325 seconds)
    (114/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.777480781 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.908399525 seconds)
    (116/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.659712174 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.40082213 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.496079634 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.852021266 seconds)
    (120/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.399791063 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.773659067 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.615191709 seconds)
    (123/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.739657047 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.748078579 seconds)
    (125/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.824846651 seconds)
    (126/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.615936496 seconds)
    (127/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.624229939 seconds)
    (128/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.683759715 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.660665857 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.59083512 seconds)
    (131/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.402419191 seconds)
    (132/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.506328982 seconds)
    (133/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.905191226 seconds)
    (134/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.56477126 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.71753957 seconds)
    (136/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.517721911 seconds)
    (137/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.606695795 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.829691332 seconds)
    (139/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.824378436 seconds)
    (140/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.439008969 seconds)
    (141/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.411731269 seconds)
    (142/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.570284182 seconds)
    (143/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.732393554 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.781167074 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.417610089 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.670043167 seconds)
    (147/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.628807546 seconds)
    (148/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.834917625 seconds)
    (149/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.406914944 seconds)
    (150/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.824295674 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.40738763 seconds)
    (152/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.586796897 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.667373623 seconds)
    (154/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.443600335 seconds)
    (155/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.424077042 seconds)
    (156/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.420153429 seconds)
    (157/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.49980427 seconds)
    (158/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.742337974 seconds)
    (159/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.676229638 seconds)
    (160/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.613463416 seconds)
    (161/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.404037063 seconds)
    (162/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.588820548 seconds)
    (163/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.487833684 seconds)
    (164/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.404185546 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.737951663 seconds)
    (166/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.645955676 seconds)
    (167/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.625371984 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.635427592 seconds)
    (169/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.698318899 seconds)
    (170/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.528105215 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.404399959 seconds)
    (172/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.706855809 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.655869367 seconds)
    (174/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.593068714 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.647191308 seconds)
    (176/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.595219476 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.722400244 seconds)
    (178/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.58441028 seconds)
    (179/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.862601871 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.405053184 seconds)
    (181/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.461450999 seconds)
    (182/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.68657418 seconds)
    (183/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.630909978 seconds)
    (184/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.630706042 seconds)
    (185/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.57130156 seconds)
    (186/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.417684958 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.439043541 seconds)
    (188/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.511755021 seconds)
    (189/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.405525172 seconds)
    (190/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.409536716 seconds)
    (191/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.417324717 seconds)
    (192/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.629762975 seconds)
  done (took 355.787066717 seconds)
done (took 357.080048527 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.486956896 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.606259288 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.459888509 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.459190097 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461688389 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.44392391 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.49049296 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.459645462 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.482363575 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.483756699 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.429766941 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.473356842 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.483907835 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.469836982 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.501508886 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.460006751 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.459180528 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.471489776 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.483530622 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.48562614 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.462887564 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.468597019 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.496873939 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.461726034 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.477009751 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477871662 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.474554481 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.431365958 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.470148613 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.484223517 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.438124848 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.475735078 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.491506846 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.475867078 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.47011076 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.470613267 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.470016055 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.608406348 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.493632325 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.472647744 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.471159705 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.486273429 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.476126398 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.474119649 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.470903388 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.498342701 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.478679028 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.486061671 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.441950894 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.446418012 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.49352044 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.482912806 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.47609944 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.441271897 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.434743063 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.484923956 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.472177432 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.492432104 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.471827807 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.471293661 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.50349608 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.4915271 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.483805029 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.479239295 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.472701592 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.487348007 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.474355783 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.48874148 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.471117731 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.474628233 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.473987859 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.474483033 seconds)
done (took 115.65946012 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.647660502 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.440283851 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.684076795 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.472701103 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.693434409 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.646826248 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.472185185 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.472387166 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.472079376 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.331979367 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.472628328 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.474255211 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.438188124 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.473913338 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.642239142 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.475661884 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.472215007 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.228948388 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.475155744 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.656693914 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.440745922 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.473466703 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.474179852 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.341057896 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.438702156 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.44644085 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.654091278 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.474635357 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.238143482 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.445031662 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.438556188 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.246398512 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.656826612 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.492828523 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.484068889 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.483361746 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.696434093 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.478446456 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.647448115 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.647295092 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.683118502 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.514825943 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.445817796 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.44052229 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.47777165 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.476709713 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.475354722 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.504171795 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.439580481 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.475475338 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.233362427 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.487013886 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.486218045 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.477415669 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.476544049 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.497914645 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.477149294 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.476447668 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.662490461 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.477541452 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.649969315 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.344391839 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.336887813 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.476571497 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.439290849 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.478306564 seconds)
  done (took 118.567669677 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.593147145 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.599659356 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.646273384 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.468570759 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.561166332 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.645393594 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.467846365 seconds)
  done (took 12.294399379 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.480370443 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.478293923 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.561767666 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.559868263 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.478221078 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.700471059 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479228958 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.487920426 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.477616113 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.563393432 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.478261656 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.47915758 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.487014096 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.442165376 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.561385844 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.489053881 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.637628849 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.471101039 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478231904 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.680326248 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.477057592 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.493081557 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.564659444 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.48761103 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479654641 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.486878534 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.323439315 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478246361 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.479475009 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.480000285 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.480016768 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.591224764 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.48003318 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.44538045 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.47876151 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.643256381 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.48038539 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.480014114 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.480596031 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.446822812 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.481618228 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.478409441 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.481929302 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.479244952 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.479924437 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.50419994 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.481341098 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.480049034 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.481046298 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.482014089 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.561762847 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.481572412 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.481021993 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.480575079 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.563367521 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.48782663 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48160873 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.480765536 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.481910794 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.478325211 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.684403722 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.564505934 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.481301289 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.563861438 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481293815 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.480649879 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.480722234 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.481201974 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.621996554 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.482533428 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.564720974 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.481074025 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.715700929 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.506539414 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483356438 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.479187822 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.479203326 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481587498 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.44523539 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.487860852 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.48130953 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.480478139 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.489074554 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.483292603 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.483342679 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.690316555 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.645601581 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.482616819 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.498338022 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.489913626 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.482758876 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.564252689 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.484050172 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.483776674 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.567763471 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.647187258 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.568703185 seconds)
  done (took 152.824670376 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.494215151 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.493707614 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.486789696 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.512077688 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.475962342 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.473184753 seconds)
  done (took 10.253747352 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.480404666 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.486486864 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.483101448 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.484063721 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.48485607 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.484748305 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.485274838 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.477547389 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.490195157 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.485245785 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.485186419 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.484732172 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.484650528 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.48493073 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.484746908 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.485263315 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.483257612 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.483763823 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.48511134 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.485477937 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.448258609 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.484038368 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.485604838 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.477435713 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.489069665 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.485094369 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.510094824 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.486845359 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.486503765 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.487805957 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.488723322 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.487245759 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.479652405 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.484967467 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.490117145 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.479877434 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.489222687 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.487266432 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.485224133 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.493866503 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.487426229 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.490751303 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.486911708 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.489343303 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.478847136 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.483574902 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.49102117 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.510269916 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.48811221 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.487898636 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.487675492 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.487547544 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.489035093 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.487718445 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.483310901 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482097409 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.492989087 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.488422026 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.489350705 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.48093553 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.491229576 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.487819785 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.482404642 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.491579481 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.488251683 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.489442337 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.48237838 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.493082256 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.489497163 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.487821251 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.488810344 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.487667461 seconds)
  done (took 109.341976871 seconds)
done (took 404.595321664 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.975108427 seconds)
  done (took 4.297312878 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.572222906 seconds)
  done (took 3.896311675 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.642622013 seconds)
  done (took 25.969730579 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.530377292 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.463868415 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.46101016 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.457918915 seconds)
  done (took 11.235547831 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.998450222 seconds)
  done (took 4.321120654 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.460713825 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.471801757 seconds)
  done (took 6.257986438 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.755190656 seconds)
  done (took 4.079498377 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.295812478 seconds)
  done (took 4.625470809 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.487481473 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.473512449 seconds)
  done (took 6.291175086 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.429216452 seconds)
  done (took 3.753393151 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.652942319 seconds)
  done (took 22.978762105 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.477002907 seconds)
  done (took 3.80438546 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.491187113 seconds)
  done (took 3.815406554 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.585917944 seconds)
  done (took 6.910033322 seconds)
done (took 113.558608677 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.451812063 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.452461587 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.45277755 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.452591073 seconds)
  done (took 11.135095252 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.608831961 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.607109466 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.611127574 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.597907947 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.601125883 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.61165313 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.525165316 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.558559717 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.586396356 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.582281169 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.613228819 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.600158302 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.60804499 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.526108732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.58397908 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.617181416 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.585820026 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.612327866 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.5255595 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.600371248 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.494376973 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.599479166 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.587296331 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.495133843 seconds)
  done (took 39.263878529 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.067153511 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.613669308 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.697291674 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.580008672 seconds)
  done (took 8.28403591 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.655174796 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.660193799 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.669825821 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.708202977 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.764784125 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.669096957 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.527120872 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.520477639 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.507050093 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.660359882 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.735662684 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.65421783 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.878147564 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.494040758 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.874538445 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.493928802 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.491157081 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.658965711 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.707473625 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.736882253 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.492738288 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.656315723 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.66631497 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.660012562 seconds)
  done (took 40.86871515 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.508871345 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.518186216 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.496251723 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.517311733 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.494974885 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.496016079 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.496658339 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.508463681 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.493755945 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.494135951 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.496330365 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.51645527 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.495291615 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.495638098 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.50959958 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.495338059 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.497674809 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.509021783 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.511917053 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.496061895 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.494486135 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.511269904 seconds)
  done (took 34.380809809 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.459711392 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.461185113 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.894821331 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.804923936 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.458936643 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.458207988 seconds)
  done (took 14.866317777 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.581615302 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.778245754 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.485714978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.940042515 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.072242287 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.493876561 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.48808155 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.830043541 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.198736795 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.163842763 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.56980137 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.5808372 seconds)
  done (took 22.511666812 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627033159 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468893007 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479339936 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537327128 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469245146 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470044899 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.563067831 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066228185 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.496873939 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828888226 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474016284 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634672468 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.808246426 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47382436 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474122513 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.448215656 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793040232 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123724742 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476903592 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46910707 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556463151 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473305509 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475350811 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.756435159 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475048049 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470122283 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.815611678 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468810734 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889867769 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842451753 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848981145 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47962419 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.832097923 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041912034 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658406561 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748000985 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466756213 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472951344 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.460923767 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.477518475 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491176288 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.479431637 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840387036 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479981986 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469276016 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472984239 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081604511 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.502551826 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.472093832 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.47224944 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850703571 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640342113 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.499656765 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472392125 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556135875 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472887928 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.501000092 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685984091 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195428972 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484625803 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479846704 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.498534276 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473282182 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484946514 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292054388 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.503068093 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.500572105 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.50216735 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475317776 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47440991 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53049239 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472518956 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.524522427 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474083472 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437494601 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482556266 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481011517 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16126094 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47812365 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.479753047 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787065031 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474520677 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474740189 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.4751357 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47348542 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.430368834 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509659504 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.441625852 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588993475 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.075981799 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.759718467 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530944124 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536025985 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.78185117 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.44120848 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475343548 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.480102672 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481945574 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527100199 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.079867559 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475243046 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.503218182 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815911436 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.77269847 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485926597 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.466545711 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087193629 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476545516 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.533025882 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486207779 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.757924803 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.269081913 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865033186 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496773857 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54676918 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476022754 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49057195 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483598717 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.513349079 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477615484 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870710095 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.444887928 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48246254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62880559 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486743531 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478005618 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477728139 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484905029 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.47767883 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.747507417 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488913988 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.855120753 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.486383638 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477675059 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.488888915 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484475924 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.485001689 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.784516523 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480556221 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.838587854 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477332697 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478887574 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479074957 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.784918459 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.489431582 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.512585434 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905983854 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486116356 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489896865 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861262804 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548789899 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675676844 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541211421 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.490885468 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.820235521 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.507451541 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.506161992 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479143403 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484733638 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488930261 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.509677802 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497937342 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280479731 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481154622 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.479510837 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479422419 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.52328463 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632173617 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510447592 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.756071705 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.494679805 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48189047 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.509895078 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.481359466 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790469096 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849143945 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.486789765 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.737946774 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.082889242 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275458423 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526119558 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.481073745 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.478969358 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.479235313 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483108642 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479189987 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481390196 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755910581 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87043066 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491162808 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29184633 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48830581 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.482477555 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.515426299 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857240924 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.518840979 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482436069 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.486346064 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503363242 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489318998 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.861340887 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790845819 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.528676517 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482278927 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.133156807 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512279879 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48320607 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481809523 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53799111 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486303321 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172190472 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911999633 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49661811 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861382233 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491527379 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.535043877 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.482245333 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48663395 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490358237 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.512894343 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520067531 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.762817046 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.48897524 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491238306 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20496545 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485442876 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229512566 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486468775 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.488895481 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490122103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.090714259 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485011886 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484104298 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854152473 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095855486 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485166095 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090402138 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.495828066 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.482898629 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866494895 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803661346 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483285479 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.489339741 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869783232 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.790226048 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541828957 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494028745 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490887772 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.451949442 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169141131 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499985578 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.744846743 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091619611 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488636928 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492951653 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.532175495 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.495812142 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029293879 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491397056 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487087709 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486868756 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495171418 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179142264 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488656483 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48629913 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.300476129 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488874947 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.102962465 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488182401 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.77061266 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.868264812 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.849572002 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.493311684 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.507921293 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.831225675 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872782984 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494834573 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493469386 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232909507 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.438846239 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.518427588 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490861024 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.509758189 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495984859 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917457939 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.506684404 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.500525311 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501805712 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49003997 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491640103 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.488555423 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498951368 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489823671 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124721935 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.492589875 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496004555 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499530701 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494035869 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.829707255 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.535513349 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.289763244 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811789754 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481000343 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557026281 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.516750629 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49707592 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.461326611 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48896183 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489263264 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501035571 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802710527 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.490002255 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.457096325 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.536491478 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.791787419 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491117132 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495374377 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816269024 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.489128401 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.494359373 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466315514 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552974928 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492553557 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498679476 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497842917 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596918854 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644009269 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770781536 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.872189543 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878133665 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043818211 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497133749 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496337977 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.537883553 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653561253 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491976878 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.526936003 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.497158542 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290562578 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467079996 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.298095449 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878254211 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500780442 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496490022 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491810166 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821782575 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493297157 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853746904 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493604319 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.486260858 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567586912 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501402099 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508526398 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798012862 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855802055 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493346256 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494966294 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499192321 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.494766757 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885561704 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.79934718 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13783345 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191867905 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495813609 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500693908 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.111212815 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855771185 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496214428 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495186364 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497291101 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.504914138 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.508909059 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.525626827 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502093318 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812708096 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865490856 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082546321 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870380235 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.531511724 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.457026484 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496375132 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.860372887 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417327022 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.775983594 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303517088 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.424654281 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838674038 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649515836 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781290763 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.49733573 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821170136 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.513715745 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501617559 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49725185 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496022923 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.496739774 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8679316 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305353774 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839511715 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.525089538 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.512505327 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563721546 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.784378516 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806313778 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.462147106 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.808874578 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88860881 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.513634241 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497857165 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307820429 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886217863 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504599432 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.525481557 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825334422 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.501446797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562635444 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.45552343 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.496918498 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19869943 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.799915548 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551847829 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511425859 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428024891 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306400625 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.513499517 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160950007 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500791895 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505072747 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865540304 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.528305659 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512591371 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87656915 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.526186047 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.514701485 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79378488 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.304432149 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.503326226 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.522628261 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501080409 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.505702157 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500515044 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565003692 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50404608 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504209369 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.034898293 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503136467 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501350696 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542648964 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.501930797 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520215874 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.504619617 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501815839 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.53105559 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.478656679 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.485280915 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.521465684 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719667424 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191282356 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506243846 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.205648917 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.923228157 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.839373778 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.51801301 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.471980341 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.530082702 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503816023 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501601705 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501823311 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50081166 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200823443 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.514276222 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.883740733 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537496563 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.803462717 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800335224 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.513343981 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79451989 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523041373 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557636554 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.470089668 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502826581 seconds)
  done (took 1055.17294695 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.511824863 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.505509116 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.521809163 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.58726602 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.525750097 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.505028328 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.506254042 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.615985874 seconds)
  done (took 21.636421713 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.495196352 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.53028161 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.510370068 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.53047032 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.510771028 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.163593849 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.50736403 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.528043616 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.547287891 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.504838289 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.503320848 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.310318232 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.530126352 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.497492593 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.509728995 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.530040168 seconds)
  done (took 35.075201882 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.664263871 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.680036407 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.10452237 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.572367757 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.519901658 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.505655783 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.868939199 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.515060889 seconds)
  done (took 28.792481643 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.540347624 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.539063033 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.540129859 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.540557358 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.541692068 seconds)
  done (took 9.062890399 seconds)
done (took 1322.375722813 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.533325222 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.534792937 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.532882219 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.535203045 seconds)
  done (took 7.497396282 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.473756753 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.477900507 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.481110831 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.513777974 seconds)
  done (took 10.309746791 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.011196536 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.218950259 seconds)
  done (took 5.591253539 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.508243122 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.35407254 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.335747024 seconds)
  done (took 8.561231495 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.889648886 seconds)
  done (took 3.252760075 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.040154338 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.105827564 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.498456193 seconds)
  done (took 8.009329119 seconds)
done (took 44.584130078 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.512257878 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.269925596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.657957901 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.507142912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.663104645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.658118117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.786682301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.510409319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.507057008 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.497473736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.508183758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.664025921 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.769011129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.269339697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.776144159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.268684377 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.665241578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.510300856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.504959953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.514908285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.787146326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.505997725 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.499259438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.498555438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.664129286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.704643866 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.513728317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.269910021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.503322734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.500795108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.647934699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.514689962 seconds)
  done (took 86.994366744 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.515449066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.517952528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.499474479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.520223906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.499292403 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.500946664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.519235163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.499201051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.501029286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.504878868 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.500659337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.50309568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.505679179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.507035846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.502479401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.499871527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.497982599 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.513017822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.499324949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.519031715 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.498953254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.500044873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.516243651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.49967667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.52009449 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.521884941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.501130626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.500281146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.500343444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.50062246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.500351267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.499911616 seconds)
  done (took 81.551235323 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.50024888 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.498485946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.501378422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.523063512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.52097421 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.508892366 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.522507925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.502052181 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.502895236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.514733403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.503486512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.502182226 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.504207204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.502444271 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.503691007 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.501877928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.502698074 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.504784861 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.501627825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.521826903 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.505139096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.503046722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.501577889 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.520666071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.506437026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.504110404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.533254752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.51307153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.501336448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503316099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.509682132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.522881506 seconds)
  done (took 81.634340724 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.831305923 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.539575877 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.543591472 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.513770501 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.544323339 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.540564132 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.512559104 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.83867362 seconds)
  done (took 16.232214656 seconds)
done (took 267.777446078 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.523639074 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.514028494 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.57354144 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.513781187 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.657220936 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.571998506 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.827752677 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.571057255 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.809960122 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.516247143 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.730606734 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.516282762 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.549816566 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.746333943 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.524764497 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.533428657 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.513399015 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.508780481 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.515270971 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.88146698 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.577361549 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.507081312 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.517202292 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.525889779 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.482879911 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.623379412 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.621284523 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.759185857 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.722574708 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.618567836 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.510228221 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.533393667 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.530035908 seconds)
  done (took 71.998310612 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.536141083 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.544813205 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.54686172 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.54554165 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.544442907 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.54536572 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.534962093 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.544137352 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.543974412 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.545086774 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.545697186 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.546500222 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.546554977 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.54451666 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.547626762 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.516844426 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.536198563 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.54672553 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.536799896 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.519124185 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.546308996 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.546913892 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.546523968 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.546360609 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.546937079 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.546602888 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.54625899 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.547125022 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.547543022 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.546695219 seconds)
  done (took 47.657224219 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.546091162 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.510917345 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.518166381 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.552162674 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.538807344 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.542194228 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.943188865 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.553409969 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.55345355 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.553691011 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.509527574 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.550006953 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.606228627 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.521536573 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.540141383 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.548002438 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.550135042 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.538711592 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.510208177 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.562904124 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.953352658 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.553655321 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.941973906 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.567795597 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.555422865 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.54240424 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.561727298 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.509061174 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.565590219 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.511913841 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.505645795 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.927642893 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.52194235 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.514731588 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.51023304 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.555932077 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.550132039 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.511607796 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.547378336 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.541275465 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.940431531 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.546861511 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.525925887 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.512206825 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.565045597 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.54894753 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.52748279 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.513914863 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.857375649 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.562543184 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.51236285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.555448637 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.552118884 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.54402819 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.854586886 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.551641868 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.542974564 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.514259181 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.561248466 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.935348762 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.559716567 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.543877332 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.51379718 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.544056894 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.51441381 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.548374413 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.565008721 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.546245791 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.531672429 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.547266521 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.514499156 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.545521186 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.553221468 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.515317067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.514215111 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.531095749 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.547566349 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.514735289 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.518446724 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.929924329 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.55691223 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.51368306 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.967012844 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.554566471 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.556064986 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.554963309 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.552693817 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.672132189 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.932243479 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.520485391 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.515591962 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.516896597 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.951130238 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.566217743 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.547173283 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.515085194 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.561355113 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.554558509 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.531337888 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.516225422 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.54544471 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.567317534 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.517436819 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.553269588 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.928039662 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.558567818 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.523253341 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.546657434 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.673156971 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.557678389 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.567610449 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.566471267 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.960708411 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.554981049 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.556170726 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.516535378 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.539938773 seconds)
  done (took 225.292475956 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.518617137 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.537316512 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.517796293 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.536329585 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.518605404 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.549673391 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.52038049 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.519802832 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.54629859 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.51841774 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.522438572 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.555542782 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.548513048 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.519096248 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.533330879 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.520802681 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.533650962 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.533170385 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.522671214 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.52045522 seconds)
  done (took 47.972230269 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.556753481 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.299166535 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.249355802 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.557501342 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.558283144 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.550545988 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.623060936 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.55770863 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.557198021 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.957605922 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.776632768 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.564440422 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.559159863 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.556562395 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.26534743 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.533618905 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.975519513 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.310097115 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.564680886 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.29420934 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.531073679 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.557284973 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.548046229 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.320776755 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.9900773 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.944764065 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.630834829 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.321437454 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.565130175 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.56055599 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.321076515 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.564063559 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.550965035 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.303140924 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.564929451 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.580511181 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.558960465 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.628110181 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.628954841 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.980288625 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.333452599 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.956706436 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.586405436 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.783097697 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.566019743 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.531146593 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.336584911 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.564648061 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.529609387 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.560312034 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.574708697 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.28083257 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.556887366 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.279974639 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.567654868 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.56128206 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.323796343 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.288034114 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.277910481 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.785930389 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.554087221 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.945418967 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.568805153 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.33451705 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.567550524 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.562128536 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.561445139 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.781620344 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.327737696 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.953818289 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.981683984 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.985811394 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.568202283 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.640852094 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.566227591 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.976201512 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.64426873 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.04671034 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.982762822 seconds)
  done (took 144.698901869 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.933682349 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.697094791 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.093910965 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.295311296 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.248610805 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.756125482 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.698796474 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.884818104 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.538022468 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.722018281 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.449203492 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.673660177 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.480255974 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.654008796 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.685877932 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.746165975 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.101959055 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.54595993 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.366702358 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.442181091 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.541639897 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.735923263 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.434543527 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.032066647 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.535063502 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.427713538 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.535743826 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.249073084 seconds)
  done (took 60.893362488 seconds)
done (took 599.880610532 seconds)
SAVING RESULT...
DONE!
