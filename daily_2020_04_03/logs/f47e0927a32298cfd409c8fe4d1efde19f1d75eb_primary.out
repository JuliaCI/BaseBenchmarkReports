cset: moving following pidspec: 31487
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.249745154 seconds)
loading group "string"... done (took 0.621872018 seconds)
loading group "linalg"... done (took 7.503087339 seconds)
loading group "parallel"... done (took 0.152511011 seconds)
loading group "find"... done (took 1.188811444 seconds)
loading group "tuple"... done (took 1.74046169 seconds)
loading group "dates"... done (took 1.201511832 seconds)
loading group "micro"... done (took 0.21221838 seconds)
loading group "io"... done (took 0.948320301 seconds)
loading group "scalar"... done (took 36.574423392 seconds)
loading group "sparse"... done (took 11.506438656 seconds)
loading group "broadcast"... done (took 0.916538385 seconds)
loading group "union"... done (took 12.299544163 seconds)
loading group "simd"... done (took 4.335607711 seconds)
loading group "random"... done (took 8.739945135 seconds)
loading group "problem"... done (took 1.803714396 seconds)
loading group "array"... done (took 19.821862726 seconds)
loading group "misc"... done (took 1.639105535 seconds)
loading group "sort"... done (took 3.101616436 seconds)
loading group "collection"... done (took 17.009999079 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52978087 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131242697 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137140903 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123635992 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151647956 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122878846 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130348221 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089951254 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.8488506 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152870565 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118425651 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408289541 seconds)
done (took 5.336616275 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177692163 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086317245 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087266601 seconds)
  done (took 1.245533254 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071317741 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13052585 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072304607 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072853849 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072830659 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071686474 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071537509 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071774141 seconds)
  done (took 1.635056657 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077110086 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073667679 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071500665 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072815665 seconds)
  done (took 1.367807317 seconds)
done (took 5.57965137 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.767490125 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211314816 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191451194 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.393053213 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131760974 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.175382613 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644378369 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330441764 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189619393 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.07985854 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111869106 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.345429892 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12556736 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64825534 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081967925 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094311318 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142174798 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415359946 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07233656 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087639573 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094183162 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133349321 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088710043 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078303724 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149281666 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072793764 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138649394 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085388557 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071592575 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.2163765 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177228071 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66491658 seconds)
  done (took 10.314192699 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10518892 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103245245 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073973943 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130141951 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102302997 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075088177 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080805009 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072601088 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094430967 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133196647 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095870067 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109679857 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071171797 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074222588 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087889919 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213035837 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084870074 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086626975 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075062349 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083061735 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112035679 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082380133 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08431291 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084151674 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133271823 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185010768 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10110232 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102664751 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071428133 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085746686 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119635978 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131227185 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07122805 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070700702 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129178446 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102027813 seconds)
  done (took 4.726777483 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.968137598 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144887922 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092677558 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136000274 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.115907232 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070456964 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111045466 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070645469 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085698401 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209505267 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.428833344 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577857442 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115070118 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115151536 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106878323 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072595533 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073388008 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071785841 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.466308844 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102717116 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110630095 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084715872 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074612765 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073038776 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.069883658 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07118213 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06838677 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073015908 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.116559348 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078343416 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305687585 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125825549 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073231061 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.931379411 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168963133 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071118744 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.244801875 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.173009433 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.072571287 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094399921 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142205978 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074134719 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070560198 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162055969 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070150967 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074975004 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069883052 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071105011 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.09191248 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108907299 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124029602 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071158104 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071900295 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171294554 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070308052 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083514904 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.121169383 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158658811 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07181131 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289690714 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094621829 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075191634 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070622944 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176203909 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126626572 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072917851 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071755306 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073419517 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073324025 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372435576 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.074057653 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.062007929 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077019103 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082292617 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075091503 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07437048 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07737811 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077622866 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093570828 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070795817 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077972953 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071128108 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070851261 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071330884 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087216479 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.474398816 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071631072 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073754036 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070587216 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095878287 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100061869 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07170454 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071124363 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104045939 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072694294 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072169984 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071235082 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087434531 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07458749 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117861894 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071501485 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089829281 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072210564 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100211343 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073908747 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102760288 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08316657 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075474466 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.410677332 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070143946 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072655041 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070265998 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073002725 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070931661 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081990154 seconds)
  done (took 22.140332997 seconds)
done (took 39.222532926 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24276642 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07402291 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074469923 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074673736 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074277959 seconds)
  done (took 1.693062252 seconds)
done (took 2.836173161 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123313519 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101869613 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069212137 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100786729 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072175593 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103611751 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102860049 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080798788 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102214186 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069488985 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101126199 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069940865 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069591951 seconds)
  done (took 2.318004513 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087970404 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088434402 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075427818 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087563793 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068945482 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087122355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086104007 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093229068 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088629032 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077890314 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068698494 seconds)
  done (took 2.043247792 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086620704 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088688788 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074230108 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08648526 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068867202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08608616 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086457522 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089588101 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08655123 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079374432 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069288862 seconds)
  done (took 2.031132154 seconds)
done (took 7.52051819 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080250136 seconds)
  done (took 1.200742031 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524210846 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.595226218 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083663118 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.107606822 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190338127 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113318698 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.241520926 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087794866 seconds)
  done (took 8.219070352 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106547137 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07352256 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076074398 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076991491 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077332968 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073159638 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074792266 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074017979 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073451309 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077139399 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073510294 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074276077 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076411111 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075938424 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075181473 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07562223 seconds)
  done (took 2.425500504 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09564184 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094940581 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078535378 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079013552 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076621225 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076711869 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078280784 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078187332 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074806773 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07716031 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079199582 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07766564 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075935764 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068292802 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078428562 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080141564 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075356712 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078424495 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078758095 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079966983 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079010042 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067918428 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076259899 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078200243 seconds)
  done (took 3.099589143 seconds)
done (took 16.075855828 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110577621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072506074 seconds)
  done (took 1.310291465 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08361227 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084751718 seconds)
  done (took 1.303808827 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083323569 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069318074 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091005321 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080034588 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070208687 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069443636 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088335183 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07000358 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069752457 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070314895 seconds)
  done (took 1.898393237 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071827114 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078846373 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073609409 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083608713 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076358517 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068159633 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074876399 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071629083 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079287449 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.068009848 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074465993 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086860167 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074639906 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088336651 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07457129 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071752097 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074254369 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071127899 seconds)
  done (took 2.501432951 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069087801 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070268551 seconds)
  done (took 1.28345145 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070395742 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067049581 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07024521 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070560264 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068015079 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066550087 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067549071 seconds)
  done (took 1.620811955 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.357652178 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120144951 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.303584457 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077375379 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085606134 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256947004 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071186449 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075980605 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076386334 seconds)
  done (took 2.602565759 seconds)
done (took 13.664469539 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08506926 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091344681 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099555621 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380199637 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097073293 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072427865 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119082782 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181597883 seconds)
done (took 2.279447368 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213181176 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.656949295 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401257179 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20641254 seconds)
  done (took 2.409391059 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331376047 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092678779 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065570668 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07293936 seconds)
  done (took 1.715823696 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072308171 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07453985 seconds)
  done (took 1.29714754 seconds)
done (took 6.787274687 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072095616 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071646297 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.202470762 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.069293586 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071865855 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.069145856 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069182011 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071856306 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071165407 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070942273 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.071102342 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071419513 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070810827 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071635481 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06920533 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068878386 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071754697 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069178411 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068769227 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068846712 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069014182 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071128137 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068992121 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068753363 seconds)
  done (took 2.994987482 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087717789 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070994739 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074895852 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075468228 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072643826 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074844943 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075165675 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071456104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075428226 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073255978 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073126791 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072884955 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072909095 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073153835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073286582 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073119432 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075612777 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070908147 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073015754 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073032739 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075084525 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07148415 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073707607 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075038841 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073409857 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072896471 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073264873 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07112292 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075200503 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073339221 seconds)
  done (took 3.372758158 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074933364 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067892984 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068375642 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075356044 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068413056 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069391169 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068276331 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068952485 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069233446 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067670035 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069125823 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068385756 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068136175 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068776124 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068504085 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072543203 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084476447 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068595333 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06808222 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.069081554 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071839522 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070513727 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068053013 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067837299 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067880756 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067523169 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068431268 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068469753 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068635649 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067620876 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072292867 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071922678 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067906389 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076410346 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072704584 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06762176 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072580758 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067670623 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068474969 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067776985 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067585515 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067796527 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068028086 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075733726 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068034351 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068907695 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067702734 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06896448 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068311321 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070242738 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067945852 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067803196 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069654168 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069486322 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07254278 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067877255 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06929501 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067940199 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069018891 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068469523 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067667834 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067981644 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071256566 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068693704 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084602746 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076154693 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068330373 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069424395 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069297859 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071211892 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069726897 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083346034 seconds)
  done (took 6.204896709 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091336218 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091280226 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070607996 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070268203 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066253595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068474938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074254163 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068914949 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071237086 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087743132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069261022 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070934323 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070945657 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073010176 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068576992 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070569051 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076631369 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066768904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069017083 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072221163 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069033141 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074329328 seconds)
  done (took 2.782454095 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151569963 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075616606 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109570172 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079319375 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075125958 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079325764 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07480686 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07486497 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075061579 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072532098 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072956636 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074531782 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074720218 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072195667 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072388399 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072558476 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074457055 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07248074 seconds)
  done (took 2.617551868 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081660464 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071080233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092772231 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071414139 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071404637 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073629329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075198198 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078228337 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073542604 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071197605 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078611265 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073501728 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073500113 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071043336 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073922764 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07118809 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073079682 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071274591 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078168519 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074654961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074757473 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078459448 seconds)
  done (took 2.816852912 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085499431 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072958145 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086377247 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072738841 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066803948 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068979892 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074877589 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070625946 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074786751 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07269901 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070717391 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06891464 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072988289 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071112475 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073175675 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07082091 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07295843 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0707885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072829089 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066128112 seconds)
  done (took 2.623299552 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089021858 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07246684 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072218346 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077863561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071850527 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071827117 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078138989 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071728855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071868224 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09238569 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071982617 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072180778 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077819228 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078497493 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071990212 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078122856 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078122083 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07834253 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072223115 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072042003 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091984502 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07205502 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078352963 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071867094 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072391911 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071891913 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071826185 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075835141 seconds)
  done (took 3.295169517 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072378214 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071118109 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068693889 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068991677 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068945992 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068794321 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068962129 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069631242 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071268183 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068631102 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071227484 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070859378 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071070661 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071191091 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071252231 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071264292 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07083987 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069195025 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068829414 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068906568 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071373602 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071186444 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070861734 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06858817 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068683567 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071282716 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068701116 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068677063 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071102716 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068752748 seconds)
  done (took 3.274314228 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078921011 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077282738 seconds)
  done (took 1.329285697 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067619608 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085015297 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067690492 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076417884 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074000447 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071787564 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077190292 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073892777 seconds)
  done (took 1.764077052 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086187834 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079651349 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070944547 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081152461 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079210088 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087120804 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128052743 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070815611 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077770097 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06937816 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083579417 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071183093 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07783097 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071477162 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077148571 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078390111 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06816158 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07572109 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071805624 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069023283 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071097031 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079581894 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074504055 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066729274 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072628352 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094207788 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081964111 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070378343 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074787096 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078922981 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077496439 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064800604 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07045784 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070512442 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068843142 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079264925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085728019 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074801832 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080547126 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070793827 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078420382 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065974478 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075576874 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078679239 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082547459 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071144157 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070659144 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065896807 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069428274 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073610302 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066015242 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071802409 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065806613 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078564807 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075386963 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082038383 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069919471 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072776773 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073899317 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074123151 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078038319 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073302161 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074670085 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069723733 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082067488 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076867498 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078327292 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065840834 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065028509 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068609766 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080227909 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094518845 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076874941 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071113503 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071039164 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068874779 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074293069 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070971973 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07670883 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078173938 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070449428 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075044514 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079197904 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072418055 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074047147 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077206294 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069280004 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072477952 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069767303 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085778846 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.070912121 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067884944 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068687755 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081373936 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074163847 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068863276 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0687605 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077952259 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064072285 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069166314 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069301568 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070761541 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078753928 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072004478 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073318967 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078171633 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076261823 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070683664 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072483885 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06653214 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195512466 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072434703 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080948861 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066415923 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075049337 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073859124 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070747995 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080149721 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069648169 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070614002 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079809894 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078244867 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06955595 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067942278 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074272481 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070397505 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072643466 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080293826 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069880277 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066371127 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066336172 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074752331 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070398297 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075304889 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074142166 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074903402 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065268102 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069761333 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074242119 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080279371 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071684642 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073041353 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077318402 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072829157 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069999966 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077767897 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074319458 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070734784 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077281528 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072877525 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065432392 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072679855 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073722949 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069432533 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076044597 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072566679 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073395576 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071034133 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069051114 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075669551 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071045654 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070644015 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071630442 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069165382 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081587353 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074088978 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066305511 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068371843 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077135058 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06992773 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069939946 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070593102 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073461031 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070600317 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068698937 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070202577 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073398359 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077667229 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072824881 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070891277 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07658475 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083768622 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069895788 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073548905 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070017238 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071162224 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070747661 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080376637 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076998728 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074480274 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073613122 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068306765 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076368434 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079574583 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070845675 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068477709 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07067669 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073348866 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077061419 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073481462 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070615195 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068815735 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072020341 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071804301 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073256064 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068710949 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070053496 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074396267 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068129722 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07391831 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069889818 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080321912 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073087494 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065064858 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070912425 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06730999 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076510332 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064828621 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068447994 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069570318 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069744124 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067664672 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072192439 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063965909 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.20585895 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081550755 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07345166 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07165308 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070730119 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079137974 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073702853 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076004384 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076541889 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07754892 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082360331 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071461601 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075510698 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084497408 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070811998 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065765343 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07653171 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069089141 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069194022 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069312566 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068695113 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07459178 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077334367 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077428718 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064731243 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074208771 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068958229 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071119767 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065819983 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075630813 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074318085 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072250063 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078685423 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070665378 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071603927 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07498422 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070310866 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071018164 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070764677 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073914237 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071180287 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073288479 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071086007 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073910765 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070138243 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068963365 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073114638 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069727832 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071677319 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075722361 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070052458 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072049404 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073624234 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070532221 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07177037 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072088547 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071011266 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074032339 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072673978 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0718966 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073814621 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065859022 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078850284 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069717935 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078384158 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07228186 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06766789 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075309888 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073704308 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07475756 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070720947 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070628075 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072735558 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06967929 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073940938 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078188212 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069742998 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082028574 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078218534 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072299237 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074326251 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072285284 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072807603 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07077234 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0728096 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070849845 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072145808 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070571803 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075935615 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074067147 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072730376 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073126211 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071183691 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072124332 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07133499 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065010008 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07011508 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070665065 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069612366 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078956017 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070256352 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070778483 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069272838 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069950981 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068681863 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06653225 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075324394 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075302909 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069003734 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076025936 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069455933 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071115825 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07964173 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064342538 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067363363 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.198606351 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07079406 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079750364 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072494774 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081876817 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07309424 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07169546 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067983936 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071539152 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069678362 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065927254 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068875204 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075181178 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071041705 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070341871 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070633493 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074089148 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071275538 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080416903 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069893955 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072703784 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070404695 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067837947 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071254322 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070977777 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074477807 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070802651 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069819325 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06885179 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070096401 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073017869 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073296113 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070058034 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073451525 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078576021 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070566807 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.075017372 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072900646 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065929531 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074281992 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0707732 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069472055 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070591372 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074573602 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077328501 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071147109 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079977691 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07009542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072400124 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07050919 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068738609 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070068509 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070496303 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070186163 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070671355 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070999583 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079288581 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068622473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073972455 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072256388 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072127425 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077397588 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070906056 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074020941 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075668503 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071956489 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073202013 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079375447 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073573826 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074258196 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071007448 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073087837 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077049777 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07081697 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078005473 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072531992 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070622622 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07340995 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069834709 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070150683 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070211806 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06973633 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076687414 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070599797 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070728417 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070461844 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068741609 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072372541 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072852423 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079961685 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073757808 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07471335 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066102514 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068252601 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070847847 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069681465 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072896042 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073391617 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076017585 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073223102 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07122174 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0690186 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080331776 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075927151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074421799 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069566922 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074238163 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070091207 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07293103 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071680022 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070909309 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070123734 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073746862 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07193247 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069921805 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076225961 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073652057 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200167897 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074395466 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073856296 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072540402 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066901265 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071542437 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074720585 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076854151 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07432011 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070897827 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082381236 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069840132 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072455037 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07312753 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070408023 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076246022 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066514832 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07327467 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07134075 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07147921 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066043393 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071526785 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070251571 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073723551 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071096437 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066126959 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082155007 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081327437 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.075762457 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069631445 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069115025 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066367519 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065677282 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071666855 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071192681 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.074245697 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081762976 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070472511 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070356803 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065879403 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070682768 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073839739 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074822466 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067676595 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065899145 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071270409 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074386019 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077447041 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069278185 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070232041 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074408569 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074150614 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068639646 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072493387 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067692685 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074920744 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083097147 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070692171 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072606274 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077063257 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078809157 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070448786 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065916834 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070917989 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074608485 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071900461 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070825545 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071109883 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085611583 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074521429 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070884158 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069248711 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073758021 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073513076 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079360303 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071094278 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070421049 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075816804 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073531224 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077934972 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075248118 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077870174 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074178534 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074714882 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069642214 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071928356 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068708366 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070775741 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071683517 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070975444 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0746009 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07684738 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070843719 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081662379 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080411062 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072946705 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067714631 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070352518 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.07048517 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065533012 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069924417 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067805411 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068273173 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068588595 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068730604 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072097658 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074674421 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071950491 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069781632 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069058302 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064467237 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072970999 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071909064 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071562513 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066593227 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069064205 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.201030446 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077648598 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073974633 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071066847 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074620931 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074043806 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073217375 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067016814 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0787033 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070684766 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074267487 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071148597 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071038988 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071655054 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074931542 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074311622 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071539541 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074025228 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075349763 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07224423 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068186124 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068199843 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077255442 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068286749 seconds)
  done (took 45.258380777 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103201931 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067344776 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066372952 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066641241 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076780811 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067092582 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065964576 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06756475 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066908162 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06889235 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066160616 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065843106 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073642356 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080825193 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076124974 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070793797 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066327941 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067149826 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066265122 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066914974 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073970042 seconds)
  done (took 2.745417336 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076718445 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08152465 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078676682 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087032912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074965006 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074179763 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078513555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073676399 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081446672 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076170739 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081390785 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073604701 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076562029 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076100858 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076130057 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07384088 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081805877 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074860215 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074037503 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078503056 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073860992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078424051 seconds)
  done (took 2.947201633 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070818859 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070121061 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072848634 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065134359 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06943387 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06541276 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07220721 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068486154 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07261428 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070214421 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070138334 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070201684 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07277604 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065644073 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071561936 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.075840182 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110802266 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073142302 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069787882 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070668573 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066138835 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072492929 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066070696 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066260471 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.07042428 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07238981 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07057575 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068304423 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06956661 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070346846 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069914387 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067927031 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072742202 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071165589 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0699413 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070050668 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06999573 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072322983 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066123944 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06819653 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07121337 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065945208 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070278654 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071981107 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069105715 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068110166 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072757758 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069646872 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065867633 seconds)
  done (took 4.712261056 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08157377 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110858917 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073217623 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0927542 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082876821 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075601959 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07463566 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093172324 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067531745 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068265709 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083930414 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081725002 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069449805 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073612105 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076431863 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069369776 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070264387 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069149295 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072392295 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069101607 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073074948 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076194593 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08269403 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080752359 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072908951 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068775443 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06927565 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074032793 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080464186 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073189775 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073890906 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074577787 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083056404 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072226951 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068821089 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071502505 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084051486 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069759774 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072007816 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067796289 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071713923 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073197172 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075943649 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084267301 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070016008 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074509035 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069200086 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067066868 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081134192 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071859295 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075997369 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081901464 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072912094 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070147916 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073349993 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083142333 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069469939 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067870316 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072707886 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080274349 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067414625 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072942664 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081058207 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071535745 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075718512 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082098722 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074222756 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073059555 seconds)
  done (took 6.496420749 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079027028 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100800776 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086097467 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086059656 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079835007 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079956536 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07933835 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079652288 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07932446 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083539004 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080126792 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118517299 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083789216 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081237246 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079866121 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079966611 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079848241 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079921576 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080177257 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079716794 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079646791 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085497069 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080051971 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086300768 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082276446 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075596241 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079384077 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079633569 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085838371 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079912031 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082939577 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079231034 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079882271 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085885432 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082270187 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079638039 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069704783 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079180678 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080468504 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079932679 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076110031 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086018826 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079500876 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075530715 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079679931 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079453342 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085581327 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082744308 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082252486 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083151401 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079783696 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08558894 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079672866 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079567878 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085794484 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087662497 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08573157 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085369379 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079757019 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085170611 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085449647 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088353802 seconds)
  done (took 6.383355349 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099195021 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07662719 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08474168 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065759044 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071150006 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076320367 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068111132 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068729552 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076777137 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076331727 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078547283 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075596207 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078428044 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078769872 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075745994 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078839381 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075837354 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075581079 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076528659 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07609936 seconds)
  done (took 2.810468523 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079946198 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087472585 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071077994 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075948755 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073113027 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075144679 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073024258 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073727552 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071127999 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073566022 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079521268 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079262203 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071262726 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075348465 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078891775 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075904354 seconds)
  done (took 2.494114667 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086482051 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076442273 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081901323 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.07007606 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070837473 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066667431 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069219237 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065749009 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066685151 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082307009 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069846618 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081308211 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069404064 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068634828 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066348411 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07537936 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066558003 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067397068 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069797143 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080669443 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074049323 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068569397 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073747883 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070093621 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072878019 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074571754 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068834712 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07091636 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066988679 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069930949 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07278937 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073634925 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066586334 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067667298 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068963672 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067277191 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070038607 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070112103 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075489522 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069425239 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068229073 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072411299 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069661574 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070502373 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066121963 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070069937 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066040624 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072396098 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067654221 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072319634 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069855597 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072339556 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070600789 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07684929 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072555511 seconds)
  done (took 5.199396198 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084070561 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073617927 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065934132 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068394676 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074294668 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071327961 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073370905 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071454192 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071759191 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068144492 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071806607 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073525713 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071883587 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073792247 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071763977 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073757167 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065939416 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071382188 seconds)
  done (took 2.587916407 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077208348 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070768614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077866379 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07054533 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070692508 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073027258 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066243341 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069545276 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068682943 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070800014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070961767 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073206835 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068849409 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07318099 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070859795 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071010157 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073126208 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068930212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071055422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066566328 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073887861 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068642843 seconds)
  done (took 2.848289404 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097911854 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088085668 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142069123 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084298034 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090756344 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077146658 seconds)
  done (took 1.86418189 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096291269 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105451117 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070982344 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073789169 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079189243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07437156 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074260233 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074453318 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081090352 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078959239 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074591017 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084040242 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081063573 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081339917 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079350056 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07929842 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074656988 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074204386 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07135884 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086179239 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074680237 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081769102 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075082859 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074100079 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074645227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081184376 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081176458 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079422167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074301728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081626725 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079282955 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074427443 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081766152 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079098935 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074283374 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081466778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07521311 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086506806 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079470447 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080944944 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073611998 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079137421 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081381573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078521379 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081457114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074598727 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077925712 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075265806 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074488846 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087375507 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07974903 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08042857 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079157604 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08152189 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080807318 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087683966 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078802833 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080309379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079686732 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078943632 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080726384 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079242929 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080246643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079004873 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079412192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080850584 seconds)
  done (took 6.521460806 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107840165 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072618301 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074816491 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079444525 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080632521 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074785486 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074739342 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074891918 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074808432 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07184171 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111927197 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074777691 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080751388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081186677 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074720247 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074645347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075035267 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080827157 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071887961 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087431208 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0748394 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080539127 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080601077 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080791785 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0794403 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079465263 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074807345 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074952517 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074730171 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074867241 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07889318 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074536027 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080585375 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071434379 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080428459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074472775 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074213346 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078253479 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074648624 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079025823 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080735478 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085680959 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074571848 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074261165 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079342386 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074526402 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074909629 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071719287 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074875752 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071902036 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079413143 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078741172 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079428687 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080687922 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074326278 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075109987 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074890551 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074489634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074639204 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079028573 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080284231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074415295 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087533974 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074853562 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074415692 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080701866 seconds)
  done (took 6.452221354 seconds)
done (took 133.54800218 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198793659 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175518139 seconds)
  done (took 1.647693023 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073176057 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100372495 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08163894 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132663508 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071641183 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105104892 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103477974 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081467106 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070526292 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071254016 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071300644 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073383685 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135996065 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071251323 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071312215 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073149322 seconds)
  done (took 2.681291655 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1015614 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158921667 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104809032 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070196616 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10125331 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075942534 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06990005 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081630887 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075359859 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069963355 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076526274 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074648623 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070414816 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074707913 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075085891 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076338567 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070456614 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076172293 seconds)
  done (took 2.801003588 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101016215 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093759845 seconds)
  done (took 1.494031294 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161321097 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138145067 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205206399 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.338222019 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156213705 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149255115 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145448086 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144066956 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115799576 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139716054 seconds)
  done (took 2.989172356 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10403796 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151187477 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27272607 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120399489 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078122704 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094082908 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121913422 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084053083 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083911158 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08367253 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083265777 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080196532 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102508666 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077726083 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079242041 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080131801 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106452893 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078721364 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079742132 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07910135 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104321145 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071172598 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077990121 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078149052 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08054934 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080567742 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070925699 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071035199 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079617736 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079437367 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080132728 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093154821 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080142764 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104451758 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075872397 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105595735 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080138504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077524617 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079306355 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077016457 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081046828 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081587769 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077794665 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080056368 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070922089 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080240407 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07102032 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070952812 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080877798 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07181821 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081443779 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080207372 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104418897 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071697821 seconds)
  done (took 6.113392292 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11118785 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110275437 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07472778 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116596898 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107985679 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074055217 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108987066 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102342521 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110778342 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074690426 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073027993 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074668531 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083146972 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084733044 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119527855 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110248685 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076654844 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07408799 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111684515 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110257006 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073441409 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105289103 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100380932 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109981474 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072227483 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073845373 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072951466 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073742797 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079462553 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08088728 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073173106 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082472791 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08726745 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080406853 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071990121 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073035722 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072914909 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081850571 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082012444 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081430897 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080001946 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071979464 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072553564 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073991871 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073693618 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071990274 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08077229 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081535139 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080761413 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072720397 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074662626 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073402902 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073762019 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082041519 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079739843 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082455856 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082046837 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073378688 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072785577 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075615373 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082374872 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08219459 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081581528 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074037623 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081728945 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075174393 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083361552 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086061746 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073473257 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074089926 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072720066 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073103192 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073685457 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079357845 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080016978 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074193295 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073146191 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07292081 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081550596 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080218787 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072731535 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079734249 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071543418 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072466863 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073385129 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073010509 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078563691 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080989229 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073618047 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072357684 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07203209 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07217028 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07113102 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077447227 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079554848 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079114339 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078289127 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072389901 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079158242 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078482935 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.204553586 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082046493 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074609765 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074972726 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074688966 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081723652 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080174862 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082507166 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073180662 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073958579 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081646079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084099652 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073556715 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081002066 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081902422 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08127922 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072518924 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083781726 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073776908 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082001265 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073157302 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082624335 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073838514 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081205381 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073038886 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072483386 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073582373 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080602432 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074587124 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072950981 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073820459 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073131409 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080897742 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084702469 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075174418 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081197895 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081272221 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074611806 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081214525 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073413011 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081530806 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073199766 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073850663 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071792472 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083039502 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073221922 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072542684 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0732661 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081867181 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073258162 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08230698 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079652124 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072109036 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083801517 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082587549 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079507718 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08231594 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07367449 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072515385 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072596033 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073237121 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07934977 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081324273 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074168129 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072412772 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079299684 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082285137 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072238535 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080073225 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079991368 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080267013 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072761879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073144262 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082845383 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082627681 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081052492 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080516871 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080622353 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073689177 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079916735 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080586426 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072911633 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085702164 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073970704 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084760897 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080836837 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078312222 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080959006 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081149305 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080790648 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080989915 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083575294 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071283608 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071897085 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078947175 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071439145 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071416795 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077906898 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072981067 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072443783 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082706741 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072253823 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213878142 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073388108 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081385501 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073153057 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074802124 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085485823 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07315463 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074651805 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080467333 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075912905 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080093445 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082641105 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080641741 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073453815 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074948559 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082252837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081646139 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07418762 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073406848 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074581312 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080523809 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080039149 seconds)
  done (took 19.343127766 seconds)
done (took 38.37871506 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.196490468 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148497132 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.160418566 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115666476 seconds)
  done (took 2.003814584 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.112183773 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100991826 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092676333 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069883819 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098606057 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069868296 seconds)
  done (took 1.876753212 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273886703 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.190636206 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175982463 seconds)
  done (took 1.970264566 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199196866 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185500387 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.427097802 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263132615 seconds)
  done (took 2.500336462 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.13927673 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088987281 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071795614 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087289729 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128492051 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.155872908 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098778396 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123716313 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082851877 seconds)
  done (took 2.354282328 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145533076 seconds)
done (took 12.184533987 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.217615126 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111553315 seconds)
    (3/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.112975824 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081013969 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.076501935 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072828497 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123745688 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101222441 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.083068935 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.084618821 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096947075 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079578727 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.149968244 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079775509 seconds)
    (15/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.221753078 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101290379 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077491393 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078473207 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079032695 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.177618848 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070515044 seconds)
    (22/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184169517 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.201700688 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094520282 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119027441 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.326768159 seconds)
    (27/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.196011986 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.181976954 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07700278 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.180890299 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081651924 seconds)
    (32/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077114224 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08397111 seconds)
    (34/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.174441952 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078506778 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07974611 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114116807 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078417282 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.068995451 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152345361 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.105093238 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090665977 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173800597 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158089232 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091728235 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.202357631 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.148294177 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120100309 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.117542433 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091873161 seconds)
    (51/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.214545228 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095816308 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084773193 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.071747222 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143701892 seconds)
    (56/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.084347224 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077382332 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.166709182 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.20887006 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077541476 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073966622 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09061542 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07047586 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078794213 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09666907 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093576081 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.0689737 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.180255116 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.210639714 seconds)
    (70/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.117649019 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082937951 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077952691 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.195392143 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073461947 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079928318 seconds)
    (76/309) benchmarking ("sort", Float64, false)...
    done (took 0.133944254 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.221202423 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.180104335 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068846602 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122727258 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.058226135 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120936508 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.215229853 seconds)
    (84/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073942492 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069663619 seconds)
    (86/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.217356309 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.165656499 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082062279 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078602082 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077885963 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105964808 seconds)
    (92/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058496716 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104434018 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079553896 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07046541 seconds)
    (96/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081704884 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171361178 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05782969 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.056822001 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.107049283 seconds)
    (101/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082264263 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.204100989 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.162690649 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092207282 seconds)
    (105/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072069662 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180620269 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056997956 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.169209742 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076363001 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096208809 seconds)
    (111/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.108190445 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076962724 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156806149 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07960243 seconds)
    (115/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058095889 seconds)
    (116/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196410609 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067165983 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185002578 seconds)
    (119/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098697876 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091264929 seconds)
    (121/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059338637 seconds)
    (122/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079166792 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174770655 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077269603 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077355932 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071856215 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07913289 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057345184 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070469563 seconds)
    (130/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057748891 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131605192 seconds)
    (132/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.115241081 seconds)
    (133/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194510091 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12474259 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078343563 seconds)
    (136/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057312316 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07875185 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.121059157 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056374734 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091102268 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.058209715 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178771492 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069409533 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076985382 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076817229 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077538158 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082715355 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079193263 seconds)
    (149/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159511332 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078044824 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073637385 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070095649 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069063017 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156341545 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071577717 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082990619 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07919287 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.168711757 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193138871 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071057461 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073695449 seconds)
    (162/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.12281363 seconds)
    (163/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056650527 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058539557 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078592505 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148200002 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056511776 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076631377 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094829937 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084835678 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.057781226 seconds)
    (172/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080167585 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.104374314 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124819773 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077633008 seconds)
    (176/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056623365 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076813524 seconds)
    (178/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.057920515 seconds)
    (179/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.107254631 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094128251 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09419758 seconds)
    (182/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070560287 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056349365 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070593486 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077446655 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.07084938 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074191998 seconds)
    (188/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070011219 seconds)
    (189/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070966038 seconds)
    (190/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083165049 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05789869 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13108499 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177498289 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.057700385 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083046656 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055813451 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09266812 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056464344 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075630935 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083522839 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.109887913 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 0.144606251 seconds)
    (203/309) benchmarking ("sort", Float32, false)...
    done (took 0.133687745 seconds)
    (204/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075115021 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069437115 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067604277 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069319039 seconds)
    (208/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073642896 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071062195 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055529887 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075547713 seconds)
    (212/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067007772 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072643352 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.122644395 seconds)
    (215/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07726514 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077583976 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075164244 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068032282 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075712066 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139402952 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076310177 seconds)
    (222/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.105115212 seconds)
    (223/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120302459 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070128386 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068397851 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075849896 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067634491 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068231421 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101594182 seconds)
    (230/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.104567792 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056025474 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094853741 seconds)
    (233/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056407411 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069051264 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068233331 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146602493 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077547346 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089414242 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.059108775 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05554576 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056898482 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055401029 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066832596 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067124223 seconds)
    (245/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068000904 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111171367 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.056212461 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068498783 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067226309 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087377526 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155859274 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166831405 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055974915 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066585872 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.199887524 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05535419 seconds)
    (257/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.0548421 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068948645 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06854945 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071066478 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056624269 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159108047 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087319286 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138241463 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05499317 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057821119 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076240527 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.059205045 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.0693383 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076468751 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073914817 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090912682 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15066703 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200285845 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.058087313 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088879927 seconds)
    (277/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055861421 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091866828 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.056910446 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069333912 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079662673 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.057589149 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071268523 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.055185812 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068466411 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078054893 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07500836 seconds)
    (288/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055342233 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068523075 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075299405 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056824596 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091147433 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069489822 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056838837 seconds)
    (295/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056406075 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.055475396 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.055518638 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074762768 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068574543 seconds)
    (300/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055255409 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055707683 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068753264 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091212745 seconds)
    (304/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070538404 seconds)
    (305/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067034767 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06845678 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05724309 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054906217 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.462380853 seconds)
  done (took 32.004016011 seconds)
done (took 33.350529736 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090204991 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100139501 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083138812 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101179902 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.090468947 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.087022091 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.082821191 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.087351877 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.090615187 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.091945304 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.088532094 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06520104 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.085132151 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.08534238 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084991059 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101026058 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.089598777 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.083916056 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.083728955 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073908236 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.082881746 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.074757144 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.076369166 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.063836517 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08871882 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.080940489 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.083680216 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.083504732 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.074402441 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074718447 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.078670748 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.082988248 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073926285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.088636382 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.082684569 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082060983 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.083365848 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085648403 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07492814 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073893091 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083541429 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.074336972 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081065896 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.081916661 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080210216 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079383602 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081258077 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084742046 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098472966 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075876978 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.083486413 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083739668 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.084051158 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.080767217 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07694581 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081174967 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078110965 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096845253 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081093584 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074698416 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082025712 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.081060489 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.078357189 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079991636 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080470492 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.082614882 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083783054 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.078180044 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082046866 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078376178 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071876508 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080012532 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075835785 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071435811 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082864439 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.087493916 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070337594 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.078286718 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079669926 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080098156 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071176958 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073706784 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073341688 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078989067 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073912624 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061687178 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075700872 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078722858 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070517049 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080878966 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078679547 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079041005 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07339769 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083464105 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070856941 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077429606 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071793215 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071435224 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073219507 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075882437 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071422326 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073484198 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082183771 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072573825 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077957346 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084354657 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070993042 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078060469 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069775053 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070453572 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083894675 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080799291 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070419382 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073771373 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069888175 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077847656 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.07014551 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071152992 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070561318 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070692437 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077181415 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070947822 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072868766 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078814544 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.224181853 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072542756 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07718198 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074585796 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072127534 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078244124 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07190246 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072178093 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073982087 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068905241 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073539984 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071792268 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079845649 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073425782 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079577346 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072239016 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080110162 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07684219 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.078552844 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077400164 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.07040695 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067133948 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073979084 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073432319 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073236531 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071337385 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07292107 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071496068 seconds)
done (took 13.549655682 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072468116 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.137361173 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096997026 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09874246 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089659359 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072659005 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080192179 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099062758 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073783675 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102745028 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092714693 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091024417 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114058774 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070264157 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.072011664 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076111522 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073037435 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084602932 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100316612 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092212695 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115975322 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071485117 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095200705 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092876792 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090118467 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096649981 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072632189 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075731986 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075546446 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104640765 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093946648 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075780496 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072600529 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101732692 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095662939 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086225505 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07223071 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08595794 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072472239 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071302643 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073315406 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099927625 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08377351 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.0844058 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075860724 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082212856 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073021013 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086129756 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091997376 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082514097 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088035291 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10174242 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073801841 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087383453 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070105631 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087972567 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080337603 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073541306 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072432428 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079036661 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071636317 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0752735 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084224572 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083251293 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075370499 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087135575 seconds)
  done (took 7.080637128 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088928954 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.098823883 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087961017 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091572851 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.07189139 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072409873 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072481622 seconds)
  done (took 2.073125302 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07210061 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09223032 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093025998 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092553878 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085400884 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095523219 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080784812 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071789512 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096688115 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073329023 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091908222 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101755533 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075187185 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085112287 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09413002 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071727741 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094146532 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07199884 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075248527 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094282127 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077398835 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102163631 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079576774 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072201943 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085093074 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072201361 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116712809 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075905707 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074227489 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074894844 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073212759 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111046151 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084691376 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079377831 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072685755 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086338343 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085847552 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075528105 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083168179 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08098001 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085141636 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072398767 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073529802 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07376301 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076126627 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081690553 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073225714 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076422394 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075009215 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091166214 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071077857 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084770407 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074886389 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077728196 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073958838 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078748255 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082566693 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073640867 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090930898 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074234605 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087654396 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086214074 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085309858 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087139622 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074440891 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08481062 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084795811 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074922193 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074525765 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075787469 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086493854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071545011 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073751173 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081834962 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074343182 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094078807 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093801388 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074115669 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085468444 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072583352 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072676325 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072722267 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094051776 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077379686 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07271573 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076667351 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075653746 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075846501 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071365152 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076213575 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.07035088 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078622543 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075134734 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074992178 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074637578 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086788287 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075423518 seconds)
  done (took 9.332018562 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075076109 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073241884 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074613226 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073013227 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073253574 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.074068396 seconds)
  done (took 1.957331621 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09387092 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073580556 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084522889 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076225597 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107934529 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090907324 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090573158 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081642469 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087827657 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083312672 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090724491 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091761941 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095077008 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077122625 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09078377 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076596727 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.09113195 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078838519 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083092828 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077510999 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089770372 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077182453 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077921015 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085263536 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080080645 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076619811 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083227706 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083504655 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083276488 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081611627 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076650567 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080453925 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07547996 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082238433 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091057553 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07523364 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076455344 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081536069 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076552536 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083137784 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091380978 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077378369 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078383795 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081455999 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080980865 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075231592 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081521578 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083223789 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090951476 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081482415 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081685108 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076000111 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080601385 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081760485 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075547333 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081655547 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081758562 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090990251 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0768025 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075285209 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073767407 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080728684 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081271652 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080866384 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082054166 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081783134 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075275797 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077547949 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077483442 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076549871 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081962612 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073426647 seconds)
  done (took 7.393736989 seconds)
done (took 29.311769721 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541743371 seconds)
  done (took 2.013338623 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607621943 seconds)
  done (took 2.10789478 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.512919293 seconds)
  done (took 8.007593831 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.368866717 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47517605 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.714768515 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137847938 seconds)
  done (took 3.23245204 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.717612658 seconds)
  done (took 2.224613542 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238311904 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228922315 seconds)
  done (took 1.982772139 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37999219 seconds)
  done (took 1.877121034 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.121777306 seconds)
  done (took 2.620866117 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.240972123 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180348432 seconds)
  done (took 1.924852496 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44568824 seconds)
  done (took 1.948523634 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.878967934 seconds)
  done (took 6.382582461 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230825388 seconds)
  done (took 1.774452386 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242053649 seconds)
  done (took 1.746989635 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.886347909 seconds)
  done (took 3.394679038 seconds)
done (took 42.750051173 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089485149 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090814815 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090534496 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08608898 seconds)
  done (took 1.846312575 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082094168 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078737014 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081437925 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078082859 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081022468 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077871616 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079022769 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080909552 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077597277 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077675368 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077755232 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077517847 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07983656 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079181082 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076199498 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080564624 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080771409 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077704597 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080262487 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078208617 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075827365 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079889335 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079939502 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076852312 seconds)
  done (took 3.404925431 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08339191 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07806495 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080192783 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076795872 seconds)
  done (took 1.834845005 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084304719 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094738935 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092586493 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084230684 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094825467 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090367223 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074446908 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074222892 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07537428 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083272736 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073555428 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099051345 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092544912 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083562193 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08536385 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070488244 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07314307 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091361742 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08460733 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084110537 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075266892 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083800487 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07347004 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093447842 seconds)
  done (took 3.525017901 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089539357 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105237447 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085566655 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095239872 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097024167 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071018046 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.090722122 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096921816 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131328208 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070604979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076627325 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071131472 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079666331 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070830435 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085138373 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11517933 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116282209 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.075092838 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102321756 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070934797 seconds)
  done (took 3.317028327 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077224098 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074365993 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076183748 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070871145 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083293824 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077641277 seconds)
  done (took 1.981744848 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073412406 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0732344 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073088345 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071981698 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076848898 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072474848 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071541853 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072604093 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072605717 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072033448 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071864399 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070754332 seconds)
  done (took 2.390538212 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185503742 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073850105 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074929425 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071110786 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075794609 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071794459 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086308521 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07281005 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096702632 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071889268 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072172076 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074092484 seconds)
  done (took 2.546917449 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196699756 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080937661 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225975949 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152138066 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109949001 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114817969 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113918931 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11325343 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137422034 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100590422 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160575752 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16141272 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109137302 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137652155 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093426743 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106697943 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150687354 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165148182 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108418078 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162223066 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142349786 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127862393 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145848432 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103822283 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107330168 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120319537 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07670797 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083609949 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164468533 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131520321 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141353297 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118285614 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093884071 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172017467 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16280754 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139676841 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148266097 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087404822 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105403936 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132589375 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191153119 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09284121 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301885839 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114268175 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085659271 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133472365 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119656906 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121813743 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107325795 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094394017 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143244332 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176230005 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.132935664 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090457317 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12461872 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112801754 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112947324 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114989385 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172080877 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156443336 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128903092 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076972134 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113278492 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147473149 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13179371 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108438089 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122912985 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096102448 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132278672 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151501436 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122815962 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139606636 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117063129 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091430948 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12144858 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136554108 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126346222 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157270962 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124749768 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078165271 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122249109 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101407183 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084742027 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148053632 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0806351 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171893773 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102569515 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108541385 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125377516 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109199698 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109717707 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152357971 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284906206 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107183821 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073445366 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107995008 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120404636 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142633398 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090780239 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110267362 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117292569 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081902905 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133870944 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080586375 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123993249 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082609227 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124348195 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129449066 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082028251 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122949603 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106572448 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105282173 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131218178 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155946423 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091088481 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085229754 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161764736 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122273937 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104336923 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140810797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153132669 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.105128003 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100409364 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143982796 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16564793 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09287491 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158921051 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105952327 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086896385 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092017947 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123730203 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112407268 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124553626 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085514263 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118457893 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161492802 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079719048 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098721631 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133662141 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082511795 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083947527 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106146387 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104507533 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098789719 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100397178 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102982223 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133741727 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27145899 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111368334 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12467674 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102461504 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161506733 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091487144 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105650279 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106659518 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075276839 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131449757 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150924968 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083116144 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156347385 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121934993 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117187955 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120339027 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087243259 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135977689 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083283721 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075347201 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139687731 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113397427 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111080317 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147512039 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11648352 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123478842 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118837412 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12927279 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128503119 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129077612 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109326672 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092323822 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114044468 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126794039 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078108916 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092812596 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084129492 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107507671 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097240199 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087014797 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139059456 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122289563 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113209641 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113643151 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099535999 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14436586 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080584747 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124804326 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119766765 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097350567 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.147891652 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146549716 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131397289 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101156159 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280489323 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076114944 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079294004 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090709354 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123003416 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087362708 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086828569 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114434406 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143390008 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128022959 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134222109 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123861723 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119725406 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151293349 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075074238 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120994607 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140584539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121957219 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10682824 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093617965 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101939427 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139541186 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106322724 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17174372 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115436705 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125301493 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152594995 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105777244 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083241568 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104482211 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131098918 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104116111 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139449386 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100708495 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091295315 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109233883 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082944466 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099697768 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125441067 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117317017 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13334045 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114654429 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13285864 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08210453 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114384681 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121430411 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119620732 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069376941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117492635 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152220052 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097462916 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117171776 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294101858 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083682639 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137889888 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166952266 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14209334 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089147313 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107973241 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120856486 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125420886 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119449104 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136850991 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106588256 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136487722 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111961401 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089009548 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091434661 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098687862 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106144417 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097991226 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103459479 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114709725 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099228548 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130214374 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105636982 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11168351 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118910107 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102847317 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096510141 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099348463 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169624962 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118889011 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164524787 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103124266 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139035761 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156182038 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079566926 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083513087 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081993288 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136340715 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088571423 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129647865 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112053836 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118308063 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123164838 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137241113 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098802149 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073696304 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110371453 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13007016 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12326641 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099716334 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102802189 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155600826 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100333427 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082056024 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258798067 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11809008 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105882791 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16292035 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068283268 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108318961 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081576928 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083594891 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124343602 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146507849 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084420927 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103305931 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120726807 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112394082 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124469152 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099985766 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113651289 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125323398 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143854572 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126504151 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092443557 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111642873 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125566204 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150134607 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103816976 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100586135 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167486132 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147918467 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154242245 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088677186 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114924379 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115189669 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110542986 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135510159 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087235634 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156332555 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085568107 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133678562 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103692648 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090591454 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127005417 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112624485 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091633138 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142347957 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116190476 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086402794 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08128335 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115652301 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118450938 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104799061 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078583403 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28297589 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07952598 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132780367 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156118038 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085233294 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107239732 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098020717 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084743873 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106855673 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103565123 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090776641 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103408946 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16471228 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088942705 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143180894 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132036736 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11210101 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131844031 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104613133 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642360653 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081673653 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146877015 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115902503 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165080846 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102116097 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118380353 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111131465 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120501481 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139776992 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10346838 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180319249 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129836999 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116459358 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08313727 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104062211 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105795621 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089956654 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109106511 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114652508 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115694826 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095609854 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116866617 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123455073 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086567305 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09903857 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15191755 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115436826 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139863185 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135511869 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087448659 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117572656 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28236271 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084426823 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118167007 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146749095 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107305412 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102471795 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.101415231 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100985386 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154333001 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07855689 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152886975 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122721698 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110868808 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114668185 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109821446 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128846368 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106066877 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122521452 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093868691 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108373252 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115082338 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085560081 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081191342 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1071172 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110743322 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101590088 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098130566 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102825824 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147023073 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077519602 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100512381 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116933198 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14001408 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166500519 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092140612 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087167484 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119903911 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116735843 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113122489 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121510738 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083249666 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085184291 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082836049 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086596432 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109136531 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114589872 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115570157 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111226765 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157518024 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087502653 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228427328 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098583037 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106020852 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074800239 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081822672 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098262619 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098357003 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254403605 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114371112 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155194141 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099470851 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093232988 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093572188 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080076582 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087998427 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124514432 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10947351 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118335841 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102293332 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069551276 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107700213 seconds)
  done (took 59.169688984 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11218473 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087127433 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.10176148 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148718105 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125533512 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203520415 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.161308594 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192650798 seconds)
  done (took 2.754036927 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073810404 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098440825 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107223707 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088724804 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071451301 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074455367 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224352207 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086256291 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071495158 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097763907 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083120847 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074508457 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.40810328 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071296975 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.0731192 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067940804 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072733387 seconds)
  done (took 3.454095309 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.387272903 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62214575 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345433313 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082616655 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.9208476 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.098643838 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.282355202 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141233811 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084552757 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.558068697 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.416522043 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137050356 seconds)
  done (took 18.697536294 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086168528 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080441113 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092872294 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092795321 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082488054 seconds)
  done (took 2.054954285 seconds)
done (took 108.520510769 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.0877275 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.413367764 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060058653 seconds)
  done (took 2.118643862 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091447557 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089584519 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089535561 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087110768 seconds)
  done (took 1.982693395 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079803962 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081463614 seconds)
  done (took 1.779316272 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227955654 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171046752 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099637741 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087406235 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084355904 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084847894 seconds)
  done (took 1.881402701 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076811655 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080177791 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076984806 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080438512 seconds)
  done (took 1.934239146 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080955097 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058063824 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060198562 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06247929 seconds)
  done (took 1.882648049 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092621156 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086973604 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083917149 seconds)
  done (took 1.884566337 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103056401 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091364942 seconds)
  done (took 1.816544688 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085106558 seconds)
  done (took 1.707587519 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097012532 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102649983 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131003282 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112464945 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138198816 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109683294 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087303753 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088103212 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080252122 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088975202 seconds)
  done (took 2.657537833 seconds)
done (took 21.850607177 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083397928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375399586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364214253 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093410328 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674562212 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361348482 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993841265 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097439733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143417727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072915365 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089436057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65438145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984807595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330207148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970771714 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334093653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654501871 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074186848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073553935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073744116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981615849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073770815 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073500515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074256066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654771744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377249001 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074089164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331019188 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07362867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075688956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360886567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.091192188 seconds)
  done (took 16.33946949 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07493275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123126468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077666507 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088873986 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075478968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075071642 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077351901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074820418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125516432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073529352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090447253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073996459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077590698 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074797453 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092971139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074053754 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074934148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074779324 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076967629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074026801 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092297727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074037104 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07444257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074566324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074080772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086259308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073665552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073848286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074392557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076190696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077188036 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074370209 seconds)
  done (took 4.208432811 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120987292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12711199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078982897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108370615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116109253 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07624532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147855337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098116372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131757989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073591274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090676619 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074203873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106002974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074801976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093495846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074126132 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075477999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074607118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073840453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073641805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092784813 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073582551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074235998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075013946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074175635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087537899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074091658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074184337 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07434377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07561151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077605011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07487043 seconds)
  done (took 4.451078293 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077558872 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079991659 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087138338 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08783264 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074609002 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077088074 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079510982 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074902602 seconds)
  done (took 2.277844136 seconds)
done (took 28.90146806 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084292076 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074914648 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078450498 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094002638 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078963472 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08225873 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071950002 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.08184084 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079322346 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078705073 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079816086 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07275039 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076759134 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072157128 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079057986 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07335419 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08372324 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077630514 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083401568 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084122845 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075749265 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078318453 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080902476 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083048653 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084097132 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083464168 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082476312 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078006168 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073533482 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075895054 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081596658 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088876704 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07349414 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083254038 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072684761 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072933738 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076885811 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072585748 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082986739 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081926704 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074364074 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.08186775 seconds)
  done (took 4.939573226 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092962007 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097030115 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089541172 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067473273 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073161585 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070832943 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095535809 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066150915 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065914668 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094206628 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063119238 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065611887 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069347158 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060677845 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066322122 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063885495 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.0677026 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061612449 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066330476 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065864816 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094637911 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06116085 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082178193 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069047531 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062609243 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06801324 seconds)
  done (took 3.548078418 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079238935 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087531751 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095806575 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145882753 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115187068 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082514472 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083600537 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097095193 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098623473 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072281135 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076091554 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09860351 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09268689 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078791694 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072496227 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089376969 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090483684 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074701741 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077857135 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097807959 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090945168 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090603555 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096622337 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089451641 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072043331 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075123726 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076861567 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085970734 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075292023 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082075546 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07564034 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075966544 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074771188 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084224588 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075325818 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074368326 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098838982 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082419786 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083826802 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073681843 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080908956 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074218308 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096129408 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129252212 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072476452 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078119008 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076223912 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082695863 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072431134 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099425608 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084026743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072927861 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075426046 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073015525 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072457841 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075639057 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074242165 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074943236 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081747084 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07825223 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096799617 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078418679 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089053827 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072849934 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081501514 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072440107 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073603257 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071750768 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097092303 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074814446 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112865323 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073493048 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073495282 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082021128 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080771364 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079655301 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073037741 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088642003 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084247672 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076620531 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081270127 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076168943 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075407107 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101205398 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075293336 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074258313 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073769309 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078159143 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075445285 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074238328 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085468751 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072183475 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075418268 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089369994 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072807475 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074221462 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077929275 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076816131 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072516471 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083665368 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076624755 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07394762 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083284436 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073366909 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075835107 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085177755 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079059139 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071515452 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076193766 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077817842 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073355443 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074051367 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075000915 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074870603 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080945092 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079744526 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076692715 seconds)
  done (took 11.220582369 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.1646576 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15553979 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075736094 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149000889 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081766393 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083417331 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149893446 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09738004 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072992745 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074048954 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073056476 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112283405 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107835776 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118889216 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.0828115 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07285775 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095495827 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116276614 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152013875 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147518365 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095729589 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080778901 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07493379 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074237652 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074946065 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082737724 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089901774 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082232374 seconds)
  done (took 4.520076132 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083815061 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107699061 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080018123 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095731061 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093544341 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073668906 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075316747 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075004489 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089857294 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082554131 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073342027 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077359146 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079301608 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075703153 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073933156 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079570112 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078984556 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074181509 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07686065 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078080372 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083441619 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095792682 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075824209 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075067383 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077280663 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07179801 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067471198 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087963177 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073918023 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097431334 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070425421 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077818404 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08692691 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073721434 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072774443 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07275678 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073106084 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072699567 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075023649 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071309971 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071276909 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063481272 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071691012 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08249575 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086019443 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061734856 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077508445 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078086297 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078860536 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070868328 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07617585 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075960632 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076182431 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080404231 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076766796 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078079987 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074231549 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081281218 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081299735 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072726072 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070604488 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071647226 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07791169 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069854088 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087855887 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077967473 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071592378 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072925637 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074845563 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086176797 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073279042 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077544635 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070649159 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075348613 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07759531 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075020094 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074568854 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071656268 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073389906 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073204603 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0610688 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073268561 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059312491 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076150661 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071768695 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071548276 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072799992 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077320722 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082860018 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074316041 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078591888 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073947919 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072106469 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075925472 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065939504 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075388272 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08356461 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086348405 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073291054 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071392363 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085960004 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077365565 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072055889 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063018693 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076728955 seconds)
  done (took 9.716035526 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096228099 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074845108 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086826236 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094661969 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091376664 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079790701 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083445783 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074559356 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089361721 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079251372 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082872556 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073541725 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083769326 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083190367 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074918171 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083786019 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07701326 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087807396 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087327757 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0729508 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08128305 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085381363 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094154434 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085688465 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084391218 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085846024 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094254342 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082820172 seconds)
  done (took 4.039994753 seconds)
done (took 39.620349975 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.74900477 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.892737744 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.724163538 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.039011991 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.947472477 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.743874391 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.925431015 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.720845725 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.931494855 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.760346895 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.049910415 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.819862925 seconds)
done (took 65.080907619 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.75881999 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.860480612 seconds)
    (2/2) benchmarking "String"...
    done (took 1.958938233 seconds)
  done (took 5.470644293 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.93810091 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.302351176 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.968011094 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.721690181 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.729416085 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.026421649 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.519768523 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.237308094 seconds)
  done (took 30.156977199 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.90089324 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.953975807 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.432549973 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.466780963 seconds)
  done (took 15.456122393 seconds)
done (took 62.525022087 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.720929615 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.729402989 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.764709029 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.709857474 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.783722764 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.735574694 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.227234692 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.83850423 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.723382447 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.710647636 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.72716819 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.15751893 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.738206713 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.112641748 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.725548958 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.735221342 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.791872371 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.295411747 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.880470318 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.739028202 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.726422424 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.750262693 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.730342313 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.735057219 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.779899656 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.724547671 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.119088667 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.735768751 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.568054037 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.724548026 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.773556071 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.182344985 seconds)
  done (took 203.049069527 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.724044613 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.908678339 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.995426429 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.765437148 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.320176303 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.902870958 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.838216234 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.352670011 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.725578653 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.738097011 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.830447234 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.725801568 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.852468575 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.705886317 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.753403458 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.738338343 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.969305179 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.85841608 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.760565452 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.894090026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.740658939 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.673015541 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.649013111 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.820861573 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.770922484 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.757474872 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.733626393 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.739606265 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.921927292 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.938153138 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.742486279 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.732538816 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.931961513 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.598285389 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.747357678 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.735907747 seconds)
  done (took 168.247407123 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.915735812 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.726942074 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.725294529 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.725416233 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.72574081 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.73238677 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.72702673 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852887368 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.855092669 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.371406967 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.313854792 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.778683132 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.72606874 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525825628 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.725721977 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.793862258 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.739957109 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.726884095 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.741328194 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.753627709 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.726113238 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.726989199 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85452765 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.738788798 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.725927131 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.732705889 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.726748718 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.731873663 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.097240306 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.726001673 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.746890078 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.729232784 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732294351 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.968551802 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.727713102 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726499606 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595346645 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.774681813 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.734321411 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809228786 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.729299873 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732753337 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.727786622 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.945888256 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.728200378 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.728256902 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.727339003 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.727843938 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.730703558 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.888209896 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.727595106 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.855933632 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7282277 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.209027256 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.727143441 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727961709 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.485565046 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.334956585 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.729344966 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.730493939 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.727191474 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727354829 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.733875962 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.494930717 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.801669455 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.729492176 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.732200316 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734514948 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.729013727 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.035369348 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.730262615 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.911870705 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.79064484 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.96053299 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852182901 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.732628109 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.794803179 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823251578 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.728390696 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.727945523 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.72857937 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.728375631 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.808746887 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.727546664 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.858632485 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736595291 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.730988635 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.78025724 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.79878988 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.730110959 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.579032197 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.731428277 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.729346794 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.002898587 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795294296 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.72941504 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729782999 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.858234809 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.85477729 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.439223441 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.732348192 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.407108961 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.733320594 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.867791457 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.730947921 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.87672077 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.73228195 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812289057 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.734520089 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.731555502 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.762103945 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.731502384 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.790630292 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.731011159 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.102586911 seconds)
  done (took 397.247388045 seconds)
done (took 772.171809342 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.333750857 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.301271161 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.394705668 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.317991765 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.292782458 seconds)
  done (took 13.299325122 seconds)
done (took 14.959912828 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.818854087 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.824838412 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.754717019 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.821318405 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.751815178 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.821062915 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.804235519 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.755286439 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.788798792 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.755828145 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.791152265 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755813686 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.743086057 seconds)
  done (took 24.845689599 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.962195072 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.960939559 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.800796172 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.959619943 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77742276 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.95639502 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.890590358 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.880671145 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.8794774 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.749287286 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.744587929 seconds)
  done (took 22.222808531 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.967767237 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.966714765 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.808246554 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.960247256 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.781531857 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961550221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.896016821 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884649383 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.87967294 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.749122588 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.74476138 seconds)
  done (took 22.261001244 seconds)
done (took 70.989870266 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.740508495 seconds)
  done (took 3.400661815 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.767514134 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.938110416 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.746494326 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.744158799 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.739575948 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.740393826 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.743176891 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.739039683 seconds)
  done (took 15.820026788 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.739732237 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.736494239 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.740384488 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.73974726 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.740889549 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.737432617 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.73806653 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.737655148 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.737063168 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.741366151 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.737982928 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.738465705 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.741671238 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.740465571 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.737930824 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.74091475 seconds)
  done (took 29.48783961 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.73922602 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.73819893 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.738697412 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.73964315 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.739100225 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.738002609 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.738985724 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.738480646 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.738264402 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.738321756 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.739279318 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.740762697 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.739805709 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.739923603 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.740868012 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.741826386 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.739730829 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.741335189 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.745189318 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.740403862 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.740343901 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.740948833 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.740074827 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.741655145 seconds)
  done (took 43.422990311 seconds)
done (took 93.793501259 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.438254698 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.684659512 seconds)
  done (took 9.786822848 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.743434754 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.743732336 seconds)
  done (took 5.156087992 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.743605174 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.744112166 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.743506711 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.743831568 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.744209806 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.74451258 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.743519179 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.74393739 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.744151611 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.744765322 seconds)
  done (took 19.104139175 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.744155097 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.744636936 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.740939848 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.74443505 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.744505366 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.741734599 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.743842424 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.744096893 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.74372561 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.741936089 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.744280992 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.74206261 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.744948809 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.741819548 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.744990961 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.743291912 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.742511588 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.742268541 seconds)
  done (took 33.045625191 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.745511636 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.745081688 seconds)
  done (took 5.156666482 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.742627642 seconds)
    (2/7) benchmarking "second"...
    done (took 1.743131461 seconds)
    (3/7) benchmarking "month"...
    done (took 1.74273655 seconds)
    (4/7) benchmarking "year"...
    done (took 1.743206375 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.742665922 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.742665308 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.742747249 seconds)
  done (took 13.865790055 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.747597138 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.89313011 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.954326848 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.392498924 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.7485243 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.749831398 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.716858532 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.748816012 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.749679546 seconds)
  done (took 19.367463094 seconds)
done (took 107.149015516 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.647871947 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.741682292 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.976757074 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.800698558 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.795330217 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.036670847 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.760213922 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.008928113 seconds)
done (took 42.436542214 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.82733178 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.383344157 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.422442665 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.773848283 seconds)
  done (took 15.246874072 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.726402442 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.057829047 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.747063038 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.571388742 seconds)
  done (took 21.775642247 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.108009834 seconds)
    (2/2) benchmarking "read"...
    done (took 2.088981576 seconds)
  done (took 5.869411793 seconds)
done (took 51.389909493 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743683005 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.743300327 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.739923998 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.741045272 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.743640995 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.740547254 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.741431519 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.743025101 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.743254858 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.74272186 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.744264616 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.743577429 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743703647 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.744312203 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7416301 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741365994 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743826394 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.74144913 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741896058 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742409832 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.741904246 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745082773 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.741751476 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.742389183 seconds)
  done (took 43.487050753 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.744629835 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.741744731 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.744544677 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.744330919 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.742064545 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.74489063 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.746044665 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.742327258 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.745208637 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.745577329 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742068919 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.743240632 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.745161015 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.742776935 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74558339 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.74224927 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.745089722 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742812204 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745574674 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.742465064 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.744908504 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74366606 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.742669088 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745694778 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.743689051 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742758131 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.745613082 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.744533095 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74508703 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.743140774 seconds)
  done (took 53.98573943 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.751045721 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.754349849 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.745956112 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.745656251 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.745756982 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.745954017 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.745292412 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.749529219 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.74575064 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.745704864 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.746380995 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.74604776 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.746134514 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.746533795 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.74599134 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.746257536 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.747372674 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.74582099 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.746949057 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.747153586 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.746377388 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.747271525 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.746032731 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.747179107 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.746438295 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.748041346 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.74626724 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.747500217 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.746193674 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.747986852 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.747484892 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.745847275 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.74726774 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.747444212 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.747155769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.74762349 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.75295433 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.75568189 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.74786272 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.747322186 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.74830061 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.747871366 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.747226597 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.747365213 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.748620328 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.747885712 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.747932891 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.748617487 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.74807554 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.748553095 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.748624321 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.747969154 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.747950291 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.747957342 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.748375811 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.748202642 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.74854564 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.747524182 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.748219428 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.749086097 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.74897921 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.749015109 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.748926095 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.7480525 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.749308109 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.748802412 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.748957574 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.749024576 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.749317429 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.748776254 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.74871535 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.748570996 seconds)
  done (took 127.513285201 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.748395811 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.746583093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.746247164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.746491516 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746188492 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.749351719 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.747108053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749641671 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746270859 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.74966685 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749838637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747343118 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746797487 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.749169724 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749520893 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.747114714 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.750078105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747567602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.749747064 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.750976637 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.749540987 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.747878668 seconds)
  done (took 40.131599884 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.750412618 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750769163 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.747362965 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750371404 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748031386 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.750483817 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.750758697 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751236501 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751558645 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.749344375 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748175963 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751670188 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.748913399 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748327415 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748138999 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.748189745 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750779292 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74888402 seconds)
  done (took 33.163918879 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.748556112 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.747856141 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.750130469 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.748015971 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.748982794 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.750828384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748520361 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751275831 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.75079044 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.748990436 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.75091215 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751123431 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.752110114 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748403973 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750262461 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.749390238 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.751703589 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749099601 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751712087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748977492 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.74888452 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751564172 seconds)
  done (took 40.169645089 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751659117 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.751778224 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.749382382 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.749180973 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.749403705 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.752152964 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.751981866 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.749064068 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.751989059 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.753277278 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750701465 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.752404693 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.750823792 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.751483296 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.751117984 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.74985479 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.753116183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75062175 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.752463888 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.749976937 seconds)
  done (took 36.695498476 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7540648 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754293845 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.755122727 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754172611 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754304513 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.755212493 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753903417 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.755005796 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754807693 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.754571031 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755095082 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.753757691 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754218764 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.753371887 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754629573 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754203595 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754966453 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754858962 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.755463273 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754923803 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.755146659 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.755423586 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754484664 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755605275 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.75457536 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.754471749 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75545505 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.755002709 seconds)
  done (took 50.805507552 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754714824 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754503454 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.751106433 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.75053153 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.75231713 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.751624288 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.751525524 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.752528473 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754754195 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.751981828 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.753865895 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.755646126 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.754615825 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.754639248 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754509821 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.755098045 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755464889 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.752947404 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753234122 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752936791 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.755650917 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755003519 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.755908442 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753547006 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752214305 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.756894135 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753569767 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754063233 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755624136 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752861539 seconds)
  done (took 54.289024094 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.774006923 seconds)
    (2/2) benchmarking "in"...
    done (took 1.774840549 seconds)
  done (took 5.224637515 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.752546596 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755628064 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.755422033 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752751308 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.752903879 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.756535142 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.755169892 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753535056 seconds)
  done (took 15.710075869 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.755334929 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.756069696 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.755434851 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.755614556 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.756269346 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.756424797 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.762142816 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.755879582 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.756722247 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.75579565 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.763926879 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.763992128 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.760238208 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756885687 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.756688278 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.758506768 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.757294362 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.757134979 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.757634014 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.756664746 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75762297 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758067873 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.759488417 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.753627378 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.757997591 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.767172262 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.760018803 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.757500769 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.756527079 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.760572131 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.756723934 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.754432448 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.758369042 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.758454604 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.757770932 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.759117224 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766776356 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.758185493 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.763608159 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.758028862 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.758292454 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.755684325 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.759065905 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.760155573 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759682318 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.758430528 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.75939395 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.756116025 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.758457592 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.762163601 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.765078849 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75873184 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.754394217 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761532929 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.759326705 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765196485 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.760658527 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.761459861 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.768101728 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.769551846 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.771890868 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.766288206 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.760934615 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.759842014 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.767768674 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.784431723 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765973852 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.756936585 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.755599102 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.758890908 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.765965218 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773263535 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.768266624 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.760183356 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759903321 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.760000569 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759999282 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.760111448 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.766439989 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.763246277 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.76049814 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.760669511 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769779829 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.783135419 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.760001911 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.761649623 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.761259394 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.760695038 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.760851959 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.77234773 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.761752601 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.760903045 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.760543513 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.760291249 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.761379193 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.761734602 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.759642988 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762253566 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.757851233 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.761952188 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761898754 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764544791 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.770656851 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.761296163 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.762057548 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.767778143 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.760293861 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.760141317 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.767336444 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.760233121 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.762391753 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.7630347 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.767002 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.758597135 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765935458 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.771184561 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.76179609 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.763088914 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.762808177 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.761756998 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.771248027 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.790492447 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.761660992 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.76205173 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.767454683 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.774892634 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762427341 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.765354955 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.762169662 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.759863929 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.759494615 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.763420211 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.762568334 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.762026833 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76345867 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763291152 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.762782355 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.763715321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.763170652 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.763489885 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.763863878 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.763920054 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.763904937 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.764988423 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.764032886 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.763911425 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.768517329 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.763157283 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.764895991 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.764342407 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.761333222 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763914053 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.764107788 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.763717215 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.762865489 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.765308959 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.763468316 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.763913275 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.76405638 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.764535467 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.764695382 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.764072345 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.768458877 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.765298481 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.767202429 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.764094323 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.761296448 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.763398124 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.764605917 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.764372037 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.764271554 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.762510032 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.767427627 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.773233349 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.763421609 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.765391827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.767273167 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76489916 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.765245716 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765346456 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.767966913 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.773627079 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.766495074 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.770188051 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.765308022 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765658884 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.765266734 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.765344795 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.764050901 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765366484 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.769162292 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.774369518 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777800174 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.774684798 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.766605414 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.770040217 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.766231007 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.77014156 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.769066289 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.766518191 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.765625011 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766177424 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.765595255 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765900868 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.767680632 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.766116445 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.766144492 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.767114372 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.765603638 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.767359043 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766782304 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.7666652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.768707845 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.763317615 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.766541656 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767315087 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.765739213 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.764289626 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.766018785 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.76605191 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.767677057 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.767522927 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.773767989 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.763695088 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767805309 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768151662 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.766583224 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.765973403 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.767667321 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.768953184 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.767307387 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77366863 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.76629213 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.769367572 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775620971 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.767140197 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.766035846 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.770194774 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.767689209 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.764747481 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.770359277 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.775632829 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.767448663 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.768658212 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.767993663 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767595757 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.767783101 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.774062817 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.765467251 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.766389551 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.768497409 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.76969973 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.765864394 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.769563695 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.769585565 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.76875013 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.770789085 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768322486 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.76861532 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76920153 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.769218554 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.769310545 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.772209969 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.771398127 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.777935305 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.77360417 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.76835293 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.771382025 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.769715951 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.773320957 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.769417985 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.769338325 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.767325996 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.781298321 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.778908984 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775225437 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.770161699 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.769012517 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774755307 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.771039631 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.773965068 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768461876 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770896803 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.769846549 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.768150916 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.76674421 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.770892354 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.769988552 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.770436549 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.770596887 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.77356604 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.770156436 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.768725377 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.770253887 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.771346007 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.769988558 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.769483043 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.770217128 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.771883202 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772045348 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.769905923 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.770325257 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.777064064 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77015207 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.771382785 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.770147459 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.771284974 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.769944208 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.772381339 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.771447093 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.773894629 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.780328572 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.77355072 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.780573653 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.771708 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779917369 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.771809956 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.774665021 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.781227213 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.768213095 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.770446215 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.771643574 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.772591675 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778295209 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.772989032 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.773288541 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.777269125 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771755068 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.772119898 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.771820532 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.773722034 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772197727 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.773313256 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780477778 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.774247844 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.776201875 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774108517 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.76989483 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.772880544 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.772786965 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.771795228 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.77532707 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.772848392 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.772774008 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.772017269 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.772771536 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.772767723 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.773721275 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.77357668 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.76962824 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.773261877 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779365333 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.772856014 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778735878 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.773226029 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.780454132 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773541622 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779387178 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.774930634 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.773583291 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.774334513 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.773203004 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.773860671 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.772994628 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.773659096 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.774164505 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.774801093 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.778418013 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.774369906 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.776695423 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.774704857 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.775129162 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.772325624 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783752867 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799961459 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.775378535 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778717155 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.771192221 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.776331164 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.779988122 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.775103054 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.773930189 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.777913984 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786267332 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782773937 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.773759419 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.775101081 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.776878079 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776020723 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.775608606 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.77439172 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.775478834 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.775230383 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.776203935 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.775503995 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.77836121 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.775215687 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.776453117 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775666221 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.778166325 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.785068755 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.775845434 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.77651433 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776221644 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.774349629 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.775912768 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.775616217 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.776036132 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775790962 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776005574 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.776854449 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.782515605 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.78205193 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.778075742 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.77500628 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.776488375 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.775475339 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.776554508 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776241642 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.77798298 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77727687 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.777014691 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.777189826 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.77629648 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.775386311 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.777132294 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.777074466 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777258675 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779002905 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.785392466 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776803229 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.773999828 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.777061946 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.777068289 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.775467993 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.777044765 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.784283102 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.780149722 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.789148838 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.787138388 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.782373941 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.776695261 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.781054185 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.786255819 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.776515721 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.778035733 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.777907765 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.779250613 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.778788886 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.781233411 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779834356 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.783751147 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.778088499 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.778608956 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785145246 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.779616256 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.778703856 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.779247429 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.781906383 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.778604622 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.775767525 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.778307664 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.777837464 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785191576 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.779361569 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779659182 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.78077783 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.776921574 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.780030826 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.783379297 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779748608 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.779398813 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.776935206 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.779853315 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778919817 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779052395 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.776750196 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.77873496 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.778432607 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.782039224 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.786618481 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.776023963 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.781186031 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.778964285 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.779255178 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.780189119 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78036518 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.77933092 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.77763196 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.77955083 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78053831 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.779735265 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.782182575 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.779719002 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.781343329 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.781178768 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.781201301 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783767316 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.791522758 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.788311413 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.777648727 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.781126289 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.78051112 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.783090562 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781615338 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.781920739 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780625513 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.781569395 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.780722622 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781237926 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.779842436 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.784423237 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.797234461 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.780737718 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780346075 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.781286686 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784260436 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.780414774 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.778533587 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.781066435 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.781706346 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.785112666 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.7897185 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.782042811 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787214062 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780746345 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.781924535 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.785054365 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.784504758 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.789809932 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.78408514 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782727564 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.78196213 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.786595828 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.798693292 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.782076677 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.791039706 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812584458 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.782385 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.78337451 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.782411668 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780251352 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.782942865 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.783573461 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.782723608 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.782690695 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783027991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.783601653 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.783594275 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789085233 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.783482504 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.781960448 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.782993944 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.782597324 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.783370987 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.780390236 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.782950847 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.782688905 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.783771162 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.782757979 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.783690247 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.783923949 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795937934 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.793658103 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.78274446 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.784230137 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.78023015 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.786271132 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.786246848 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79553708 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.791659868 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.784728736 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.784570301 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.784754775 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.784683763 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.781029782 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.783024117 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.783120188 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783826553 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.782072351 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.797820839 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794226619 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.788406691 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.785133083 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785616076 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.785258623 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78971679 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.784564365 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784764797 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.785877973 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.784659051 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788907011 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.783280915 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.785066687 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.788171365 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.794165332 seconds)
  done (took 1058.041736585 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.783131269 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782096422 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781752903 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781929378 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78282452 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782202365 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783290034 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782070668 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.783071008 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782721569 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.783934292 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782821549 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782699509 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783536173 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783128295 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782924595 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78342238 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782792897 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.783090447 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783832799 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783459205 seconds)
  done (took 39.144608011 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.786174345 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.783723081 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.78367573 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786819186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783008584 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786220853 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.783168273 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78630739 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78626765 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783589841 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786674281 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786285526 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.783437866 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.783265574 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784451922 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786473366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.786621734 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783815663 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.787157546 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.784025032 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.787047416 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.784944384 seconds)
  done (took 40.979008972 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.787326155 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.787902683 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.786654545 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.784679562 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.786976305 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.784471416 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.788524697 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.787520989 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.788001733 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.788274457 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.786870208 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.788057921 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.795004384 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.793501165 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.788829104 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.787020814 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.931679969 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.789261079 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.788544554 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.789384826 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.7856552 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.793974853 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.785998595 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.785482183 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.787023838 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.78932686 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.789640567 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.787995505 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.789905231 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.790144718 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.79362118 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.788288119 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.788232521 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.79071692 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.78779202 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.789590124 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.79391254 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.790414439 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.785697449 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.788919825 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.798600623 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.811351894 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.789909221 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.794376815 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.789194454 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.790005795 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.795734986 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.798450009 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.786561486 seconds)
  done (took 89.551823659 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.788963824 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.789474226 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.786600851 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.789400751 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.789479186 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.789124051 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.789830661 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.789377769 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.787198343 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.787427373 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.790521201 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.78758695 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.786199827 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.790616553 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.79061398 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.787009664 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787466939 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.78801408 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.787996533 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787813281 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.787551327 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.790780803 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.790827251 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.788225561 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.790222308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.787719223 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.788159658 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.790967433 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.789008409 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.788083198 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.791498198 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.790767858 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.792031619 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.790122685 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788698968 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.791271101 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.791352594 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.788840299 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.790997864 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.789485038 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.790987395 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.791133142 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.791926596 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.791349951 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788841057 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.789436595 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.788909214 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.789161641 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.78891593 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.791220917 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.791176904 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.789759016 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.7910737 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.789676392 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.791453353 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.792024792 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.790303805 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.788897211 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.791911335 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.789584705 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.789066178 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.791386927 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.789537334 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.791930995 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.793092878 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.790196382 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.790360352 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.792917745 seconds)
  done (took 123.413844802 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792846496 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.793593875 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792802604 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794165682 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793877537 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.793283415 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793031511 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.794283432 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.793271688 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792944944 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793316692 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794222015 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.794603581 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.794322742 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.793912142 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794822533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.793754817 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794792692 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794813484 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794481365 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.794181584 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795211146 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.79452477 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.794601195 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.795295662 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.795239974 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.794006615 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.794598947 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793926015 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.79488041 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.793800627 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.795037804 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.795427081 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.7954605 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.795562582 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.794997351 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.794731716 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794684463 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.794854296 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.794467649 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.794609262 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795378373 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.794966122 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.794876101 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7954533 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795456466 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.794968842 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.795485069 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.794923673 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.795647583 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.795593593 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795913036 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795538836 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79586385 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.795901466 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.795787196 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795689851 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.796008181 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79668995 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796537495 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796247473 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.796106049 seconds)
  done (took 112.989300094 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7962159 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.796040191 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.794283683 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.793363673 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796000072 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793776458 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796125288 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.795526142 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796807163 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.79681007 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796142018 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793621263 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795174033 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795799676 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793733007 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794723015 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793255832 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793529399 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796523127 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794417875 seconds)
  done (took 37.617226758 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.795848314 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.796385339 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.793406316 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793006868 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.796510062 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.794029204 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.796411865 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796614689 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795084905 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796649159 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.797754695 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.797239654 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795325441 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.795182284 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.797191068 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.794909879 seconds)
  done (took 30.447902612 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.794130246 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.797160134 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.798336081 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.797014424 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.795097686 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.794475306 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.797761606 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.794842786 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.794834062 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.797289901 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.798070558 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.797448934 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.798737071 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.798259777 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.794842879 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.79789953 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.795835998 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.795459586 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.798029004 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.79858781 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.796702448 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.795699854 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.798447737 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.797441423 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.795588108 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.796690759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.795935451 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.797112828 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.795757051 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.799306767 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.79665003 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.796807505 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.795711282 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.796515314 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.799259148 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.795670109 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.799093055 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.798808717 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.799487307 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.798925699 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.799255933 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.796836272 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.799613268 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.799039046 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.79655394 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.799259096 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.797177424 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.79707399 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.797177537 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.796706572 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.799950884 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.799869338 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.799184097 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.800485008 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.800224002 seconds)
  done (took 100.575149194 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799815363 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800536267 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796747884 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.799509307 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.799106626 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.798115367 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.800076821 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.796895436 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79744544 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.800639542 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798220849 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.800172265 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797325865 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.80054269 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.799331055 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800092349 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.797983415 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.79731417 seconds)
  done (took 34.097803593 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.799046328 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.799085378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.800845331 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.799141529 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.798992846 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.803915826 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799102679 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.801130712 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801927364 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.798979322 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799099287 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.801858834 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801028973 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.801722871 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799409985 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798400057 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.801388579 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80092612 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.798857788 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798580185 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.802198733 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.803572509 seconds)
  done (took 41.329038518 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.800370586 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.801126882 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.817674544 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.822476987 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.823539258 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.837136746 seconds)
  done (took 12.622659542 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799182588 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802490713 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.799330565 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801704589 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802618428 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800548467 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799561274 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800063177 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80295036 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799776928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799766298 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802371569 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801693451 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800409304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80277666 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802388633 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801046222 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800936056 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799825796 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802621567 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800689212 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803568208 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801091219 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800323196 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800923047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801635128 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804284834 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800880167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801453391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803358505 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80386542 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800658789 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803798009 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80068933 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80353028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804003996 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801284214 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804565905 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804684239 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801817456 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.804252106 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80521148 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8051119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802225202 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804163351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802043505 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801562861 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801912719 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801166612 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805267655 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803329721 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801919953 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804290735 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804481321 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80507935 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804836078 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801719504 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803435696 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804272859 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802331356 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801866027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805007584 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80296293 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80319702 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805292672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802073613 seconds)
  done (took 120.679839512 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802434954 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802346703 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803303822 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801194027 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802110253 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801149912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802264941 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802494035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802718069 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801269419 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804045545 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801357897 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801752487 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802631301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802052069 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80168322 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801949014 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802224979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801239031 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8056946 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802496983 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801984994 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802703861 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802375788 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8016375 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806661888 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801761699 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801911988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801314226 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802668435 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801770479 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801185577 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802043081 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.801651288 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803216097 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802030585 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802208561 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802211837 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801889695 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803686412 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802626794 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804576907 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800277626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800513092 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800073562 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80047636 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800202956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798989314 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796065475 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795998344 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796880393 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796120061 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797809184 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794049324 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79402129 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794470483 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79419604 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793551275 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794780862 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793099362 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790052451 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789466162 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791817673 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789250317 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789420202 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788577153 seconds)
  done (took 120.506252996 seconds)
done (took 2464.84156495 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.858696852 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.821689476 seconds)
  done (took 15.38993971 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.952343172 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.904205649 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.789599806 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.79808254 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.789387608 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.791807426 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.78684173 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.790529727 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.789781316 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.789467853 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.789584746 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.977536448 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.80132582 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.789931459 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.789792983 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.882637236 seconds)
  done (took 50.926641415 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.792628364 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.794385709 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.803804439 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.79620477 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.792153901 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.805378148 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.82632978 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.796586278 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.827260599 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.807867079 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.862477667 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.804804636 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.791711053 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.841821614 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.809546302 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.807566002 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.883107886 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.870555801 seconds)
  done (took 34.425052977 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.872634106 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.801850253 seconds)
  done (took 10.392255125 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.814774584 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.793897126 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.818028963 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.795316891 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.795066251 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.793832102 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.800637812 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.810657696 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.819480503 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.797541479 seconds)
  done (took 69.753723456 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.795948246 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.79122801 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.790409867 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.789034892 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.782722547 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.786899592 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.789093614 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.786093554 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.463651261 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.82619189 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.79753529 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.795679321 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.792795492 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.790525201 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.789151212 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.813235081 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.891773883 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.787713666 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.785916198 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.796265739 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.789113084 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.843487813 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.803082762 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.791417623 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.818973415 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.462835368 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.797375682 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.795345644 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.894963402 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.78753343 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.788627631 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.7896148 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.791504213 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.168681853 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.055132759 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.7908391 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.805391698 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.797238022 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.787201383 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.89309488 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.790110291 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.794962087 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.525136231 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.037286289 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.888000221 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.830923371 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.113498297 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.806879537 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.788529719 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.816641875 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.791384098 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.789635136 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.803332985 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.273782159 seconds)
  done (took 127.858162272 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.785381396 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.130913697 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.950798996 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.781600997 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068747863 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.990212401 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782925063 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.828558936 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.779173065 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.013369459 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.039018727 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886698668 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.77928887 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.772830755 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.774130649 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.771340953 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.932770606 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.849283378 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.775192185 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.771668635 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804235413 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017661346 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.898741039 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.774035687 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.801644383 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.988490968 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.897721099 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.879376583 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.574516532 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.770815292 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837393724 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.774249932 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.770385448 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.76935657 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.930650829 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.869680986 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859561814 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.771847249 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.769602034 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.769680434 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.532070275 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972183837 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.870840791 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.912128958 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.92162905 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.978059137 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.556410844 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.768756358 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.513359732 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.935217656 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000551135 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.005769518 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.893668389 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.77069966 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.106306414 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.766886923 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.765684886 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.020095533 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.91210932 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.868770514 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.769838507 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.766148506 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.765515731 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06861661 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.769987875 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.864349849 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770151105 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.764720251 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.865248061 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.868647715 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.90739599 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9839321 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.800001305 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.496378104 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.974555715 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016665573 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.835220683 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018899268 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.768501605 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.764427207 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847122723 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.614939591 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.021254107 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.057493448 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022697704 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803560918 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.497454337 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.76435146 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.994265374 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.988640675 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.028324466 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.914260276 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.004902066 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.087739874 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.763518875 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.76312992 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.980070428 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.902834043 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.766194373 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.117071361 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998829333 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.315006795 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.784033367 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072287948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.898725419 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.766924122 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.422217769 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.765319912 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.997577751 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.806579402 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.765119752 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.762640311 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.986818175 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.756232707 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.763688045 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.663250342 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.828081152 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.768176584 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998669182 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.766490083 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03707465 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.767987814 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005811897 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.766409852 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.797828496 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.940536045 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.912646078 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.767533768 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.011840029 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.012770481 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.882863716 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.042897089 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.65697079 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.765819879 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056787968 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.76765269 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.76371746 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.938500407 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.766033238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.912463375 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.768644845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.061118871 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791293242 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997477556 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.767261621 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.026074268 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.802163685 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.818508068 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.76717901 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.892937401 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.767321272 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.688173761 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.925662411 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.766417899 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.766141049 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.321128369 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.766434399 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.917202981 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.002888538 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791169194 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.842483054 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.438831947 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.76590314 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853821089 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793512309 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.581621656 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.766047885 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.021023948 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.769736075 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.766253391 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.766449918 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.063431672 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.005659925 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.770888527 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.766785663 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.679225164 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.765855732 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.764864146 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.951775525 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.110883018 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.765747387 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973059135 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.769178712 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.89623699 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.768923952 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.84724847 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.10342544 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.765811289 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.766793104 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.766498917 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.766598784 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.76645312 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.978806318 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.796176648 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.286120003 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.906264931 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045814144 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.080384615 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.017891218 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.812800314 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.769847364 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.030805572 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.769966718 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.832290613 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.770037438 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.791687897 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999819064 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.7704378 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036319288 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.049592823 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.719182012 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.819690791 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.770150624 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.768827255 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.767291266 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.916397798 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858634077 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.769914806 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.766806601 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.885378798 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.891693683 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982568911 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.768851934 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.801347432 seconds)
  done (took 880.860494902 seconds)
done (took 1191.318161051 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.767629722 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.76733208 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.756721119 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.773421392 seconds)
  done (took 28.759028765 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.779518539 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.776921336 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.778411721 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.776767496 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.779102302 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.777117304 seconds)
  done (took 12.363889159 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.844961214 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.773396158 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.773449652 seconds)
  done (took 21.0883648 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.845470615 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.162456736 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.880463943 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.200581718 seconds)
  done (took 9.78660666 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.779605364 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.77819415 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.777964908 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.778976366 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.780289671 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.780816024 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.778784365 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.780325777 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.780629736 seconds)
  done (took 17.714745446 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.967805624 seconds)
done (took 95.375808548 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.967392656 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.939027469 seconds)
    (3/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.286107385 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.920635244 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.844433769 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.873194893 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.017647826 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.120978351 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.796575261 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.784200805 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.791120726 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.775721948 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.274868364 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.813336878 seconds)
    (15/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.157434517 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.169799925 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.96797314 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.942972498 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.799942142 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.77479404 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.16651895 seconds)
    (22/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.776701957 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.081383331 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.795426318 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.886471388 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.972602995 seconds)
    (27/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.914716863 seconds)
    (28/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.06157627 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.868815177 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.017750999 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.779286292 seconds)
    (32/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.33331712 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.484935887 seconds)
    (34/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.881270198 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.950256187 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.86945925 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.697016531 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.86137986 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.88230223 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.77334346 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.897037167 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.088932724 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.92430528 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.8406675 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.81728531 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.693027949 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 1.999197087 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.88913799 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.894470286 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.138564288 seconds)
    (51/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.332924716 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.578850389 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.289218417 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.503500172 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.777676141 seconds)
    (56/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.77703199 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.356069212 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.769715888 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.228343084 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.87750419 seconds)
    (61/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.84755821 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.7405066 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.955105713 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.808907114 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.895459903 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.520697853 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.878688741 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.10726401 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.214985248 seconds)
    (70/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.915254335 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.396257637 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.827670934 seconds)
    (73/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.142207845 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.808792869 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.803969595 seconds)
    (76/309) benchmarking ("sort", Float64, false)...
    done (took 5.570201623 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.767313383 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.772668187 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.169441342 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.773243822 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.941937574 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.840857877 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.11899088 seconds)
    (84/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.01585255 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.968563535 seconds)
    (86/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.270321003 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.931508897 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.793033017 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.122825692 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.883034845 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.974053421 seconds)
    (92/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.219266352 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.915273563 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.920255632 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.982895164 seconds)
    (96/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.802310203 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.88784325 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.07758914 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.92831743 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.864026627 seconds)
    (101/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.793779655 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.460692335 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.780292765 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.978181432 seconds)
    (105/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.9261625 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.02497664 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.952480603 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.202289734 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.81666037 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.786955224 seconds)
    (111/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.967266511 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.949671667 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.962187385 seconds)
    (114/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.938130062 seconds)
    (115/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.880984924 seconds)
    (116/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.777750496 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.360638478 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.158232572 seconds)
    (119/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.835225332 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.935610542 seconds)
    (121/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.781485072 seconds)
    (122/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.501019521 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.787730954 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.112583918 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.000650388 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.881553861 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.813362068 seconds)
    (128/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.696511556 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.112208553 seconds)
    (130/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.859475952 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.81922891 seconds)
    (132/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.229979622 seconds)
    (133/309) benchmarking ("sort", BigInt, false)...
    done (took 6.794124555 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.779972621 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.014415095 seconds)
    (136/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.090616242 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.829183629 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.803907558 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.139640701 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.750122865 seconds)
    (141/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.789021705 seconds)
    (142/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.92620926 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.026143225 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.048914208 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.169887964 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.044306131 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.923021106 seconds)
    (148/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.807999086 seconds)
    (149/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.889612591 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.816522875 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.850482851 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.17126286 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.808976737 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.017029431 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.793518957 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 8.0647212 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.826237707 seconds)
    (158/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.24126955 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.777936209 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.635647654 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.917774506 seconds)
    (162/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.651505433 seconds)
    (163/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.132733191 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.140933834 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.95451247 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.786736761 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.224203437 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.063902687 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.445343501 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.655804536 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.090214124 seconds)
    (172/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.801094186 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.853040505 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.885393839 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.813760408 seconds)
    (176/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.855703235 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.817078313 seconds)
    (178/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.274071304 seconds)
    (179/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.891080869 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.795095625 seconds)
    (181/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.910990912 seconds)
    (182/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.789267405 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.002398085 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.795882669 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.063758927 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.787881639 seconds)
    (187/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.951905569 seconds)
    (188/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.790540669 seconds)
    (189/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.978551971 seconds)
    (190/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.69989056 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.227907257 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.929764726 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.791566817 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.3010513 seconds)
    (195/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.933794897 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.975380497 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.628322533 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.974869432 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.862639483 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.644880688 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.923636278 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 4.685989528 seconds)
    (203/309) benchmarking ("sort", Float32, false)...
    done (took 5.530137608 seconds)
    (204/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.823456298 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.105942498 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.99380064 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.799927492 seconds)
    (208/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.029114834 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.167932564 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.051875276 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.036078526 seconds)
    (212/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.941351506 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.862958871 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.884054493 seconds)
    (215/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.800871864 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.648505723 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.998404793 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.183275962 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.822012079 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.793212866 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.000935092 seconds)
    (222/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.908071277 seconds)
    (223/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.798203968 seconds)
    (224/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.969254692 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.950195213 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.823570026 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.129446225 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.091586141 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.783779092 seconds)
    (230/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.979933546 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.894208699 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.812423313 seconds)
    (233/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.07211066 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.060075813 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.191968095 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.798421127 seconds)
    (237/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.968321337 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.798366934 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.214910528 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.988355703 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.12211588 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.221799584 seconds)
    (243/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.880214683 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.93227439 seconds)
    (245/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.030667674 seconds)
    (246/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.732999035 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.078696643 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.053581524 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.902562651 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.957444094 seconds)
    (251/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.04461639 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.799494543 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.897148033 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.947926179 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.78629896 seconds)
    (256/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.188905219 seconds)
    (257/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.88994653 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.797033401 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.221739256 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.938055067 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.216474741 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.997478984 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.777532005 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.800904171 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.114426393 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.265259364 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.242144222 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.252631216 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.906914097 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.804492799 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.814656839 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.029179413 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.043987844 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.7891718 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.872331982 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.886493509 seconds)
    (277/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.875114156 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.47017243 seconds)
    (279/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.815230708 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.799839326 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.916782318 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.770623354 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.862609707 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.901395733 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.149612163 seconds)
    (286/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.939688541 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.599960064 seconds)
    (288/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.929803995 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.803879428 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.92302201 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.078010666 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.541368465 seconds)
    (293/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.904219707 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.784126341 seconds)
    (295/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.340605302 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.125848849 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.900766198 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.837796253 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.01840924 seconds)
    (300/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.433967597 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.043743158 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.495092402 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.174780381 seconds)
    (304/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.945156807 seconds)
    (305/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.052742569 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.026350475 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.789428284 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.254078596 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.806873092 seconds)
  done (took 984.722101217 seconds)
done (took 986.494709096 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.834804155 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826613163 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.810468981 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.830787117 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.918811098 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.835693597 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.820268217 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.811686175 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.8588429 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.858997431 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.806626865 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.835052831 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.811139051 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.808902722 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.809551415 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82415739 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.12436314 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.841397815 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.826505591 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.819239639 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.82534306 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.806480866 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.859293102 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.835721744 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.813601962 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.811715161 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.812616998 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.83056163 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.921283641 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.81175687 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.812759273 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.821452633 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.125691656 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.840325987 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.806820559 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.82983868 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.821337889 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.820144652 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.814896391 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.842336034 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.208876559 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.849171335 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.812960379 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.81265433 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.813394013 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.816213745 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.813077188 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.818995242 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.823869636 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.824710924 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.201268638 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.865401603 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.813263264 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.812908269 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.823595195 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.810414045 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.815177852 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827431669 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.830213098 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82849085 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.107365119 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.848906233 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.81489167 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.828249561 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.818001525 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.236369129 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.847172076 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.816239694 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.209118824 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.85884305 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.23672887 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.860133999 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.814309637 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.82559405 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.844428403 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.125942543 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.83828189 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.811785809 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.818825894 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.809640517 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.821222366 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.825311822 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.817179669 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.813470039 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827532234 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.841294108 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.824470518 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.812241094 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.821598986 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.831373758 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.820478361 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.822869174 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.816314667 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.808396052 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.822737958 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.817092823 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.815344604 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.815762444 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.818221207 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.824780383 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.208388693 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868508285 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.810049208 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.809229242 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.814724336 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.827816895 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.208680091 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.853209493 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.834829521 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.859853422 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.814207456 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.106654018 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.844735976 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.828921932 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.822675903 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.815721298 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.810201024 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.106240532 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.232804951 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.868739212 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.81566836 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.80861092 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.828062263 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.816254896 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.81094289 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.128841074 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.845457364 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826973659 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.935137062 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.825944696 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.845021123 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.810223603 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.818448391 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.84547183 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.830234393 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.846528965 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.819338929 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8295359 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.829380686 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.810676091 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.824985388 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.825838604 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.818229131 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.821808726 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.810879175 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.84517737 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827798488 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.827034762 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.836189088 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.934999546 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.812680196 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.108228976 seconds)
done (took 285.088716319 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.88542005 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.810788822 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.909957158 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.813553791 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.892620171 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.907758085 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.808734126 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.810894371 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.810418633 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.190204927 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.811765887 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.811696584 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.805439041 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.809958823 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.895784586 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.812801006 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.809972597 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.151772487 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.815932368 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.886962899 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.807254799 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.812840648 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.814770047 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.186170934 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.811154508 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.809917159 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.893957549 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.813750521 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.150986226 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.812839636 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.809889606 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.151920454 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.912592162 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.833768446 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.824081927 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.821022887 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.900979771 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.818649778 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.901395091 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.893254249 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.918096998 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.853874135 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.814586522 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.806264067 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.820353712 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.816301478 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.810871181 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.843334564 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.813586319 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.813135874 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.154238606 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.826295202 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.823980334 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.813862907 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.813306206 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.838011049 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.815322108 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.817459674 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.907502422 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.814847265 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.887707652 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.188085694 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.188407938 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.816235498 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.810968039 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.813892108 seconds)
  done (took 180.604863884 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.881427223 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.893536392 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.882043811 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.820733459 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.864336709 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.885915824 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.820233039 seconds)
  done (took 14.781896028 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.822275436 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.81433127 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866510963 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.866290729 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.814316432 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.970984471 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.816868032 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.827455959 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.812460421 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.868565568 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.81649351 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.81680123 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.825575581 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.815058887 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.866225303 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.826869364 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.931675813 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.81617868 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.818949154 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.967500839 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.814952916 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.824343674 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.848263951 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.826899602 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.819263207 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.823328279 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.414006751 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.816564105 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815623859 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.816159348 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813821545 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.858037359 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.817569605 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.814250225 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.814718491 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.931176994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.818585639 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815964016 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.81628846 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.812973747 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.81831621 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.817142689 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.816776708 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.813086234 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.818034746 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.84171472 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.816538094 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.819829258 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.818575375 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.819409119 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.851209431 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.822235441 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.816558109 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.815136809 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.871805037 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.825750447 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.819660152 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.81426476 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.818910699 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.816202531 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.968873401 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.868503523 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.820623756 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.870206637 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81871857 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.820368909 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.81932413 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.821947815 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914593187 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.819225583 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.869625505 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.818271623 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.98071671 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.841441077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821455187 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.821822489 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.822395331 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820416195 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.816196374 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.824683659 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.816854976 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.821915294 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.826626022 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820305643 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.818279928 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.933956917 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.931518369 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.820939912 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.836251648 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.829279316 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.82002592 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.858261266 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.821811985 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.820439617 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.878274417 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.936557408 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.876859351 seconds)
  done (took 200.771238688 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.825454939 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.829700237 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.823482084 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.837413167 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.822936887 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.82301783 seconds)
  done (took 12.70079986 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.825127104 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.825707339 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.823923067 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.825625116 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.824201236 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.821495165 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.824858572 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819250865 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.826765336 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.822898947 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.82293045 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.825050578 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.826843129 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.821050727 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.825801625 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.827832792 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.82294845 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.821226715 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.826036514 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82562433 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.972033568 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.828455909 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824572747 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.825504925 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.830077556 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.825948766 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.834104089 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.82764758 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.828421369 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.833451623 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.833418313 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.827162506 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.828454331 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.8321262 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.835004924 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.831311821 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.833162099 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.827678636 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.825796143 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.829053899 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.829321763 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.827925769 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.826777272 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.831295044 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.829367884 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.829667147 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.832968156 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.835282263 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.831881599 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.829104254 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.830043741 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.82955707 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.826146058 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.83300998 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.823794284 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828175447 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.827912561 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.824204479 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.823513392 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.825394698 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.827808243 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.82491325 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.828745285 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.831561934 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.832955182 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.825822371 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.825476901 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.829078863 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828356796 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.825988053 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.826768623 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.825668091 seconds)
  done (took 134.465050126 seconds)
done (took 545.073313742 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.993082506 seconds)
  done (took 8.737494783 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.869055103 seconds)
  done (took 8.654312397 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.284626469 seconds)
  done (took 10.026673793 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.82998256 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.849145726 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.826097918 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.820066311 seconds)
  done (took 29.089422476 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.878261911 seconds)
  done (took 8.617995043 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.840940539 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.815856846 seconds)
  done (took 15.43172166 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.852982493 seconds)
  done (took 8.595501555 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.925599574 seconds)
  done (took 8.689845652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.833167139 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.852180271 seconds)
  done (took 15.443553472 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.80370448 seconds)
  done (took 8.543683245 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.518111943 seconds)
  done (took 11.35130088 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.83492492 seconds)
  done (took 8.680736425 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.824591176 seconds)
  done (took 8.563860572 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.90174688 seconds)
  done (took 8.641221324 seconds)
done (took 160.812984708 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.821924624 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.81644921 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.817823997 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.817552559 seconds)
  done (took 29.013153685 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.856242645 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.856286827 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.858256219 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.866886165 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.858851398 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.858346352 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.84892061 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.849446317 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.868027885 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.860562515 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.860225493 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.859025423 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.85669964 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.850971257 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.861110235 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.860228948 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.869945716 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.858585479 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.850230601 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.86112185 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.824885064 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.868714106 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.861344829 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.826719836 seconds)
  done (took 46.292922847 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.023843535 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.899632814 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.976940468 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.877055595 seconds)
  done (took 9.517984012 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.877004818 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.878597051 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.890045215 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.929988058 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.952553871 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.888167579 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.852808424 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.846793397 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.833447036 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.878823792 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.953313958 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.874273527 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.979906919 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.825915136 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.014206725 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.826625255 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.826155813 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.878824938 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.929876464 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.949007027 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.827533144 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.878318861 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.883961453 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.874508135 seconds)
  done (took 47.093914276 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.825376913 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.831600826 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.831717859 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.826578116 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.825567839 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.825095732 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.832309027 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.82685226 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.848422601 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.826714359 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.823936975 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.826112944 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.825361599 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.825948668 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.82655131 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.840037337 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.839441855 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.826440321 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.833087925 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.833587801 seconds)
  done (took 38.343367703 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.820802302 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.673451657 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.171552929 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.076768355 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.822355617 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.821550277 seconds)
  done (took 31.131133695 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.839763086 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.831572581 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.825795793 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.885214733 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.96825577 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.833092557 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.826069367 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.838466933 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.874965855 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.892472264 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.847540816 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.856394714 seconds)
  done (took 24.064696312 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.823369927 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.829564303 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.824191251 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.841991652 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.837829825 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.834031113 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.833459167 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.821791462 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.842080654 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.84513721 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.835000657 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.839324276 seconds)
  done (took 43.754875299 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911802879 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711787193 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467107207 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577664409 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358511888 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034654402 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381301758 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99601505 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.82773313 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099034315 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.441795074 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072726842 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.076860242 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824364206 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897128363 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.298182351 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124412844 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056545433 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852880672 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573661234 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948511405 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390764329 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.571648995 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.955606385 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035372649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.957726917 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.085965793 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.782311353 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966400061 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863605107 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838030297 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.827155756 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101343556 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041452946 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957120051 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836202544 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481236624 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.540711864 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.815402504 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.544667536 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.566047829 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.965730966 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836652625 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82736065 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.759793244 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344488033 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00502593 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.831114381 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.528698009 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.827123156 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837157681 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917472891 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.83025378 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.641799265 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777458879 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105794874 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.824417429 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83326667 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396417616 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.955141097 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449865774 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.767068996 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.919831537 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.599811434 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312645172 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.983593625 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.830591548 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830624979 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759567323 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.564420915 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956800233 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971821862 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.845991223 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475523964 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141931077 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.548048086 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916775605 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121886855 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.609118102 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.768313071 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053396327 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.777013539 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760686922 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.664526405 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.763992853 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095885174 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863173538 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.470784444 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867587652 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.998526735 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8394326 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84902476 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835689771 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.051875979 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.710336987 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829886407 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.422142196 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122488667 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850073222 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000305562 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761730879 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.831105986 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082870148 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.038393267 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.036677235 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.314562136 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993484449 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829659898 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.916666817 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.726615785 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.845428198 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.114834189 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897179318 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.961674044 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967802798 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.789206366 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130249433 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858561653 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.004126576 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.520665087 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101923079 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.153378441 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.081638731 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911775233 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838243813 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.832622352 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634016742 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460303809 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.053317598 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.830001535 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291717286 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.844487494 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.831322043 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76466895 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.454947647 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.502253361 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.956570923 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052676386 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.781266377 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109414345 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762778798 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978761992 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.943987161 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.05214011 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.499222201 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.919427816 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089648943 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287155691 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.0485042 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846535335 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848945665 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948195545 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853261321 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.225568369 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08869677 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.834859188 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.834350045 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.642392464 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914283511 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839277164 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.835988881 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627947674 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129428025 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865302 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831587497 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.768834718 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.846659192 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915928113 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.838323115 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.841822152 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.356387793 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581602349 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.843025877 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.516217374 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066036224 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842074885 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.577357865 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026496056 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.9148834 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121892281 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903345398 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.766703325 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.536103601 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.536039599 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834573413 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766608173 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.83420655 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841718795 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844332146 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.029008921 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122407002 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88853257 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.632632776 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.957644035 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843543386 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.837947767 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834306772 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.356102949 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985960724 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437585403 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.846220781 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970021127 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.847064024 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766668157 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.838896937 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.838744557 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837798033 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.791881712 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886542775 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.623750902 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175247744 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093726433 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.482234989 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851584012 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.614992642 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.974308914 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.857904796 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.467193845 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908126797 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.841699754 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896903019 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.845407911 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.591899091 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.626526444 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405040623 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175056686 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175200122 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30024582 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.183486037 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.17227405 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.009909491 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069778378 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.364017318 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894937302 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015124662 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781208734 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919934952 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.502906019 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201287539 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852782605 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064195729 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240460568 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.544024777 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007159903 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047881039 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871270071 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.618767649 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862115095 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.360196879 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991206132 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.498817366 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077998002 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008961342 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.466591569 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.954506097 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.837014391 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.309823492 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920439232 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.546240274 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.197437142 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372616498 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.527138042 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219722339 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.839051066 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.282567564 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205881632 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.130752202 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.929538982 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772385354 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.847532329 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.847575089 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.837492413 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.815484976 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.756376967 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.116887161 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849342018 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072166685 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.070243839 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122604441 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.750402431 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.844234235 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839381951 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146443132 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471434777 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075888205 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.145783079 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.409314659 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844397897 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771896066 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772282512 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.542488252 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847904859 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.811793398 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067851707 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.945828812 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792068843 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.192923733 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149278606 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093169377 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.854224226 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.131226646 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123776584 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.572887871 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868000319 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.939420471 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.468275688 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.557104861 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.061970042 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074504721 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.636882186 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068328729 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.488735338 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.815376713 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.839493182 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054856797 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.062447041 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.530648744 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102446864 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.565736509 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.859513284 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216742568 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908383408 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.525623599 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.06362572 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.932759442 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849530507 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921880084 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850833 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.852158488 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85258298 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889605095 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.546619311 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.987773012 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.854465321 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933092803 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.997708199 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.433518605 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.851148244 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137161622 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21949809 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193966731 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909860174 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843171824 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845117388 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774074586 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980472589 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.285715781 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114276093 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.973845961 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.98404195 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867511751 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.477007563 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.108579351 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14982887 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117028529 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.735999758 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842877559 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93180349 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.065441961 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851388526 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.053524638 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075952504 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161847098 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311354826 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.940218536 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109607823 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114478903 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.208740766 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845262998 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434123061 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.848927605 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.359817515 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.883240388 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.537677262 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14185847 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851019521 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06279836 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.867505236 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.039669799 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.297092985 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596248899 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.218060393 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.848045609 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.907226332 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138378566 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263917182 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165573518 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925468791 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855632281 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.547633215 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98300811 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.801951971 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.110496234 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846085561 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052779616 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.558155089 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.856393543 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135015403 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164685966 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.843531511 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.840361948 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906980044 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.852927723 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067907883 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115808516 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096031497 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854597356 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.853975224 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.658596018 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136672308 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911999571 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780279315 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.848605156 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943958967 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.091876937 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867992189 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.362943571 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.549695743 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14814841 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.765101165 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866301585 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.215562255 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298033428 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1962491 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.375142083 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077311917 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.403755755 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.670077609 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213578627 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.849930207 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.202138818 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216223184 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.849308124 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.314823646 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950739612 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.136317754 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176257936 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.856868372 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652078516 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.894129536 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065736321 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437291017 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785598699 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847508886 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.902348074 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843826585 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.974047531 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855042906 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.86045959 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.672548845 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.679253937 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335632893 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.850928689 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.908263287 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.454657624 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373916764 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947864337 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999221268 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853012883 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.555941938 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.13656438 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098104848 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.306964585 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.910860663 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.847666336 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845409076 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.772846719 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040814053 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.042104779 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151784163 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.13509433 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.949782201 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851121001 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.06170853 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0549882 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.512682517 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015051387 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.194556437 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95506486 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.776501256 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.560477482 seconds)
  done (took 1663.468721069 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.868192418 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.862704238 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.846650767 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.845841658 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.865011281 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.864085496 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.91428189 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.844840319 seconds)
  done (took 56.681309032 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.839178789 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.021527159 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.849459284 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.841173226 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.864495628 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.842384392 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.044537559 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.852971151 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.876148751 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.84974061 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.843383516 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.865180024 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.164653952 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.862403288 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.839477445 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.85890891 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.889289978 seconds)
  done (took 73.976079975 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.840520616 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.018754986 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.862380972 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.864186488 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.712916103 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.846652711 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.786520375 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.854568878 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.841772398 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.004937862 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.181395663 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.888456853 seconds)
  done (took 89.465487458 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.855316065 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.845598017 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.846264751 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.847090265 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.845582512 seconds)
  done (took 11.009151422 seconds)
done (took 2165.574536124 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.077386386 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.028995054 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.077052519 seconds)
  done (took 5.867337923 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.986748332 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.036489646 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.152915413 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.173275887 seconds)
  done (took 10.113789077 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.136267179 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.224114319 seconds)
  done (took 6.122281207 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.161361424 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.866292777 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.256451999 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.839633321 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.843684841 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.841549827 seconds)
  done (took 22.292573302 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.845050247 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.847215437 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.843538252 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.846090352 seconds)
  done (took 9.144405066 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.826357071 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.533173839 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.827308359 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.843505181 seconds)
  done (took 20.792625367 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.591435909 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.968169981 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.5876586 seconds)
  done (took 8.910254433 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.534176503 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.486904184 seconds)
  done (took 9.783154708 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.006286511 seconds)
  done (took 3.769475058 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.873270031 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.116616015 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.433617511 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.424869368 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.502966977 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.093385477 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.196556256 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.07833335 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.287225824 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.335406375 seconds)
  done (took 25.106695973 seconds)
done (took 137.028723825 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.396665848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.871951564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.044512486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.206965227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.083952027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.044096869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.064930741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.207245533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.898312662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.888908749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.225169993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.082415869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.011580357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.860761839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.016132495 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.862193084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.076448527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.219577588 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.893637814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.133190615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.078319594 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.853373298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.047648786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.86908751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.081894448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.995070744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.397925996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.870475416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.02711168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.411342943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.001378774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.266529427 seconds)
  done (took 167.75511829 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.846060544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.845410701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.846213455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.845953838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.303734246 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.845869666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.846108706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.844698446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.267138333 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.265467136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.847237205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.304906742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.847763956 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.846695556 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.847271516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.846083152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.47257635 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.846236148 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.84664285 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.845966281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.847450853 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.131467903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.846990429 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.142383392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.413355174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.848772104 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.847595988 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.847286298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.847257702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.846728962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.848734943 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.846762214 seconds)
  done (took 208.391563401 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.846670465 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.84891346 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.848915548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.846975737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.849675712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.848581769 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.847683282 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.848626426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.586853111 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.580560598 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.848186213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.85347588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.850481537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.848030196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.855898606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.847941311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.855425063 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.857825301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.861788994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.864306299 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.872433622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.648384889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.891600075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.685794913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.868284172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.860316258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.849051883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.862504992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.865187011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.863130757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.867922284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.848815854 seconds)
  done (took 220.24842834 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.103001209 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.854480952 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.855246816 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.772860882 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.858454323 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.855232435 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.865986505 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.102530603 seconds)
  done (took 19.058911533 seconds)
done (took 617.230390626 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.316012598 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.165750779 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.03668875 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.882116192 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.139439584 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.914696659 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.874337199 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.947971554 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.50852531 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.951108159 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.527726413 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.899155861 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.613605884 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.904726176 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.998791243 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.936408258 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.422004447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.508306852 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.054430658 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.982567851 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.051546324 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.805634517 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.963106021 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.545007463 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.639265084 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.854421205 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.941545968 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.430166472 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.887477433 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.036119927 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.634029392 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.183032273 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.888733147 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.872739587 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.936128579 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.907869122 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.148929826 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.887966328 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.998376605 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.601789962 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963789602 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.418362931 seconds)
  done (took 101.952020722 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.846140635 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.843660447 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.844279498 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.843846729 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.844097614 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.844267234 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.843708215 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.843845903 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.844402788 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.844594927 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.843534417 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.843629035 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.843822724 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.844867069 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.845115907 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.844148814 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.843941676 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.844364862 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.843358551 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.844106084 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.84544964 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.843626003 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.858882376 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.844633833 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.844585459 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.847537728 seconds)
  done (took 49.751259496 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.858555061 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.008421552 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.099126255 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.879447301 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.857045505 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.860866069 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.876294774 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.862986276 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.860556496 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.860441335 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.948786803 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.86503874 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876556623 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.098160689 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.878370838 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.858407018 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.859107819 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.858997297 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.015771206 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.876542029 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.878356638 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.863666512 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.87836454 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.871122978 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.86029528 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.860074905 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.862522315 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.300417527 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.869535965 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.949361524 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.917003928 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.884719158 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.228869765 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.10819883 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.917614072 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.870865644 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.859965385 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.950915028 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.864339958 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.859460292 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.877413477 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.86403032 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.098372656 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.348808287 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.875806421 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.862892845 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.308362618 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.963022341 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.900576261 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.870671423 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.101801377 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.878775506 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.86125734 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.86030287 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.896496662 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.871839792 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.860248079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.163018612 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.872196308 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.877939926 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.868005942 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.859780093 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.019214268 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.870465274 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.008866452 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.871671402 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.86706502 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.862093302 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.100098454 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.880082747 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.347566596 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.877477447 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.861037909 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.950772626 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.015675883 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.338341184 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.873976878 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.020932337 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.246158173 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.888094486 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.868825676 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.291767007 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.890867665 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.86938176 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.86436527 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.864363054 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.861807197 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.908298834 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.877977135 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.291652664 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.358079483 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.187196252 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.88956282 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.877831179 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.863189578 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.162502644 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.871493467 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.863451266 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.094850757 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.361717037 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.882638431 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.869823123 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.336886601 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.880476005 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.883235874 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.871697563 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1056521 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.882393929 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.909916661 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.863337101 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.869193231 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.865704989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.881856554 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.869650382 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.864819511 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.333154801 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.975953793 seconds)
  done (took 230.698060263 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.85915855 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.864095979 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.85874151 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.883703574 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.857227878 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.864023978 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.859422723 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.857219395 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.863288172 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.857635856 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.858217151 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.85963735 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.859777811 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.862414655 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.883522845 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.864792798 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.46469906 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.859641942 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.858391054 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.87561562 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.515314545 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.866988426 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.857426994 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.858295272 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.860472754 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.858420227 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.863235938 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.864458635 seconds)
  done (took 167.1978682 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.866535609 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.981705199 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.885211768 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.893721309 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.876080465 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.863703021 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.888115338 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.88167276 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.870980964 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.863194556 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.863223416 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.926784402 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.878652855 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.963638755 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.896619601 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.89745435 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.970009189 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.872745645 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.863677781 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.864501133 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.894910437 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.860855684 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.92699608 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.994312887 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.887938964 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.983596346 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.873160722 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.868280136 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.8650554 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.984436133 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.884239719 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.929574647 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.897244121 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.88478043 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.987349495 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.982719271 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.972552363 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.895641903 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.871838437 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.864659121 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.865961199 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.856803966 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.98243352 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.886927433 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.867610542 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.971630944 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.886550306 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.869817419 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.876042335 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.865565804 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.880740272 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.885956112 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.935470358 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.001470691 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.902828031 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.893655594 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.891325634 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.15524398 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.877797241 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.964727399 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.859273603 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.987066079 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.890338527 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.854873618 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.869035702 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.872376847 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.896905269 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.900482124 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.97122788 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.875790638 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.965545972 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.903230218 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.876714816 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.868102079 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.871050027 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983377503 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.984095923 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.902961409 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.905608065 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.901433995 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.86292656 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.868778837 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.856035766 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.884691064 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.872756042 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.984038175 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.985692191 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.876355769 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.870881252 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.870067808 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.869938547 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.89414558 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.99400225 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.904575857 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.962386997 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.936722261 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.944248963 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.885521022 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.882918969 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.875528265 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.93218314 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.887286137 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.881820143 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.202716957 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.941461686 seconds)
  done (took 202.347293499 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.328737307 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.923907863 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.925975212 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.198725637 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.21505082 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.839334249 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.918356062 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.919338232 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.946064615 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.112133075 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.992421624 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.9409525 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.904612153 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.893180453 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.917108601 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.940832209 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.92723227 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.242769977 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.028067329 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.083573885 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.898914986 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.224317172 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.19457088 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.306607378 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.954067271 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.26507173 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.586974829 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.063050024 seconds)
  done (took 61.48439133 seconds)
done (took 815.203530012 seconds)
SAVING RESULT...
DONE!
