cset: moving following pidspec: 12033
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.384879739 seconds)
loading group "string"... done (took 0.576605364 seconds)
loading group "linalg"... done (took 7.355856647 seconds)
loading group "parallel"... done (took 0.170188641 seconds)
loading group "find"... done (took 1.152392041 seconds)
loading group "tuple"... done (took 2.056191614 seconds)
loading group "dates"... done (took 1.303153467 seconds)
loading group "micro"... done (took 0.239759999 seconds)
loading group "io"... done (took 0.964196074 seconds)
loading group "scalar"... done (took 41.087868898 seconds)
loading group "sparse"... done (took 13.330163272 seconds)
loading group "broadcast"... done (took 1.031647541 seconds)
loading group "union"... done (took 14.570580837 seconds)
loading group "simd"... done (took 5.04442803 seconds)
loading group "random"... done (took 10.184226156 seconds)
loading group "problem"... done (took 2.015991462 seconds)
loading group "array"... done (took 22.734216248 seconds)
loading group "misc"... done (took 2.168140712 seconds)
loading group "sort"... done (took 3.781961133 seconds)
loading group "collection"... done (took 20.016275686 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.571519444 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.159172489 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150260874 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150257697 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.197969235 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144668709 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160289937 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098859212 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.949233537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178121617 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153368325 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523403538 seconds)
done (took 5.166627634 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.259104983 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093838986 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104035023 seconds)
  done (took 0.87020069 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077812081 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144901944 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097687344 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078563973 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095495347 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078380796 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095144071 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.092942756 seconds)
  done (took 1.363132345 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085175221 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096611352 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081852455 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097286633 seconds)
  done (took 1.038727684 seconds)
done (took 4.293207518 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.720981466 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271293158 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202277864 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458791632 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195963118 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214925026 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675775896 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.333395209 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253293697 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099132545 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133465054 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390430599 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136041995 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686169827 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0916993 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125690521 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181268723 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.443882816 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084771835 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110348523 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116540034 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142533868 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13001809 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093415921 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183727838 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081039358 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190718681 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107280436 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079699393 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.273580739 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200025328 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681906185 seconds)
  done (took 10.805632928 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11042449 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132874393 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095982122 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138151661 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134513173 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097422665 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08354952 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095558898 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119834089 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173588155 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116744749 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137391404 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095648445 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082412268 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11612247 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246134471 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121353667 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099706225 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10136074 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08865259 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138587518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113523736 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108405957 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095381631 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167405652 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221747966 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112513731 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126583835 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098103557 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113691641 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143576277 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144221411 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096029948 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081595883 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172335531 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124654039 seconds)
  done (took 5.138646738 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.091184068 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187640578 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120412121 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167182101 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079955732 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14251929 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094031718 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111347392 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255118563 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.175431593 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.488590167 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143422328 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101341294 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098080708 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082352598 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097471435 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.451509585 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157106708 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133029051 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095117251 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103394004 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098179384 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361926451 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080193046 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093536131 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081100371 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080334874 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162599582 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081372878 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.201494205 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121764362 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082423557 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135566241 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213572365 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.157428727 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078804954 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126825596 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134859305 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079458379 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095343024 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173704926 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076819899 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10457719 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079684199 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120074266 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132472835 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134423343 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097064205 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080823184 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.195232546 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095793396 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095308588 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937276353 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180060512 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083346071 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096596598 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.106762391 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.30521146 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114618448 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079318448 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099029797 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261588747 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.20787686 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097354413 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079540146 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096870526 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080426628 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395586206 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080651421 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.689879726 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083716893 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108107871 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084487607 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097834121 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104532198 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088396506 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115233385 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079755592 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100019779 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079893274 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095985593 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080750397 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107743343 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.21272462 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097092872 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077736566 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095594713 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113620835 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110233135 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098936695 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094771892 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113166609 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097477683 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095795888 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11534484 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098776889 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105576177 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082567414 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141126361 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096427683 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134872261 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094032194 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124170828 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098949404 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112476241 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1114434 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097644315 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166546606 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077511676 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096563745 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080542783 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097489451 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080950676 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099887027 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109603819 seconds)
  done (took 22.624067466 seconds)
done (took 40.336996588 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327268291 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102531481 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101806066 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104442383 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09896094 seconds)
  done (took 1.488709803 seconds)
done (took 2.214939076 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.162955392 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.131080003 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077239382 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.126308154 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076890006 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.13393439 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12915967 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093261943 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.130910316 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091867709 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.124657163 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076439071 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091694436 seconds)
  done (took 2.200531786 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093902598 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112751619 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083337086 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1101678 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075895312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11027889 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090679698 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116736902 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107843503 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084301479 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092343925 seconds)
  done (took 1.798379481 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093282305 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109857933 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081940883 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107903882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075964249 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108147654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09125036 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114197032 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107742411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08533266 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091558651 seconds)
  done (took 1.792122207 seconds)
done (took 6.508277846 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089906804 seconds)
  done (took 0.808069869 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.911662369 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.472832933 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11064839 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148106195 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.320765796 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172330675 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.464558492 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123781985 seconds)
  done (took 10.650036105 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.114994359 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101671438 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100929063 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.095707819 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102296087 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086771075 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101606856 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102470562 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086988583 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099673806 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086690126 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101874614 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099657412 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085814864 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100579409 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083063275 seconds)
  done (took 2.339287485 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117654986 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118030454 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107865283 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108862112 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087473335 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105798403 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106135208 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089121435 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102060012 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103931842 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089742037 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10641053 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102915811 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08080175 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105864352 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108453002 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087286636 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106216539 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107607172 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091074683 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1069563 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095764501 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087476667 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107137639 seconds)
  done (took 3.268113831 seconds)
done (took 17.787639727 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155220531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107430758 seconds)
  done (took 0.993204137 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09332701 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110864739 seconds)
  done (took 0.937322523 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09689939 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094008236 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121321199 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10680272 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080935685 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097307373 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11938243 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080879062 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09738696 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097678395 seconds)
  done (took 1.7284541 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082013291 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108392489 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100202671 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093895009 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105266499 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095353626 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089297792 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099303405 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111179969 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078230208 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102581425 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115398524 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086725539 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115800122 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106179132 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100293668 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086068335 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098188165 seconds)
  done (took 2.510801746 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078976841 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09531022 seconds)
  done (took 0.915540275 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080162864 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092062292 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080128221 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098565373 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094143076 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077227744 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094456688 seconds)
  done (took 1.355751061 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.430900169 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135714429 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262953394 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101878053 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10386576 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298495722 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098379504 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085568288 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103870267 seconds)
  done (took 2.417841834 seconds)
done (took 11.597503989 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092408967 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113439882 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114002282 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.456400838 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108266389 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09891291 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147052302 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.245525471 seconds)
done (took 2.117790606 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142456981 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.562528888 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427382013 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.235145367 seconds)
  done (took 1.969804651 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.398239416 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098790716 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083667156 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083051111 seconds)
  done (took 1.413309376 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078361096 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098292494 seconds)
  done (took 0.927168784 seconds)
done (took 5.199747898 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0794089 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.133870014 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078562773 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099258836 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078331535 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099447363 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077949234 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096369945 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081068542 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098023935 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097605298 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081353943 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.097194209 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081595429 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094493926 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078723004 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097161578 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079498932 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094198013 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078363339 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097692893 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078416325 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095276652 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079975465 seconds)
  done (took 2.937544452 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099594556 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096291854 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103794135 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086858769 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10288627 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08720487 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102697413 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097864596 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087424408 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099933552 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102281036 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085626742 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100450043 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086510872 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10016645 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102360623 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088404655 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098589371 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083498358 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102040213 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103508632 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081699024 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10225094 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086512047 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102148404 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102186498 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083453483 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098786314 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103954498 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085197431 seconds)
  done (took 3.618342424 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084513383 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092976109 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078961404 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10271518 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078965346 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098296586 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078378521 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096529651 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079801761 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095877531 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080767177 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096360342 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079471574 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097612113 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079748964 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099349146 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112482864 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079291765 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096568267 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079290332 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099224714 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078862239 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096048527 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079537696 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095371122 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078666966 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095899973 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078926957 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09604366 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078851507 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098636581 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082788691 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095945559 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103060529 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083094444 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09728192 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082866427 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094992977 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080091801 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095426342 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078112337 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09556405 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079428029 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102904104 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079295903 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098714017 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079072909 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097748593 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079661816 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099956815 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079542269 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096079769 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098265816 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080950946 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100006505 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079287229 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096342067 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079113656 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09754035 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079442913 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09557523 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078453252 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098145693 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080009108 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110815855 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085928008 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096729743 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097299155 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080077879 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098303117 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080960151 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110305283 seconds)
  done (took 7.227604736 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.128911006 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124561336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079235929 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09766968 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077649053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096982283 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083090863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09689191 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098035326 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086025083 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09715919 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080681592 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098297984 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0947202 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096738839 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080987483 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103403105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094823907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079891476 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099728181 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080608922 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100702913 seconds)
  done (took 2.837019515 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.203713849 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101736452 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140461449 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105343664 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082119812 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104255242 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100639229 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0846862 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10319561 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084636124 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101605182 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103354948 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08439511 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101589225 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101099825 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084424479 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10313884 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085314208 seconds)
  done (took 2.634942804 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092471015 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096704004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09846051 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098530142 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100278931 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.193922094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104309761 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108413495 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084586686 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099120709 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091323458 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10174579 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084902108 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098933135 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101829766 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08238091 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101329104 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082283548 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10847006 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10515475 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08774441 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10862383 seconds)
  done (took 2.994856218 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095802543 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099162566 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119904346 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085160273 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095786139 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080751735 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106422976 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082459668 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106400555 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101742322 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082970779 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098789106 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087696954 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099397789 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104998943 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082130161 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101538012 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083072787 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101256107 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078655455 seconds)
  done (took 2.656759114 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100907821 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100740105 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100502026 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093711693 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101491229 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0837441 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110395289 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100279052 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083954374 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125590507 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1002564 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084017374 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109798261 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106019005 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100701271 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092727172 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109787301 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110111485 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083721794 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10096151 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125412202 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083953484 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110321559 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101063409 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083262146 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100778282 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100365108 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090079623 seconds)
  done (took 3.560643313 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080963603 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099271986 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080199934 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097931689 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079718763 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097438066 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080037725 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097226604 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082714664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097248174 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082301382 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09927844 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083705236 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100599049 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082816627 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099776257 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082231108 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097659545 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08032234 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096530221 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082598364 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099955048 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082494523 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097242049 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080358041 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099372349 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079537674 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09693557 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082852103 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097104841 seconds)
  done (took 3.46580174 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089518423 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106387358 seconds)
  done (took 0.963968764 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077336526 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114424893 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080226485 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104073664 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087751777 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101199668 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108802766 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086824712 seconds)
  done (took 1.527535647 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095834647 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111352648 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084973929 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113296711 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111714141 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098649275 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171490895 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102394002 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107626421 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081295421 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114025477 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082228755 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107085323 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082735074 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107204961 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088681808 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098656494 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106801791 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086200679 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098751381 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085276032 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109276904 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102481637 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081290475 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101933802 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093409477 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114133452 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103360425 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086291908 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108577572 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088695561 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095287245 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083170083 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101682534 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081466182 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111472104 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118389929 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086425767 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11014526 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102514654 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095541782 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096076748 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.1064177 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089593444 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111248446 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084514275 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101808042 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078782139 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100249179 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085891903 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096410902 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100862575 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078176023 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109230333 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08726294 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111619854 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081774336 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102767435 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104173698 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087296995 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108698253 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085333065 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10375132 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083361124 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111101969 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105715409 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094975886 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095912754 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077766623 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099256364 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093463727 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125462225 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.10763221 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084979602 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10295806 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080873816 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104039333 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102646073 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089479053 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107751155 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084286982 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107952223 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109762622 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083889084 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104482891 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109740558 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082270093 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103046987 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081945499 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118144923 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08147251 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09908222 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098260764 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094792459 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104871775 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083800973 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099025186 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090915804 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095210239 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084778109 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102765356 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102798337 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096178248 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106845276 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107988378 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093245586 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10788041 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08339008 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104938733 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080404893 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103181601 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099667623 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091183287 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094807329 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087125179 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101501357 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084628139 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110237318 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099454036 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083971812 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109287489 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09028654 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099602706 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080536217 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104963131 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102128116 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087396538 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110922294 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082701884 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096451971 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07942417 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104808681 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101963234 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087263257 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106607188 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086574986 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095510778 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081678428 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106375682 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111092557 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084510131 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101769521 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090872157 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103841875 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100732933 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090737153 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104838664 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084355566 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107086484 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084159334 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097188184 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105512957 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087225332 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099939771 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088166563 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105111962 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087721369 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10323989 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100505672 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090193056 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10241727 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083526294 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101197028 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082846746 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113795623 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103893168 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079490274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099006551 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092867823 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099217945 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083986441 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100384644 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086387372 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103082594 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099809107 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08339588 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103707185 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095594767 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105883942 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103934854 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090101791 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113278198 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083541724 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104110979 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101619934 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08472118 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102198425 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094468581 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10777903 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108214747 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086818478 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098251156 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090977765 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109501854 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083271215 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100100997 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083131059 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106808046 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106845657 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088180834 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102391507 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082070611 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103317645 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105727987 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087002548 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102049011 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08364827 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107457921 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083098747 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108780121 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103659408 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096484646 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105201762 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079461805 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106146278 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100744501 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090770237 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098327882 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082675632 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100992947 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085972969 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102274208 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087643239 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095997505 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110977573 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092683439 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102191756 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083621204 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102196855 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092178563 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103475626 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106231616 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08842086 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108916629 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095847868 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101116611 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087343331 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114471167 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101704542 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078597956 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107178267 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083521593 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102173551 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083155871 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09948157 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105926341 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094470306 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109936866 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077761946 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105140769 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101290994 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083390952 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09799998 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089390001 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105433884 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084764214 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109334007 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086461077 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102718032 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105923802 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089448875 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10291029 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086200006 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105504133 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084997382 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106045802 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10132845 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088375122 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100915429 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082628848 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104334309 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084995553 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102495804 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090610036 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102386686 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102426422 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088158013 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103611173 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085776452 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103044856 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084047617 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106365747 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103329698 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084787153 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105445944 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080089199 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109669347 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085260108 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111088227 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085082307 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.099822281 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107681829 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087799705 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109063607 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086318049 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103960472 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103697679 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0851663 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105453836 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091941979 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100058897 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096605403 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111999112 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10316898 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088553333 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103070396 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086912974 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102013767 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086456767 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104870736 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085665807 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104941013 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107905954 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087708815 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103651606 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087506125 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104116412 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086369619 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10496739 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079546833 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103474877 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102605663 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085336422 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114225193 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086907235 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103024027 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084091197 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106406045 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102097657 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082588004 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111471472 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11363489 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08631337 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110983142 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084453026 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.1057102 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115087405 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080246256 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101445694 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083348156 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101541324 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093379397 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103982452 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095385471 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104359467 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084158294 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101006604 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104314276 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084800056 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097308256 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083047198 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115997971 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084217191 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101697252 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086027531 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106996356 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105313782 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096390914 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102713622 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086486132 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104519984 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082926947 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.1031779 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085727034 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105520855 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101967061 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080749845 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098422734 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083799291 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102604881 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084888987 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100717559 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084257254 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109810853 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099975373 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085636095 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103097226 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078217694 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106090128 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086012249 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104211519 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102291034 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088398302 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10541091 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086248101 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.1117251 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082773505 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101583087 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101082522 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081079068 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100559321 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082992868 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101191698 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082022559 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101441593 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10830629 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081355595 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104428136 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083257446 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102276385 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091040012 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103661532 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105532764 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09123985 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103725662 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087952609 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113045746 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108142139 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088712617 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103266687 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08467461 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107509409 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082124311 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107403877 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100952225 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08445694 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101515341 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080553369 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100131548 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083557807 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099547755 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089353054 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101686166 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099422538 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083446608 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098005194 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084119485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104386453 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091603401 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103213482 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103955917 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079037052 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099911792 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086357528 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101511696 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088142815 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107527387 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09099088 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103901006 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101374366 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081988712 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110474554 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089273199 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104574426 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081058065 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104494263 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101659739 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086351594 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101436763 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083672545 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103170652 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088287409 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104725243 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084163933 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109455061 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104918532 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084795866 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102336255 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083986129 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101963729 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078218097 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102170439 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10282325 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089211842 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10343322 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083862762 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11252905 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080651751 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103101778 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104886339 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082735093 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105345124 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078723454 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102532846 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083972445 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102759551 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096525612 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082894058 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099136969 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085554785 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10072078 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079369318 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11470304 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11325515 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086393779 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102238567 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085931989 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099192716 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081454433 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104355528 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088313294 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10708031 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115739815 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085461151 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104372365 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081381177 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104548953 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089451784 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108305771 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083432679 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100261945 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08515055 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108596937 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110239505 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085688675 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104342337 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090018293 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106050371 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083325975 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109790559 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101680744 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090776515 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118794484 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087301233 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10553902 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111630872 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095081951 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105155984 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082351195 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106214807 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089544093 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106074952 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105515018 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087748969 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121286762 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089416342 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100970663 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10222403 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087663838 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102581069 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092699162 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104867394 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084173809 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107446103 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10449191 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09412023 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106948238 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113583569 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090277549 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108240115 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085891767 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105072412 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084893428 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103725044 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088702571 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105077304 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107685357 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092147383 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101409286 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095311498 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11138509 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105251734 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084321935 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104395402 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086997278 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100639536 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087401191 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103386556 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08429234 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103972468 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103810607 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088144178 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110971842 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088416405 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10613438 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087022229 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099895644 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088958271 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107930908 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105976472 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085637194 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105386395 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088443766 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108243044 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087677945 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100867917 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084897633 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104696409 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102065409 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078704241 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109251331 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08244649 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105175632 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083750265 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103494557 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084125382 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108007282 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106219556 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084747529 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104053408 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092891147 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104512547 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098368258 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081744087 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107079438 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082218005 seconds)
  done (took 58.53500998 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14473237 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080963553 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097622253 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079822775 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112425514 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099552739 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079157708 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100522764 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080230293 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101167604 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079225396 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098094993 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106898273 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122668752 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092611073 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101669657 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096845592 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080315575 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097438294 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080346265 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106732367 seconds)
  done (took 2.854816839 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103799983 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119229128 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113201239 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117032057 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089513639 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113282148 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113210218 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114187626 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099280507 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109651539 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115560539 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11312535 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091931808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109158669 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108908445 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092831649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118810924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108247991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115938676 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095975714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114465624 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114533588 seconds)
  done (took 3.207811856 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083572946 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101696327 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085297534 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100609059 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087133569 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101149342 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091437141 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.108170924 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087424242 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101319227 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.10021551 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.082917111 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10286172 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079607822 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101621763 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081145154 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154074465 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105408525 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082170828 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104429519 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.096638325 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085207371 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096212938 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079199022 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100490733 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088546436 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102540417 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081348418 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101107762 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08244559 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10184834 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.098509562 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085662578 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105744665 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085513905 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10454469 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087420537 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105606024 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083141348 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103909026 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087657359 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100707832 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08785326 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107928762 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.104489802 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085321105 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.107528813 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088050049 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100485172 seconds)
  done (took 5.506447828 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102943962 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162336884 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089494287 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146089133 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122023522 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114303946 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087619651 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140918718 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099835751 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084305899 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122019706 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118400232 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101644454 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089112783 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105891386 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101655574 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085018094 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100259448 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087960959 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101445281 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105954456 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090409408 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118130822 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116316741 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106273846 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083074595 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101697327 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.08851712 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118011138 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107991443 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107512285 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090252983 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119447962 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108542835 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083799528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108185643 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121975408 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084410943 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106433494 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098967946 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086796237 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10741508 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108775398 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101182125 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10258155 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10907344 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083811539 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101268761 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115573262 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086508385 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.1127513 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11875722 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090310913 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106366505 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108742061 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099396961 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103952039 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102099918 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.09063205 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119415778 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104083033 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091325049 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121262604 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107123004 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09535493 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120467442 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110690846 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10909116 seconds)
  done (took 8.109840513 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092425715 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10848487 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119417023 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118149553 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090822423 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111078261 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108553756 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091385626 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110965842 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114382972 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109521737 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13231587 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085679639 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114891631 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110801442 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091308488 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109557508 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108588176 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091019552 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110645552 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111490734 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118881442 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092166578 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121592456 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139873007 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104468539 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091165906 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110126965 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118859535 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110049388 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123611464 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093839949 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114327601 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121938828 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124305497 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09327778 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105079283 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111765105 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093773751 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113972499 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108104404 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123301466 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094297917 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108714686 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113779347 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09472641 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122901134 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12538231 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115452585 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115751862 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.093166525 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121901621 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112791658 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093966585 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12053636 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147715192 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121298275 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120156703 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109614073 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119287798 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101325043 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129305591 seconds)
  done (took 7.686016852 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106330166 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114859527 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115877585 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102247567 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084474861 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111349447 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086168104 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105819574 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097017034 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.117396947 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11840837 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111170553 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095325902 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120987472 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110461885 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11456961 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092769446 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111868342 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115978117 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09311098 seconds)
  done (took 2.962093404 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094427543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122656426 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085455062 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112284273 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107732137 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092412125 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107463286 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107651951 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08643782 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106184534 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094670262 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11524235 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10420073 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090527781 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113873658 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109943508 seconds)
  done (took 2.489073143 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097601522 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11485093 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.118089228 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084520682 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105080357 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102513314 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08518831 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102535296 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081314182 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122362072 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084364371 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10762204 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103525838 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083236216 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10249666 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087036527 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10291402 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082458545 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10363592 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119510572 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097105541 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105361903 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108107853 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089060473 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106532396 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093939185 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107813282 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106054265 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085241734 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106703538 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088612426 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115701633 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104375947 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086238742 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104956187 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08640295 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106070601 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087564498 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108211455 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105433127 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083692279 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106476063 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0869677 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106901432 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102491933 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085802572 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102398691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091039521 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105570121 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089574847 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105174116 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105742924 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086081402 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114505763 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.107853294 seconds)
  done (took 6.306778901 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097990393 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10749582 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083092785 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104105824 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090849 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108900119 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111010611 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087644549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107779236 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083342793 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108510739 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088309065 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108078095 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107232932 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086496627 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109812276 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080020382 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108376133 seconds)
  done (took 2.617010701 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090983536 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104230802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092826364 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105880281 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086248085 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109434407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080233104 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104996067 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103235596 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085607333 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108371358 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088897701 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105268908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089604254 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107642752 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088789271 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110834972 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107008232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088266002 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103588391 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090841816 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104945817 seconds)
  done (took 2.994846055 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.111374443 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.118717278 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.090746573 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.224103315 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.099202081 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.126848503 seconds)
  done (took 1.610561518 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109414171 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118734269 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104801609 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108872227 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11692487 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105792638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08754154 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107078329 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117263029 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100763539 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109629915 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117658611 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115025658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09587925 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114086388 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112048845 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105548298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086787075 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105909789 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125726383 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087743407 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119134289 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10742163 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087730876 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110127719 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118177058 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118145347 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122364004 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088085085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119715553 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115835136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091025213 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119984858 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12260719 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10957627 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096974015 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107893179 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127877778 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113058533 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096218436 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107920655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113779859 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097046782 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11244213 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115382356 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107223181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092424207 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109498411 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108640911 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134091076 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095805545 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116982939 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115013843 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119924675 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119573734 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135537823 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102911596 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118714353 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11633204 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122945331 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116600382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093969933 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118339649 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120134647 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115998743 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117577859 seconds)
  done (took 8.132453881 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101863484 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124393777 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106232946 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120665191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095669938 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106282418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106740821 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087506296 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106390398 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105493552 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149653574 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087401941 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115259648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117352517 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108863364 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086958752 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109835593 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115786481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086696287 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136856071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110036228 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119469125 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120174276 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09881456 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125089323 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116433762 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10765089 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087404214 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105773785 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106466288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092205245 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106509593 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117062067 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086560931 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118596526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106326946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10617819 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092197012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106492394 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112624265 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096583146 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126490327 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10612928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106345533 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120889543 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087849827 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106451121 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086592901 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107330167 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105586897 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120805277 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101831014 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121947907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116745116 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106481217 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087374922 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106693506 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106484647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087046454 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113276665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11526218 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106636123 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134224655 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087420805 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108102546 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116916629 seconds)
  done (took 7.952697724 seconds)
done (took 156.135913188 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.222232517 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198315628 seconds)
  done (took 1.264169973 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087247842 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135501714 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097543299 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170036338 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085182117 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138426658 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136470143 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096844706 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106372129 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085781177 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108612132 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091327138 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173908734 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08543407 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105549228 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10700511 seconds)
  done (took 2.662007612 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112838207 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254709544 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124544312 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104177688 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088761621 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11100935 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084489825 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112397948 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089317421 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104580786 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088088652 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.1072177 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08366338 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108070141 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089918698 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107819395 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107445341 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090267454 seconds)
  done (took 2.820048986 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112093972 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142406833 seconds)
  done (took 1.111880272 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.237018332 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.159436595 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.224535444 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.473039638 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.275425376 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.35266445 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.194037813 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.20535657 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163850423 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.204881544 seconds)
  done (took 3.33964111 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1178696 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178735264 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311902902 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154160962 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10581376 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124841914 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153589904 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127799777 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.120264402 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100075636 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120138727 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115423323 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136101938 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094268443 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115481788 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116129842 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11987309 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112425661 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112464221 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094351475 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137063907 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104490747 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093475638 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.111296947 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.117675559 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097523114 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103077608 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084081803 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114291354 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112882898 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092518736 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123538062 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.116810973 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.151491372 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121031257 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.152441159 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.115945317 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090256938 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112590998 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090184416 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116794769 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117717133 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123388774 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096083769 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10364928 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097789146 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106619761 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0848658 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11477599 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116768196 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093021819 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114017136 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153262359 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117111448 seconds)
  done (took 7.284816679 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.779328937 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159597838 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090827957 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.872198329 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141502496 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108858427 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.774168538 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117217443 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255600678 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.746742842 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135540597 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097060135 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22759005 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260685216 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.014039304 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290772283 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.633147424 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124055026 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150344493 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152796362 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115622155 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115927533 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13028923 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452386947 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115180432 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088772735 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118475645 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116839793 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15914887 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124135921 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092013834 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196436893 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247545281 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201892986 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094195867 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109870877 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088814328 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188129633 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266401207 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192283603 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17776963 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107456131 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088918094 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119890438 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130981702 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085910686 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181896072 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173381458 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167671533 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114789937 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117516038 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097592324 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120122079 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163508707 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120096959 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319316369 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308019597 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089750458 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120204342 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124263374 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239916716 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122384379 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223475567 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138273504 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188700283 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110337928 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794564303 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169037223 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110196259 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095154992 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118813799 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115025563 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099950254 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16496188 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390011512 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122238003 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112864637 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090150222 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.250130686 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102704292 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110037022 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15973784 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11540606 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098434371 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122735999 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119993 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166779604 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252869481 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100827382 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118191874 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113925152 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102948948 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11546618 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211174439 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217257685 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160475783 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226285028 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100496944 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182620503 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167397764 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118517189 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171121892 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118789529 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10232021 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12091968 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215077309 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144126523 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10071225 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115443737 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116981597 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147092899 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125272566 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096322189 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169421526 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500879323 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166084812 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107288329 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125935421 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099183364 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159005164 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117278591 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256051837 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119911106 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166435383 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096701131 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107028888 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118527112 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16085965 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120773706 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098478671 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120901763 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117442481 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233806675 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215021339 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119314782 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217325611 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183445678 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117232264 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170300373 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119896523 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165985473 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118236581 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099996708 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115056167 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795738943 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101374808 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119452888 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113658218 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194346104 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089495559 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122636411 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.121850242 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086757963 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783629831 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125106632 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098365819 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.122481772 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116517365 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118726778 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095819098 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114408511 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160542312 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22577854 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117965587 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098134769 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12292508 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159306733 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115564872 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124213999 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103207345 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124282351 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12030873 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092186305 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1241855 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16644387 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.182890691 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.215468192 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.56555145 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11024702 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100600977 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223961942 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110938498 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285036309 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096412497 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222014408 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181769087 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098465919 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.304576896 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162880154 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193060492 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125837511 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172055385 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10851026 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116262683 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16343841 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088723466 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117227415 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160150601 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122850424 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121341608 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957728887 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089490222 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22212775 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108634283 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.168508643 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115356357 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118422823 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270235118 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110580069 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126206794 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163353894 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112384755 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101441779 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.754270367 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.122476323 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098969039 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116364111 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219045058 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161638577 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119392879 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117785811 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097150164 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.15999567 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.226867052 seconds)
  done (took 43.744781247 seconds)
done (took 63.076754568 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277714177 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214487692 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265095241 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169177184 seconds)
  done (took 1.881196294 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169177174 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147892074 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121722451 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105525606 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148614682 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084963156 seconds)
  done (took 1.656299385 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.357143594 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272405087 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242443853 seconds)
  done (took 1.756846082 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.293518097 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245956295 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465697522 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.320095296 seconds)
  done (took 2.329175943 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205767704 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131595309 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.108473594 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102899397 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.192666559 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.241301277 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140352169 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197360255 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097885339 seconds)
  done (took 2.34713395 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.193440418 seconds)
done (took 11.046699137 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.159434992 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.26431153 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.210760775 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.24799551 seconds)
    (5/309) benchmarking ("sort", Float32, false)...
    done (took 0.170517333 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.147071724 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.24520911 seconds)
    (8/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095459538 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121058187 seconds)
    (10/309) benchmarking ("sort", BigInt, false)...
    done (took 0.225964319 seconds)
    (11/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115062118 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.255543068 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.188403548 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092103899 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.192060371 seconds)
    (16/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.232128068 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.243920273 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.212159162 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12398862 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085371744 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113664272 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.175506095 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11179042 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.136265205 seconds)
    (25/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.132849479 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146493299 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098572397 seconds)
    (28/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.113988362 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.143148964 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08522732 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.167566536 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.181621652 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.094714049 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.198794998 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.152223782 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09306989 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118573847 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.189709113 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.134331414 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09128824 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.130566064 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.195311228 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091802628 seconds)
    (44/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117413256 seconds)
    (45/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161854688 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.171790791 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.11487256 seconds)
    (48/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.186918601 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11599174 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.134345255 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.163259393 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.14782023 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.190930538 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155637881 seconds)
    (55/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097554474 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.218250889 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108589836 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091869523 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124229779 seconds)
    (60/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077973272 seconds)
    (61/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.144524745 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214278805 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087187896 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.162858848 seconds)
    (65/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.144929613 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115368563 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.187188266 seconds)
    (68/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.123670234 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115833621 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066446601 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.141958365 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.215303397 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085873521 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.136845036 seconds)
    (75/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.223931244 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136592623 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096516925 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118247195 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.140024545 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.0762177 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181233187 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.11965529 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066188438 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.135299066 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09908775 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184198311 seconds)
    (87/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.179250007 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.086585675 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.106483016 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.111505501 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175493524 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.232761584 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133498792 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127259952 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.186333314 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116403394 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.159076976 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.228370747 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.117554388 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067305143 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.219044076 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.147853683 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.205100182 seconds)
    (104/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.076300759 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.181048159 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.120408076 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.160948666 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215091841 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198362649 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135151839 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.16573765 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116119822 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085498685 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.128799786 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.107801418 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092801973 seconds)
    (117/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134962745 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086152997 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117872815 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067786893 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178553973 seconds)
    (122/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114577707 seconds)
    (123/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.333964604 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.191530688 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.136720018 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086230518 seconds)
    (127/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111041671 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177105832 seconds)
    (129/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068948429 seconds)
    (130/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.147685127 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.154438786 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.088170114 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.208128049 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084084622 seconds)
    (135/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091828298 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.200504344 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093889753 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11662968 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089100565 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.115473668 seconds)
    (141/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.188422219 seconds)
    (142/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.155190713 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089052969 seconds)
    (144/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123132745 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.090384725 seconds)
    (146/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11651772 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092698493 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.089284953 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067707913 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114346788 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06705147 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119317036 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098974921 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116431999 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.152779754 seconds)
    (156/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.138468484 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106945113 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.092432699 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107476271 seconds)
    (160/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.124966363 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1748012 seconds)
    (162/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066303535 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133569528 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107212598 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09291198 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.214975478 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.180908736 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093922171 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.09007843 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085216714 seconds)
    (171/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114197403 seconds)
    (172/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067482577 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066227871 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.088080723 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093953348 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.135103655 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.119782303 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.130568251 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107580513 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066004591 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.137837643 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085567058 seconds)
    (183/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.135506307 seconds)
    (184/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.114089733 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.110518893 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087285366 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091523957 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085890074 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.087915093 seconds)
    (190/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067450087 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.178058655 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.220237298 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088608395 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 0.170425453 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092704793 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092260311 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094811324 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.108726073 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125606943 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087131432 seconds)
    (201/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113853398 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112313949 seconds)
    (203/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.13959568 seconds)
    (204/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152985918 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.089018027 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.094763033 seconds)
    (207/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.092247306 seconds)
    (208/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112111882 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.189773475 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.089420424 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.131693033 seconds)
    (212/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111376304 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067531871 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108520076 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068066896 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108392221 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066965668 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.220473357 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066481277 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108475434 seconds)
    (221/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126396905 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066540073 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076433733 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.109942863 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085393265 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.133706777 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.115469415 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094224339 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.109071018 seconds)
    (230/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102485367 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109000694 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.14023629 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094145284 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.134362465 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091500952 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083838055 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107673828 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108491544 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068805416 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091599261 seconds)
    (241/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.088375312 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.186538678 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076073876 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.121086322 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092185868 seconds)
    (246/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113344796 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109747583 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.129676387 seconds)
    (249/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094307936 seconds)
    (250/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.088785955 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067209747 seconds)
    (252/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066892512 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121299489 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068798729 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.151591627 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.19514611 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06723707 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089224203 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085902448 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119070772 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067676547 seconds)
    (262/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.101001149 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077189214 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094051119 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114565288 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066335421 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.088178903 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085146916 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.116582158 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086909817 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 0.185940911 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.128916586 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066789772 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122948705 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077938176 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114343515 seconds)
    (277/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06702728 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116128288 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093946839 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.135649213 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067924346 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108036226 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066685498 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.106945808 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068229685 seconds)
    (286/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.089790429 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075777593 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094307682 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.088623236 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088868501 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.088829596 seconds)
    (292/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086899386 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090011639 seconds)
    (294/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.076146287 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086979082 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.114759807 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086047023 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.131746836 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068215545 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107908272 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066603245 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109567842 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091176192 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110686572 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089555751 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112108304 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108173127 seconds)
    (308/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066949951 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078062436 seconds)
  done (took 39.431290592 seconds)
done (took 40.318893125 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099471252 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133621204 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095731483 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133667655 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121624389 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090586371 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116688625 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097571526 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121948327 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123250264 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097412047 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09273093 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095730108 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11873478 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096222789 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13364431 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122768375 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09363265 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117855742 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085585187 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117083799 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086248792 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110197386 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070046832 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120124329 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092787552 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11466813 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.117716377 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085713671 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108416261 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089315281 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116208357 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086189269 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121619704 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092584719 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117838584 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096368464 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118901066 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111088709 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086212649 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116313189 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086208695 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115273896 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093603582 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115159063 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09211282 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117325211 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099524406 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134128576 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110651355 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094373404 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120103976 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09592289 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116443674 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090509601 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119348574 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116122539 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111477405 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12005369 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08827955 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117409054 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094450176 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114707563 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.117465022 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094775529 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119312295 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097703776 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114684553 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09675493 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11517272 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085829176 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117245238 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.112274467 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086339385 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118838504 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097374672 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109096533 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09207368 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116319738 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09121378 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108242475 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088623329 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110663837 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093053075 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111522249 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069716297 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.112945475 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092379908 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109045391 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095623674 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115143266 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092634944 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111984224 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098376805 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108969572 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115010844 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.086993502 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.109420839 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088370901 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113327587 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086337254 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110968975 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095551625 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.110428829 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093143619 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121335201 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086221712 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116239265 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085613283 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.1089345 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.123998364 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096847194 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.109142229 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088884489 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108998914 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.093884849 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10845492 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086041686 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10952712 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086393531 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11569704 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086168254 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111609586 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09355377 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124282742 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086373881 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113127676 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089095957 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109395098 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092036386 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109137518 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086622645 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.110626828 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077414305 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112898758 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086401641 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116509465 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089155879 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117598659 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110953092 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096252028 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.114865754 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092437549 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116014607 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086004725 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097280779 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089480464 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11123776 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087784419 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.109031849 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088371869 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110104274 seconds)
done (took 16.751956041 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087011074 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183523578 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149139648 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141119406 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106770845 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11072579 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120737275 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118684345 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112254321 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141020005 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110577083 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130734096 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146042382 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085767946 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11010073 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090533272 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110660078 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102589393 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144719347 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131638505 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163150023 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086091341 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144760406 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134048045 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119379226 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114664332 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109996247 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091235103 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114446022 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102825809 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130406301 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113541869 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087004666 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132886477 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104693238 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119023139 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.109451808 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094152975 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109790075 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087045509 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140174543 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132035748 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091875977 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116244266 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090340052 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112477763 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088881527 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119306099 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120911292 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091211974 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12477503 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15455357 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091009161 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120572748 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.108844455 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098403054 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120208999 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089995795 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112550807 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090020009 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109486574 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090989615 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125803451 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140383019 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091348017 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120431599 seconds)
  done (took 8.535169834 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104326662 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138038847 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128703313 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105342457 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110688691 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087824362 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111714243 seconds)
  done (took 1.741613164 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088377177 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131776008 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11040139 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134141238 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130737508 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.124948883 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122523906 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088202782 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129763769 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089663068 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132511631 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150590592 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090456022 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118759892 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136377652 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088271045 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135885588 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08825201 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114761292 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.134640145 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091612124 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133128745 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090272463 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113147967 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102810363 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112139536 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160448576 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092843768 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114336564 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091466598 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110531736 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164147436 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10155096 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12379443 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112032063 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102779621 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127259252 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086614341 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128465744 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092823811 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.125980541 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112799199 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089106858 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.110028507 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093183704 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122264473 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089596566 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113368735 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091868414 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132218237 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088505772 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126105151 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.112368067 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.091683083 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113488095 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094479624 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122564288 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089613742 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132708713 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089440829 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129367298 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.128183197 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102110335 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129256738 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091262053 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12689704 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.125238135 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09104405 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113627001 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091617463 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128899488 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085793092 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114184027 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09916379 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113778157 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.135529488 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.110396986 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113581464 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09897561 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112754133 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088443523 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112699122 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136502577 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092357422 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11270302 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092267175 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115620983 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086577729 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111122162 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09199258 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111329655 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.08933937 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115719882 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088898898 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116164788 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105458306 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.1138218 seconds)
  done (took 11.714344617 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089645298 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11357432 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09136105 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113986546 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089845387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113599671 seconds)
  done (took 1.577180566 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113791737 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116578432 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103651897 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11839026 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154758564 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.127359939 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104424428 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123062562 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107467008 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125490771 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127365154 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.1047288 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134608405 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120530507 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103292638 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118874369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.127432754 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099083055 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126332597 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095569923 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135271884 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120110078 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096548502 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132075467 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117025949 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095391329 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124577276 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101945589 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126179763 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12152846 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095869768 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116863704 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119848255 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097154768 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129114604 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095757935 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119552637 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117824549 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099537607 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116737625 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.128902671 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09731285 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126169863 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093750549 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122572938 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120240766 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093494027 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124251527 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.127899166 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093604244 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118608227 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095284021 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117723651 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.11777943 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095261463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122254579 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093546242 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128276599 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120484786 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095746426 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116698273 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093627939 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121706712 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116901658 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103916062 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117520723 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119533472 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09550323 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121713274 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095072216 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118112461 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116792442 seconds)
  done (took 9.16673179 seconds)
done (took 33.677884193 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67519355 seconds)
  done (took 1.634000927 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.723715012 seconds)
  done (took 1.685391616 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.716260818 seconds)
  done (took 16.678963071 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.488700513 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.567832085 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.808598935 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178778567 seconds)
  done (took 3.006051024 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.910697503 seconds)
  done (took 1.892435875 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242921927 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228817478 seconds)
  done (took 1.440202752 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.756977912 seconds)
  done (took 1.732977625 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.338687729 seconds)
  done (took 2.306963975 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328356206 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182386578 seconds)
  done (took 1.487525604 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553504186 seconds)
  done (took 1.530560948 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.902437621 seconds)
  done (took 7.885844979 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257127829 seconds)
  done (took 1.244283468 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297004787 seconds)
  done (took 1.27461964 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.290873168 seconds)
  done (took 4.270254175 seconds)
done (took 49.036525828 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098054891 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125448586 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100977108 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123187019 seconds)
  done (took 1.419544133 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099781704 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119364799 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100031335 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119259776 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124722236 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095083419 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121307185 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10044581 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119021719 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09545895 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119241658 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118377109 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09768969 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120698538 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092973339 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121935385 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098961481 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119269038 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122030269 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096079642 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117428757 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09718084 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122812882 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093499236 seconds)
  done (took 3.613574534 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099543156 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117025614 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096194877 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116194428 seconds)
  done (took 1.416635971 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098550942 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139818363 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136324387 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09991404 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141214753 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134540503 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09115655 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116347605 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093018692 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124020553 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089663077 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.1481725 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136053162 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099746306 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.125546268 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087848677 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115890939 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134656914 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099208565 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124284477 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092300909 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123560502 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089761169 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137662396 seconds)
  done (took 3.763043673 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157571602 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.149520909 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137019629 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09460759 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.154286261 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140391417 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08979999 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.138913493 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087682598 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128362426 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116846616 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132803209 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126714627 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08795785 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.111847252 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.111470042 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.101511421 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126392792 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090480368 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144607415 seconds)
  done (took 3.420013108 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097198579 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115439668 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087579817 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114500259 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.097838901 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119313043 seconds)
  done (took 1.621175117 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089787858 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113075908 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089466906 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112412929 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094007867 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112834203 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087691815 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113205554 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089102548 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113527827 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088944049 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111775218 seconds)
  done (took 2.205856683 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.457030045 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091552543 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11914296 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109822662 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096037838 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113122841 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103483457 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.116923411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138788836 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088988509 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113782335 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090296161 seconds)
  done (took 2.627189978 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234760317 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123022111 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287323559 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189208014 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157364803 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169194091 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150343309 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162780383 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194576816 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155151757 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229194172 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193033025 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149562129 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211728603 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110764169 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.142808418 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195217638 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240371243 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153023169 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200907903 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223385409 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163344208 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176868335 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149456646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135622277 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166102791 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094603392 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128417886 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231458648 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175741056 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18606605 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160955023 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144880663 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236037777 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245765309 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194189398 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20901106 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10810881 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166202253 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164535861 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260054372 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111522104 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228795277 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156472249 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129690543 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190735244 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165464614 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172481979 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.14696845 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1362491 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217929698 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211260039 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188647637 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135391835 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158066336 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157826552 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164208064 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149641075 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248631627 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196796548 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201653093 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094066877 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144921375 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19023828 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179627674 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.187661108 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178792085 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145258776 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190318145 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184885148 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162596265 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21333334 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.1806574 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136356723 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168305561 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172209912 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167159154 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254075819 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175622413 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12015263 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165482529 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14872192 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128020626 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166636444 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123207326 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210159578 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148321869 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133276925 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161073999 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157832368 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159188029 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196695553 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213881493 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119639818 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108979173 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153980374 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152181977 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185645281 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137561956 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157447178 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157975344 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.101308156 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199219448 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097032944 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173476552 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116131715 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17480375 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180144213 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124924599 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156702495 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14875047 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123412505 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197823421 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198033407 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137744477 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105382972 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229622013 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174062206 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.147444534 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176485366 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197774387 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.13965787 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147575476 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221316625 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215570223 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137580876 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201428304 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152164179 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132713809 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131446163 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176845701 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153774162 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160108695 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104938538 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.205221183 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207851037 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123690843 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110529526 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210276262 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130774882 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104034949 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157335456 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146052057 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136148966 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144229826 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148763294 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178594754 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177471779 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150416781 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164418391 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148250843 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247394016 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138223479 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122223204 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145412558 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118736052 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190810757 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218813999 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104065589 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226306543 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16933549 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153010302 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168622143 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107096871 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173127134 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128392257 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118035281 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191169244 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163659778 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161058207 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19344582 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152884963 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.205616096 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.17956337 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174275419 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171766959 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161954649 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157168362 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.135947037 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157084577 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162882011 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096013658 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140217787 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132674282 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155049825 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140724688 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106773063 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222130484 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167011859 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14573978 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156081851 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121797019 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20154968 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101052552 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173123921 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199099577 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118897873 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218652049 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190459121 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183693348 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141306825 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230264286 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092448858 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123010144 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14011756 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167838727 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106093337 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132873309 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162900266 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17673442 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205555257 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174608895 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160743334 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173631873 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187764926 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119689066 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140035199 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206463984 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173304203 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179000161 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115258645 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149100441 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174474952 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15326243 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251508706 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163682466 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17350856 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231520933 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146707306 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104653964 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148521995 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182732356 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150806951 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19874873 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118341635 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141733309 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158560672 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13266965 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158326457 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180098993 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160386507 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211876779 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147547038 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184609268 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1241431 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161324749 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155856439 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16166496 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08117007 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17170129 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225354439 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144581712 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166475286 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188898702 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127865493 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.175448416 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208471099 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215195763 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109574663 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15562605 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157651561 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161268769 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168918559 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174570751 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156691225 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211271893 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128504557 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133363857 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137212152 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148124563 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148460394 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105471085 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146532642 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170523084 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137445914 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185602016 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157639724 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154500657 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16762814 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148471397 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143135577 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14712587 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212626502 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171019052 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235759442 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146222085 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176526195 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20121224 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124039433 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129085513 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104847858 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174057869 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134750642 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185037943 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.144536218 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155341015 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177052318 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214326902 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11073121 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118118594 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153708858 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170129905 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161975717 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149285845 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156266609 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202786187 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140033697 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102653058 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168281176 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154244497 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14506264 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193374978 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105514437 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145683035 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100211554 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130870461 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161792914 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202839558 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133030623 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178900447 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168493216 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166157559 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161563128 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147278318 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145548957 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162832757 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198060029 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180755274 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.130200587 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154991226 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173583753 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21643806 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157736971 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111949213 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225539409 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189376717 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193513522 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140681777 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16511169 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164281258 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155084363 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207835977 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10691518 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226997188 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106610814 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220706728 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150598362 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140142704 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171579115 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.145964004 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113999434 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209426608 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17030487 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132818449 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105033163 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164751908 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197918658 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150960479 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099564892 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175105678 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.122721853 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185229387 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255246111 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13138712 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15060253 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11815639 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132869222 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154238306 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154532076 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136998768 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.156792924 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203368317 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131604525 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187946749 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225661349 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166750347 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172395336 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141125672 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690685796 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127830251 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189890513 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150717322 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202737218 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147927526 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16814564 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158014817 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165102177 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21729758 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157050252 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202383227 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214709294 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.174386384 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129232733 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155785857 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158465885 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141339829 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1493477 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163564599 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156154381 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148700687 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173946792 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167775218 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.130769632 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112477168 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218414918 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125786034 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209340761 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176282327 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110254695 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194312631 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181997538 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130254434 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177708032 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228135043 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113322899 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147516245 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131812214 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151373816 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254621037 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09647598 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223571353 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174294162 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155538929 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16405052 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144152691 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186890404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15488369 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174526394 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144119205 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156660077 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153606607 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134244081 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101792237 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15112644 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161758323 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.144798618 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15524094 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.158848498 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188830104 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120921347 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11584682 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153470908 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210377356 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212980638 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134341796 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106717194 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160511784 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148737482 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172089364 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200749447 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107090818 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133034119 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.133898589 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129883499 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134186864 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150225645 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128296396 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185199476 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20185606 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132275133 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275818431 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112482323 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151596438 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.112555323 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104334286 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14816111 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143320687 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155438265 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146769696 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252311886 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.118110139 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.129498722 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145123369 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097796095 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132497096 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161661204 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16246378 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173335832 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141371218 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079426823 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154110834 seconds)
  done (took 79.344673734 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17328565 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128822573 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14433102 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198071853 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173158062 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266039138 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.206754338 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249916066 seconds)
  done (took 2.607307245 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.091656858 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142588835 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.149589139 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131170568 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090906459 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.116693314 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.32594597 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130740551 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090168524 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.138186413 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.144051734 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.114912785 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.49945515 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.121777352 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.115075945 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082481596 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.11314802 seconds)
  done (took 3.658573308 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.455538052 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.654199811 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.471659802 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.121514438 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.861766614 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.130677752 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.250831072 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.199070866 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093950291 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.455270416 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.762863837 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.172590046 seconds)
  done (took 17.698082063 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.097142778 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.118382812 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.105900744 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.132298012 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09465982 seconds)
  done (took 1.617281878 seconds)
done (took 125.987583942 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.102129317 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398906729 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071584775 seconds)
  done (took 1.573342373 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106114893 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134015603 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107213133 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.132964536 seconds)
  done (took 1.558869125 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096723233 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123975161 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107728451 seconds)
  done (took 1.401898816 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.316826992 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187122883 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.140176429 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105029894 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126875845 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102030402 seconds)
  done (took 1.407277171 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096621403 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124322186 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096999071 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.126692814 seconds)
  done (took 1.522178992 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093879566 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070637175 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098985067 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073873504 seconds)
  done (took 1.409681826 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112191294 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.128499662 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.1028966 seconds)
  done (took 1.422224071 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128559476 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.135885782 seconds)
  done (took 1.34342872 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.103761577 seconds)
  done (took 1.177838847 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.115877888 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.166618373 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.192045247 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161757341 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.222862794 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.162534729 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.138683798 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114549736 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.128757099 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141033159 seconds)
  done (took 2.625393247 seconds)
done (took 17.262176917 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10206272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511338652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.41190753 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116072852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722079957 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380248983 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.019585954 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143406686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162584586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092575135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136047202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697060112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984153313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.461059907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969169613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.364055599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701473353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091706069 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116751242 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092452749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.003131263 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090748178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119047436 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09172035 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700100458 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423290459 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093492958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368485594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091444027 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124246628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408577502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093670726 seconds)
  done (took 16.95150585 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094523024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171387987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097806468 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135090892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120941873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093590998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121520447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092734992 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176130556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120003075 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109687064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118030312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123898098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094322839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138650098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092096222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123065005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117851364 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091883716 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119835761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109940627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118154839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093470646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119738865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093769446 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133438256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12048013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.091310803 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117934385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098250995 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125317862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09405243 seconds)
  done (took 4.749788477 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139593231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180067472 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125260266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125094596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16824358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120650497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19612171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143883519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152874208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121070947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13689954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092502633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154469486 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120394941 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113395452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118845566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095595685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120168673 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091648419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120471747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137756993 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092439491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119684311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092086262 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120719248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133981964 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094955396 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118979894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091931101 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123719641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099753503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122133403 seconds)
  done (took 5.068255811 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095747795 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125279883 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1073223 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135864025 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094560456 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123292416 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096623533 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121333656 seconds)
  done (took 1.983286006 seconds)
done (took 29.82676605 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103275265 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.119924962 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09785434 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131972936 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097246734 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.129716608 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090693544 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.126386381 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.098782238 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124457951 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.126715345 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092057825 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121820453 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091077028 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.126832246 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092344781 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.129595604 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096341252 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.130116277 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130560927 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094062093 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.126519914 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098705922 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.12998581 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102735705 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.12958394 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.130616352 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.097501932 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120124427 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094979876 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.120938427 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.101928614 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119326958 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.102409718 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119818461 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092175289 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118408652 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09171802 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130069857 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.127340998 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.095177162 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.126606399 seconds)
  done (took 5.802094262 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106832558 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145874291 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104099992 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082463939 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.114451212 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080664147 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135202578 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079220234 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108081662 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106906104 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076405398 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.1039573 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07867227 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.09978887 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076604915 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074590518 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106421618 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075276836 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076094012 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103934769 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079151447 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072620198 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.105737429 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077786392 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.101713095 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081269452 seconds)
  done (took 3.539728416 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099064553 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132202837 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111707163 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180356811 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158271738 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09984908 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129026747 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137651327 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108213537 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11778682 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095022937 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146561858 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110309728 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126029987 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091821627 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134540312 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132250136 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092741043 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124775435 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112718402 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136314687 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101490802 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139606951 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130088603 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0910809 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120277148 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096009928 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132178922 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096199426 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127196522 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123462032 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095834479 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.1196929 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103742781 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123538151 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093083933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139309853 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128247329 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10078981 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119301871 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095240149 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.118824032 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112192386 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16340604 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.118023492 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.098012701 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125466567 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.101058017 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118504946 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109561206 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128659726 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090926641 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122664468 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091047666 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119638 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133150498 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094106006 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12180365 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101746771 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.121958187 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10490298 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123185971 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10759318 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118342434 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125988337 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090983531 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119069028 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091242472 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14112073 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092872866 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16107993 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11974085 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093208451 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127607568 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099599902 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124531878 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.091343024 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134360596 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101222491 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122790421 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12704837 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09589296 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122775533 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.110375624 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.120913373 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094599012 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.119895867 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098542504 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121748078 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.091986284 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133469808 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118002777 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.094957124 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.136334259 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091209382 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120931624 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098197493 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124091927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091344591 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131497345 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124968831 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.092871818 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129006803 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092198175 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12169655 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.101827995 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124139281 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090530988 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124693701 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125242131 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.092697014 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120516097 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094696491 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120543499 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10177402 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126579425 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097101378 seconds)
  done (took 14.556667621 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.223823965 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214644594 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.12179308 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.206161549 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.104428116 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.131658725 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209395935 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.152085723 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.092966942 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.121024946 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.093257318 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.168054309 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.153029676 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.167636441 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.102864073 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118506851 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110487795 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.161029549 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212380454 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.203326365 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140748912 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127847971 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.094634377 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.122099461 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.094220892 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.1285371 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.13786365 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106048023 seconds)
  done (took 5.125060056 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10681228 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153145103 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097635164 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14153438 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144892943 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092274246 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124881109 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094537007 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.131570961 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133319965 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091592894 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126549361 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099684223 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128583875 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121403578 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101828771 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129106841 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094146581 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123591538 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096616445 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.126412366 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.128390613 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.096845133 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119027042 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.098622241 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118431595 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086048302 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138787928 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12048333 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11403302 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118221626 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098908153 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.129632931 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092689815 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120308651 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094810252 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122257248 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093834171 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120640409 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090856169 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.117758027 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076597508 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118924502 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132424792 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098285032 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106336095 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.097772394 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125770728 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.097311363 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.11729775 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095004798 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122415164 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095814736 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127540559 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097250967 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125222061 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09447533 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.113180179 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.097858743 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122067545 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083391341 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.118604127 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09922191 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1154254 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10045483 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125625616 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091907697 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122356592 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096820291 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12541554 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122028774 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.094681507 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.11784497 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.094651342 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.125446667 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097408092 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.122751093 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091174795 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119858154 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.092589623 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.103065103 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.092138419 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.100822822 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096052943 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.119017391 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.091576899 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.121848311 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099571165 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133820281 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.093434181 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.125976491 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121048094 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091375264 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123131448 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.082529127 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.12259134 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.106989226 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137062346 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092772901 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119386104 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.133556693 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097355507 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.1194133 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075611355 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.126896485 seconds)
  done (took 12.738484155 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.115137651 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.145780002 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094420254 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.134096293 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.146645042 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.115785755 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128125973 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.09934396 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.122117606 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109491981 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.120613059 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.100415659 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123850503 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129224149 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.115783092 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.1278877 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.094586771 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.129328443 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101259543 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.155794339 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133713379 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107189506 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.131851893 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09258848 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12515727 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105106233 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.146650632 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.131199211 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.102867212 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.134068976 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.103745973 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.146815309 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.107812998 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.131027889 seconds)
  done (took 5.218276494 seconds)
done (took 48.062541678 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.183394066 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.387443048 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.174368929 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.967145446 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.225385256 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.198412373 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.184166967 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.17554339 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.44338045 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.177181228 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.420360239 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.690307173 seconds)
done (took 59.335630223 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.269596502 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.310169095 seconds)
    (2/2) benchmarking "String"...
    done (took 1.441563788 seconds)
  done (took 3.856952393 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.521474908 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.039065501 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433892576 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.173605604 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.178133036 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.47332209 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.667743723 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.402410899 seconds)
  done (took 27.472327353 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.17697522 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.517332371 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.344540004 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.34089005 seconds)
  done (took 17.485194849 seconds)
done (took 58.709686368 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.185798216 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.245843684 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.179986071 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.165878454 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.27972077 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.196199738 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.518094572 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.410978461 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.180257466 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.172522718 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.176873532 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.177743254 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.194999345 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.490004185 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.18113789 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.178646701 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.238998509 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.65919837 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.535611607 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.184908343 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.17841509 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.21849229 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.183728085 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.181465256 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.212523677 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.175802465 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.173937646 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.182742592 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.199056416 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.179586959 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.266594494 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.726226235 seconds)
  done (took 190.537788329 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.175835218 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.240700825 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.280280121 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.199882579 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.59815451 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.377752173 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.312616454 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.662114302 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.195320372 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.21082458 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.416120339 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.181046909 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.474303531 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177491118 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.184720935 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.277364817 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.442129751 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.498677665 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.190930763 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.43241395 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.194201087 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.450563053 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.365132602 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.404443688 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.177266774 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.267531555 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.196871272 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.190001216 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.371455168 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.380415776 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.187283652 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.22542949 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.712568332 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.040288128 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.194854333 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.208768944 seconds)
  done (took 149.202615166 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.450946502 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.176644129 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.176551025 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.177288318 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.204145679 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.176975142 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.667174787 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.66913329 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.672341862 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.586973596 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240239305 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.373012064 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.181487713 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266388747 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.190890472 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.179395935 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.192289746 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.218522401 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.178198339 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178269799 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.665649795 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.196741408 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.184484608 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189050174 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.177205551 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205959411 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.56401598 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178916903 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206852256 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.48714733 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.221148722 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.178215966 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.433118012 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.682532022 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.183083463 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.177655683 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284620156 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179967747 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206413592 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.179488499 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.442181775 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.180273554 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178786445 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.179448033 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.182655846 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.716235848 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.183937722 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.667654858 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185818946 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.053125104 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.185606362 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.180537144 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.547555147 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.596440128 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198843375 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.179453322 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.180077817 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.184528596 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.179759954 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180279621 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.207456845 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.415412161 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.278537897 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.193326037 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.183385378 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.208365716 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.180990055 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.294361325 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.181464747 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.424437841 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.255110642 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.400606321 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.670014354 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185808786 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271295601 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297390885 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.181662191 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.181584776 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.181226587 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.180939955 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.284691966 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.18157586 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.548525746 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188370388 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.183379135 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.240162612 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.272602694 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.182419163 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.444271778 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.18678759 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.181767142 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.86885602 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.277579409 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.181817607 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.182244931 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.181656324 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.547222518 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.673077933 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.316051742 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.187685413 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.4218323 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.188019303 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.565827966 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.664544311 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.739974895 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.188455124 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2859668 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.1857349 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.184332009 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.182998338 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211878317 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197277919 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.240798522 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.183694621 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.575806621 seconds)
  done (took 341.88935118 seconds)
done (took 684.187296721 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.854664028 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.818836444 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.943883743 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.830118587 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.8115095 seconds)
  done (took 10.373317146 seconds)
done (took 11.485962921 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.353208096 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.357596546 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.239649129 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.35348427 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.209837564 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.368658802 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.336965432 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20841879 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.278195597 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.261521219 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.277637944 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237723645 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208601086 seconds)
  done (took 17.806416999 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482299815 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475549357 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248585242 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488068137 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225406421 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.482434365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381097806 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.387451031 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38677649 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214918512 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.197419353 seconds)
  done (took 16.087313667 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.513068294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.484745897 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252262554 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49096015 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228006523 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486263618 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382035688 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391395961 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387025037 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.217074918 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198805134 seconds)
  done (took 16.148075235 seconds)
done (took 51.154397443 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.194200227 seconds)
  done (took 2.310448375 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.227833092 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.384342839 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.212443285 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.198641729 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.195524543 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.196790474 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.199812373 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.195795869 seconds)
  done (took 10.929027438 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.192343414 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.191500763 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.192748915 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.195198221 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.192259497 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.1947428 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.195868447 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.194646108 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.195844086 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.193377068 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.195989771 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.194500993 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.192656239 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.195281837 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.193169977 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.193683804 seconds)
  done (took 20.221329774 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.195005759 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.193342679 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.193417036 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.194898707 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.192857352 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.194151831 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.193924037 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.193673285 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.192593896 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.193235263 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.195539107 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.193042222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.195438484 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.194629447 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.193512127 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.19649749 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.195264485 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.19466373 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.198439952 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.194061851 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.196032002 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.194200781 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.194786783 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.195434249 seconds)
  done (took 29.790346672 seconds)
done (took 64.366572 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.089824174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.669165368 seconds)
  done (took 8.878606026 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.197275527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.19689358 seconds)
  done (took 3.515558109 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.196554181 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.197141941 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.196815143 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.196796876 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.197943164 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.197499043 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.196970981 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.196565371 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.198271006 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.197205609 seconds)
  done (took 13.092369375 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.198051674 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.19792695 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.196821151 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.197970928 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.196594799 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.194972065 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.198123734 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.198512828 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.198368143 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.195396757 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.198505643 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.195868938 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.197634053 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.196138602 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.1973343 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.195312232 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.196080004 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.195201818 seconds)
  done (took 22.665489707 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.198384613 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.198380863 seconds)
  done (took 3.517977077 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.195578877 seconds)
    (2/7) benchmarking "second"...
    done (took 1.195466454 seconds)
    (3/7) benchmarking "month"...
    done (took 1.196616284 seconds)
    (4/7) benchmarking "year"...
    done (took 1.196795903 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.198357776 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.18896506 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.188729728 seconds)
  done (took 9.481236118 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.192254512 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.360906302 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.44433211 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.803583065 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.192032061 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.186826388 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.048417836 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.187014155 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.189871981 seconds)
  done (took 13.719128187 seconds)
done (took 75.989305764 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.160142111 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.18340494 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.216301459 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.176339867 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.186436846 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.506464438 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.17639419 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.292694344 seconds)
done (took 37.004257891 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.177863221 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.877942243 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.885129734 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.167750439 seconds)
  done (took 11.022281812 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.150025188 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.013654472 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.145251253 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.121441783 seconds)
  done (took 17.523028578 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.105225488 seconds)
    (2/2) benchmarking "read"...
    done (took 1.50131163 seconds)
  done (took 4.699622481 seconds)
done (took 40.513022518 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169827487 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.169171952 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.166694876 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.169537528 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.166217092 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.167848152 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.166102787 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.164772235 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.167724677 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.168212654 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.167989627 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.167438848 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.16634349 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165769282 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164000989 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164056561 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166144781 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.163914183 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163214054 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164750418 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167113179 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.163762745 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.163680374 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.162104321 seconds)
  done (took 29.081281598 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.167141411 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.163508383 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.164635863 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.16565794 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.162776411 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.165558219 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.165202611 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.162573999 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.165635636 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.164450764 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.162295416 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.161935352 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.164915446 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.162564285 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165035592 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.162798724 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.165407311 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163287825 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164868714 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.162915172 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.165559584 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163286316 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.160682954 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163157864 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.160582062 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.15967385 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.162349389 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.161168917 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.163179365 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.161192819 seconds)
  done (took 35.994823829 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.164362323 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.165889406 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.160599415 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.160721101 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.160801417 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.16090158 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.16094681 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.163479622 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.158975516 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.158854688 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.159203849 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.159862744 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.159615906 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.159649236 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.159666777 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.159951001 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.160753814 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.156999582 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.157552349 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.157296538 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.158073719 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.157335271 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.157733816 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.157747272 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.158718483 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.158738463 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.157267762 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.156970207 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.158427818 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.158080654 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.158638402 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.157691274 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.158316579 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.15752729 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.158129125 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.158123557 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.161252105 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.163816267 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.158833749 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.158619312 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.158540718 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.157320258 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.159571537 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.159730565 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.159668607 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.15965291 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.159007183 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.158712319 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.159020102 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.159007479 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.158672376 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.159557113 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.15976831 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.158536885 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.159115724 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.160523217 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.160013328 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.16017412 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.158942111 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.159123295 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.159612752 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.160043439 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.159981062 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.159927202 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.160869797 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.159733835 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.160137803 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.160336905 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.159620497 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.16084674 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.160249947 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.160557869 seconds)
  done (took 84.571515601 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.160093168 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.158159128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.157306479 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.157884896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157580545 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.159969976 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.158113924 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159867093 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157357743 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.161533249 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160942599 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.15833452 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159069119 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.161329133 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161250827 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.158375119 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.161538832 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158826802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.160804704 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.16233996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.160558422 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.159196107 seconds)
  done (took 26.594547545 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162593529 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.161529583 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.158378045 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.161902068 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.159097297 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.164066096 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.162070932 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.162474433 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161548797 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.16037341 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16077635 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162089739 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.15987197 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158955165 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160510952 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.160057943 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161655825 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.159603499 seconds)
  done (took 21.983869907 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.160309799 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.160158447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.161301562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.160745591 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.161130276 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.163574492 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.159471905 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.162476112 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.161970657 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.159908961 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.163241402 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163332285 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.162929379 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160490271 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163014753 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.161601041 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.163376916 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160229911 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163167716 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.160861257 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.160807188 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.163086003 seconds)
  done (took 26.643063779 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.16415305 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.164185432 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.161514424 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.162649165 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.162085811 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.164608269 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.162899421 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.162157088 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.164366329 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.164366029 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.160590628 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.164345903 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.161230847 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.162531424 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.161784187 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160713708 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.164161685 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.162637109 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.165722155 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.162257958 seconds)
  done (took 24.346988204 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164902439 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165458753 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.165687688 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165161381 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165353148 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.164951674 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165178092 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.165625684 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.16594699 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.165268737 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.166356561 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.164757142 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165702469 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.166566991 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166516463 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.16565324 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166438884 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166254618 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.165437816 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.166261411 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.166578593 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.166900738 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.167828292 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.16668213 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.166815577 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166858399 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.167172382 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.167624436 seconds)
  done (took 33.738745132 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.166530041 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.167254877 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.165580207 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.165870127 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.16564197 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.164501584 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.165814118 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.16681942 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.16712269 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.16573454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.167242818 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.167816201 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.16782125 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.167082967 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.168151447 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.166835323 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168860175 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.167134212 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.166714134 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.163153859 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.166140206 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166326526 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.166335868 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.1644477 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162833192 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.165728633 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1659403 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.160225813 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.162593313 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.159518137 seconds)
  done (took 36.063702384 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.180975804 seconds)
    (2/2) benchmarking "in"...
    done (took 1.180703796 seconds)
  done (took 3.446528229 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.160181203 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163845722 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.158588036 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.156838396 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.157095694 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.158012534 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.159030798 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.156831816 seconds)
  done (took 10.355900339 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.15829346 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.159038824 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.157116554 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.157228618 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.155944743 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.156279099 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.163490857 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.172701681 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.157008945 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.158040836 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.160443479 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.162896212 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.157997787 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.156295994 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.156121402 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.157981641 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.156521011 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.156086351 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.156601571 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.156578245 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.15631694 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.157749506 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.158020128 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.154640994 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.156930618 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.165636505 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.177714528 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.159187199 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.156277364 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.161518861 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.15691717 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.154837532 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.157699235 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.15668428 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.157416707 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.15802525 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165579696 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.175597648 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.163681693 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.174261032 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.157963014 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.154783768 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.158033938 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.158345401 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.159390166 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.157787176 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.159665341 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.155884829 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.157693096 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.160532169 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.16229924 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.158125447 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.156946179 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162089736 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.159886844 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.165431953 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.174984652 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.16107156 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.16587731 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.16778338 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.18704061 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.179836947 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.160427901 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.159626106 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.168161343 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.178028173 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.166009586 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.17425372 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.156708989 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.160302279 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.166140228 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188771408 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.182381454 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.16006543 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.16021476 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.160494874 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160421046 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161625585 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166861951 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.179061008 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.160207204 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.161050737 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.168627881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.178526537 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.160809544 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.160046367 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.160686752 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.161624663 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.161696535 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.171039785 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.17872178 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.161410465 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.162189662 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.161870429 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.162719143 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.162103951 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.160785699 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.161583163 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.158636807 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.162544365 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.161263712 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.16415806 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.169655444 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.161921161 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.161407342 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.16704397 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.179888473 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161273381 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.169139589 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.162498693 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.161663232 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.16215427 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.16891058 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.159698247 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.165398635 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.168489876 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.163424675 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.163893049 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.161713913 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.163340065 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.171306047 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.18380748 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.164203425 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.16287369 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.166825167 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.17116039 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162739211 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.166064895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.163571572 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.160804505 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.161151457 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.164999717 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.163739971 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.164269959 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163612639 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.165352447 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.162038839 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.164861477 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.164234871 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.164199553 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.164840124 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.16533932 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.165998384 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.165737889 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.164052164 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.16579134 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.170780018 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.181217381 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.166262878 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.165718025 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.162237664 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165151101 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.165603039 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.165522186 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.164389411 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165494847 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.162614731 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.165514271 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.16659833 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.16614212 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.165459783 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.166070348 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169936766 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.165616764 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.169512034 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.164121893 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.164425411 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.165164529 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.166933875 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.166038148 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.166739332 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.164285953 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.169729753 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.172368678 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.165549191 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.165296587 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.167625388 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.165643976 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.166874941 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166599326 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.169925787 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.172519271 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.167808022 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.172976998 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.183719058 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166752319 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.1677045 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.167381505 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.166176286 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167836929 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.169084511 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.173359308 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178379834 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.189331392 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.169494662 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.170748378 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.168334679 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.170681447 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.171501472 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.167127119 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.167865251 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167371076 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.16741959 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16765057 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.169287121 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.16879757 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.167402794 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.168846776 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168588454 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.168042471 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.168519697 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.16808736 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.16995381 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.166086357 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168102391 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.169374887 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.168601269 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.166744002 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.166615268 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.168885363 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.169979814 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.169160277 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.175720867 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.166902618 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17023604 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.170275217 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.168670098 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.167754623 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.168511222 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.170360812 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.169123564 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.175817898 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.18655304 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.170634221 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176467947 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.185629146 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.169655636 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.172029995 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.169489486 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.167202191 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.171709275 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.176008712 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.170212501 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170095466 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.171473592 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169632849 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170785563 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.177205324 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.185578617 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.170215038 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.171359828 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.172551025 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.168944319 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.171937821 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.172464685 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.172312734 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.174112876 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.172047442 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.172452627 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172451747 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.171742901 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.171949637 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.172206184 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172941911 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.177522619 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.176657405 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.171929979 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.174480256 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.172669936 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.175008193 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.172001307 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.173067911 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.172512347 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183522363 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.191911045 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.179673614 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.190843304 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.174412722 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.17778094 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.189350038 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.175552555 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172168964 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172685357 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.172769756 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.173786703 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.169983761 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.173651563 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.173044676 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173798427 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.173293186 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.176697565 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.174246956 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.17258344 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.173622923 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.173765282 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.173815888 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.173343433 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.175244315 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.175499673 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176156505 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.172278524 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.17439378 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181092033 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190838925 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.175856461 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.173775663 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.174275923 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.173770911 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.175261272 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.17490774 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.177028949 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.179660526 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.177027375 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.181600891 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.176070507 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182978129 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.175114061 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.177404863 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.180686715 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.172428585 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.173589922 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.175398478 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.175145542 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181223379 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.190644938 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.17574994 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.178807476 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.175152858 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.176660492 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.176071467 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.175751532 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.176649455 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.176379661 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184958767 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.193836286 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.177660116 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179357021 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.173809017 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.177903916 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.177909183 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.17527735 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180802909 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.176107203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.178102033 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.177462454 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.17667071 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.177756082 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.176845241 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.176116914 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.174054631 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.176206812 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184488295 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.194348138 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.179619575 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.178024402 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.185711971 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.194309404 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.185101049 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.194361526 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.178574801 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.177146065 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.178043203 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.178936666 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.178688837 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.1788705 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.178470269 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.17811526 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.180632097 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.178722566 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.179705276 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.179118685 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.179009704 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.179093567 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.188029654 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197348861 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.180366932 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.181944985 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.177029433 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.180689471 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.182376138 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.178709491 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.178850224 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.180362822 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187388437 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184967145 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.17910138 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.178960525 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.1801993 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.17938665 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.18035241 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.180453261 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.179421464 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.180184506 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.180408354 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.180037226 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.18362802 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.179238481 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.181439373 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180527137 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.181957724 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.189060215 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.198491108 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.182569302 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180702809 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.181611613 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.181159973 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.180889692 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.180825112 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.181653947 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.180969212 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.182189156 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186713162 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.184549719 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.182765459 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.180481445 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.181068396 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.181294554 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.183275378 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.181352701 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.181649616 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.181521335 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.182735603 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.181531146 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.182455976 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.180855012 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.182986702 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.182772181 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182164182 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.183293024 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.187869152 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182084267 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.180397515 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.181884498 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.182964735 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.181082728 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.18211353 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.19038594 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.203047231 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.190876202 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.189563741 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.185996427 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.181586152 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.18544207 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.188260324 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.182479554 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.183277166 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.182861494 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.185202883 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.184235737 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.18451587 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18323769 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.18960316 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.2010601 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.183116031 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.192213857 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.201826265 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183139485 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.185692452 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.186563264 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.184350602 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.181696881 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.184042795 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.183797388 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.190116924 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.203317877 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184269111 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186102207 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.182802595 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.185924365 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.187769447 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.184941313 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.186678638 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.182264379 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.185726229 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.18486361 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18491699 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.184007782 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.184026335 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.184793928 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.186529085 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.190552497 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.184016539 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.187338934 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.185642027 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.185324375 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185557093 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186926235 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.183901527 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.183789348 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.184466122 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186551706 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.185752953 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.187531938 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.184594971 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.186079467 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.185259543 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.186461736 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.188429915 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.193586898 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.192865148 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.183953959 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.187446538 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.187435431 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.190413061 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.186550062 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.186333538 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.185739231 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.188399529 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.188117795 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187847709 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.187605152 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.188119123 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.200686717 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.204316152 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.187213634 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.188291254 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.190099936 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.187164247 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.185731163 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.18795253 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.190441452 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.190505561 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.194056784 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.188493695 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194703203 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203632857 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.190439235 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.189938202 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.190714402 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.194304932 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.190276689 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187411859 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.188250458 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.191425814 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.201913466 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18927846 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.197843992 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213109679 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.205989251 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.189167209 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.188684935 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.188415143 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.188694679 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.190252036 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.188720665 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.189566938 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.18926148 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.189201553 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.189603255 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.194055422 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.189960576 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.190055761 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.188942502 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.188737421 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.190879403 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.186723501 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.189010209 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.190019432 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.189488653 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.189535616 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.18995799 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.19038295 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.201098437 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.215087937 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.19055494 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.191116893 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.187466716 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.19368912 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.192126028 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199231814 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.196613765 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.191003433 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.190823074 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.192380035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19079183 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.188572763 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.192439012 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.190996603 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.190573477 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.188894128 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.202772578 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214828777 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.195528776 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.192092418 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192201343 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.192253804 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.191432727 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.191372753 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.191000251 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.194183235 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.19255397 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.195289851 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.192542822 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.192198238 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.195407893 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.1986425 seconds)
  done (took 702.292575191 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.190964072 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190492156 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.190126802 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.189493693 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.189957238 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191991111 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190687913 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.190232642 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.190241366 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.190906795 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.191713078 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.190928405 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.190616499 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.191333783 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19011433 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.190608158 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192348596 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.190033464 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.191151528 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190866048 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.190565437 seconds)
  done (took 26.119081797 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.19379552 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.190848588 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.191753619 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.194062681 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191039624 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.194111113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.191334296 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193961732 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.193604206 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191580513 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.194528846 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194376437 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.19144317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.191307895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19224993 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195175575 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.193476054 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191905801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.195303334 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.192742291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194957913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.192132257 seconds)
  done (took 27.360609671 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.195020266 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.195359362 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.193841738 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.192856165 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.195299085 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.19222832 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.19479824 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.19529927 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.196832947 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.195700391 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.19376173 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.195362476 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.199734012 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.199451787 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.197568544 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.195896307 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.340284251 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.196963438 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.196173711 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.195926095 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.194432523 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.202159203 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.212946322 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.193386934 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.195538909 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.195440563 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.196239195 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.196179717 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.195914778 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.197605958 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.199080195 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.196639362 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.197130282 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.198420053 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.19596376 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.198709077 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.200499386 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.198533554 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.195306907 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.197746618 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.206963951 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.213490898 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.198089397 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.203204648 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.215538259 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.198173184 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.200752634 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.203319646 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.194819792 seconds)
  done (took 59.966795076 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.197621055 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.198228861 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.195858423 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.197252296 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.198211329 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.197650209 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.197960046 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.198051471 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.195195333 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.195341006 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.198166023 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.196334232 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.19641962 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.198575641 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.199614352 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.195848364 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.195693262 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.196459772 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.196168708 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.197185802 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.197389927 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.198911839 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.200192092 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.197369398 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.199032261 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.195883756 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.196504201 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.199488601 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.196376138 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.19699889 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.200027812 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.198980073 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.200962751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.198681645 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.196465239 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.198915844 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.199747672 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.197610928 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.200171069 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.197986806 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.199916751 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.199137096 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.199977688 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.201061676 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.196873161 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.198231662 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.198112523 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.196856676 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.198337726 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.200023933 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.201220097 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.198960505 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.200371134 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.198739322 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.201035904 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.201622779 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.19856642 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.198362654 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.201930318 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.199225939 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.198866895 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.201045468 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.198817393 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.202331837 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.201429641 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.198863651 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.199086634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.20241134 seconds)
  done (took 82.621481558 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202389569 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.201644757 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202552535 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201622011 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201847812 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.201804394 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.202172535 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.20142298 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.200792009 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.200782755 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202179819 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.202538678 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.201787395 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.20250569 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.202494023 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202212786 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.202266322 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202084744 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.201999682 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201714715 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.202911372 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.202554664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.201796242 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.203060657 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202872016 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.203355467 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203303185 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.202635926 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203838873 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.202479146 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.20306751 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.203528893 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.203138635 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.203840205 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.203605524 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.203410248 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.203582175 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203227898 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.203386916 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.204182138 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204500143 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204354351 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203630236 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.204288891 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20515342 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.204770248 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.203915672 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.203857744 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.205189236 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204241483 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.205469909 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204630491 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204162539 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.203801897 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.205660588 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.205906765 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205255843 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205305068 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20544175 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.205006258 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205622701 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.205789881 seconds)
  done (took 75.733818288 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206399022 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204522601 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.20332128 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.202587326 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20630218 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.203998259 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206036823 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.206721784 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.207389748 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.206282029 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206363732 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204417206 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204368734 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206958413 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.204043879 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204893752 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202758229 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2041852 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207323764 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205066741 seconds)
  done (took 25.229239592 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.205354545 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.207799125 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.205079141 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.204909162 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.207535897 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.204858085 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.208244512 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20848652 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204089207 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20842956 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207664614 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208815401 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205490067 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205363162 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.208483202 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.205564615 seconds)
  done (took 20.433682237 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.205644283 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.208308958 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.209431354 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.208171403 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.206182792 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.205530468 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.209056792 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.207462128 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.206271647 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.209372081 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.20788126 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.209037448 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.209063523 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.209245141 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.205972387 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.208461649 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.207358095 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.207053151 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.208865644 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.210047859 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.208322937 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.206932015 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.209796999 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.209792972 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.206790325 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.208349982 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.208042414 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.20801798 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.207619907 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.210690546 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.206788864 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.208072853 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.207203852 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.207624843 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.210940142 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.207595885 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.211939904 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.211438716 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.210555785 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.211125128 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.211691133 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.208513599 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.211307223 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.211211034 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.208652864 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.212058608 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.208503006 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.208931847 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.20803494 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.209722992 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.211671959 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.210825019 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.210595919 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.212531807 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.211456046 seconds)
  done (took 67.620590266 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212246629 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.211645248 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.209016295 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.211678375 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.211787924 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.209307313 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.212086756 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.209314544 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208380658 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.212738609 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.210982457 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.21235911 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209477973 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.212521482 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.210928559 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212238757 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.209759876 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.210065549 seconds)
  done (took 22.926958438 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.211078969 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.210296467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.213684601 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.210244656 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.210326648 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.212640245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209997336 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.212793824 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213383453 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.211676311 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210057715 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.213858063 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213916495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.213214571 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.211165732 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211031855 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.214435055 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213340069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.210718792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209558421 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.213598244 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213199483 seconds)
  done (took 27.796630854 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.21301104 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.212707073 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.212560711 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.22845654 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.228958689 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.233931848 seconds)
  done (took 8.461631596 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219451388 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215346649 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.211079112 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216169604 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215246526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211732614 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211754965 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2121356 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215089213 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213581982 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212336609 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215166087 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214838504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212584564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214998153 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21566582 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213396951 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212289549 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212466673 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215124969 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212550767 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215052825 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212667214 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212765159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212435673 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212832438 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216401829 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215601561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214512877 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217175134 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217073175 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215432924 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216550863 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213304081 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216346745 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21594802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214086844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216486633 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216448579 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213939124 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.216414407 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216755088 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216571784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213744861 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217365021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215170499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214574533 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213713929 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214466896 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218709166 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217860963 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216567008 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218827042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218236671 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218813689 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218587975 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215404892 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216095237 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218544409 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216947046 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216316521 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219036418 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216486537 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216560787 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218467411 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21593779 seconds)
  done (took 81.373043528 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216040807 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215559065 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21721684 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217026536 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216216449 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217122168 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216032034 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215762019 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216969911 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216462044 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219513947 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216546228 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21706184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215787476 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216809199 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216890868 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216309665 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21665205 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217145487 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219961714 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217215098 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217473988 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217365253 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218006541 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217194167 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220370515 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216157643 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217051383 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217662082 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218161085 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217717016 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217536563 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218541468 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217568174 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218188354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217756016 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2182443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217018469 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217787594 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220816951 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218872808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221152928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218770706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2177419 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218259608 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21858499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219241366 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218041342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218801647 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217864383 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218864671 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219975704 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219895715 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218433694 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219031481 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219293074 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219193049 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220254608 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219263685 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223255539 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219277369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21975078 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222766201 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220016238 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219197894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219090727 seconds)
  done (took 81.538786254 seconds)
done (took 1643.387414438 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.237195572 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.323496909 seconds)
  done (took 13.701035153 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.383405474 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.335842218 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.221051917 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.230975068 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.222422014 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.216739582 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.24042202 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.220075812 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.220636924 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.220852112 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.220319873 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.407273242 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.271306029 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.220773363 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.221360998 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.313698639 seconds)
  done (took 41.309835534 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.244671249 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.229599638 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.331079057 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.252084438 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.250923018 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.401209941 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.287709861 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.228770671 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.386963146 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.266470983 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.677845569 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.251192771 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.228942991 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.260690054 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.245713891 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.402787308 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.468264443 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.688480073 seconds)
  done (took 28.245103737 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.641390335 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.229569264 seconds)
  done (took 9.016202181 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.255138039 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.262068131 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.228921677 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.244102008 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.25430899 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.252962418 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.29265438 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.266838762 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.259351298 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.260113429 seconds)
  done (took 63.722409313 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.248420604 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.229904057 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.228987374 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.228738049 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.221312935 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.221393428 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.228767931 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.225302511 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.632513876 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.346376885 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.255540376 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.237319715 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.246112286 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.231853417 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.227363724 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.264084205 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.364706756 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.245442277 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.226796613 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.236305326 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.231311238 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.36569595 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.273951563 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.235651683 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.346747694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.595476001 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.242120742 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.237943313 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.347749321 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.246203814 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.229717865 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.229624923 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.232698899 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.787978814 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.667431917 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.244359711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.267105146 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.240251795 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.229143425 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.430184289 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.250589695 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.23705663 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.224539528 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.640244445 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.382277535 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.341135286 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.385346424 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.239734425 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.233055451 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.290238556 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.235453359 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.232571696 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.259109856 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.974256579 seconds)
  done (took 105.103667657 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.24580227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.709452934 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.393051672 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.246832986 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.069955787 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.866776193 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.247739209 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.491304422 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.26698462 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.227630877 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.573061975 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.713077174 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.246819449 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.302998604 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.762650867 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.258665447 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.226690019 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.137684465 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.249667711 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.228937855 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632787294 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.251672444 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.234909971 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.241861537 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.264073944 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.674801474 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.607199081 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.676528446 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.242400097 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.226422436 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.67443279 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.251754623 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.264270552 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.227467784 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.49009538 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.56934934 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.552271611 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.245560942 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.236094029 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.227653295 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.250007618 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.665713847 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.565477713 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.243633744 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.233546309 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.695855964 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.243526326 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.238002124 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.228335575 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.434923341 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.143081076 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.235930225 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.581970847 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.234169682 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.483665978 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.227384354 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.246889539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.697275788 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.243934353 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.402975447 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.244878441 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.228787814 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.235738756 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.229107678 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.231822092 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.556702956 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.625194272 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.229423718 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.556657264 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.686508561 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.25577428 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.750511804 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.151028869 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.238510872 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.265154042 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.229018472 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.932605418 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.712366487 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.2508866 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.229319642 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.542582984 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.244637421 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.539324138 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.243784625 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.228659191 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.656235812 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.255104341 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.259086412 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.230507564 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.246387856 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.018984376 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.238519651 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.486416277 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.261751688 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.230894016 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.23165566 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.283030527 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.230808399 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.245884337 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.23158072 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.739462125 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.254197644 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.517597303 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.259177869 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.230396757 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.240166305 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.231252526 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.230509171 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.452321505 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.75519621 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.24427921 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.230965839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.231117224 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.241543282 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.502493205 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.235323374 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.517455716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.246811943 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.231173156 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.240089483 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.885888963 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25995352 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232491138 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.232241279 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.069700282 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.453994986 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.249453199 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.247343727 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.23374043 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.247195606 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.492628495 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.233083416 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.248002889 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.236810021 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919776744 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275990952 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.269096134 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.789709384 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.240564165 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.089395986 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.252518126 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.235247647 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.527997454 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.498330487 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.55184187 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.234887806 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.249632908 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904075103 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.29999012 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.373948339 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.249707595 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.213694212 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.430291511 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.499137767 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.23537703 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.806132824 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.234242459 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454008208 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.234784425 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.549588672 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.708393889 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.249860902 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238318006 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922417304 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.920259694 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.87668178 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.234841843 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.55697472 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.207719895 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.688696047 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.234064294 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.235772914 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.838034531 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.240722735 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.240862698 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.235358713 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.236191463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.306403238 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.411540502 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.870994895 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.23530326 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.679797971 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320981332 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23571642 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.235987996 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.235753499 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.58701871 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.241819201 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.237403075 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.238925392 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.237753402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.245447058 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.688696675 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.193546915 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.23773822 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.387789435 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848647837 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.258554833 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.23643289 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.875294865 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.552549819 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.726246722 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.284880037 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.527412268 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.269212518 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.275285891 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013186769 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.33306698 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.73343462 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.261206407 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.237983881 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827141889 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.258697441 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.2920503 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.237339112 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.236858118 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758243579 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.261381149 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.242453234 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.504988564 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.238027757 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489002796 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.238533406 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.273760333 seconds)
  done (took 1089.220689036 seconds)
done (took 1351.457303059 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.238472388 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.240694284 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.226880793 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.247764959 seconds)
  done (took 26.115557385 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.249243638 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.245375677 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.246776862 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.246035581 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.247202548 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.245699373 seconds)
  done (took 8.645788252 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.310882777 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.2399477 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.246945573 seconds)
  done (took 18.961493981 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.451761656 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.471821944 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.59834916 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.359924419 seconds)
  done (took 10.048425386 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.249391127 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.247001271 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.247754098 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.249586632 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.250918385 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.25234305 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.250185968 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.249787099 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.251291412 seconds)
  done (took 12.415276494 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.980771932 seconds)
done (took 82.325517726 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.248314092 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.443333683 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.279680947 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.332390655 seconds)
    (5/309) benchmarking ("sort", Float32, false)...
    done (took 5.235632346 seconds)
    (6/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.275238587 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.584711453 seconds)
    (8/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.282230409 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.26799447 seconds)
    (10/309) benchmarking ("sort", BigInt, false)...
    done (took 6.24077633 seconds)
    (11/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.339825646 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.623355858 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.361347544 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48598215 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.854599304 seconds)
    (16/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.83601923 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.706851576 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.224758478 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.293381325 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.644018937 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.283474343 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.271126824 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.306466927 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.864791483 seconds)
    (25/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.25191563 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.067370905 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.350601954 seconds)
    (28/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.325572383 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.619732167 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.854231695 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.442028686 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.358096535 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.365130406 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.596954602 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.198317104 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.353565774 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.253257624 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.245334291 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.58920752 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.684541622 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.094828952 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.37015354 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.462822467 seconds)
    (44/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.283895265 seconds)
    (45/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.797679612 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.11065909 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.354776567 seconds)
    (48/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.453118785 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.514814219 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.289283654 seconds)
    (51/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.228320216 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.237015514 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.261723727 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.231379899 seconds)
    (55/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.31544247 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.551707619 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.698152402 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.021078504 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.400415907 seconds)
    (60/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.555019568 seconds)
    (61/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.62492703 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.271842682 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.30333223 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.315589934 seconds)
    (65/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.270503589 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.294096884 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.246550612 seconds)
    (68/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.460095568 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.281251027 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.081660019 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.31427086 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.24643216 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.670658724 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.136990226 seconds)
    (75/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.796285219 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.256184585 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.264124366 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.266124653 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.264028326 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.062066305 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.778424565 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.395502372 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.465642329 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.095053602 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.357814067 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.440660964 seconds)
    (87/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.628829034 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.424277589 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.350304891 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.612348586 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.605848596 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.959723231 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.285458786 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.245149218 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.458176031 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.254754862 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.242527886 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.627168263 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.285238378 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.265867333 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.052597783 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.07886163 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.89222519 seconds)
    (104/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.050620621 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.113820247 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.251393154 seconds)
    (107/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.267016188 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.258421847 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.77522282 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.636747794 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.23763914 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.302658039 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.073255898 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.629198013 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.145747689 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.275168961 seconds)
    (117/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.295475736 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.268404016 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.481341659 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.23250213 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.268846532 seconds)
    (122/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.270190145 seconds)
    (123/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.438051697 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.258642794 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.521935036 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.261259263 seconds)
    (127/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.365069093 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.526848807 seconds)
    (129/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.766675702 seconds)
    (130/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.466595586 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.248845143 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.636553906 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.266504854 seconds)
    (134/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.960660932 seconds)
    (135/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.601564223 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.758763977 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.294943964 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.299987911 seconds)
    (139/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.313045596 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.529524975 seconds)
    (141/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.757577037 seconds)
    (142/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.528308183 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.314483622 seconds)
    (144/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.946173051 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.000753594 seconds)
    (146/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.385382236 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.513531811 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.234741614 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.104428941 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.04598606 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.942217735 seconds)
    (152/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.265320372 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.498069831 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.97660626 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.711288286 seconds)
    (156/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.620080332 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.676652899 seconds)
    (158/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.369002415 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.993452839 seconds)
    (160/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.431708068 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.348940431 seconds)
    (162/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.033359681 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.267530962 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.976629774 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.279317297 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.534430516 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.287827006 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.280540616 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.235874633 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.157048427 seconds)
    (171/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.279145086 seconds)
    (172/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.837795918 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.4952762 seconds)
    (174/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.606184504 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.275507089 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.690394624 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.257895411 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.614472512 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.850023672 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.571854441 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.788284693 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.959036843 seconds)
    (183/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.432562778 seconds)
    (184/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.433202425 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.377758468 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.252364402 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.605384122 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.864971105 seconds)
    (189/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.481797539 seconds)
    (190/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.353281369 seconds)
    (191/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.992701122 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.261811175 seconds)
    (193/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.317492663 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 5.52469862 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.280594466 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.763057347 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.29633089 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.338992007 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.574251134 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.355672333 seconds)
    (201/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.280216837 seconds)
    (202/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.33756982 seconds)
    (203/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.610297233 seconds)
    (204/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.800624697 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.055888673 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.253729864 seconds)
    (207/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.250071627 seconds)
    (208/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.290103531 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.240285237 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.669179957 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.355238172 seconds)
    (212/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.318495895 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.539706235 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.276836694 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.246830194 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.316444258 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.247006882 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.262253758 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.547854867 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.161915565 seconds)
    (221/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.071723525 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.409036612 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.97361067 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.36600378 seconds)
    (225/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.598261463 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.91140663 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.456996938 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.283576066 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.256645128 seconds)
    (230/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.653450129 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.656929549 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.339838966 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.338337527 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.301150766 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.279711711 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.785994697 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.297318435 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.264116091 seconds)
    (239/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.24347367 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.288784182 seconds)
    (241/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.989913464 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.25724496 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.595418838 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.275148748 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.350163113 seconds)
    (246/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.342740862 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.718405989 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.639169373 seconds)
    (249/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.28467197 seconds)
    (250/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.49747411 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.559010459 seconds)
    (252/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.856146342 seconds)
    (253/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.41160937 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.274290767 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.270753324 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.270053202 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.252938528 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.576893497 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.468955627 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.394348699 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.80314278 seconds)
    (262/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.983978817 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.508065047 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.276079734 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.284828396 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.567094511 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.818894338 seconds)
    (268/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.512841077 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.649908177 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.258593942 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 4.338184921 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.620659164 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.674768925 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.97057275 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.265758873 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.353283252 seconds)
    (277/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.340312419 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.377392663 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.285058203 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.543217062 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.251800816 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.372706526 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.465671579 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.393354499 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.252511101 seconds)
    (286/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.856906022 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.609941075 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.050328421 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.971864186 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.398327754 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.891745829 seconds)
    (292/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.288644739 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.602193437 seconds)
    (294/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.628957896 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.259465736 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.343942877 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.274711553 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.173288851 seconds)
    (299/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.806877845 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.367582182 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.73398453 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.284285214 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.287074211 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.346516968 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.3344771 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.070315387 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.893561957 seconds)
    (308/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.695108486 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.036360357 seconds)
  done (took 891.790838901 seconds)
done (took 892.955540893 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.296906507 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290923719 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.27176951 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.29297727 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.383789957 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.298408644 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.284586161 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.274037589 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.319949098 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.321243561 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.270263266 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.29423839 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.272910867 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.272535154 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.27278329 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.286098437 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.28158388 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.281044092 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.289159626 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.282339107 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.288447423 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.271021008 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.322695052 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.295148342 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.27949317 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.275983801 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.276579096 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.293769065 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.388392167 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.278803825 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.278056054 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.286911779 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.274433667 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.272436897 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.269619399 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.293276589 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.284654766 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.283699346 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.277518194 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.305841555 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.660466045 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.289016839 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.2760952 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.274280905 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.274813786 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.277416809 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.275615863 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.28092863 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.287400576 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.287377607 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.648738691 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.305948333 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.277880845 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.275391386 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.285776273 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.274378012 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.278832441 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291467376 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.29472185 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289850982 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.258382271 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.28039071 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.277976047 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.292465117 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.282519226 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.686521467 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.287733914 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.27978029 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.661670679 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.296332272 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.682446172 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.300972261 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.278178178 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.290472202 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.308079036 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.268101654 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.272172288 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.275679778 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.283589705 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.274410613 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.285952511 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289510571 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.280742806 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.276607787 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290170463 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.301374597 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.287148591 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.278308602 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.287589115 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.296514465 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.285040518 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.287877563 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.281758815 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.272638448 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.286849817 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.280573439 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.280254539 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.280018737 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.282082539 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.287965976 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.656808229 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.310247685 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.275265971 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.274485714 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.277867037 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.29198614 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.657322823 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.294258841 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.302640658 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.326728069 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.281991839 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.259702261 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.28176267 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.297912147 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.291239237 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.282475078 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.277528173 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.265321494 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.652035135 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.310149298 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.283961788 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.279217036 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297781983 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.282096672 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.276959142 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.280137302 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.281443987 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29688732 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.40341621 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.293104598 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.311441258 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.279713841 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.286076043 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.30434596 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297138063 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.314968192 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.286078415 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299146977 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.299877191 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.277405183 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.291226358 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.293803935 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.280647907 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.28534807 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.275101236 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.304987223 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.297256909 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292453035 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.302327939 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.401771382 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.278789832 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.277843575 seconds)
done (took 216.14884218 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.341674632 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.275410632 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.364938401 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.279824369 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.379211341 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.380021911 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.277653804 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.276601154 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.275188182 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.658727036 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.279329644 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.278914568 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.276621585 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279129022 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.362972738 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.278141072 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.278827838 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.622684422 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.281047231 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.349816297 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.27586246 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.27626957 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.282679285 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.662806707 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.277083162 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.281130489 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.352420759 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.281696632 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.622851914 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.281236729 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.274753607 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.628423561 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.371727501 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.300461873 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.288717913 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.288452725 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.380744424 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.301004192 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.363748133 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.36330943 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.36684551 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.320693164 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.282274115 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.276913396 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.283282386 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.283993761 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.278363046 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.309095017 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.279084479 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.280205845 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.623152701 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.292691533 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.279690795 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.280688883 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.281468015 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.310819037 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.281524252 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.281300476 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.375630977 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.282376646 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.345268016 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.663202824 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.664725029 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.28445741 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.286184979 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.282842744 seconds)
  done (took 144.923760662 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.350342083 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.357811954 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.392506274 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.301106721 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.33503989 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.39881716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.301031505 seconds)
  done (took 10.632573564 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.290131883 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.285342863 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330870262 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.334294956 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.285691477 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.430488949 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.28666232 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.293448939 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.283328359 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.336729201 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.286372339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28266398 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.293365683 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.27979236 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.335176051 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.29735534 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.400371659 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.287147067 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.285315688 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.434863206 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283194124 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.290746092 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.335553207 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.296109535 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.287455783 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.292097407 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852440885 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.285453587 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.281569085 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.28560496 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281985754 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.322840358 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.287386283 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.287214521 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.285304372 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402589915 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.286185044 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284376031 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.287878347 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.278199939 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.287278376 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.287407021 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.284988132 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.284260375 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.2879746 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.309702478 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.288056504 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.287716328 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.287745134 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.293822914 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.338291659 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.287214961 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.284774215 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.286186415 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.343924273 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29573525 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.288917621 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.285563337 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.290091703 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28574493 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.438612232 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33575432 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.289419244 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.333954776 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.290517246 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.288983638 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.289011745 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.289717244 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343445423 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.289391535 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336927582 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.287200281 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.444532916 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.312902746 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.291911465 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.293257906 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.292439496 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.290311134 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.290040706 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.29466146 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.287695665 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.289711301 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.295440052 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288644234 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287461191 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.3893262 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394834858 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.284438814 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.300932181 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.296031376 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.286325509 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.340871675 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.287664195 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.285539437 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34273591 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.403507688 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.344726821 seconds)
  done (took 148.64713137 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.296218516 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.294780999 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.288103007 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.305907574 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.289662216 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.287025617 seconds)
  done (took 8.963431408 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.293706649 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.289771268 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.288356347 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.290768601 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.290160936 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.291461597 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.29043273 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290198778 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.292471102 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.290039803 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.289499468 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.291225486 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.290033917 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.291523147 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.289926021 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.289206864 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.29050622 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.287026042 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.28935039 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289903175 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.386191977 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.289635601 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289618289 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.29055361 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.292404211 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.293382796 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.297866552 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.291709822 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.290467286 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.301694516 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.312444642 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.293637598 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.294830054 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.299368267 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.295464677 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.29185246 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295355382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.292140063 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.292043921 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.292150953 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.295908256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29195513 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.292469626 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.293192755 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.29652574 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.295683217 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.296869396 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.298325889 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.292641011 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.293384738 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.292686627 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.291682366 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.293567007 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.293786326 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.293977261 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3141335 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.29692602 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.292178833 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.294857564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.293422548 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.293369997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.292929926 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.298847443 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.29873409 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.300815256 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.29711836 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.296908911 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.296210027 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292746227 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.296488242 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.297153815 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.292627221 seconds)
  done (took 95.451703987 seconds)
done (took 409.808950925 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.598049664 seconds)
  done (took 7.805590576 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.316383846 seconds)
  done (took 7.527742351 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.378023204 seconds)
  done (took 21.593117887 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.336808995 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.321044041 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.313204291 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.295781608 seconds)
  done (took 26.477292135 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.565024762 seconds)
  done (took 7.772374236 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.291434811 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.286596438 seconds)
  done (took 13.78757127 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.722773802 seconds)
  done (took 7.931398739 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.502647876 seconds)
  done (took 7.718815961 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.295802191 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.308745158 seconds)
  done (took 14.068017488 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.27025936 seconds)
  done (took 7.479995855 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.040304264 seconds)
  done (took 8.252576321 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.301787198 seconds)
  done (took 7.512398073 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.348314562 seconds)
  done (took 7.557476656 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.141629912 seconds)
  done (took 9.350952129 seconds)
done (took 156.039567305 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.291908043 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.289338038 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.299498608 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.29837947 seconds)
  done (took 26.388459836 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.756857784 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.330135634 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.333269142 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.341218074 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.334035193 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.351053174 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.324690237 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.322585575 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.340789465 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.334819961 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.335316112 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.336273654 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.331884432 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.325790372 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.335003181 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.333310548 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.344943441 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.334258347 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.326114922 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.336499511 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.301783892 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.341941106 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.337275244 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.302298166 seconds)
  done (took 33.60496285 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.820477224 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.371369496 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.453132116 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.35041944 seconds)
  done (took 7.207114854 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.354232193 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.356155824 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.363505565 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.404445625 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.434714232 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.360876699 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.321558625 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.321141235 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.309077954 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.350985018 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.426913808 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.367718774 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.470836487 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.298990663 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.489194214 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.299041911 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.29861834 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.351274007 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.403202822 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.416563096 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.300513079 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.351889165 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.356353242 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.368022066 seconds)
  done (took 33.988935329 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.312597667 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.307002224 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.300431837 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.297613123 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.321420832 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.3043093 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.303143778 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.302207429 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.302603016 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.309484639 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.301949545 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.313970264 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.302417975 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.300009875 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.306496522 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.301224924 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.30653764 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.301427862 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.299914554 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.304160044 seconds)
  done (took 27.313343863 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.29449492 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.147829477 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.645496478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.549885854 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.294299758 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.293858373 seconds)
  done (took 27.440748509 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.369397292 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.521992094 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.310653848 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.647745616 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.74811511 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.326584812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.302514037 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.536922906 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.849848978 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.8411158 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.366058623 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.374757222 seconds)
  done (took 19.413944215 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.310026147 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.304219401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.313795165 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.321130633 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.358126343 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.323956322 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.311846871 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.295695887 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.364439565 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.373382042 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.321730178 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.356076278 seconds)
  done (took 37.170286746 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387238726 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344385606 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.247570707 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056982586 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.023975525 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50764243 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.046387599 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.727582596 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.311866054 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571954385 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293562296 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413471956 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.550574138 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304837963 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306096891 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.260184829 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54882135 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777044358 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301335913 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.16134185 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332085124 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30098178 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.255857945 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.336405477 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508937042 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.274998647 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.559542765 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.073072306 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577514134 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.319643655 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309045941 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298674908 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57240857 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956451986 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421626103 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309956743 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995835306 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.853799071 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.28907854 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.248028358 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.039026455 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.310093277 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310191548 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299610687 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.23439586 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299907297 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7396515 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.310110694 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.009647428 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.299156572 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309726567 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394273863 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.304811651 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290158859 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31741027 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.306502426 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.297391412 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3082098 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874682563 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.654424205 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319699033 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.243419713 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.67816174 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.256139354 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928676321 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.420688817 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.304221937 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304509159 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235091344 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.161338416 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32592844 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447678581 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.32621815 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950614591 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995137462 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.331816543 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240715205 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844279528 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310358089 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.244312791 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528087929 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078271886 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237116207 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.241964503 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.236070294 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018317242 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31165716 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.688004945 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318359263 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.723637426 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.316319905 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319078294 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325908127 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.524672149 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.180332067 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303181241 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.08996294 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458719791 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325198142 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.728226035 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247541893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.307826166 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559795031 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.514645937 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304062882 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.280191588 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526286645 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328175984 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.328382641 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.305313353 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.322105549 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.866713116 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340494412 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.647872951 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331176064 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.080741141 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045702026 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307045176 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.414902967 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.304959733 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57430233 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.08004588 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465343936 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373398891 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309205714 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306373211 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.274867341 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164900864 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.200431216 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.301878177 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308907366 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.324613411 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.305553651 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251267513 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.310421482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316953247 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.093257626 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52845226 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310150378 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590156578 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240096116 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453149167 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315276665 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.528900206 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.488657155 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.330108389 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566490233 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313844571 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324858412 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326553665 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324371336 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403579448 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328811268 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.314018439 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57159309 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.310078221 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.312231538 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.311745559 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.09499421 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310421591 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.312835463 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.142905098 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876522992 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309460915 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31593946 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19548095 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.322192477 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375804529 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313798349 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.317180018 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.109962408 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.132554898 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.322101643 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.306441283 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556535526 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3184654 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.284936934 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398828715 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.500522099 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.887728041 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347492384 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.24252509 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.019267406 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.002728498 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307747808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.498978009 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309094254 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317168641 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323806537 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.83914064 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885058386 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336785653 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.206546562 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.323169362 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320558568 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.315793427 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309841211 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.059478864 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.713075268 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320683017 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.34599756 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452441254 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.323863327 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.24307164 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.826980177 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.315059522 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309656796 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.094774435 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344465484 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.193495336 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789217205 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570382235 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.002204286 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331456292 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.393056091 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.352172421 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.314015765 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.136637236 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352927133 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.3266715 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334574266 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.320758702 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.307091639 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.758779081 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880750741 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018102069 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863582869 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262138148 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.336023446 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.21129754 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.739724878 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250052492 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.968945088 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495887312 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.765298622 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260446914 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5058719 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.500799862 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083858144 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33185202 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539424729 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233087748 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.163044124 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354234218 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524973914 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347640067 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.313009512 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270358248 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.593075132 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543410011 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.110528648 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40097543 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744573058 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.153509133 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.118017413 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.312929174 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.672674382 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508658899 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.95073159 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.701611805 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.31990611 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336618503 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7924598 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323096616 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842082138 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925984812 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341035505 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.518181427 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259850976 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.325312652 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.325224013 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.309471147 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.581660031 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.328844547 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.578970437 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326438416 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249173821 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321454494 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84056578 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.195933578 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.321547807 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316457124 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078191189 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33178871 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601900346 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.329730782 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.059835223 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342954531 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.249868946 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248903002 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.007891084 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318333277 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289504835 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814588074 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.682099633 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32530975 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3460746 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169759634 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570875364 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.329655208 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.888500962 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565577996 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.109107838 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347296357 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.416645562 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.200761387 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.325941914 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.197287973 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.552032304 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153795466 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.540820402 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.294088689 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.216477317 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.315346678 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537069582 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.198077826 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329172873 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56376222 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.0545566 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.329499108 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023082703 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367566463 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322866687 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337716588 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.696573487 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334530194 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388323674 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32845523 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.328515636 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.329363409 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485343892 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340715664 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329157956 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.332653204 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413028509 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.700889043 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.069108947 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.099484195 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895965465 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070174495 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.91776058 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35737307 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.319168771 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319544562 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253877792 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46921324 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.844947222 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592911895 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448796875 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.76562384 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349647818 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.214014979 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362942397 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539474659 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595228323 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.18858379 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32169843 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986447446 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.215642706 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330352115 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.53185144 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822524431 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889472439 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444688826 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320168916 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.772708345 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595800309 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41170476 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321080758 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909699621 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.340557563 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.690712745 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.354765779 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320257241 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478103751 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33167233 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977367043 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.3593542 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.48041121 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.09424855 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.337319372 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586508856 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.775642907 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341877785 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900254053 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.034828361 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593496805 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392996358 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332592741 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.433116997 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46655451 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.322507737 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.231257923 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324232179 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164990097 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.033102676 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.331646951 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898354279 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610636628 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.321511233 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.324831756 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355880775 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.332334057 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.547397006 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038297682 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547561872 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333510431 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325560193 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.893199612 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90004487 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361539548 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257231452 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.326511551 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560730272 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585018605 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349040658 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.776711466 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.034739852 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875167683 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.296079903 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344901459 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337634267 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022588744 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909330225 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.107226517 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837661894 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.982331348 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324206855 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60779838 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.330386898 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325741387 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611073336 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.328997455 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335890813 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346193929 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.904431133 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105690429 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.344753946 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.283551049 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.270709046 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.551204994 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969469041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272922871 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336080747 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.49913276 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335171424 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45540968 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338424953 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.329079344 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344620099 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.08855807 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60953843 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.332004025 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.318576708 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.268867089 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349401494 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341690761 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558940081 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332996686 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.001702641 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.676222786 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581991407 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333323505 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.31621887 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.330347718 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328157282 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043958891 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297213471 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.856381702 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909674656 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.341228968 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.347148096 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332022628 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.543517234 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539014336 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327947066 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348672216 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330925014 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351543286 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.228563572 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.095207618 seconds)
  done (took 1573.055697889 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357562379 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.380091442 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.347690885 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.437060517 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.347123713 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415667077 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.420287979 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.427823689 seconds)
  done (took 52.379131207 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.327638294 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.488791713 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.358828456 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.33867727 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.34695535 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.333416325 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.792261435 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.359089108 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.33758411 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.338868147 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.341264935 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.347791461 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.975714865 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.348323118 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.328818638 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.323115946 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.337830017 seconds)
  done (took 65.27978997 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.333960005 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.869356917 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.424505853 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.339622439 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.357292871 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.347308933 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.101567238 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.373157248 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.34520951 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.644169005 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.997170811 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.34194065 seconds)
  done (took 84.723402158 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.338813834 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.339318383 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.339667906 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.338416795 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.337558263 seconds)
  done (took 7.942302827 seconds)
done (took 1997.117902348 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.594176366 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.008166496 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.972084367 seconds)
  done (took 5.227702532 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.477868655 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.526555766 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.647583409 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.668767172 seconds)
  done (took 7.569349012 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.611529856 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.715190942 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.521065017 seconds)
  done (took 6.096652611 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.731568391 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.339974887 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.47720339 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.331307893 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.338897376 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.340331947 seconds)
  done (took 20.260174932 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.334543249 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.338422374 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.335701246 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.338542723 seconds)
  done (took 6.598353448 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.313110904 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.015376076 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.314793259 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.32948977 seconds)
  done (took 18.221674154 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.082335557 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.093768273 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.080067778 seconds)
  done (took 7.50519689 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.331702188 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.181922553 seconds)
  done (took 9.762631887 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.627196551 seconds)
  done (took 2.876204921 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.466416424 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.660174183 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.353993609 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.308559942 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.375941403 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.119101436 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.943551665 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.537169289 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.281664589 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.470916795 seconds)
  done (took 27.767621124 seconds)
done (took 125.274648641 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.098364763 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.705714237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.537890446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.070528075 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.563756717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.538933356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.552668477 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.038426179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.580955965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.56865783 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.11411936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.565472588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.49692854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.705631019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.497649424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.578216344 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.565732314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.14719496 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.759109269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.955632494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.555598928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.709885687 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.943052185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.730619493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.568186805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.489967032 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.290322997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.578321538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.932181183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.312121207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.489638782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.133448626 seconds)
  done (took 191.626016594 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.334618036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.345918226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.33677084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.351131578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349213567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.334573274 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.351721063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.357698174 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.335680682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.351898618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.33490918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.345577587 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.336473622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.359804411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.336955053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.335654623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.345525339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.335107352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.335923136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.351302771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.335351027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.334917424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.34347554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.345810063 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.335576188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.335052882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.346759586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.336024328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.353203422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.336460015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.353412914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.341841786 seconds)
  done (took 204.217632297 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.336606182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.336447077 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.336751661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.363682917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349367084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.336873236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.355315694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.336854167 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.337094487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.33977743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.336708895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.342254543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.339339676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.337523592 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.340106707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.354766678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.337743469 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.36324651 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.337858118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.338534861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.337622539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.346609975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.33695524 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.338295153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.353983016 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.339388003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.337682524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.353857771 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.33787989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.338350514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.343539336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.346976384 seconds)
  done (took 204.223647163 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.532928236 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.345995732 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.349671449 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.281877179 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.347515698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.346669001 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.339055477 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.5428324 seconds)
  done (took 14.342765124 seconds)
done (took 615.658372713 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.598005495 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.309998676 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.542629241 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.371138189 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.088711495 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.39411738 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.367093097 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.533087656 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.261735242 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.536018841 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.593690865 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390565925 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.73545007 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.375199328 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.612018598 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.472168607 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.236354193 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.353503108 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.686158214 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.869598813 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.627196814 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.811766869 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.556090726 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.25423951 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.756536762 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.806237909 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.053160679 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.217840066 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.392442336 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.679308018 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.005867152 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.328757908 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.424355727 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.42171676 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.476013375 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.46648898 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.298059096 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.421385695 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.575336271 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.576034707 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.863246937 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.085688137 seconds)
  done (took 91.683009502 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.332878569 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.331410618 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.331588603 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.331880618 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.334401798 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.333016221 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.332477326 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.331110935 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.332097591 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.331505669 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.33273149 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.333644571 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.331789448 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.334244072 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.332124591 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.332712608 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.332778544 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.334546189 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.331709989 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.331569546 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.332845216 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.332649392 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.333096024 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.332598682 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.334064512 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.33220255 seconds)
  done (took 35.908932871 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.351547606 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.60352463 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.770805855 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.367450575 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.350250375 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.354950378 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.42810655 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.361730415 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.355205496 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.355736105 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.521466098 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.357939574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.386516753 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.791011855 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.363325992 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.351656403 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.353187888 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.352227235 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.610614824 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37159736 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.451313549 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.355429279 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.430358048 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.369281293 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.375452617 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.352963417 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.357147819 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.874833284 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.372346965 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.524158887 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.130557204 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.437369882 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.83543876 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.799625491 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.146158715 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.365678893 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.355563308 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.529184471 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365445552 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.353877939 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.429788442 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.364532412 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.779661439 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.976168451 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.380591999 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.35397512 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.895061288 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.553420279 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.602896701 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.371918042 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.796473628 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.36795358 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.357129042 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.356619542 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.594725497 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.372371012 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.355024332 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.883237606 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.377241045 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.431091504 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.366036495 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.355346038 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.619247003 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.36562043 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.60726899 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.367101265 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.363350749 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.374205859 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.7735194 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.368852887 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.990739433 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.384515507 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.355784567 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.5244558 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.619219742 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.938174477 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.38683421 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.624060602 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852492831 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.456156563 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.370909667 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.86502257 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.460997641 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.369699639 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.358904097 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.358995626 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.357639593 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.402961993 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.429107236 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.929226291 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.997996329 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.912564836 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.453150868 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.381168858 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.359226991 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.886275823 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.383268851 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.358475742 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.769646087 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.002197431 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.385672825 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.364789129 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.994145926 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.388564004 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.434998854 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.374517588 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.780900628 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.369486417 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.404142473 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.358533545 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.365157372 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.379908891 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.436198011 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.37085511 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.359989939 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.970183049 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.56679327 seconds)
  done (took 178.810686411 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.358994021 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.350578741 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.352142441 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.351907383 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.35190374 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.358695101 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.351358855 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.352723989 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.358953041 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.352221624 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.35259479 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.360916884 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.35482355 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.356796713 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.380137259 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.359504877 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.962503681 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.355701446 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.35371614 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.35312088 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.146034833 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.364003369 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.352895618 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.353319165 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.353866359 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.353861796 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.355293443 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.356746286 seconds)
  done (took 152.636238739 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.362345367 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.913132757 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.37887636 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.490409892 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.387420894 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.359372991 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.487195334 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.427679803 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.382221431 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.358810533 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.359781248 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.658923244 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.37157077 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.870174495 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.558563087 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.514848759 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.8785794 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.38895229 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.358938554 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.359968497 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.492040076 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.373166557 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.660190233 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.930697016 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.389995838 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.920370656 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.357703666 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.362590499 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.362206076 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923305384 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.387886169 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.663809635 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.448662413 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.430914514 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.939260494 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.896069764 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.897304177 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.518769016 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.370856988 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.361267915 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.360854159 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.347825725 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.917900611 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.381979746 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.363875757 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.912168605 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.392466655 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.364388443 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.372580394 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.361542608 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.422409656 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.438388133 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.680738881 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.937250306 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.464097908 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.39402358 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.493328151 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.734944947 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.366062709 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.871653492 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.357451498 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.92977324 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.391420093 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.348165832 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.364652085 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.368593188 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.509586223 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.502636091 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.869976715 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.386356942 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.873908025 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.535340018 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.372231781 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.36407857 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.366192888 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.927937246 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.901430736 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.536859824 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.507374622 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.563974943 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.361004731 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.364879481 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.350459507 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.440818138 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.374649071 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.929141111 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.896517717 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.392684311 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.367728217 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.366244842 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.366579611 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.537782548 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.953097161 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.45905857 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.875585417 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.692363806 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.666732313 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.368907334 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.423731604 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.38503906 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.668396319 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.367265278 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.423192174 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.805766716 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.668611264 seconds)
  done (took 162.892278201 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.603460745 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.630927193 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.465563841 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.504119068 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.957940606 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.930311718 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.567788087 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.511401401 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.483624213 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.621715178 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.518284557 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.465181021 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.533125147 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.447376681 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.090731348 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.451755177 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.474653178 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.508399608 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.477313429 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.400510013 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.000880092 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.642939162 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.53489069 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.283007113 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.4595731 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.154636704 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.9175471 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.933256874 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.554015689 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.710706096 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.909113993 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.507014232 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.317885946 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.036568521 seconds)
  done (took 65.883169527 seconds)
done (took 689.067671183 seconds)
SAVING RESULT...
DONE!
