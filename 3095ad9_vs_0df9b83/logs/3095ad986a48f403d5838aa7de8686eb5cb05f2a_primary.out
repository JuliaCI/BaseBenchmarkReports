cset: moving following pidspec: 23362
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340507617 seconds)
loading group "string"... done (took 0.547933813 seconds)
loading group "linalg"... done (took 7.615757771 seconds)
loading group "parallel"... done (took 0.172539419 seconds)
loading group "find"... done (took 1.179233263 seconds)
loading group "tuple"... done (took 1.870473928 seconds)
loading group "dates"... done (took 1.272108527 seconds)
loading group "micro"... done (took 0.236285295 seconds)
loading group "io"... done (took 1.107825033 seconds)
loading group "scalar"... done (took 41.706604335 seconds)
loading group "sparse"... done (took 13.435098305 seconds)
loading group "broadcast"... done (took 1.054301655 seconds)
loading group "union"... done (took 14.743133438 seconds)
loading group "simd"... done (took 4.817903514 seconds)
loading group "random"... done (took 9.817857834 seconds)
loading group "problem"... done (took 2.004366822 seconds)
loading group "array"... done (took 22.732093445 seconds)
loading group "misc"... done (took 2.076278499 seconds)
loading group "sort"... done (took 3.452694406 seconds)
loading group "collection"... done (took 19.746232153 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575514138 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.159808446 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.154347552 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151515187 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200271215 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142851108 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157999551 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098682222 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.972671161 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179233277 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155006454 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523103124 seconds)
done (took 5.22689079 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.215461926 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094461638 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105765996 seconds)
  done (took 0.89673201 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078425376 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14515109 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093647561 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077851387 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095257782 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079407152 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09624999 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078684304 seconds)
  done (took 1.36844072 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086243264 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09669804 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081694299 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095690389 seconds)
  done (took 1.063771923 seconds)
done (took 4.331411395 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724524993 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272507755 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203665654 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45969265 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.201122685 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220817862 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677791931 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319143653 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252248875 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098789389 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134877138 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394376178 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137416982 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682238093 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089943142 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124091774 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178240517 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434271912 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082027805 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109710017 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117304314 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142631985 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131359112 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093734187 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187628555 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082004739 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192999438 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109334993 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081213351 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.279421875 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202361331 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687257684 seconds)
  done (took 10.846348293 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110662802 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133786277 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099181045 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139382258 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13697831 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10151789 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085476614 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098272344 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123941008 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180147371 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13269316 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123104608 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098112599 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083013825 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117605024 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248154378 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122912858 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101018716 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102959718 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089304397 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140432304 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115046822 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110995342 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094732052 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168246952 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225152688 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11335934 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127942061 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09917254 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11423793 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144667587 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144508853 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096323572 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081931044 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176106844 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12558783 seconds)
  done (took 5.221948116 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.09968702 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193991829 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124229302 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173743724 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082495122 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145993945 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096638818 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11560908 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262366664 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.12594646 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.491067912 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142987126 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101757165 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10099061 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084726965 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099185191 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.655015393 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157598308 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118298451 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116530111 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103571671 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086117116 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36587923 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09762352 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081200825 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09848984 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071280646 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164075401 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099756572 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.149257233 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121353556 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083779975 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134794331 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208138326 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10846839 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133010244 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095807045 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080027784 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179877242 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106860311 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080537831 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12394376 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135159039 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137283688 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098090017 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082904608 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.200301312 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099504635 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097315083 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.157300747 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.923224961 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180632728 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091673103 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097451674 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079387972 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.308561731 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114927852 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080435764 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099210101 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.274047819 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.2067773 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092667508 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081592026 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097261121 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079438354 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098833522 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379652847 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080788477 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.878571269 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084362676 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107498032 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083689359 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098294379 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105045955 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089974075 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117705114 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080632472 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100876525 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079711809 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098435725 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082489702 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110198372 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212307027 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097937934 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07936593 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094913192 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114745931 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109966554 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098096352 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093443779 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113285962 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098838684 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096014868 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118123996 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101281245 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109106971 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085969739 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145121917 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099366782 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17364665 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095927643 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124937572 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099544356 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078078701 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127991552 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1114123 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081635722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166892725 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094895294 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078025703 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097026287 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078452601 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099748361 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080999031 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110655629 seconds)
  done (took 23.105125052 seconds)
done (took 40.975682261 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338127293 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106115871 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10708509 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10666346 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10434164 seconds)
  done (took 1.538525735 seconds)
done (took 2.288065979 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295599524 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178939337 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097185125 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168890672 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094005486 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.167076438 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161630957 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095141901 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.225779826 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095728701 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165778421 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078042352 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095825596 seconds)
  done (took 2.697274105 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094552568 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11974041 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083936044 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112440615 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077749583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111801369 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09396647 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118959691 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111727533 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086899029 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095639081 seconds)
  done (took 1.855375205 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093793471 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114357089 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083130332 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11220893 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078005395 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112608579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094715612 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119826128 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111823051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086741334 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095766025 seconds)
  done (took 1.852915515 seconds)
done (took 7.146611198 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091439752 seconds)
  done (took 0.834207973 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.952212482 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.795643639 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112658714 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150824942 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.324488774 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.175533149 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476458247 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127099161 seconds)
  done (took 11.073033528 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.146473112 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089188153 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102999533 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085014252 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106114379 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086641834 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102356325 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100258515 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085188538 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101418921 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086732645 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105269638 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102214781 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085231657 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101083127 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085626963 seconds)
  done (took 2.381008466 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120308524 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119280944 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109210563 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110370547 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087949428 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108138923 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107681277 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089659923 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103975375 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105329707 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091964723 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10861142 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104896438 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080854467 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107855636 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108949623 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087019169 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107522944 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108489185 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091359192 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109378019 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096656883 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08905395 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108163101 seconds)
  done (took 3.323777115 seconds)
done (took 18.359566406 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159393288 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107580753 seconds)
  done (took 1.017284812 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096010679 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115035504 seconds)
  done (took 0.967886759 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097642613 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095552571 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120336979 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109107771 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080200611 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097637743 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120620335 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082308135 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099093833 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081320719 seconds)
  done (took 1.743929997 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083119527 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110254252 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100493155 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095846045 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108237027 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096029386 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090892717 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101177826 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110635011 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078097393 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103008694 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113148889 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085326082 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116092506 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104362512 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082204456 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10182871 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098015741 seconds)
  done (took 2.53796513 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080457748 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096095775 seconds)
  done (took 0.933784317 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081601471 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094260156 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082286471 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099487556 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09521222 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079625516 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095717264 seconds)
  done (took 1.385952835 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.448639416 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138294712 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266906669 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085779797 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123090311 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.306870897 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100994777 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08641369 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105144352 seconds)
  done (took 2.481330651 seconds)
done (took 11.823737072 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094048696 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114586788 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114780675 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464788184 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109544534 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.101119097 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.1481812 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254757787 seconds)
done (took 2.168133621 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143544887 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.591863514 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.431708269 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.237007684 seconds)
  done (took 2.027641948 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.404592001 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100438477 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08442141 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083215604 seconds)
  done (took 1.441487988 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080559563 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100651026 seconds)
  done (took 0.952167797 seconds)
done (took 5.3325731 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081483377 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.1324648 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080982206 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099217599 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081171911 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098787251 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078064533 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101541698 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080613427 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.099410367 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097045106 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082071112 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094773028 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080294842 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095930163 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082590294 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095482368 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082553146 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095930202 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082407463 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095385647 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082195189 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096061082 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079880781 seconds)
  done (took 2.980335554 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101098898 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097970582 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102239634 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087388111 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104098164 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087267689 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105787455 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099137597 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088168291 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101804802 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101969006 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087176291 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102049914 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086666488 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102775973 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103627707 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089302214 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099546496 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084360921 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104614328 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104044453 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083372346 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104857447 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087476239 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105249689 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103852839 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084588504 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101042999 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104630411 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0877433 seconds)
  done (took 3.675187987 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085873377 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093815074 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081166695 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104699095 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080021538 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098563276 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079423538 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097640359 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080984405 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097468367 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081513417 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09871693 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079478992 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098910419 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079608889 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102834701 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114048197 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081081745 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097497809 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081667955 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101178613 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080024861 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097199077 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0796168 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097590186 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079553753 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097647439 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079631401 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098249369 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079538415 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101566502 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08287237 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097469169 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085779316 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10135956 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078469978 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101738776 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079006508 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099250393 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094864575 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080566349 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09569367 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080673682 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103409576 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080828577 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098505866 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080118322 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098983171 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080908485 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101765946 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079138555 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097652558 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082326485 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100123501 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100056915 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08018581 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097557068 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080535314 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097438119 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079774136 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097073313 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080069928 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098718041 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080675477 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112951808 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086705525 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096855482 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081816951 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099286648 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081600469 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09970966 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.1107362 seconds)
  done (took 7.326960727 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.130965066 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124949215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081031924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09853843 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077889331 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098778107 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084641027 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098996444 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098250373 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087918705 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09784981 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081890799 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100311713 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095638349 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098437138 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098763261 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087363925 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096153763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080265255 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102471717 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080746762 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102778062 seconds)
  done (took 2.882175712 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209506842 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105745113 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142164155 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105817878 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08270632 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106566727 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103063579 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086462937 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102434695 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083451554 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101124364 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101301871 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082998114 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100916279 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.206066772 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084875473 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102588231 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084441326 seconds)
  done (took 2.772280622 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093634291 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098973122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097211817 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099367521 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098154698 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084567649 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103602419 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106637361 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084180585 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098608862 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090284399 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100718485 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098927981 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081377616 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100809222 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080941905 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101333341 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080391652 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108281441 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104271298 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086247911 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107953494 seconds)
  done (took 2.891146443 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09690607 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100805278 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116994125 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085182035 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095897471 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080412747 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106139577 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080682039 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108488864 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101143325 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083320569 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102210652 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090349638 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101722417 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105182123 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081702015 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101991838 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102773192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077046207 seconds)
  done (took 2.686748194 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102076914 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101560532 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099568124 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091556769 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10074537 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08284026 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109447999 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100111439 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082693874 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125653424 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101165739 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081987794 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10935294 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105570567 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098736112 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092553357 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109513866 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10903436 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082470657 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10173836 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125197545 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081654642 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109467486 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099733728 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082520637 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101804444 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100375966 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087677202 seconds)
  done (took 3.565257039 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082115514 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099622111 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079911652 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098036257 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082510619 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09890932 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081554815 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099224257 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082820264 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098280261 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083065939 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099861632 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082657632 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100692378 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083692463 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100246436 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082882413 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097900233 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080348446 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098922351 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083335009 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101729111 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082615921 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09980844 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080270998 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101818023 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079792437 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098690473 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083629571 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098624689 seconds)
  done (took 3.513798339 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090291127 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10649718 seconds)
  done (took 0.985096189 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079302155 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115247349 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079319246 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104347178 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08529405 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101446597 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107521593 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086322404 seconds)
  done (took 1.545016646 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096998569 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112845011 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085573592 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116064268 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111568384 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100089747 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172078072 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102124645 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105483142 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080744262 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116559171 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082994091 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107627232 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084013349 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109017671 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089532977 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099185429 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106583577 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087173397 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099598196 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084567226 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111766064 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085143295 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098191587 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101422309 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090935639 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11383539 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082825216 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104110796 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106173291 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088147449 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094651948 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082993916 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102138134 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079634912 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111799899 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118698101 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085682413 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111123107 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099759215 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094111366 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094538073 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085850513 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106979259 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108793821 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084033701 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100675022 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077536783 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098397781 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083422775 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096792039 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081393295 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096004436 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088247109 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104035529 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110481568 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081109752 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102238676 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084634581 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105430049 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087400039 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102669194 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101498976 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082145082 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110330599 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086459806 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109979867 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093684624 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076922572 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09773011 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091977831 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123828174 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105601868 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083766411 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100549064 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079418034 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105561955 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084792728 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108414061 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105877548 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083169231 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106257491 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089068383 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10136875 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101856839 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091056481 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09877296 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083647 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09846355 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117661372 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081261134 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097858253 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080410868 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112832564 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084810346 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100587179 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078414189 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107619286 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093245774 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082611701 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100939589 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082971474 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114979347 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105879223 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088057296 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110427176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107353492 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083931522 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105347801 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.08069423 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103255441 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085224973 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109302832 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076617189 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104701241 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082629617 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102785054 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109568361 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080217049 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100835796 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088519727 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106572403 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098076682 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079269999 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104427323 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08426663 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106168831 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093354338 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102330115 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079015622 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097019028 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104620401 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083162338 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104101956 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087869962 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104809723 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076285301 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100096343 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105280546 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091617162 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100674268 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082176311 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107126616 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100870638 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08165279 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106742611 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084222008 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099906095 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086569884 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101368398 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076803771 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104990036 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103634515 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080824941 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105349062 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086030922 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104096985 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099967635 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082104929 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106433031 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08351568 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100017545 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081314847 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100027211 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10979962 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085177922 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095170189 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07963448 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.1090204 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079319732 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.1004898 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080284585 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103343 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101481335 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080938617 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099213004 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08462583 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113061295 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105519026 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084556855 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105696775 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093519483 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101180481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083937929 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103026193 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101205499 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083649045 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11010309 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.08763258 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106703013 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102518804 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080231084 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107479054 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090605875 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100942072 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079778996 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100825201 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10413104 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088235095 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10512074 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083136496 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100267343 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082725425 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105401389 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103294179 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082651624 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098916998 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087816847 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100424535 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106780886 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085103559 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111339266 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086418892 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09721483 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086085296 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099768843 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10639678 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078628831 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097517513 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081885516 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101999589 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081040121 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104101133 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07607022 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108521335 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108381463 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083341844 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100176193 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083189844 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108060166 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083287463 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105361839 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08514189 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109045972 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11275128 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081718451 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105871565 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094553619 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102161906 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094141775 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089307373 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099990677 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081604686 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099730343 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08180236 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104551949 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109678909 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089713514 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09487687 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085491839 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100708576 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081500859 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097053042 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086574732 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104631592 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100901388 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09035184 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103507852 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083187419 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10571639 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081621649 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10209514 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100852433 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087847562 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102794941 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084761101 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101922748 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08535856 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100346015 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.07973806 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102967407 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100093346 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082796372 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106707277 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082488946 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103245565 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084689586 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102260004 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10077707 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083532641 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100693559 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086183158 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101913202 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082535575 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10357741 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077155367 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109980388 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081574266 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109788539 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100764127 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079789866 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107285256 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084642208 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107477702 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10166472 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083902712 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102571765 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083543422 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104156907 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089019638 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099677861 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112264934 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091642991 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102782151 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084910346 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103573446 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083930643 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103902661 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.1023536 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085279096 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103642722 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083499701 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107675142 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08541247 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103605332 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083666832 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104027085 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100389881 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085308299 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095894649 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082168553 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100745169 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082877913 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113684309 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10063065 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086316961 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103079449 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08462087 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101380561 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078782804 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110167056 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110995569 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083914673 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109006703 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081363558 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104404527 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111359176 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078024369 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102245477 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081076861 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098972406 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090344557 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10452013 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091325586 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102469742 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108581325 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080493458 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103905531 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082045119 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096698574 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080813781 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107273353 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086651897 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102789128 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.0845235 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107723573 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103286687 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093549876 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102656352 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083750007 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103067667 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079723975 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101797484 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099409447 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08651291 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103777265 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080890233 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098204704 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082468116 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10254802 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083764471 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102743126 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084119698 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109148187 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100718765 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086346035 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105483879 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077243093 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104852969 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082183736 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102615057 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100019979 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087471725 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104602081 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084545857 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111448538 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082199089 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103276766 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101809972 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080998085 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100682954 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082826631 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102359778 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081967843 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103875271 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090503385 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101164029 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103628988 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083045616 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101535618 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090027322 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103858905 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085626835 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110588101 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10379427 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084787808 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110783669 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086341078 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105993647 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102098055 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084917303 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107468902 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081498518 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109033068 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082160994 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10352723 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102154726 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08180738 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100755134 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084197091 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101377155 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089313291 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103719099 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082182346 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101926746 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080254052 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103787237 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105063499 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091800782 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105011555 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085964255 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097784182 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080053029 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104292482 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098587554 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08670565 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104512789 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089595547 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104710743 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083148465 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101811911 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111786834 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089940831 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105732993 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080938632 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105931097 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084174919 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106824026 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.100990265 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084483191 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103097534 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087600507 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103319121 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08234295 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109869585 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085405694 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103925465 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10321458 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083827831 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101201861 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079553211 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102658782 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084681958 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107714233 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084344793 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103183396 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112987954 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083062276 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103240217 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08731276 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102577589 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105992853 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079093473 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102374387 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085541888 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103747184 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078250844 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101379829 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080927277 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104771377 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082794413 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098156261 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112686177 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092374294 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106069387 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081961538 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101707183 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077877524 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099372578 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101113577 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085649572 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103136182 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094146229 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102292945 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082473385 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099039901 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0828179 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10627775 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104692224 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081933629 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098231566 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082458696 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106303791 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088307199 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101548626 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082812251 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106050293 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103175152 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081369811 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105722412 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080530216 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106587143 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115164429 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084927899 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102442682 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089504636 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110900506 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082749135 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09816284 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101343356 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087709219 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.1012791 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08548513 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103896016 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118134121 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08692872 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101129473 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081921739 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104918922 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083105762 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111823135 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08408622 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104367467 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10662061 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085786441 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111703089 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085258487 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112566014 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105898938 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086094898 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101451053 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083009232 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101667586 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081995032 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105035383 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10317695 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089778178 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111766885 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082273281 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11467613 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113244854 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088189903 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099030822 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083099784 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102855223 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078235971 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104803677 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081054501 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101479064 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099909384 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086055578 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103040586 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090126578 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103419488 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084630062 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103517466 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077265283 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105620875 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084957045 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104744335 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099205357 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084956082 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103462006 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087692912 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106982067 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083643012 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105305388 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08442205 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10444364 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097112202 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091319034 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101310009 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086902222 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102402711 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08529324 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104489532 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086617461 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110303113 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103399853 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086007138 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115890465 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085210827 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100975736 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098797329 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090339354 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100880658 seconds)
  done (took 57.902351479 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147386378 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081262471 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098837826 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079190019 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113015779 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098447956 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079798722 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099848645 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080831677 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10262988 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079317456 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099103645 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107879986 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124479378 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093745027 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104840873 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078597852 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101378876 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097402644 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081271762 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108815564 seconds)
  done (took 2.892091742 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104554976 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120890718 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115093503 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118243186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090009344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115268814 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11599716 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114347255 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098859153 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11170325 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119522984 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114985385 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092129821 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111737714 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109848104 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092518967 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119206722 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109490308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116960511 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094574339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112767981 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115171567 seconds)
  done (took 3.249007272 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085223952 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.1019047 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085647622 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097025433 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083233696 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099147953 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087189998 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102349275 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085992843 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102703575 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081855228 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102613864 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10423129 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080284371 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102163607 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082568589 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151940459 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107883862 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082611518 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105052963 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078430316 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106388305 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097696461 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08101075 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101243232 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087962694 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104821973 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08164038 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103695721 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081618313 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102981237 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080475108 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105147576 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102514988 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08364716 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102094062 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084170575 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102338568 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079020875 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100623806 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084576022 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101049735 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084354758 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104896325 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081304845 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102254481 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085019036 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104111992 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096607691 seconds)
  done (took 5.481357193 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104377365 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163688431 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086493806 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145588033 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121024059 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11250272 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087839369 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142605295 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103650683 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081815572 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123325697 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120665302 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10259746 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088477439 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107824394 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102783949 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087416732 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103148019 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088893325 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104468659 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108035368 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089846252 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119826752 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118101553 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106940906 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083369392 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103729725 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106458469 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101184171 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110120022 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108396255 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090208646 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120087393 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109766335 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083554888 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106799695 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122293624 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083768654 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107156192 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101082629 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087335608 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108978089 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110164754 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102564733 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105383753 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109501266 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084038099 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101346563 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117842577 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08612821 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113819573 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120210323 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087351894 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105432545 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108394667 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120145672 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084428643 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102312032 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087358588 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118487197 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101650018 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088830281 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119868171 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106625182 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090950199 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119404604 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109408857 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106911863 seconds)
  done (took 8.145732891 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093465262 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111066427 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119967588 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119722274 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090710592 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111906265 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110727553 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090872968 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111476386 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116259289 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11089874 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133162336 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086383721 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114505541 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111825351 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091424531 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111463113 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110454266 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090403609 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111030427 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111675033 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120193191 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090588472 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120992628 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141404043 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105947161 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090943313 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111116269 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119887787 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10990838 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122394171 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092566405 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110898814 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120320576 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123127309 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090223981 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103875766 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110393511 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091278923 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111576159 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105236839 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100376297 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111056106 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105254352 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090376697 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111797134 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122118348 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124598806 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11405274 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096759493 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11241222 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120456493 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11050257 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091679052 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120610852 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146942934 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120186264 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12107002 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110146491 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099786821 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120349013 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128811005 seconds)
  done (took 7.67911038 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106816829 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116368055 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116840999 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098979918 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084006607 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108897022 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082435438 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102624506 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113534072 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094451192 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117956877 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108779189 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091745272 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117272455 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1091852 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11175902 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088508465 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109348506 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113272207 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08788097 seconds)
  done (took 2.931063999 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093870226 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124254454 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084245615 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112602004 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108326397 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09115482 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107543752 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106471272 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08595103 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107218929 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094777769 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116954101 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106086321 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091156647 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116928016 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11166622 seconds)
  done (took 2.51382038 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097982234 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116572323 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120456161 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086533394 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104155229 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100245953 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085458291 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100202347 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081661245 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121398302 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083741908 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108829917 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104223831 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083378495 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102003708 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086967008 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101759306 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082518689 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105527957 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.1197005 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09619247 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104723065 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105045887 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087128188 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106454486 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089182376 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106657975 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101952419 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08320892 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105542965 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084334468 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113430002 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101581185 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084297607 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102960803 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08264029 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105346232 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084624243 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108517089 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10386794 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08370607 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103996185 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084228135 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107096351 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080161427 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107040336 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099498028 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091474311 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10309216 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084612801 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105243951 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086607062 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107305923 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116485238 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088547028 seconds)
  done (took 6.255341682 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098876611 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109183633 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08072018 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103261582 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087347304 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107744242 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107427343 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088815074 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107689581 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082682463 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107959916 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088221984 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10759728 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108139213 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087317744 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109534179 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080288698 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108407691 seconds)
  done (took 2.631919474 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091299476 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105032966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092025428 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106497779 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084530182 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109385059 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080067061 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105635411 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102661272 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085965346 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104888786 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088243292 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104346142 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087402702 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10582354 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084080768 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108559424 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102380443 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086118595 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100738647 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088021909 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104041357 seconds)
  done (took 2.987157066 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118357587 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128933415 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095263901 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23496218 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105883075 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135875936 seconds)
  done (took 1.679792561 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110555558 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120343424 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105202086 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107068791 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115321392 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086261333 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107930123 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107640142 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117005764 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101607589 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108757967 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118959704 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118027469 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095562884 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114914369 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115071382 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106799054 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088069085 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10603717 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127990851 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087513969 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117441842 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107391475 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08639594 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108074868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117119016 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117419307 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121028533 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087338743 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117418555 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113364536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087800396 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11887229 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121229856 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107416315 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097860083 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108054123 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128477896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112789581 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096803818 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109421161 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114084765 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097451026 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115153316 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117561231 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106979476 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093022875 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108149491 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106490994 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13509198 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093782454 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117951015 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114263669 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118222903 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09656291 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134022672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122145951 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116833778 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11497808 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122618379 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116324178 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095147751 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117293052 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122732298 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114666933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096183503 seconds)
  done (took 8.123361353 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101794214 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126253992 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10775201 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121376774 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097037881 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107950228 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106928845 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087139612 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107645418 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106442949 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152270401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088488012 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117412067 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117565379 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086281437 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109040347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107658246 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116551077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086824145 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134974161 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107342251 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116985915 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116046774 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097935662 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122049833 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11466136 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107705785 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088097545 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108556746 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105938191 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09360007 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108190896 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116160665 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086499489 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117433298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108443185 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085889305 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114303672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108828921 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11501771 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097826391 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127958187 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108888312 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10767844 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102503727 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109103173 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107698374 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085754018 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108608584 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106619156 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10147045 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122091315 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121992742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11717728 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107479749 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087671958 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10852014 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107602786 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088179574 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115603613 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117059834 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086742373 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134154247 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109132411 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108951102 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116491275 seconds)
  done (took 8.015047913 seconds)
done (took 156.076740872 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215600373 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201030028 seconds)
  done (took 1.283910724 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088459379 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136065453 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097965588 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171938562 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085498369 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141112812 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137323558 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097510222 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106628061 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085862727 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106983358 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086453631 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171382791 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085081083 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107604476 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106144064 seconds)
  done (took 2.686737716 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.114404136 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255704698 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125746944 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10403148 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091066149 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10933759 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08461965 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111650768 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089630055 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105004508 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087801593 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106901455 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083491157 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106910562 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088146235 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109865083 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103297819 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090174314 seconds)
  done (took 2.841933217 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113698295 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147157838 seconds)
  done (took 1.141128724 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241207821 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162085327 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230531821 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.468720947 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.271422282 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.355736862 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.20633856 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210994704 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163513995 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208138716 seconds)
  done (took 3.391807694 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118571639 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179013725 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316745128 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154031102 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105769621 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126844239 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155235764 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12945498 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123689846 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100531668 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122077487 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117144799 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136799094 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094272675 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115914185 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116102128 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120511437 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114526828 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113603854 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095128253 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137703394 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083532612 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11595102 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113356312 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096753088 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119758206 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105375926 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085401049 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116202749 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093889892 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114185446 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125228288 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117720501 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154971216 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121030981 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154783149 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117259711 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090606571 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114541059 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089607378 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11847726 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118686459 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123334016 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097076693 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105614391 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097199758 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10747432 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083869153 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116169825 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118104607 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093030979 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113872908 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152914324 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119658077 seconds)
  done (took 7.369623593 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.786863585 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155474614 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089189973 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.876060409 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134343909 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102619396 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.766599732 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111371115 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257234565 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.747744197 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131991308 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096049513 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225917484 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25663869 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927960927 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290218145 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.634435803 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128682312 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151003056 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152251874 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116009146 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114270519 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129727311 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428915712 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115790301 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089303767 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117470811 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118371139 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158075458 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123959309 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091069252 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196680602 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245771213 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201832254 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094079564 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111997992 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088271465 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190191649 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265259272 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192275332 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178872873 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107573976 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088790154 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122840569 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132097127 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086095458 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182296958 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174223359 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168140222 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114180725 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117381842 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098365165 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119656428 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1632501 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121307403 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308794999 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31923096 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089543501 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11973186 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12408423 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24032809 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122807493 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221711258 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137747381 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18694066 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110611134 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821420195 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168496092 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110271722 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095282705 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118926013 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114399669 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097883444 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165530229 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.404391856 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122539456 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113004242 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089104427 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226006597 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101674058 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111037466 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160479588 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115623852 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11788743 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102166803 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120780573 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167170631 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247175315 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100201978 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1186664 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113023585 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101981845 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116357418 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213087724 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21637696 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160372259 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231379815 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099534093 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184913643 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167754715 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117721838 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170951695 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117964085 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101407263 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121145064 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213720175 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144058208 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121247947 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094613846 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117905146 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146682419 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12590066 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096221052 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188364129 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45688341 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165460799 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108618008 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124900763 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098126649 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179374658 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096282382 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261016338 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119686615 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168488938 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117591895 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087576143 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118645541 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161741779 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119813252 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097627749 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121533622 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118647447 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231328467 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214735412 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118912676 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218892297 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183567401 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117381431 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169630309 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121318824 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166701683 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119129477 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097635856 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116973444 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814671937 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121805437 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09872409 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116035096 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186944173 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089156617 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123421241 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124015529 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085738055 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81578843 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127330567 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.118660173 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103453731 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116982971 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117580615 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096454952 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116211972 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160680854 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227593819 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118638915 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096626568 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125573537 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159044782 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117678009 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124075239 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122721407 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10310669 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121453857 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112939283 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102610212 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187884467 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162463947 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217158161 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576048793 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112392408 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12239615 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203042039 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111737299 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286425759 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116336884 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200257436 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181893967 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099025203 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318481361 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16365934 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185208089 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12665163 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171141868 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109528316 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116820607 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164491098 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10930856 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095863525 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159262323 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124730953 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12220379 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955346026 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089352091 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250107568 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087221622 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169554819 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116673174 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119301888 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.283889748 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090999644 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127986422 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162732272 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113878144 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101804308 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.865591245 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.122931932 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098582865 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11723849 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22051834 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163359913 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11927966 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118845769 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096803336 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181926961 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210752895 seconds)
  done (took 43.849436905 seconds)
done (took 63.438142997 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277749452 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214695151 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26859748 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169837653 seconds)
  done (took 1.912976108 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171257886 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149480712 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121413938 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10777418 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150565463 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084524896 seconds)
  done (took 1.68865734 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361246047 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276748079 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242084035 seconds)
  done (took 1.786484227 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289078701 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.244229177 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47323645 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322873602 seconds)
  done (took 2.357744482 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207885125 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132425735 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112124604 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.102141631 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196711112 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244672178 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141943693 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200972573 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097425038 seconds)
  done (took 2.386842862 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196475034 seconds)
done (took 11.238323698 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.240653043 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.159431636 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.185261434 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.24611945 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.119238738 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.26813563 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123301541 seconds)
    (8/309) benchmarking ("sort", Float32, false)...
    done (took 0.147757481 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.1203579 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119920342 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101636814 seconds)
    (12/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.1864865 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.245252335 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100660024 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.198496705 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.207482367 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.126148197 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.285789719 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100408236 seconds)
    (20/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.212548142 seconds)
    (21/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.230081238 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.190185209 seconds)
    (23/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119170532 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.211716027 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.248127546 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.206059956 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.106980208 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12328199 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.167685871 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17969529 seconds)
    (31/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099302393 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.183752068 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.196734963 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.214173758 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087175996 seconds)
    (36/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122899259 seconds)
    (37/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083960724 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.168767611 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119954873 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188256023 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12204844 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.08591489 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131858706 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.071422795 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.173797894 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.241714106 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 0.249728323 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098046475 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.111967518 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097078464 seconds)
    (51/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.253966982 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.121286432 seconds)
    (53/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147414266 seconds)
    (54/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.132912011 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214804639 seconds)
    (56/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149259237 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.15828993 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177178576 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088286651 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.203061929 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184534278 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112046445 seconds)
    (63/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.098163043 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066271774 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.092790071 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.132728862 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.175240011 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.133192074 seconds)
    (69/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.11396968 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064739521 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.187909732 seconds)
    (72/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.109517049 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096162425 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114662534 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.135108402 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098208287 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.179785983 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093015995 seconds)
    (79/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125147646 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066890319 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.11000122 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.115529974 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.21259137 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.127642871 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225515301 seconds)
    (86/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118377596 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097081261 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190921186 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090296032 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087996455 seconds)
    (91/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118244274 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068574992 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136387717 seconds)
    (94/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104384034 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114658021 seconds)
    (96/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.139764078 seconds)
    (97/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.117743673 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107635863 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155487711 seconds)
    (100/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124864165 seconds)
    (101/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065503507 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.099293413 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093663467 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186694983 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134825451 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091598665 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135976628 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.084429469 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102769642 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108288814 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.206610408 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136991891 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116376091 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171617529 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138848607 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107585101 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117853225 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192422491 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.320511502 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093875641 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204481397 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065280839 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.098723976 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.124054673 seconds)
    (125/309) benchmarking ("sort", Float64, false)...
    done (took 0.17054653 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107723879 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.178558923 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094942161 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109769889 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215465226 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.109418642 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.185668495 seconds)
    (133/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.201170119 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066784794 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119615669 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112974416 seconds)
    (137/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.151299765 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11580783 seconds)
    (139/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.127247302 seconds)
    (140/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.139510326 seconds)
    (141/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066284757 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123399462 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.092137273 seconds)
    (144/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113733638 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.153603135 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066867703 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.084886089 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138730543 seconds)
    (149/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109322293 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068239584 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08439004 seconds)
    (152/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113824042 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091958815 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10792993 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.141815967 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.159463333 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.220632749 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.188564493 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191827378 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.116334274 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068293858 seconds)
    (162/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.151833926 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069341963 seconds)
    (164/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122931212 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09633337 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131518108 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091640033 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.104589336 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093641744 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133133976 seconds)
    (171/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096781905 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115921382 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.084046658 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138357908 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116997785 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09141452 seconds)
    (177/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.099337352 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06759526 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134654824 seconds)
    (180/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091876354 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178575022 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075613626 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108573628 seconds)
    (184/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076093602 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118633296 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066966248 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114965973 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159517569 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110830796 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.084876289 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118726634 seconds)
    (192/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088826989 seconds)
    (193/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090267589 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067536882 seconds)
    (195/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115666411 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065928081 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.106061218 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092485268 seconds)
    (199/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123802719 seconds)
    (200/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089009359 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.136965897 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066350456 seconds)
    (203/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.074826356 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090415484 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08561157 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.164318587 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.115859166 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086675251 seconds)
    (209/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112248398 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095177432 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.116688453 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09394618 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115369512 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.176418501 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09403978 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109390103 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092388268 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10754677 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067065367 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178896606 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087397964 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.173799531 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084495924 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163016928 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109955023 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085059168 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.093738235 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087025893 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066375839 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092085151 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.187238243 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108802402 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.088968462 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110228546 seconds)
    (235/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110711313 seconds)
    (236/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075881554 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172595047 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134580198 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11517494 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.088745741 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06774058 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086239767 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136873913 seconds)
    (244/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110417013 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067566441 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.107877694 seconds)
    (247/309) benchmarking ("sort", Int8, false)...
    done (took 0.187498389 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086625542 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.088647128 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087271704 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115570378 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067658258 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.134942997 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086802042 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067972499 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184202934 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110299658 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068342846 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066176549 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119419605 seconds)
    (261/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068901446 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136883625 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067191767 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115569896 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066136514 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107722963 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115162114 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110406492 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067760364 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089100944 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068600092 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.108554997 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.093438151 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091801511 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214517289 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123306299 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110814267 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13552192 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.151840452 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086034777 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.131376565 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066340075 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116783644 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111267629 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108762756 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.083705967 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089815983 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086468525 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117119685 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067690743 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08787162 seconds)
    (292/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.08896119 seconds)
    (293/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075049896 seconds)
    (294/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113655003 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087901264 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115776956 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065794129 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123527264 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089121759 seconds)
    (300/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121874496 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088309268 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110291518 seconds)
    (303/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.075808219 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115636545 seconds)
    (305/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077068229 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.135271421 seconds)
    (307/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068653784 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.137124862 seconds)
    (309/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068598105 seconds)
  done (took 39.65285707 seconds)
done (took 40.563541667 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10003828 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145189936 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094671271 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135758975 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12303394 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092100703 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117794244 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096580743 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123743853 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124132019 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097400315 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092192669 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096772565 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120224406 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096383358 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138563628 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122345988 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094221833 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118688653 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085246 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11888857 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085731952 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112791797 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069350784 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121143195 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093431904 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116379611 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119070761 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087748652 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108500944 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091168615 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116201195 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086357399 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124336587 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092885611 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117888576 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097162674 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120762256 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087951787 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110498352 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115852386 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087543737 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116064624 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095057182 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114865278 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092266747 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117379168 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098445878 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141517416 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116330897 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095818007 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122788252 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095526969 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118342797 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089444212 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11964 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090756084 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138852925 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118889185 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091197443 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118110183 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094251738 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116661306 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094245701 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120570576 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119212193 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09786613 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115181572 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.0967406 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116152464 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085735112 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119211883 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089180551 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110681085 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094907614 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121225673 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107458957 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093614382 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11562654 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092473274 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109688939 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089762461 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110844056 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093024187 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112070465 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070063992 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11288947 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094332426 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108336297 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095665487 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115534984 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09313534 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112250319 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097907694 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110970222 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091454925 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111034668 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086496112 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11290817 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089986342 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110299531 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089178017 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119408371 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087652364 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116863254 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121244899 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086797522 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115485691 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086404859 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109016876 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101174557 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120964538 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08650359 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116576552 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084820018 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119180014 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084784171 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110479828 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085638455 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111357851 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091628059 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111069752 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111396729 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095604572 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123462636 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087092716 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112755998 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089776919 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109997914 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093719426 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110092859 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086833611 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11239089 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078324256 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11230744 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087099832 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117621597 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090273869 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118510827 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088283996 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120159003 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091171269 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117632773 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091640062 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110674779 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074191585 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115732333 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089006572 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112303411 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086988582 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112915418 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085832648 seconds)
done (took 16.876209979 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088532612 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184701174 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150222807 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141416901 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106170092 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111050391 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120737438 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118830731 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112761272 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141410597 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109596389 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131263971 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146796411 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085968881 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110344634 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090445195 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112339717 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101415947 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144959333 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131685457 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162817895 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085860211 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146597239 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135867216 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119578342 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116075567 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111199375 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091531066 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114697269 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102716614 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132592463 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.112614695 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088739392 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132805384 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103923372 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120121089 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086480624 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119398197 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086170746 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112199415 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139381993 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132298817 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093954935 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116314269 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091598729 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114218097 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089349575 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119607064 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097412436 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11633357 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125631501 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154756073 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090931402 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120880206 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085208181 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122502696 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119762084 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090045158 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110054176 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09065909 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10961633 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090501326 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127151226 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14062188 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091245509 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121113047 seconds)
  done (took 8.584302249 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105508224 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139376037 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104529354 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129888918 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110622121 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088323717 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.127086454 seconds)
  done (took 1.777524723 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089764553 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132582069 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110730278 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134917046 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130486821 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109033028 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121822009 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088547974 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130326582 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088257491 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134796966 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151340543 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089624595 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120908402 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13555482 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08815171 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136309784 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087974428 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116142031 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110514964 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116104994 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134267512 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090709226 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113190958 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102761533 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113513597 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160562036 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093530589 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114058967 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092053615 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11165957 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164945155 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101547048 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126936775 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087283054 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127975559 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126798902 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086689461 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129773563 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093710917 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127889482 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088600664 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114309703 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086805173 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118713839 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.121989045 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090524006 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113305727 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091283173 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133122034 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089146765 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126412704 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088138574 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117409754 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089435549 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11937545 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121011946 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090738924 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134577505 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090109783 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129377622 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105400349 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128320246 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129485909 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09163315 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127267928 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102208509 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116792554 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089583084 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116543239 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129139174 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088107161 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114503251 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100114974 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115046961 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112348975 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137271721 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089138512 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.1240048 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112193778 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090450475 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112760479 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11204111 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11719371 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088108864 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118789172 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091153642 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111886279 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086778143 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117671695 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0864726 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114653932 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09135499 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114377696 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115145586 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10662121 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113903783 seconds)
  done (took 11.772735355 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091027224 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112669166 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09187719 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112747346 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09038883 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113759065 seconds)
  done (took 1.597101134 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114459363 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116970869 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103450441 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120256885 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155459526 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103109785 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129201388 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122379291 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107421474 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127631441 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128224165 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104743393 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13614138 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119106666 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103681771 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119605081 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.127845804 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100915464 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126863912 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096692174 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135529689 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119236201 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096529551 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131261399 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116267416 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09703886 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124399808 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10085633 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127638307 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120385454 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095519917 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118178744 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094872895 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123405898 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129071683 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095637862 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121703485 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117662873 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100969042 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116540695 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103846181 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121850762 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126194235 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093677809 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123842185 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120125399 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095257458 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124599969 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102506537 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.11953434 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11754415 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095776399 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117784545 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093330679 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121571931 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121786433 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094185571 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128479458 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094934854 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121131727 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116167372 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093038532 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123383526 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116267565 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105495088 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118938087 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095041135 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122215731 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119922981 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096308568 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118952364 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092590891 seconds)
  done (took 9.190393491 seconds)
done (took 33.892899165 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.682910457 seconds)
  done (took 1.663863417 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.701732735 seconds)
  done (took 1.684762036 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.49979406 seconds)
  done (took 16.482897768 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499881455 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579472478 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.81184377 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180673613 seconds)
  done (took 3.054651368 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.931588928 seconds)
  done (took 1.933040938 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295210859 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255788628 seconds)
  done (took 1.537956644 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.762855024 seconds)
  done (took 1.75699523 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.344746718 seconds)
  done (took 2.332460881 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330665603 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183928277 seconds)
  done (took 1.513762163 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551624791 seconds)
  done (took 1.549486513 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.74243263 seconds)
  done (took 7.746474961 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257716724 seconds)
  done (took 1.27074722 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298989572 seconds)
  done (took 1.30155712 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.324994263 seconds)
  done (took 4.328477187 seconds)
done (took 49.151136096 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099823347 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125107631 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102175805 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124054161 seconds)
  done (took 1.447358183 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101481334 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119823405 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09933782 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120085005 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123342464 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096366603 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122534232 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100182301 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12017988 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095086535 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121349526 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118319612 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099499512 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121477152 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092330973 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122645469 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099161772 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120413848 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123030823 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095676792 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117841643 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097869183 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123396311 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093205873 seconds)
  done (took 3.649654051 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100603306 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117405621 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096678341 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116825829 seconds)
  done (took 1.441533095 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100489975 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141283261 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137104367 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100830697 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140685898 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134037675 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092603737 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11556976 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094775671 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124294651 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090547734 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149305809 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136713297 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098635987 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126223823 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087431809 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116140491 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135800642 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099614072 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125271095 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092491539 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124905147 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090599379 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138797696 seconds)
  done (took 3.80062255 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157756315 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150339153 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138004764 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094766593 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155429261 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140856789 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087656121 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140497318 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087225724 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130542264 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116788147 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132623473 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127649095 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086971225 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113388941 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087127411 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127349979 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128966928 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091063336 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144404531 seconds)
  done (took 3.452324631 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097672392 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115051069 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087964819 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114951154 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099615126 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120236071 seconds)
  done (took 1.64840382 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091005588 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11264358 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091296699 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112506868 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095107455 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117017696 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089110904 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113271537 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090439299 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11303157 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089730986 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112648737 seconds)
  done (took 2.240787355 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.457433027 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092357985 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120014747 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113012146 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096435728 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114001601 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102362392 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117951252 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138175971 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089552806 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113320462 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092240161 seconds)
  done (took 2.658677763 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236735626 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124773543 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288540205 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190320613 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158467442 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169711457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15037524 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165438965 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.221530139 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156805311 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208541426 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217329577 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125286917 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215970204 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111564318 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144182794 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223427262 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218248456 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153805256 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228785872 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200488079 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165069416 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178129401 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151443652 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137422864 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168284418 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120043733 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103225748 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234087372 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17831197 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216611857 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163299298 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145332983 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213881245 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246017806 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222375305 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186843121 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134491388 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143074505 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164576192 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266297052 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136806437 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234094107 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157661702 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105169887 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218337307 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16831469 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173384331 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.148686424 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136306686 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197752294 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238653451 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192516318 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13773133 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161507973 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158666753 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16660215 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151858216 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25038829 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198761024 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178331899 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11933136 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144599086 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190994154 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180124112 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166179041 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.205269916 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145271753 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193616697 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185914123 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166890621 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216929857 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183234608 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137935722 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16895242 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173334847 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170782321 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253543355 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176495955 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121016703 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168003829 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149146206 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129359226 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16901003 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12377454 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213941061 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149616676 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.133364867 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162645608 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160059605 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16047161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198313936 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215275989 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120436463 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.109471873 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154862765 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153093839 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189876108 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138757628 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159406246 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159178597 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12724012 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177256867 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096552159 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198502539 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091964925 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175633621 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182945715 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124995568 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156114972 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151938203 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147017428 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1777501 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196911302 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13890352 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131452457 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206622888 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173318876 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.148548519 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177589449 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223557759 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.114804374 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147764062 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224635485 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215283893 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138609955 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22619046 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153298594 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107476079 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133252081 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177211223 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155415344 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159155592 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131342153 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179082074 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233127601 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099603772 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137745315 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186475905 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131972483 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129534535 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158621475 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145258955 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112772097 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145817196 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150632851 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179049756 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177296233 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151397943 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164677497 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149805299 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248524417 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139743926 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148332905 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14683456 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09401097 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.217029777 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196288955 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129352696 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203342853 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171203761 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155062372 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169175909 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133848386 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17519518 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127291275 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094170903 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21587635 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16390886 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160369431 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194816343 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153545315 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18185067 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.179681854 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170239134 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199743806 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162135443 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158368047 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111467022 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157550676 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163903304 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122056616 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140775179 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106518012 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155148494 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142118339 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132124147 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19725039 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194770596 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121517194 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156936669 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148301292 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179049027 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127102406 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176810022 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17378487 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147126265 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219310491 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192139587 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184890032 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141994396 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22873093 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094786282 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122428066 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139461002 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170450139 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106695501 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134144867 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164637064 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177751972 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208602298 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174804 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160762092 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177576293 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190069622 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093638942 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167701421 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181803521 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198187263 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15721707 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13877779 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149873472 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17404645 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154200341 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253302149 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165742348 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174608688 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23439031 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145813138 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105509077 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149510205 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182523085 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151282464 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199049592 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121005057 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138682077 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159922288 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.130562165 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158466822 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183182117 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161443503 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21539047 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147943153 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186574926 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124486332 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165895643 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156577138 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162679856 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082805123 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17436537 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228365236 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14603023 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169582511 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190682368 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130696412 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.176498436 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211140151 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220372782 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13543748 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155608263 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131918526 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162118972 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196170995 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175375597 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157626385 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187083972 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156146928 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108453418 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138672612 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148754703 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15096863 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105240058 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146079391 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.199835195 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11117435 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214513554 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160397855 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155095909 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170531938 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121549012 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142494804 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149930471 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238026705 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173539633 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211767209 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148287339 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176794156 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230661118 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097309054 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131204387 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131828279 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177361568 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133138488 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188623347 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.145804763 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128511716 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204770861 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191473103 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137832126 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09270816 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155211996 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171109435 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162660252 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150140151 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157443078 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232273224 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115043392 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131522717 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169781704 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155447276 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143894923 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19721749 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079535765 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148022598 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126350215 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104491984 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162551415 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234234815 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134318537 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156766025 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192835015 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166866233 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163058017 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147293836 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121933833 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164006869 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225942877 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184613348 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.129715373 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155233509 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176062576 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193621352 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158796682 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138595706 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20067421 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216737735 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.1984509 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.139718351 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166626389 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165526058 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154323885 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184396744 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133280649 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203667058 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13334203 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220288053 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15054853 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14076151 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173669798 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.119279704 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142002065 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21074699 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172887458 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107471918 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132602916 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165686643 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173978698 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153633911 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126910303 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1790577 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12417609 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187447333 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256490716 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13173732 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150316382 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119165364 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134798874 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155858573 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156281686 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138699475 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.137112721 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228875352 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133268687 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189189513 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225511327 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170627006 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173515374 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142477667 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691098571 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127917132 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192849545 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153542931 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203715735 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149816989 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170218513 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155503165 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166264823 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218785013 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157485141 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228540059 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192433406 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.174766989 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131009816 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155827761 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1599617 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14239335 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151175746 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165921733 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158379328 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15039326 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176658129 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167241303 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.131603328 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111824699 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222920803 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152984719 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186384875 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177710152 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136080752 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17084908 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185478097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132515387 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17868147 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234027755 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138607349 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122608886 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133292331 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153430199 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256170585 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094999925 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225623389 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173427781 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156834559 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164765249 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146185739 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187170292 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156384926 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201399439 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118122781 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182621079 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12765226 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137182178 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128696138 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151159313 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165419483 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.144124411 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158069112 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137352544 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190739308 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123142186 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142344257 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15364144 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190157518 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211179063 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137240273 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134617895 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160786684 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148485908 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174512267 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175577935 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134224414 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106660882 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135235284 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155738251 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11288361 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153932947 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155849128 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164889246 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203309934 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135105427 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277508386 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138835047 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151687768 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090428523 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131250809 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147534232 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11779245 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15580875 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148703963 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258253154 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144827754 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.103979701 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147930184 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125001693 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106857119 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163073256 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162957869 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200570452 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142272402 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082189077 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157327489 seconds)
  done (took 80.129760028 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161349259 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131261698 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146405499 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20124504 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177124851 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267791626 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209389722 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25343761 seconds)
  done (took 2.637527123 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094094622 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145769047 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15167505 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131981414 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091791668 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117144493 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.33187802 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130677555 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.09179496 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139072189 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.168996787 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094405439 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.508922449 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.124754898 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.116518148 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082923876 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116815409 seconds)
  done (took 3.72507405 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.458487689 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.662786714 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.476225935 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124427608 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.932890486 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134862049 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.353656135 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.205203363 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095325599 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.462377229 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.766876219 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.177250214 seconds)
  done (took 17.945985512 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099049375 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.117218898 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10824712 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.13311999 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09558132 seconds)
  done (took 1.646073958 seconds)
done (took 127.421323563 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104980815 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40600068 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071157961 seconds)
  done (took 1.606982719 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106985087 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134141069 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10784273 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134577561 seconds)
  done (took 1.592260456 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097353332 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123942359 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108406948 seconds)
  done (took 1.432538009 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.317478238 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187561711 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.140997522 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105972545 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125723884 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10311872 seconds)
  done (took 1.435933468 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097593837 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125804922 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097509651 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128063579 seconds)
  done (took 1.555073405 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095229713 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073560843 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09804445 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075697328 seconds)
  done (took 1.444761691 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113761094 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129260825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103254841 seconds)
  done (took 1.451526304 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130364835 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.136446703 seconds)
  done (took 1.371364998 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105497356 seconds)
  done (took 1.206408251 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117520211 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167328871 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187994946 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.162760778 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.224508727 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164237627 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.138729386 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113901485 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.128963281 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14221497 seconds)
  done (took 2.654586817 seconds)
done (took 17.605016465 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10286754 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.410944214 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412198286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116307635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.718462934 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379567579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.054118941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144404962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163408919 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092783709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138051679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670098851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.00912216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.366337427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969501826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.460050838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.700827765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09319733 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116762344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09409493 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.038021252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091298555 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120115396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091529822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700139906 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423725025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095473643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.4580306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091872101 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123960346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381754759 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120465723 seconds)
  done (took 17.044210659 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097578753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170486624 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098530676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136282454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121116508 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094007343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122335277 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092341768 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17706092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120456503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109029114 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119716868 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123383226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095232587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139856577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091737186 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123581928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091885385 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119352013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117980018 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11186254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118814175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093478132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120167787 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09348519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133379119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119561459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093030578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118221196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098022962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124883012 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093710284 seconds)
  done (took 4.784604102 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140440623 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179841571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126311835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126152389 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166953273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121634129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195717148 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116830753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180132043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121608466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137143687 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092852283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15387658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120121762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114720828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118708465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097307401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120515219 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091107722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121023378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136697645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093137918 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119824225 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093390145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121858274 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107405448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122333109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118680738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094395131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124192708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099146106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12167448 seconds)
  done (took 5.109950825 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097478837 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123254079 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108587973 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136887213 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094108181 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123639812 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.095992374 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12272384 seconds)
  done (took 2.012947267 seconds)
done (took 30.054476995 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111962728 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124433145 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106437978 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132856046 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102730462 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131766333 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090522078 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132013091 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131770875 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10257398 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135614965 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091272625 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120041465 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091068609 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132352435 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096912026 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.129900959 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101041904 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131168725 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.129536924 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094814734 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.130571921 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10249609 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130783596 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103082683 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131253866 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134808366 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100167848 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120240394 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093718439 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.121808513 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103946595 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125621067 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104933229 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124449542 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096266722 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122991508 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093469329 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131292756 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.12878925 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100637327 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133799802 seconds)
  done (took 5.958458874 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108162629 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.147292776 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105586345 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.088695983 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.12239177 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080124069 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135596284 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08705556 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114334106 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10830086 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081520664 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.110512134 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078286879 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.098379764 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077517996 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075097112 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.105857615 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076219833 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075920424 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103279349 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079097904 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071992259 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106778673 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078389528 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07363791 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108530797 seconds)
  done (took 3.612891436 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100370815 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132226094 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112698507 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180667406 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157240574 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099176009 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130922015 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136383329 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110467243 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117837972 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096252449 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146945448 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110093298 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12738011 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092204573 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135819197 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.141868117 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094041334 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125389913 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111440784 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136442243 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101550058 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141239582 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130998823 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091746403 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120988227 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095681404 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132459521 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096737244 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128689587 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122916444 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095947929 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120594479 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104027816 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123728506 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.092568954 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139745453 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127655949 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101818043 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118215096 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097410807 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119695896 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113228951 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164372696 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090404041 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126961597 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125518337 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102866419 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119197345 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109772448 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129361408 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091293922 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12306727 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090740682 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120194637 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104800624 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122467453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120286683 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101997198 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122446509 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105149228 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12285044 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107568725 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119488103 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.097821548 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119090974 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091713912 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119205327 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140633664 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093978827 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160739101 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098695244 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121709209 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127236271 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100096262 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125551951 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093139231 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134514038 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101002488 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123402317 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100134224 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123938109 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094396749 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137747681 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.119891173 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094781143 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.119505305 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099018202 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121852633 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093280045 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134145025 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091552423 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123617315 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108256005 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119184258 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120332973 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099731722 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123048659 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09171992 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132579559 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.096389422 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120007173 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.127346743 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093402811 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121518591 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103382113 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124129789 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091417302 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124540311 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.097811516 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120435285 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092678655 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123248574 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092576998 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129932259 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125190396 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098142751 seconds)
  done (took 14.637388651 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227285527 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212134704 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.230665727 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.257853342 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132442978 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113363985 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208476604 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.152410728 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120971751 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157546817 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.159335089 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.177240341 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138639059 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.176830674 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.139059697 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118840564 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112036792 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163410106 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212129518 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.283027107 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112364809 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.12984336 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15923213 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157383777 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105750644 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130677346 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.135454326 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10533525 seconds)
  done (took 5.662268596 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107728623 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153245247 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097319255 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142102156 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146216868 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091287283 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125799971 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092993555 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.132650523 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131990848 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091578839 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126785464 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098975019 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130205564 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120196493 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102421002 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129217862 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09365493 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124491129 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096723461 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127105889 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.099968101 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125594505 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117897946 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102975664 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11815542 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086062118 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139413595 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119142912 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115444565 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118550466 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098948087 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.130348556 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092719079 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120085938 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094502714 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122632023 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093514485 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122273035 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09084193 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119383343 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077203817 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119295747 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132454276 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099076073 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078723388 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126662439 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124631349 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094576047 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.117012323 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096257165 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121851507 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09685142 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126836046 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098062746 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121263494 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09563681 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.113715005 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099117729 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.121935187 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084133345 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.116933177 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098307336 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.114912175 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100369635 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125039893 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090858031 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123582314 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097076865 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127116877 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093607555 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124045789 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089487838 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123128236 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094250325 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125621907 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095345731 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119956958 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118544497 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094376569 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075370489 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121223746 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073929323 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12363518 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092490354 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119157774 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094741646 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127280659 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134437428 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094166012 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128865296 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.092686612 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120016263 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096209596 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.110891493 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095515299 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135288401 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138734198 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093123544 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117568435 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106595389 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122789822 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091703946 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.103201492 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.099317646 seconds)
  done (took 12.760046661 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126648431 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150255487 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094118281 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140159998 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.151867962 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.153710446 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100646556 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128077683 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095187648 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138570836 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092674822 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129072222 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096141747 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134612805 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.152504049 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103098648 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122313418 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10572378 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132123302 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.166451736 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110762706 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.139664073 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.106106165 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122370101 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.124212207 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110280649 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.157745714 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106338735 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134208423 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139140837 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107760309 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158562495 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139565296 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098559787 seconds)
  done (took 5.41912005 seconds)
done (took 49.16166379 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.240600032 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.421910307 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.20863093 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.092277401 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.214844484 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.239957521 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.224862681 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.208436296 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.504196241 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.210129199 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.473951731 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.740546153 seconds)
done (took 59.921014692 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.259932826 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339054394 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471963437 seconds)
  done (took 3.948358669 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.551335146 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.075212591 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.472712258 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.209257456 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.209192357 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.513412388 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.742558436 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.424574742 seconds)
  done (took 27.783765394 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.212238871 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.552179661 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.429922566 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.427252031 seconds)
  done (took 17.760998704 seconds)
done (took 59.443577806 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.223723795 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.233305087 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217197982 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.189931164 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.336321991 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.242649346 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.517866065 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.429236321 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.211015024 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.213109837 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231224622 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.22949697 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.224147254 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.498152804 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.218075039 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.210098254 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.287778988 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.657430862 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.578212041 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.232935434 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.227987363 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.231616574 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.212578754 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.226575627 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.252625737 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.212245192 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.218718848 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.216153847 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.251973875 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.216726808 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.309955684 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.694427106 seconds)
  done (took 191.593583535 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.211601857 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.054522784 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.188547119 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.276196571 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.570232117 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.414241232 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.34899639 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.658038923 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.233227484 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.247652432 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.393137734 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.21703285 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.438819485 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.199007978 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220539062 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.320625725 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.427837448 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.495350135 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230028793 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.485257187 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.221448826 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.35136618 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.266527288 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.362384321 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.236374985 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.231653835 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.219793671 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.2580945 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.406180981 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.358355567 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.236091113 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.243727114 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.757365632 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.074203415 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.222805406 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.226843221 seconds)
  done (took 149.446078457 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.492298628 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.213336883 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213581936 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213543867 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.242342947 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214253143 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.710072868 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.714731319 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.707763006 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.378749909 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.275967146 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.416543556 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.219332106 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304530262 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.225526362 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215728435 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229884495 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255584584 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221314662 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213845943 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.711329551 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23140553 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.307181508 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225446155 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215439343 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243593129 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.601118327 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216173103 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243993577 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.525677637 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261427926 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215777005 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.482528922 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.464496655 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32298878 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21632861 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244602284 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215185957 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479634868 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215750638 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216396209 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.218133637 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.762447502 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.220798123 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.711880963 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221464172 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.092024172 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.220021375 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216602852 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.21619833 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.450852162 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.641513559 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237546925 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.21646743 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216266705 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.218713296 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.218091421 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218309257 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.246106328 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.432141615 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.315297181 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.233473918 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.218308523 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.221265779 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245179187 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217375008 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.303267967 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217712102 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.674632363 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293796549 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.328441898 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.715718947 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222154674 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309128899 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33253629 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.217571549 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.217270104 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217517753 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.219147069 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.3219146 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.21818219 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.598293993 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224524873 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220436009 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.277779044 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30942639 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.21899984 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.486248324 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.223939986 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.219058806 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875764467 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30925823 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.219711995 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.218497348 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21937545 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.594141024 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.716183422 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.365529768 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.223735534 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.432833901 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.22378397 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.610582457 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.708661019 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.219138176 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.794315965 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.225207009 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32446628 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223654384 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.220585748 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219236329 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.247778379 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.236016296 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278416681 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21961887 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.614390419 seconds)
  done (took 345.746627407 seconds)
done (took 689.416826875 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.910612812 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.864615315 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.999073692 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.875427866 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.869879582 seconds)
  done (took 10.667242971 seconds)
done (took 11.815012519 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400813583 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.402826036 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27784246 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.403542105 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248498398 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.417928281 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380864414 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.241030471 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.320299323 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.297732271 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.320466985 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272658844 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248522607 seconds)
  done (took 18.382192768 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553774092 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523373671 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284223452 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519566156 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260567467 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533228027 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420370595 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.454155045 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425772606 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256337426 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233306937 seconds)
  done (took 16.615856776 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541379433 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534879324 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288053985 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559057231 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261725484 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537340959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422703217 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437049259 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43978461 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252911559 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234435607 seconds)
  done (took 16.659743774 seconds)
done (took 52.80534212 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.230658343 seconds)
  done (took 2.381445144 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262611909 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.422278718 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.250071245 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.234686146 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.231583541 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232781523 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.235603607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232073098 seconds)
  done (took 11.2518467 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.230474567 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.22882506 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.229049707 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.227384406 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.23023091 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.230606819 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.227554312 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.227841461 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.228251438 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22828668 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.230389998 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.229993904 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231518065 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.228308762 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.228077597 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.23180094 seconds)
  done (took 20.820295487 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.230773211 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.228573626 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.227975681 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.229384343 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.229260136 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.229249725 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.229223049 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227902199 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.227577265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229211277 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.230197332 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.229131471 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.229253087 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229412916 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.230222637 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.230274318 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.229120319 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.230795272 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.234143641 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.232209587 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.230508981 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.230293979 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.231298808 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.231066577 seconds)
  done (took 30.672218308 seconds)
done (took 66.275260506 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.118806581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.779729014 seconds)
  done (took 9.051968197 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.232921054 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.23294326 seconds)
  done (took 3.619823002 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233271461 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.233041885 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.232608255 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.233493441 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.233363599 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.233042105 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.232979615 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233151308 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.233311062 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.232657492 seconds)
  done (took 13.48493217 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234041755 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.233547642 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.22960745 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.233266269 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.232460726 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.230397458 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.232742247 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232834285 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.232598797 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.230772215 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.232683779 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.232315213 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225130358 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223275557 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.225579892 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.224004595 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.224367004 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22288361 seconds)
  done (took 23.286057363 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.230415224 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.222876388 seconds)
  done (took 3.600402016 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.218594648 seconds)
    (2/7) benchmarking "second"...
    done (took 1.219644821 seconds)
    (3/7) benchmarking "month"...
    done (took 1.219991059 seconds)
    (4/7) benchmarking "year"...
    done (took 1.218178033 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.219842652 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.220248813 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.219719044 seconds)
  done (took 9.678363687 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.222390544 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.391515356 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.47420237 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.837332444 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.223619321 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22565583 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.07237364 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225524129 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.228678718 seconds)
  done (took 14.043641787 seconds)
done (took 77.917243896 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.206760758 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.229558651 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.318121313 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.23805451 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.234247553 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.513035993 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.247421759 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.335220531 seconds)
done (took 37.464752407 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.217876295 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.932605377 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.933913159 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.220910847 seconds)
  done (took 11.225384391 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.193944509 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.082818403 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.193463205 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.207194404 seconds)
  done (took 17.814923219 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.144250351 seconds)
    (2/2) benchmarking "read"...
    done (took 1.545968165 seconds)
  done (took 4.825882195 seconds)
done (took 41.222406663 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213139411 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209541696 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212535491 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.20977522 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211303954 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.208376561 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209624702 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.211674166 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21215823 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.210905996 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.211478368 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21052041 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207838192 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208241101 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207971129 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210484845 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.208336528 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211315474 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208907419 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212092498 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207207732 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209212639 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208835655 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.207176605 seconds)
  done (took 30.173417089 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21059298 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.207758516 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.209963696 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.210074502 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207139915 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.208758824 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.208948539 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207361192 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.207626788 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.20894613 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207825626 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.208602819 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.207418694 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.20658805 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207958109 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.205981927 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.208104691 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206151197 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208908008 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208111825 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.20681253 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203525542 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.205201485 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207028988 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.205061598 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204329108 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.207383109 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.20656744 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20544373 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.202232298 seconds)
  done (took 37.35023862 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.208961719 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.209190052 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.204847486 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.206299025 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.204418753 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.205392108 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.204687478 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.204070704 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.203325929 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.202976765 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.204257587 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.203256466 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.203812724 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.205325102 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.201046374 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.201421782 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.201764619 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.202336457 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.202378024 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.201885413 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.201644013 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.202587869 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.201388547 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.199148754 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.200646109 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.200641175 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.200916582 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.200748194 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.201801714 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.202157768 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.200709202 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.20033673 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.199549487 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.200132188 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.199777026 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.199930703 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.205026539 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.205258782 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.200034358 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.198867903 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198114492 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.199497647 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.198953533 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.198735667 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.199288748 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.199424887 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.200633705 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.199959764 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.198309529 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.197263606 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.198200983 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.199112211 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.199793211 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.201132539 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.198881386 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.199393866 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.198235533 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.197656655 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.197407029 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.197814555 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.199053084 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.198311963 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.19766282 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.198422239 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.197744267 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.19828681 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.196125397 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.196653764 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.196668284 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.196902171 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.197227552 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.19828487 seconds)
  done (took 87.582008049 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.195233481 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.192703093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.192034541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.192977279 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192567151 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.195292331 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.192755886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1976682 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191090759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.194435833 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193988805 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.191801048 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191251428 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.194611146 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194236774 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.193142714 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.192860813 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190898529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.192802818 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.194895241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19302217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.189908037 seconds)
  done (took 27.366882507 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193345566 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.195876466 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.189074748 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.192522226 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.190393534 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.192277263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.194002558 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.194668538 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192890382 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.191251848 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189228224 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193700044 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.190177177 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19002789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.190427505 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.191334968 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191801928 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.191811754 seconds)
  done (took 22.569377212 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.189175548 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.189439611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.191150878 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.188608223 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.189261136 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.191680356 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189731736 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.191927976 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.18890184 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.187509365 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.190692266 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189607585 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.190387796 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187797693 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190050087 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.188222951 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.189589318 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186878356 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.189371787 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.187611225 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.186255376 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.189153665 seconds)
  done (took 27.278106326 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190419248 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.189609707 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.186074427 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.185437788 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.185385677 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.188166182 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.188831357 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.186145658 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.190679841 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.188172728 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184848699 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.18750569 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.186852957 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.18579235 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.186142426 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184512677 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.186619355 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.186135852 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.187928299 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.185807424 seconds)
  done (took 24.85302841 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.189688996 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.189653647 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.190366074 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190185125 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.189999882 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.190997827 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190334008 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.189934565 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.190127605 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.191547063 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.18965163 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.190281586 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18949123 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.190869124 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.190822771 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190023359 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.190877876 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.190612274 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.190880137 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.190988767 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.191363234 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.191328173 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.193212689 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.189264456 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.189981243 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.188534991 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189454491 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.190430538 seconds)
  done (took 34.442037751 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189414225 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.189380335 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.183964726 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.184817494 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.184601501 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.184977058 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.185414253 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.18545812 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.18794813 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.184587925 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.188904618 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.185428106 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.185616426 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.185171068 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.186567474 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.185808801 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186331586 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.184015318 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.185275853 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182325766 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.185506727 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185648931 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.185790866 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.183502517 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183556861 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.186174472 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184431697 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.18361699 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185906916 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183214287 seconds)
  done (took 36.675208099 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.204410167 seconds)
    (2/2) benchmarking "in"...
    done (took 1.2049352 seconds)
  done (took 3.516440296 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.183277714 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.18695723 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.186343883 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.185401824 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.18446357 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.187223139 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.18762165 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.184793856 seconds)
  done (took 10.593560278 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.187073392 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.186297664 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.186652321 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.187580555 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.188151905 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.187899696 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.19486303 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.20604124 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.187914575 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.189058306 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.193361564 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.19396301 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.189987851 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187206521 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.187788225 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189785246 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.187679914 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.188306482 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.188848556 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.18867737 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188386031 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.190081966 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.190342687 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.185591159 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.191736859 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.199346725 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.210691252 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.189613972 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.189174201 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.193296888 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.18893812 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.1859026 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.18938202 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.189112873 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.189074935 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.189362991 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198340023 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.205734709 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.196652899 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208832582 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189691655 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.186768083 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.191261773 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.1911653 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19113829 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.189494352 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.190334952 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.187605994 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.190965109 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.193732291 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.193741652 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.190939626 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.187773213 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.19423728 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.192150529 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.197938183 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.209866943 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.193157152 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.198876899 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.199957137 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.221345972 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.212449972 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193160458 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.191950005 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200510689 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.211022392 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.199092804 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.206874653 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.188391952 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.191743796 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.199010571 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.219971268 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.215104268 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.191924849 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19304764 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.192280319 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.192888251 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.192093038 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.199026203 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.212943389 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.193350975 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.192317219 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.201905852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.211177657 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.192087176 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.193171597 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.193373086 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.193802928 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.19440363 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.203924772 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.211455192 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.193732543 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.191818464 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.193911472 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.19511573 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.19497249 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.193069429 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.195105141 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.190562314 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.194442978 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.193525525 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.197901503 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.200730536 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193766263 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19358937 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.200834612 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.21252355 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.194143131 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.201156161 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.194544093 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.194709355 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.197170684 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.200276415 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.191067514 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.196037096 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.201550777 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.194602373 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.196398557 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.194286648 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.193779778 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.203961594 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.216522932 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.195296256 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.194150242 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.199397534 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.203118784 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.195431756 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.197856735 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.195080304 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.191601032 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.193778116 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.197788554 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.19580947 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.19583419 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.195426508 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.196890909 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.192326786 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.195001451 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.196609725 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.196933292 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.196222245 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.196155566 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.197199033 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.196567212 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.193206179 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.194989941 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.199418533 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.211511324 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.193982866 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.194029741 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.191157895 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.194956778 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.19232202 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.192340748 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.191248708 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191498265 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.190539917 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.191196818 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.192857178 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.190950212 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.192218325 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.189941923 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.193208936 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.189802025 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.19382653 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.189580421 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.187101106 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.189805812 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.192637763 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.189490734 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.190185836 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.18868408 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.191719469 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.194931135 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.190778259 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.190356371 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.193302501 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.190211746 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.190828958 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.189934792 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.192050604 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.196710883 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.190164253 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.197574321 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.208501405 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.190843789 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.190631636 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.19086906 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.190067537 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18982461 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.193527358 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.195722994 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200143032 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.213760264 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.192298834 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.193659445 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.191972342 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.193591632 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.195126448 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.190935733 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.191718923 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.190589925 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.190874523 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.191390126 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.19214235 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.19207427 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.192735756 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.191386249 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.191604385 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.18996021 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.192092991 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.19287113 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192999343 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.188747509 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.191701282 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19200575 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.191478925 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.190142685 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.190916901 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.191853095 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.192583024 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.192800014 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.199968687 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.190198511 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193332413 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193740698 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.191865489 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.19182552 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.192114769 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194568628 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.192362882 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.19978917 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.211510418 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.193705058 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.200958475 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.21127487 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.192552582 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.196717845 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.193287895 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.190847424 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.195677962 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.200853013 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.193564711 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.193934397 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.194483604 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.192871034 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.193638481 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.201418201 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.21075767 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.192998504 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.195577048 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.195584495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.192739865 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.19440783 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.196144363 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.194784128 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.197486068 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.195642547 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.196399864 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.196081244 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.19425424 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.195405986 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.19501542 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199191926 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.201189784 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.199320018 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.1947935 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.19689195 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.195701054 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.197830783 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.19597406 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.195337794 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.195159554 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.205278854 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.21855589 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.200621803 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.21637707 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.195348196 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.201789236 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.213792661 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.199370826 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.197192477 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.196516662 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.196310974 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.195561716 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.19395035 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.197005606 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.197236978 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.197418057 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.197236129 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.199043406 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.196120047 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.196575454 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.196750547 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.196548832 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.197281451 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.19786246 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.196497263 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.200067872 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.198486921 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.196319075 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.19680812 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.204958264 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.215114289 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.198487085 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.197351927 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.197523249 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.198280526 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.198572575 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.197969567 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.200506794 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.204297526 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.199995377 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.205510939 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.199623986 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206483415 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.19847891 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.201073287 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.203814617 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.195836825 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.197032558 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.197167825 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.19790912 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.205943672 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.216559565 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.199550197 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.202428591 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199030442 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.19947009 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.198530707 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.199325693 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198931675 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.199957163 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207526164 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.218125138 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.202240402 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.20088985 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.197230847 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.199999175 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.199588892 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.198864006 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.203256341 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.199471532 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.200861008 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.199905295 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.200579937 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.200717911 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.199694365 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.200834612 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.197625181 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.200592912 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.207158692 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.22042837 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203685747 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.201056692 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.209070667 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.219166629 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.208798986 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.219625194 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.201132356 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.201498183 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.201139401 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.202169099 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.201000075 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.202504105 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.200872811 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.202943168 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.204275603 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.201190492 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.20401016 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.202050707 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.201405228 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.202408087 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.210499636 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.221065944 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.204054005 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.204888958 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.198862655 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.203576012 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.205239963 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.202831034 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.201129567 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.205379977 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.211383753 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.208924841 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.202775191 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.203203054 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.203001335 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203718523 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.202645384 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.201836504 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.203618134 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.202624122 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.204367811 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.203412729 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206916321 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.203621921 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.203854201 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.20499697 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.204729779 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.212935888 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.222759188 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.204977195 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203955437 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.204579992 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.204018991 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.20354925 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.20291402 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.205228362 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.203522179 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.205303396 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.209358207 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.208754098 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.206532173 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.203498337 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.204122976 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.205208768 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.204789734 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.205119547 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.206048838 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20491356 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.20505178 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.205164806 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.205997621 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.204169772 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.205675188 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.206706602 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.205098884 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20801189 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.212485809 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.206414908 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.202470152 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.205840333 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.204716739 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.205585491 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.206675017 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.213872449 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226977435 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.214841181 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.21272275 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.209479993 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.20619784 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.208180247 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.212062603 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.205437623 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.20558428 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.205172217 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.207847998 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.207948388 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.208906058 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.207081664 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.213098572 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.223895072 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.206647937 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.214622077 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.225665222 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.206373769 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.208339164 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.210163912 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.206302255 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.204321146 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.206992165 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.207331505 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.214638784 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.227348369 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207799295 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209000523 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.207453423 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.209976825 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211499482 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.207786657 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.209643261 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.205545256 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.20826897 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.206165988 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208422764 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.204638846 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.207593556 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.208064522 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.210461499 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.213553847 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.205879447 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209489003 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.208688302 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.209270413 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.210010206 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.20861651 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.206058104 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.206054997 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.208245372 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210005254 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.209101914 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.21203712 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.209896935 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.210757908 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.209412983 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.209270595 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212328576 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.217377103 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.215601456 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.207050654 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.209189696 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.211510083 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.211896098 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.209671615 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.209684925 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210636809 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.211555404 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.210264684 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209532813 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.210813247 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.212418087 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.225452268 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.227238869 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211801622 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.210104529 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.213884048 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.20950366 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.207734376 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.211744157 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.213890145 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.212919322 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.216971664 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.211304378 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.217920073 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228489433 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.21259484 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.213531838 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.213216961 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.217538395 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.215004125 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.210458781 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.211222766 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.215882038 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.224938689 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.211940654 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22103231 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237809941 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.229889762 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.213728421 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.211817082 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.211904165 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.212332113 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.214465251 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.212900611 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.212318159 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.211713165 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.21360273 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.214188949 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.217471712 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.213683181 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.214315657 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.211925229 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.213520754 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.214709688 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.211063392 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.212745333 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.212544219 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.212167647 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.213383825 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.214375419 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.213250946 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223697732 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.236774264 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.212142635 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.213734698 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.212211297 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.216598448 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.217122311 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221903197 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.220063364 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.214180985 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.21529261 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.215647677 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.212816237 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.214239707 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.215881295 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.214051431 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213941187 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.211168444 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.225247352 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236755737 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.21945511 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.215526296 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215511585 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.21543196 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.216370189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21583476 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.21553123 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.217344597 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.218037417 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.218354791 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.214853602 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.215123611 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.218114542 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.221584866 seconds)
  done (took 717.593542998 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.213506188 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212166728 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213340445 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.211691216 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212117658 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212527869 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212094369 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.213246132 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.213771156 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.212718794 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.212416715 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213573714 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.212302581 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.213441804 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212909322 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213985583 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213077216 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214119633 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.213397464 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212815863 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.213680245 seconds)
  done (took 26.606907953 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.216559676 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.214612566 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214469616 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216567217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214567914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216660045 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213298124 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216881485 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216780372 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215174822 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217357886 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21614221 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.214494493 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.21446925 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213445935 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217220885 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217496944 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214549885 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.217263619 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.214197905 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216827777 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21464861 seconds)
  done (took 27.879743104 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.218177596 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.218689045 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.217038922 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.215043167 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.218216779 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.21575669 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.218127265 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.218825724 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.218141414 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.21905028 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.217839604 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.219090059 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.225240367 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.221108716 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.220749666 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.218978842 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.36352567 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.220444139 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.221343517 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.220260114 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.21663553 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.224598421 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.233900134 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.217285777 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.217878298 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.219210067 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.220039383 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.218897999 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.219920858 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.220644372 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.223450856 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.219663381 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.220401225 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.221193954 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.218147599 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.221328874 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.222230086 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.220908593 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.217969648 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.21972296 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.22937902 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.237432848 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.220270557 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.228047543 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.238226395 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.220258432 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.223516247 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.225878664 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.219131752 seconds)
  done (took 61.119468026 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.220960693 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.220005679 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.217473146 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.220491731 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.220696696 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.21970331 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.221448319 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.220089387 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.2182862 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.216988413 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.222078692 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.218349642 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.218147391 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.221482262 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.221924125 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218329158 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.218946524 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.21850313 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.219503514 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.21911029 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.219125022 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.221985018 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.221866953 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.219524531 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222170032 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.219940105 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.219657485 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.222076568 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.221074962 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.21958521 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.221831885 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222762705 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.22287208 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.221971242 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.22038613 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.22126095 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.223476519 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.219806186 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.222960901 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.219944365 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.221996654 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.22336369 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.22346291 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.222573094 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.22062131 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.221149636 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.221281292 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.221830731 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.223468267 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.224246003 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.22415477 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.22209168 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.224131408 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.221066878 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.223375299 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.225020784 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.22217673 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.221754747 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.224199809 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.222255961 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.221871548 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.223643476 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.221688921 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.224645678 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.224523318 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.221948624 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.223139941 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224509532 seconds)
  done (took 84.199392447 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225757065 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.225872643 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224589015 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224614416 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225422599 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.225091983 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223292695 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.225440448 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.225757734 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225710598 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226318163 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2257409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.225081225 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.225615923 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226015223 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225199189 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.226427229 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224957136 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226325291 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225430366 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.225693906 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.226396203 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225796796 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.225775253 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225563379 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.226822768 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.226856045 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.226311624 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226243668 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.226557885 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.227093299 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.22693953 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.226487126 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226535681 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.227446732 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.226971998 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.227633786 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227602058 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.226976125 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.226969649 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.226902699 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227977599 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.227903936 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.227798916 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227646852 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.227345461 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.22757076 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.228635543 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.228236177 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.227575967 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.228333224 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229187895 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227674072 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229296195 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.228996463 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.227551307 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227798651 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227741624 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228777251 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.228660873 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227407022 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.22822292 seconds)
  done (took 77.204298483 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228228824 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228334199 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.226681769 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.226031709 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227967573 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227439837 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229460728 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.228976477 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22965111 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.227588475 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229653643 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226259165 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227332446 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229659348 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226823202 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22784185 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227280876 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226460845 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229478019 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226321014 seconds)
  done (took 25.705052788 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.228154533 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.229600257 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.22679504 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226698346 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.230043258 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.228085341 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.230000792 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228933833 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228678558 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230315226 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231325399 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230745456 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227003289 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228291099 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.23037819 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.22837515 seconds)
  done (took 20.811950109 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.22850775 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.230539133 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.230177907 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.230488949 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.228185224 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.228614811 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.230428671 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.227238478 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.228570562 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.231846637 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.230236156 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.231237358 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.231448378 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.229953942 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.229393988 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.231967211 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.228047069 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.228095295 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.233098983 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.231253027 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.230772562 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.228865693 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.231932648 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.231940113 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.229234995 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.229617102 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.22969937 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.22904525 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.229001554 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.233117263 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.229685 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.229496198 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.230840579 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.231089454 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.233407799 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.229832927 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.232539584 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.232735904 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.232161665 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.232497185 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.232327182 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.230781418 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.23351799 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.233828595 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.230889215 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.233546288 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.229765948 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.231238862 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.231380039 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.231766129 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.233740616 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.233636302 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.233812717 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.234361356 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.234168582 seconds)
  done (took 68.855474509 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233843984 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233932001 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231579763 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234001018 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.234707238 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.231830534 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233796295 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.233312895 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231568843 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234365092 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.233165452 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.234824577 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231714149 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23509704 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.233030734 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235263726 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231530744 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.233234892 seconds)
  done (took 23.352623049 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234147426 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233474468 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.235348541 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.23164951 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.232960829 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235852207 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2329446 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.235114476 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235716512 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233712803 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233058396 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.235328665 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236131878 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.236428537 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234534723 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233225361 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.236825246 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236329597 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233247907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232824312 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234607692 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236447294 seconds)
  done (took 28.312657637 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.235008859 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.235552089 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.236539819 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.251692068 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.252869677 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.257786683 seconds)
  done (took 8.622500403 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242447452 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236293274 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.233850846 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236956082 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237131811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233649339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233983294 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234220253 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236068857 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235615765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234810381 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238003297 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236861899 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236105362 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237713027 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237057217 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2348136 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234372308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235164415 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238690158 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235669272 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237769329 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235066502 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235569728 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236144238 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236074207 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238528754 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235336917 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236663795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238218409 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238685774 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236508066 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239957902 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235504002 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239153876 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238930225 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235811332 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239569138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239169395 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236414267 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.238845256 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238136771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240535728 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23820782 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239742586 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235896237 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237114135 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237989087 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236360999 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242496627 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239576299 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237550551 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23981147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239944383 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239462931 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239645343 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237145171 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236702088 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240421342 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238051437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237000184 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240296075 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238009775 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238773072 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239816369 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239459663 seconds)
  done (took 82.852105104 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240233869 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238722817 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23819816 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239098709 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239082909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237963372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239184556 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238665251 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23873386 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239157839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241792462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238562407 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239434083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238623154 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238574555 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238501798 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23925153 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239955634 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240453587 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241931756 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239314411 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239114674 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2388125 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239930144 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2405115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242573598 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239466987 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239556369 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238868652 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239264959 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23956157 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239256652 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240465095 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.240578484 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240127449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240923961 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241527491 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240209365 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241325352 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243599045 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239934626 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243880874 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240958648 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240046187 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240193372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240659991 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240910445 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241571794 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241554674 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240339369 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24206621 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241971482 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242163125 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241423808 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241357038 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240351411 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242453188 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242610966 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241405878 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244821224 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240661234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240910056 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244994839 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241653547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242201779 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242328311 seconds)
  done (took 83.035974732 seconds)
done (took 1679.684924473 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.257655421 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.311324132 seconds)
  done (took 13.729637561 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.406561398 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.357883069 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.243845228 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.271911606 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.244538891 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.240332576 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.238812707 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.244941989 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.244666402 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.244166659 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.244877453 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.429373403 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.298297992 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.244260779 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.244444727 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.338955225 seconds)
  done (took 41.701931128 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.268791472 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.250969199 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.357302573 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.265194217 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.271635446 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.427633199 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.307573288 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.257705664 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.412182107 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.287883824 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.728378095 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.271642364 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.251051062 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.321057263 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.273840897 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.427035956 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.489686642 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.765034269 seconds)
  done (took 28.797758418 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.672106322 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.259640602 seconds)
  done (took 9.09768659 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.253162461 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.250951006 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.256060964 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.255342687 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.258451483 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.279811203 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.298272711 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.282410809 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.25387376 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.293628089 seconds)
  done (took 63.848189039 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.269656542 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.251706756 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.252203607 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.248979802 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.24280925 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.243793328 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.249586998 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.244220001 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.669431161 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.376204307 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.275916929 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.25913207 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.267660703 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.252529765 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.248168599 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.287103463 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.406473123 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.265525581 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.247737717 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.256659181 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.250592742 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.36551687 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.291906939 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.249785119 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.372236061 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.676743311 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.26184586 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.256557898 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.38751569 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.267317476 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.251133353 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.251906444 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.253933489 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.838848517 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.764718106 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.266037543 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.275874005 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.259970657 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.24866132 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.368223529 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.269630152 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.257895879 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.253864718 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.743829551 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.410267024 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.360563597 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.427601241 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.260887926 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.253967482 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.311907252 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.254104192 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.254331741 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.280574961 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.998928858 seconds)
  done (took 106.482227378 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.260135378 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.733193333 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.414946504 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.269044168 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.023927653 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.943239542 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.268492356 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.516888663 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.2820175 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.247980981 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.53129352 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.734667032 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.276389018 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.264925216 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.929329598 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.327757179 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.247951764 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.033554342 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.267875324 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.24983177 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.664442516 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267360758 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.245735859 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.416897135 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.285650589 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.693983137 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.639871963 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.68254581 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.263768632 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.248199988 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.692751482 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.273052422 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.25459592 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.248749897 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.511248804 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588155058 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.580070451 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.262603935 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25868628 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.251390384 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.281455044 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.69020737 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.588123804 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.263892942 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.257283786 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.694342556 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.26452223 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.249794208 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.252947203 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.448835917 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.247138079 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.249717695 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.624029368 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.248836544 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.589357409 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.291478822 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.301114047 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.721347445 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263662939 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.302543339 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316864495 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250665568 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.254475538 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.251500101 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.255563467 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.579921688 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797497015 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.253592604 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.581355446 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.704019819 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.266447227 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.75660182 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.136109104 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.266187136 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.328483969 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.250424968 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.811655892 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7367756 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.265999745 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.250635792 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.566752077 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.267784572 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.523440688 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.265164821 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.251002895 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.674294667 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.270849621 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.291831616 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.251193334 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.251624308 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.901733171 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.250906693 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.524406216 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.310232315 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.250724933 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.252211538 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.274442858 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.251588339 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.257988498 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.254159085 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.756285892 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.271939151 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.378028036 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268896811 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.252868318 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.274062208 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.252913099 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.251849094 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.468792673 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.776996887 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.2522026 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.253394237 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.252021466 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.257894429 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.411867485 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.254607417 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.54479253 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.272499666 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.261815324 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.264659574 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.900560723 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.285469852 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.253877067 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.258267886 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.077021534 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.477765231 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.270068117 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.253208935 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.25338191 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.269427206 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.526485835 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.253086727 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.283248374 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.257072857 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938875452 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.31461406 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.266030828 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.919176163 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.262118486 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.146322676 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.278134341 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.254231445 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570319572 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.519764584 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.701480724 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.255683554 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.276772988 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.947521333 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.320847119 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.40234785 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.271203899 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.288802262 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.453071052 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.743147158 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.256841843 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.809295853 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.256411407 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466331651 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.255133584 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.570749086 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.723530236 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.276490202 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.258274983 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938626523 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.921486563 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.850307646 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.26099043 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.522904392 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.22625051 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.710856897 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.256484255 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.257282615 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.714842066 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.257910744 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.259933843 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.256456041 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.256131518 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.405533468 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.430699329 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.537401819 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.262303923 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.70351408 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283863997 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26103034 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.259510048 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.260590553 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.608834081 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.33838888 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.257980045 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.289376684 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.25589005 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.26251065 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.715998646 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.239883934 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.257096989 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.410545521 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.86740534 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.277896478 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.257991191 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.943945439 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.531376503 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748489812 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.292876095 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.549932829 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.283782024 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.296768264 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.966257664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301087334 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.758796736 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.274005633 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.259179764 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.839360841 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.27423567 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.606451958 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.257338396 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.257870365 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785141165 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.269522217 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.256978086 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.533020668 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.254061786 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500492088 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.255533935 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.275967735 seconds)
  done (took 1093.926857856 seconds)
done (took 1358.744190904 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.255678813 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.264975157 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.244196418 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.258996646 seconds)
  done (took 26.202498206 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.26133162 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.258011824 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.259496886 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.258463524 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.260048321 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.25887372 seconds)
  done (took 8.731506603 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.280423293 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.259523926 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.259636767 seconds)
  done (took 18.975731951 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.465129153 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.507899627 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.625992548 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.394856077 seconds)
  done (took 10.169427049 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.258923068 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.258475207 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.259884968 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.26114304 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.262070493 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.26448209 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.259903593 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.260783952 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.264122183 seconds)
  done (took 12.524886208 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.030522559 seconds)
done (took 82.811809467 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.25464904 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.338472876 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.156135588 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.458960038 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.632493764 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.66276418 seconds)
    (7/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.284346918 seconds)
    (8/309) benchmarking ("sort", Float32, false)...
    done (took 5.247591432 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.296268226 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.309901158 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.49732252 seconds)
    (12/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.423061783 seconds)
    (13/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.543622793 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.295978729 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.433505228 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.677509731 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.801753177 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.236589035 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.290372663 seconds)
    (20/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.61085782 seconds)
    (21/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.129641409 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.852777888 seconds)
    (23/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.290363465 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.489021001 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.663049213 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.345749305 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.315052901 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.280641847 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.235876732 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.512912405 seconds)
    (31/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.385881887 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.358432082 seconds)
    (33/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.779032865 seconds)
    (34/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.588708732 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.280488405 seconds)
    (36/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.290699772 seconds)
    (37/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.766688905 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.249741023 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.393879002 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.257547594 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.341795652 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.539063722 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.628488295 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.966867393 seconds)
    (45/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.575298652 seconds)
    (46/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.274544245 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 6.258285981 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.275772279 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.260226001 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.370066351 seconds)
    (51/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.237972104 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.526796434 seconds)
    (53/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.46192377 seconds)
    (54/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.238722911 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.341198153 seconds)
    (56/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.633776773 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.417796914 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.486633047 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.31372112 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.478025393 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.099195236 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.118994765 seconds)
    (63/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.061141756 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.818892224 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.281710884 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.640513782 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.387532223 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.533639252 seconds)
    (69/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.438636434 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.667742937 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.238869294 seconds)
    (72/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.364065916 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.268008235 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.981530438 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.889903891 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.272474015 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.54849293 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.30454068 seconds)
    (79/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.391217814 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.781793263 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.415247146 seconds)
    (82/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.853587483 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.265555936 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.290674487 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.259290425 seconds)
    (86/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.285472678 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.34666225 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.25206897 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.897532676 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.276528812 seconds)
    (91/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.394217661 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.239581503 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.149931955 seconds)
    (94/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.068873607 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.499146653 seconds)
    (96/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.630717342 seconds)
    (97/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.864875512 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.087468292 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.709121597 seconds)
    (100/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.974520188 seconds)
    (101/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.361788026 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.505295866 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.079737209 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.575723994 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.605614141 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.725924424 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.286660481 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.869696691 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.300707164 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.602976804 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.97986821 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.292703227 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.473776488 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.261030206 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.547466453 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.008902135 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.272203548 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.263233339 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.375291243 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.343377212 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.566456885 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.898386042 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.598863137 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.024410094 seconds)
    (125/309) benchmarking ("sort", Float64, false)...
    done (took 5.518425455 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.880535391 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.776373141 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.29904039 seconds)
    (129/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.277901076 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.269213052 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.523894995 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.453822132 seconds)
    (133/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.814600645 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.454413101 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.306442918 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.987259751 seconds)
    (137/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.669580716 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.53642505 seconds)
    (139/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.288703324 seconds)
    (140/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.88557667 seconds)
    (141/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.052790419 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.587241263 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.398496831 seconds)
    (144/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.326346644 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.330038297 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.892895239 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.151851927 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.077387891 seconds)
    (149/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.32711361 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.257134128 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.997550606 seconds)
    (152/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.391129868 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.288728913 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.46777919 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.345162662 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.264388657 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.266057787 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.361854248 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.263060313 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.286668837 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.960917128 seconds)
    (162/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.016498204 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.245511368 seconds)
    (164/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.609089391 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.264160604 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.64492073 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.611457771 seconds)
    (168/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.798351649 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.291354017 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.141333463 seconds)
    (171/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.369918709 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.290953873 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.994217079 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.292234954 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.386909302 seconds)
    (176/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.290635728 seconds)
    (177/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.515091885 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.629012902 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.303287304 seconds)
    (180/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.349323075 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.268362858 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.483381411 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.383860144 seconds)
    (184/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.985304147 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.15104043 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.460992002 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.298272503 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.002238126 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.31549495 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.892233029 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.313873532 seconds)
    (192/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.328603992 seconds)
    (193/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.543761687 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.254310596 seconds)
    (195/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.394607755 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.807207671 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.33011346 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.059075729 seconds)
    (199/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.966560809 seconds)
    (200/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.352171956 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.445790032 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.070354933 seconds)
    (203/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.615515424 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.58248219 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.281687771 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.308511647 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.274928172 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.637048201 seconds)
    (209/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.357999439 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.902119969 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.484418606 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.293113669 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.292830533 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.267416381 seconds)
    (215/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.309535821 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.267965796 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.290779202 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.66212258 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.093749296 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.498276465 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.286774879 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.255885836 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.677718978 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.283765026 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.26831693 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.313935532 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.730578291 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.103859697 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.587260102 seconds)
    (230/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.258040212 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.290423669 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.699588915 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.637855652 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.678289648 seconds)
    (235/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.285436822 seconds)
    (236/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.607300805 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.370122503 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.351536152 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.311610307 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.584440802 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.735971905 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.268810472 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.804340259 seconds)
    (244/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.375622712 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.080893079 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.271985496 seconds)
    (247/309) benchmarking ("sort", Int8, false)...
    done (took 4.362965418 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.473514759 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.273202654 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.981961617 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.296112027 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.594599916 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.112780499 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.367762088 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.249782493 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.293832885 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.836492888 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.250480569 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.824427044 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.661944579 seconds)
    (261/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.250245976 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.726256795 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.250665123 seconds)
    (264/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.379304901 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.992249093 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.705826135 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.282770262 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.624593987 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.320825897 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.815371501 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.677494991 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.354335897 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.390247524 seconds)
    (274/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.315904528 seconds)
    (275/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.270947261 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.386847771 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.298364504 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.270699698 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.341232926 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.18174231 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.318355515 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.993740451 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.36781052 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.10392659 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.369476148 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.380404172 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.717784225 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.294821186 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.104882676 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.8602053 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.817660238 seconds)
    (292/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.360678094 seconds)
    (293/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.696564758 seconds)
    (294/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.313270964 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.418572621 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.313563753 seconds)
    (297/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.63277282 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.442106281 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.291054285 seconds)
    (300/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.293511839 seconds)
    (301/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.356288888 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.675419868 seconds)
    (303/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.649823805 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.295320268 seconds)
    (305/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.534563821 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.322786067 seconds)
    (307/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.130163582 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.271652363 seconds)
    (309/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.783561561 seconds)
  done (took 895.873012314 seconds)
done (took 897.051680507 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.304522107 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301103662 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.281437538 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.303709662 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.394168279 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.309821357 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.294070571 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.285284677 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.330401872 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.33164374 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.282591685 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.310569276 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.284428855 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.283358212 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.28349181 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.298791673 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.282475556 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.284749478 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.300745676 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.293191734 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.299908179 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.282915367 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.333432329 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.310111931 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.287265379 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.287062314 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.287203185 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.305104386 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.396524562 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.287737008 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.287048549 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.29546881 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.281252723 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.28351196 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.278622425 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.3040774 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.295982062 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.295619961 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.289162171 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.317623429 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.685080353 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.306674032 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.287101892 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.286131754 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.285662056 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.288951881 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.285989534 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.292681185 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299250624 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300122575 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.679031767 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.322209115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.288887589 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.2859678 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297491819 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.287189595 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.290277874 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303757795 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.307043522 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304482499 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.270382427 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.291354214 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.288646931 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.302715428 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.294435178 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.728982116 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.303641374 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.291142167 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.68429341 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.313163636 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.718924533 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.316813535 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.289641205 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.300434816 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.319837612 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.28536865 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.282623438 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.285862439 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.293083362 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.286933958 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.298006828 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.301413569 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.292618577 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.289332577 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303376814 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.314577763 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.298063334 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.288992937 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.296911755 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.307659912 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.296349375 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.299687273 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.291423213 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.283906582 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.297348732 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.291364898 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.290989207 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.292248246 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.293685808 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.300013842 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.688417407 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330725712 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.285408349 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.285362351 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.287890219 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.303340407 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.687845856 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.313305107 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.311786846 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.336648108 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.291969568 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.275300559 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.293503167 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30811667 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.298289255 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.292555915 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.284835518 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.276450619 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.69190594 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.327934382 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.291747955 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.287694867 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308539952 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.291323709 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.287003006 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.292621099 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.292638549 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304893901 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.412229871 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.300818067 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.322557186 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.289034291 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.294555829 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.318121159 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309235119 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.322098202 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.29394856 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308247655 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.307466615 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.288078139 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.302668966 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.301676861 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.292028585 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.297287043 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.285090836 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.319140368 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306362997 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304425989 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.311874801 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.413111631 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.289223274 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.278890087 seconds)
done (took 218.003565323 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.35043428 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.283728057 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.373602957 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.290483539 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.388028358 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.387015884 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.285764062 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.287089493 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.286333543 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.668161923 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.286719317 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.286457627 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.281825871 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.287759866 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.370182106 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.288789021 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.28661084 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.629716356 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.289606749 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.359972559 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.290544846 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.287585959 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.288838921 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.668677648 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.282634043 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.285986894 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.361426889 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.289970065 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.634766291 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.283579883 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.287421231 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.634276059 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.378491813 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.307607194 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.299378029 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.297447282 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.389083043 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.307471429 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.373920971 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.373526367 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.374484315 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.328992767 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.284171988 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.284221724 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.290413579 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.291537356 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.288896976 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.31812658 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.29100271 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.289268873 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.632989991 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.300715469 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.300311049 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.289648298 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.289436683 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.31251223 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.289838796 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.292475873 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.38076484 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.291788785 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.353376079 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.671566351 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.670004341 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.292273441 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.293376212 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.290136545 seconds)
  done (took 145.488392615 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.35778605 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.364935377 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.401840949 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.309206635 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.341916923 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.40736522 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.308924938 seconds)
  done (took 10.698524417 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.299055807 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.294079078 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342643381 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.343101876 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.293437825 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.440843786 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.294019606 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.304151922 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.291507845 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.346784022 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.293978095 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.294135315 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.300278265 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.286137949 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34173637 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.305604836 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.408881089 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.295264594 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.294958501 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.449890538 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293042418 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.300903474 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.346607644 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.30684644 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.295695398 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.300491238 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864765522 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.294932462 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.291602078 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.294001327 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291827993 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.332879646 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.294375054 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.291553922 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293098584 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410230834 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.295919394 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293421764 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.295691352 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.288765042 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.295579648 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.295728372 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.296880084 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.292011874 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.2948929 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.317482802 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.294150816 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.295264044 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.294922294 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.296023268 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.344752707 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.295666731 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.293089725 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.293142448 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.351445273 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.302394255 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.29607971 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.293353478 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.296680837 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292976213 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.45312094 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.344369406 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.296671942 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.344424698 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.297723415 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.298151019 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.296488938 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.296736766 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351807365 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.297054901 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.345836997 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.294371197 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.451590255 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.320029077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.299135136 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.299276064 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.299753516 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.298538981 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.291041598 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.30453454 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.295357298 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.299325185 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.304038059 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294991098 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.295953185 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.401250869 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406545538 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.295703336 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.310216419 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.30437948 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.296478745 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.350140428 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.298687643 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.2962528 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349795366 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.413276761 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.351735462 seconds)
  done (took 149.486210426 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.303817524 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.306876533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.299626429 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.315114197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.299059702 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.299435888 seconds)
  done (took 9.035225331 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.301468175 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.300625869 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.299494651 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.299372628 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.299609482 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.299212974 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.299377153 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.300455731 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.304457455 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.299277502 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.298896375 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.300946008 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.30003323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.300508667 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.300780229 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.299258732 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.300619471 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.29879456 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.299223989 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302247218 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.397644612 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.300077466 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301140642 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.301506915 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.3041066 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.301331952 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.307990499 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.301527477 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.301258683 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.309140881 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.319809271 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.301494267 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.302278055 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.307475669 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.305201315 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.30247254 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.304291384 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.302802111 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.298908488 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.300942426 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.303398875 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.302514593 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.301698513 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.303073504 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.303906505 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.306047101 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.305350522 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3105963 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.301694922 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.303962549 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.304414684 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.30172002 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.301262591 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.304020932 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.30456481 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.323840665 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.307158067 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.302824112 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.302939583 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.303472584 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.30275752 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.302613503 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.305164755 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.305887009 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.31054538 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.305529722 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.303855702 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.306685705 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.303776774 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.303890041 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.304926268 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.299503338 seconds)
  done (took 96.144536807 seconds)
done (took 412.055682112 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.611933724 seconds)
  done (took 7.827976759 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.300588719 seconds)
  done (took 7.517790165 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.521911353 seconds)
  done (took 21.743076388 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.3817001 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.430734149 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.722233552 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.320238488 seconds)
  done (took 27.072521156 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.478808372 seconds)
  done (took 7.695962458 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.30903858 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.297300838 seconds)
  done (took 13.82452439 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.644276336 seconds)
  done (took 7.860841366 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.363939748 seconds)
  done (took 7.582238781 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.317020089 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.335031293 seconds)
  done (took 14.123135093 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.279199756 seconds)
  done (took 7.498023824 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.176464841 seconds)
  done (took 8.39574406 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.303736946 seconds)
  done (took 7.522822809 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.300112928 seconds)
  done (took 7.51783919 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.1662751 seconds)
  done (took 9.38464257 seconds)
done (took 156.782625424 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.298692246 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.30815592 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.304567757 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.304682298 seconds)
  done (took 26.433795165 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.339395996 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.340142787 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.341185355 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.350675417 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.342255256 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.338911018 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.333137325 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.347282112 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.350915676 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.342889756 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.341810354 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.341878802 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.341267393 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.346295355 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.340577915 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.342127472 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.350663966 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.341516806 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.332290808 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.34390311 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.306936881 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.350720448 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.343663212 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.307434727 seconds)
  done (took 33.377629819 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.829535196 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.379300949 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.460141507 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.359745902 seconds)
  done (took 7.248640134 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.359304581 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.361248637 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.371807197 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.410068001 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.438030121 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.371140965 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.334423023 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.329062543 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.315308499 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.361576422 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.435794858 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.378664031 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.443785335 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.307657959 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.492343582 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.308086863 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.308852327 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.360107504 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.411782361 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.429751468 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.308256083 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.359845235 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.363536578 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.376950435 seconds)
  done (took 34.158365884 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.321542578 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.315493766 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.30652888 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.306453661 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.328858608 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.308096235 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.308125089 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.309981241 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.30895701 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.314464629 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.305854246 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.319810087 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.307825236 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.310173446 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.314754116 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.309510175 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.314305659 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.307721323 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.308071541 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.311981298 seconds)
  done (took 27.460902287 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.303597561 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.157361117 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.655744803 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.559942026 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.303802078 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.309617965 seconds)
  done (took 27.513662806 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.381257166 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.526429762 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.311094208 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.657603507 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.748433643 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.328655132 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.309765207 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.546791431 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.857907722 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.844786149 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.374622428 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.37866844 seconds)
  done (took 19.487760442 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.304967179 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.31157769 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.312726984 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.343310955 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.364824131 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.331473418 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.317394539 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.304605134 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.371497284 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.385899774 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.330855336 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.365968574 seconds)
  done (took 37.270515184 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392869236 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350075339 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.176624808 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.120913788 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.022872331 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518495196 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.082551214 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.754410384 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.310760658 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579272635 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310915518 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401794281 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.562590394 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318078633 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313843032 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.267426066 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555937455 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7820062 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308435526 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.227049611 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339559549 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306129322 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.406420468 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.344808606 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.51811486 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28549298 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.567152101 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.085415105 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590027452 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325952104 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318269574 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307725156 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581385938 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953911915 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428610436 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316947968 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.073251802 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.853275714 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.30112454 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.310801953 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.173949198 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317366846 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318150144 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307623775 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.242209942 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318404112 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771695672 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.314775669 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.021278474 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309001837 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320065431 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40278166 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.312604672 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.299730267 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39144322 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315379786 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.306579855 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315104973 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88207222 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.709925779 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332160055 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.252279471 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.755616231 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.300731016 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944172804 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.435514827 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.311070354 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313746083 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24575394 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.228622714 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334528895 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458056099 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.335169674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958991983 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007637876 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336845309 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.24870455 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844686695 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313762723 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.252174174 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537027227 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08780563 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244519286 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.251990059 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.245323447 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995994974 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325569225 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.650965798 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.317925956 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.759510179 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.321516629 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32732813 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333199074 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534814563 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.188359978 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310482488 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.200255678 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464691197 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333243488 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.758116692 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245516785 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.314759174 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566653777 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.522309847 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310237426 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.278812985 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545002073 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31120719 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.327386685 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.313860275 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.321665476 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.87442077 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349044795 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715980723 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336038293 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.091995502 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039342747 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324680573 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.413047756 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32767117 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561733172 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.041012289 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.479574775 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379474904 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315261553 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313266579 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.332559757 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.170816394 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.21392687 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.309289273 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317551045 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.324128703 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.315359775 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262935032 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.316759443 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320737416 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.101123304 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.536411278 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323879763 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588907531 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24891415 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461658035 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.322761284 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.537092038 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.525398874 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.330905769 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574001476 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323957017 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323689482 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327308335 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333087761 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41168729 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335590674 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.323881739 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.577182406 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.318422818 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.317892076 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.344920028 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.101064156 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318876424 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.32078003 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.212369943 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882440861 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316482828 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322565986 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23277902 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.32929324 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383831266 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321429362 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.325464784 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.092745112 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.219012682 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.320554408 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.313275394 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546868664 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325684175 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.333740278 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403877938 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.520721014 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.887554688 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347442234 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.250775167 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.026896639 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.008781255 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317812162 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.506671255 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318151735 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325346339 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327403395 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.917763203 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886208042 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336151027 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.261300535 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.330803986 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327512519 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.321259546 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317873161 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.071775565 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.763060243 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328208568 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.330677581 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461603694 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.331990501 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.251920585 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.835118384 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323633649 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318524979 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.092624806 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352593455 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.256413333 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804295429 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578612317 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.120786005 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328766813 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.431869346 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.359676188 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.320361339 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.246764815 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360917037 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.342471511 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344978855 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.329560954 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.348467814 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.765798516 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8875978 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034078884 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880247119 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259731898 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.33686082 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.229189634 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.771125498 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254443968 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.976489401 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504301294 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794891141 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263248108 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526389756 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.516557846 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097926919 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338840383 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549838461 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229829335 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.262825622 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357499823 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531180923 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354791798 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321064488 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272456663 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.601039633 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579054177 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.253201311 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407215451 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768924146 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.252613731 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.125584201 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.32016411 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.612488477 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51811063 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.949871089 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.707729672 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320566504 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341093546 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806640303 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328169589 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.848272473 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944189301 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.339476724 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.55384145 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256969416 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.333288261 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.332625057 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.317929221 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.592205444 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.328146212 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.585001531 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333021196 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255975164 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.322522161 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878156699 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.195353156 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.328432179 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322187639 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045936462 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337460064 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613153511 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.332911875 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.064813499 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349909651 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.257327903 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257395816 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.01512129 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325429455 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298257799 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806390795 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.755846246 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.388955424 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350021561 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168623037 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57901385 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.338804892 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898196212 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568292127 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.192062693 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346275721 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.424846704 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308000793 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.325598978 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.206460446 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.560792254 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223963976 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.54868895 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.190204053 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.231355918 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324660427 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536904082 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.206621724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332875775 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5624501 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.061489878 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.34640607 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013015787 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368256393 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.338317834 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337220252 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.77120254 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333159495 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396024504 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33432784 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.337076233 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.337317039 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493907856 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328726103 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334681233 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.339388457 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420167496 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.760857158 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.071542686 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.107337591 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900916659 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06544795 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918487956 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356729884 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327215649 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336002609 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261690991 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475889343 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853850892 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600183363 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456268447 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.843328152 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34859803 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326868852 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341712697 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547463085 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602906168 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.197378877 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327655173 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994455909 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.215368986 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339235093 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.538856113 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809979818 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8734095 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449136282 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342807593 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.78484449 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602454096 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.420458619 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328536196 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91952576 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.334317527 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.621363785 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.359542284 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339853345 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476833613 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33753555 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983327074 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.364365832 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.489199931 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.102334241 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.372928961 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592026068 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717469556 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.340370191 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903574286 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.032857657 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590928316 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398056483 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339627233 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.440281177 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472981608 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.330345732 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.229542153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327699604 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172022443 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.03789003 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.337368098 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904642052 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609111324 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.32535463 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.331924845 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351455155 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.337863003 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.551185489 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014663767 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560799985 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337461119 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331418189 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.319941959 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905441454 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359566628 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262993631 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.331753255 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563874505 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591420366 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355140606 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.782772591 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.040083634 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864642894 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.302182542 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351286365 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329183028 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.025138101 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902344034 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.110648601 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81250387 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.988071751 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339742917 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613304007 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.334756326 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.334540916 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61304098 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.33460229 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344221268 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350266409 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.90248348 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102866986 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.339851274 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.310806877 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.274585802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.556596385 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036901526 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267545152 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340386753 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.507724723 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331399358 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46058228 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342272701 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.339232653 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340805219 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.073149739 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614041191 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.338741889 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.316508716 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.314170596 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341736295 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347626818 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592011887 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338828011 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.007651585 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.685626053 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587527664 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333249217 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.320907625 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.336992656 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332738801 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.049604559 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301779639 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.917666635 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876148535 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.334268013 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.35172026 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336268597 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.549528166 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545940717 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343794965 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353504333 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338126596 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355626608 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.233985643 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.100825405 seconds)
  done (took 1578.930791663 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.349593842 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.349371547 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.339020959 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.412047738 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.335441531 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.370857375 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.351759642 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360609328 seconds)
  done (took 52.119637513 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.337830043 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.487054866 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.365754476 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.340908722 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.34432137 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.33950198 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.793438045 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.360320573 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.344587123 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.344631362 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.336448723 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.341792033 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.989718287 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.344864006 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.337456474 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.323002022 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.343507653 seconds)
  done (took 65.327299566 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.347907166 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.86033113 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.432609448 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.341642483 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.30878104 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.353655715 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.022694369 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.35222868 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.339584784 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.630568857 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.007184184 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.368762749 seconds)
  done (took 84.618850253 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.345492385 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.34257618 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.343802711 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.344142774 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.344322279 seconds)
  done (took 7.972507244 seconds)
done (took 2003.138773073 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.58188673 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.008220361 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.950915418 seconds)
  done (took 5.212382977 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.486635491 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.53466111 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.658386932 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.660462051 seconds)
  done (took 7.597422509 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.622140262 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.724826575 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.524377283 seconds)
  done (took 6.128046712 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.727796555 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.340341719 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.477585874 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.338521404 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.345900275 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.34702483 seconds)
  done (took 20.28883359 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.343903593 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.346471656 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.344303213 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.345882763 seconds)
  done (took 6.636956052 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.321060573 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.02772038 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.32307162 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.34283065 seconds)
  done (took 18.271771671 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.089906753 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.104120157 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.088145118 seconds)
  done (took 7.54001939 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.350651321 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.192904092 seconds)
  done (took 9.80236198 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.637175821 seconds)
  done (took 2.895930486 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.476453991 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.671835655 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.36578872 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.28037665 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.395706893 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.08591714 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.9318799 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.522348427 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.245801266 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.453915618 seconds)
  done (took 27.688790727 seconds)
done (took 125.442028378 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.097514237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.346993966 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.548273617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.107622723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.57036809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.549233031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.759530026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.078330897 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.578593038 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.571464666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.070374973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.568910573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.488859059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.346587621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.487738223 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.727539306 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.568710024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.136293767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.788821738 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.947718685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.769431929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.703981763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.902224814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.727973562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.569648476 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.500452682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.301267011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.724706786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.960265274 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.316264254 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.501495357 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.125197616 seconds)
  done (took 189.703270938 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.344096122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.359750229 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.345138048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.359755462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.343923089 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.361013598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.361966653 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.360215132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.361712431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.353481433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.357642096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.346974616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.346322689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.360491631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.345505838 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.3623412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.345547416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.360253375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.374422695 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.346144187 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.346678133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.348835328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.34420426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.363414509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.34467717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.361248888 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.36241153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.344763764 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.34622135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.357932008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.345264658 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.372264642 seconds)
  done (took 204.596207108 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.345779241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362271928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.346704143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.344589833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.345098205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.345793767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.349142022 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.359063581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.351155888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.34622046 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.360285011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.346108022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.348064378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.346766959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.363574222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.347220769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.367382389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.344254398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.363380404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.362866509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.347400066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.361650098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.346230091 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.374544408 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.347723348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.347991867 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.357243371 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.361998794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.35939535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.347672513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.347850975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.346904019 seconds)
  done (took 204.555759534 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.548339356 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.354220518 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.355098754 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.306030559 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.35468514 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.353432527 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.351870254 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.544480502 seconds)
  done (took 14.433123709 seconds)
done (took 614.546499911 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.613648539 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.33518785 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.55723078 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.37567148 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.103043868 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.393043335 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.37468017 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.543020555 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.266194513 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.549792143 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.563546092 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.392665747 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.708448725 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.380727607 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.625524975 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.475781482 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.259132161 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.376018864 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.682610585 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.861072182 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.632608102 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.819432348 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.561864346 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.258351544 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.709510058 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.817819469 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.030536053 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.244046629 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.391699558 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.692648101 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.993339839 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.281610401 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.43397984 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.434330521 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.491608301 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.471251655 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.254363531 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.432317342 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.573920267 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.593197773 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.859269782 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.090536272 seconds)
  done (took 91.770389444 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.340213074 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.339276876 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.33928092 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.339621097 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.341211038 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.340013935 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.340434429 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.339844922 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.341147832 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.339434266 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.340226892 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.340930294 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.340888198 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.341884592 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.339828461 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.339655828 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.340218023 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.342651312 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.338980524 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.339600311 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.34148179 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.340758427 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.341279168 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.341509082 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.340505051 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.341397935 seconds)
  done (took 36.119806931 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.359548556 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.607824366 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.763151073 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.365446205 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.359496819 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.364139667 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.435490487 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.361925272 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.360976149 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.362962443 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.526476533 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.362653193 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39245129 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.792716229 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.36380062 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.361468959 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.363748059 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.360411709 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.616897451 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369722905 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.45868637 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.36217387 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.43674165 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.371053803 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.383673921 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.362547581 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.366630553 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.878256131 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.38237875 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.52912748 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.137522955 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.44288745 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.825600667 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.79367995 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.131415914 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.371290386 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.362059212 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.531837605 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.36382674 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.361679287 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.436650866 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.363629939 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.772743761 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.976653007 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.380033859 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.36225773 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.898884643 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.548358212 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.596999985 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379349206 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.795556072 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.366669807 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.363783454 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.363956716 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.598219507 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.37753659 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.361638853 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.885414391 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.386689792 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.438761226 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.363699184 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.362868857 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.621183151 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.364000357 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.610487872 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.365206367 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.371299769 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.382050289 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.771928852 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.367136018 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.001702648 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.381763071 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.364902113 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.532251641 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.610674214 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.933366077 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.384935985 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.62513925 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.843279925 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.455168777 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.37667491 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.869299131 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.459145888 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.370874809 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.366987585 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.366155598 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.364124287 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.416228251 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.438396987 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.92713754 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.004794893 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.908217487 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.468380456 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.386496484 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.36580492 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.888037464 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.385222536 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.36518586 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.76738381 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.993853779 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.384400971 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.372225114 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.002867177 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.386070522 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.440922387 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.370931635 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.780134222 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.374332679 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.415780285 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.366453793 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.372820849 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.387667002 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.443338483 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.370103656 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.36612405 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.969763645 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.556787772 seconds)
  done (took 179.193899249 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.360101733 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.377075619 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.360099208 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.376360416 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.360383176 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.368795637 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.359532568 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.358426192 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.366249956 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.360304007 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.359500411 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.361389885 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.362599046 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.382161474 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.372136704 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.367042379 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.017905071 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.361173754 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.367830722 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.360658002 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.159008821 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.364558781 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.374000088 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.361142427 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.362652535 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.35993968 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.365496433 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.36527172 seconds)
  done (took 152.947892426 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.369684767 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.913730166 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.388010875 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.49628038 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.389229054 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.36569459 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.494505316 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.425713326 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.387094078 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.36654766 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.366556299 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.659301303 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.370339662 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.866724566 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.556415708 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.514493225 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.866614104 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.388308114 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.366952869 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.367564786 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.498367994 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.370967118 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.661014967 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.917331386 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.387728055 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917017026 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.353912873 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.36948788 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.368731627 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.919063188 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.384862586 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.661567074 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.445254993 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.428886249 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.935397032 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.890977728 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.897175017 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.524221518 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.370661338 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.36847049 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.369085468 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.353675183 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919985181 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.389005061 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.370446846 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.910035934 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.396775662 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.372062436 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.3748876 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.369876159 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.42852697 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.446791952 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.684813271 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.932135863 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.469692039 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.383939504 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.499970765 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.766481974 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.374494118 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.875890688 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.363390227 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924240081 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.390884563 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.355739292 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.370729897 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.37646329 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.518271363 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.505820376 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.877567626 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.390160766 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.872464042 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.535739789 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.376808004 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.371854365 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.373138495 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.926789997 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.890552827 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.535030094 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.509492181 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.567792396 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.365382877 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.37248469 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.356585741 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.44654554 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.373470289 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.924811017 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.895831597 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.398312021 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.373947521 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.374038425 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.373857323 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.543633515 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.953426572 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.46568351 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.868055878 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.694672463 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.669604446 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.375029531 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.430890515 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.38888557 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.672399657 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.376027356 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.431400118 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.832508591 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.672592082 seconds)
  done (took 163.224744486 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.611348363 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.539264083 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.470513542 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.504417865 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.960378331 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.931184214 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.593608371 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.517634906 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.482764014 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.62977486 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.48971128 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.461530819 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.552645211 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.454131239 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.105031505 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.462577664 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.482130538 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.512249615 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.485300461 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.35925009 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.00703746 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.663655955 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.543257175 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.230294842 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.473054571 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.110375256 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.924519761 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.888127473 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.549727443 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.6404028 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.900919447 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.475007174 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.314970346 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.051479929 seconds)
  done (took 65.662087094 seconds)
done (took 690.181759449 seconds)
SAVING RESULT...
DONE!
