cset: moving following pidspec: 12397
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353268857 seconds)
loading group "string"... done (took 0.553481721 seconds)
loading group "linalg"... done (took 7.569033777 seconds)
loading group "parallel"... done (took 0.172207944 seconds)
loading group "find"... done (took 1.183015525 seconds)
loading group "tuple"... done (took 2.11299975 seconds)
loading group "dates"... done (took 1.33689631 seconds)
loading group "micro"... done (took 0.247590794 seconds)
loading group "io"... done (took 0.974245612 seconds)
loading group "scalar"... done (took 41.035886423 seconds)
loading group "sparse"... done (took 13.230187134 seconds)
loading group "broadcast"... done (took 1.064062799 seconds)
loading group "union"... done (took 14.879711343 seconds)
loading group "simd"... done (took 4.801934574 seconds)
loading group "random"... done (took 9.75106515 seconds)
loading group "problem"... done (took 2.040749719 seconds)
loading group "array"... done (took 22.747804634 seconds)
loading group "misc"... done (took 2.136215476 seconds)
loading group "sort"... done (took 3.537001973 seconds)
loading group "collection"... done (took 20.058472546 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.588199933 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.161302652 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.155457874 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151174331 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200121836 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144894226 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162654483 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099380895 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.988525822 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181076483 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155291506 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.535930303 seconds)
done (took 5.263028686 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.253586689 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09721751 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106799353 seconds)
  done (took 0.885607646 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078504152 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.150071666 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096281592 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080162222 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096636989 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078561612 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096769475 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079023582 seconds)
  done (took 1.367743944 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088116718 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099311194 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08241179 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098275374 seconds)
  done (took 1.057408873 seconds)
done (took 4.344239927 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738062437 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280058333 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205068022 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.477208676 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202581985 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221493981 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677113465 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.35059069 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256858127 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102702758 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.139299082 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.402403193 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140771023 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682704421 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090396284 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126978801 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179575315 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447141121 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083366507 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111826364 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118062728 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143309666 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130289354 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093098677 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188568139 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084278252 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.201467171 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109720537 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07991866 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28121462 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201788436 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682930433 seconds)
  done (took 10.962086695 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114020994 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137565797 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099666708 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139343279 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136947431 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102597359 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086869332 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098383023 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124863267 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179208759 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133404414 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124008834 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09742293 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084328646 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117750595 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249013525 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123273791 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100495793 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103194132 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089813708 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140846432 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115439748 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112101833 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095425119 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169008962 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224746964 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114501807 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127430127 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099136223 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115211211 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144053897 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145287352 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09749993 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082083012 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175877241 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12632857 seconds)
  done (took 5.226993618 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.120533043 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194211656 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124633602 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17328492 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081606694 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147135305 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096724249 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116406813 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262321199 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.196722298 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159537358 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.496581723 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144088483 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100532232 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101211097 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083948247 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099694962 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.678649614 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160626341 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119095132 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118510585 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105082531 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090859691 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368124959 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097518794 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081536783 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100391996 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067759809 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165315381 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101103561 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.169085496 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123991505 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084363369 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137313866 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207077805 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110335919 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138491929 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098431408 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080724025 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181413644 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106475055 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081305555 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12388128 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136050479 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137357202 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098956792 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083426466 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20069516 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099150527 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098328234 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.956427556 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180745053 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09119519 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097705606 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291326214 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119987082 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10308996 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079345261 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283653143 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.192566424 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097517751 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082045259 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099585131 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079848672 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101542401 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389586314 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099984949 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.692421095 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084625592 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109045428 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084379851 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098114834 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106140992 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08864752 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120289839 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081479974 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10070955 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080741657 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098352705 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08274618 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110671127 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.219431194 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100126584 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080746737 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0979962 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118504215 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111926586 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101279987 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097057527 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115823967 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094599377 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099507277 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083768243 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136830776 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082570583 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097096397 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109739633 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084768551 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14416389 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099037461 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.141189192 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09423837 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126008873 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100836986 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115875668 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115037348 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101503937 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.170860614 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079505184 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097658078 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081290016 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097721698 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082079548 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101814385 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111724825 seconds)
  done (took 23.154652569 seconds)
done (took 41.152147082 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.336519769 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105630033 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106325795 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106600269 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103218399 seconds)
  done (took 1.523436262 seconds)
done (took 2.263001156 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295142627 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179874796 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097252667 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171055458 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094587657 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168420321 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163660748 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.0953126 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.224403108 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0953454 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165213806 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077222073 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095382543 seconds)
  done (took 2.692797293 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095918267 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119015281 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084161939 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111250616 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078280381 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11176486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09424475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117720072 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110798687 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086000639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095185589 seconds)
  done (took 1.842420421 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096315835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114427153 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083975072 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112333262 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077810951 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11177407 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094744649 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119284889 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111848235 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086675514 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095228443 seconds)
  done (took 1.839495746 seconds)
done (took 7.100782555 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092688906 seconds)
  done (took 0.825097708 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.95289296 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.846290393 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114790756 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.155876568 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331155783 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.177821296 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.491535642 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131308006 seconds)
  done (took 11.154702747 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.117201535 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.115320654 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104439099 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088117365 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107049395 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084556665 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102223359 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104723487 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087251298 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100579137 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08568375 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103832682 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100455967 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088029773 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101818997 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084076363 seconds)
  done (took 2.382034873 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121405943 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119560635 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108066154 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111095816 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088319153 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107330243 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108372634 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090385588 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102835772 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105780652 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091534334 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107292507 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10553793 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081902158 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108299024 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110127283 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087792054 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108540824 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108060409 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092203937 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108235857 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098009031 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088640608 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107500665 seconds)
  done (took 3.321697116 seconds)
done (took 18.420517438 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162037218 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110917453 seconds)
  done (took 1.01582777 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097500485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115987252 seconds)
  done (took 0.960813163 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099853904 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098554963 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124690032 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112809269 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082877094 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098652404 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121823976 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082570015 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098408158 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082336814 seconds)
  done (took 1.75124251 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085468109 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11334584 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103424636 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097142825 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107541311 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097294085 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090476053 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101511291 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112854277 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078136221 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104764113 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116177332 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087165574 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117751121 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106792581 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085223346 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103927531 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100428122 seconds)
  done (took 2.561276174 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08197301 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099832901 seconds)
  done (took 0.932472425 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082944361 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096333305 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082559928 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098774244 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.0956095 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078747735 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096011372 seconds)
  done (took 1.380470854 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.452992678 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139389497 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266848322 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103172052 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10687877 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.308652424 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09995602 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085919299 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105828769 seconds)
  done (took 2.47952013 seconds)
done (took 11.827941112 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095660106 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118385074 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115419388 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469051159 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109587556 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100413557 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148505435 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250994132 seconds)
done (took 2.163071187 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.148764441 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612267482 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.438343083 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.238992366 seconds)
  done (took 2.042540659 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.413928036 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101099729 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084164571 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083745498 seconds)
  done (took 1.43722711 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081148547 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102991953 seconds)
  done (took 0.940450711 seconds)
done (took 5.326623742 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082225341 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09900491 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079851999 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.132813406 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082181159 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.099116746 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079747998 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100997708 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08259545 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.101468365 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098767326 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082048972 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096874531 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079602464 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098946609 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079777361 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099895676 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080195831 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096540638 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079987608 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099321222 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082182025 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097560972 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079250806 seconds)
  done (took 2.981600806 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101792892 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100988712 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105348563 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088433952 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10454931 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088217496 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105001874 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100173608 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088331105 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102905988 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103717164 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087304778 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102507699 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086638222 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101984629 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104128876 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088403566 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100639397 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08472447 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104874866 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105447971 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083575419 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105043806 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087556573 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103525268 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103845325 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086051959 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100787362 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105240087 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08730729 seconds)
  done (took 3.679797583 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086539954 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097110216 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080921085 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104639508 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080437814 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099923012 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079604495 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098578597 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081598222 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097661502 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082577524 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097505845 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080818145 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099469772 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081596744 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101989706 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114974817 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080669378 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097238289 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081428285 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101441639 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080730594 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098298569 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080412746 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098064716 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07955751 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097276214 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07916598 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098761563 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079841383 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101484895 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083871196 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097432549 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086689695 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101478578 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079470916 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100695542 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079253988 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098155192 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09705637 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079632418 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096995137 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079627846 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104168287 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079840418 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099718276 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080044068 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09873695 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08016228 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101532744 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079818273 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097299171 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081777973 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098685211 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083615866 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0970351 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098437313 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079797072 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098602941 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079915271 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097522757 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080261911 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099475669 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080154023 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11339878 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087283663 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097570809 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081970274 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098994483 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082370291 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099629597 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111303499 seconds)
  done (took 7.332409699 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.134710571 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129121234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082772148 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101348048 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078327154 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098619394 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084743836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098126259 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099856988 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086629659 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098845188 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082131415 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099897441 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095873986 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098319184 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099657167 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087828313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096890508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081059933 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101763375 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080787254 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102826785 seconds)
  done (took 2.881785139 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20966061 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107867518 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145655807 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10988526 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08522051 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109043722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105703476 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089256265 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104635557 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085885116 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102694842 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105187504 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085854029 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103351892 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103257615 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.199805505 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105704915 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086926009 seconds)
  done (took 2.813522235 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093985231 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10161514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100806719 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100945553 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101724978 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086219124 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107213614 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109883812 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086014544 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102105609 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094818627 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104533496 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103649146 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083780329 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103692734 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083575346 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104085554 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084172312 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111042336 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107369455 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08946972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110704948 seconds)
  done (took 2.943668235 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098547005 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103502314 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121177258 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08614213 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098394088 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081667728 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108549736 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084482093 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109981798 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103424091 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083892809 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101166451 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090989953 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101046256 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106990458 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083193624 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103479 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084025548 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103404628 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079348884 seconds)
  done (took 2.707844593 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103916481 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102548243 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101993859 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093503478 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103975161 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085032075 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112553188 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102463627 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084769903 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127486332 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101985515 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084613061 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111800151 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108252078 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102020737 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09365208 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111104865 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111505614 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084651213 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102651388 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128485882 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084577513 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110636805 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102828273 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084411405 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102712917 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102797786 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090379844 seconds)
  done (took 3.613679968 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082585938 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101401226 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081032606 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099563949 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080263772 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098731752 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080674309 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101887863 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08286866 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099112789 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083359262 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10153048 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082962051 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10199432 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082898325 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101760848 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082922455 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098960417 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080443855 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098618391 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083094929 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101011391 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0839509 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098778455 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080935005 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101375026 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080735062 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098673441 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083930361 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098258982 seconds)
  done (took 3.513131211 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091245869 seconds)
    (2/2) benchmarking "in"...
    done (took 0.11040335 seconds)
  done (took 0.979650432 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079622799 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117868521 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081092031 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105991454 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08852686 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103111196 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110367886 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087987712 seconds)
  done (took 1.552044122 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097555351 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113033419 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085374934 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116029972 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113425903 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100648266 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17396001 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104086842 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108895591 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082174332 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115749983 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083922679 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108349783 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084323612 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107762945 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090054472 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099436467 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108030682 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088218486 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101092971 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08558807 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111497494 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085923488 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09903718 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103104979 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096725407 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.1152894 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085210399 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106672206 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110435856 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090491774 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095953518 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084281727 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103059375 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081993762 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11196322 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119753353 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086613844 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112074735 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103229231 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095667064 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097843517 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089383642 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108716193 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112440247 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085825635 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103285434 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080259371 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100535082 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086886493 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097754607 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084253264 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097189271 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0917443 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10579516 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113662315 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08341212 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104011921 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086951203 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106104829 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090575903 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104972868 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104551182 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083822776 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113234633 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089276292 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113074132 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097316843 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07840431 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100244851 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095019958 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126692969 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109795349 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085660292 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103909692 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081928959 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105987648 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086147205 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108904223 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108860857 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085426412 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110965934 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091944732 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102607879 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105067945 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092447049 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101059592 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086356857 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100250827 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120220871 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083404538 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100734618 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081903973 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113735687 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087523218 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102177528 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082620275 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110559229 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097774202 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086152903 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104449865 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085281114 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115240719 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109194335 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091290262 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112653854 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110324885 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084991428 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106987487 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080827147 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104461581 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087387308 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109920408 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078643444 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10608482 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084981381 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104865839 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112577676 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082535 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102934277 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091926632 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10887115 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101319292 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080840805 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105665723 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084959722 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107053579 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092918062 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101868484 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07963961 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098104106 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106589278 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084831196 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107363711 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091665799 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106701712 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078580989 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101932015 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108838968 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094383474 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103511613 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085062813 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10908796 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104021088 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083814625 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110406072 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087373485 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102348536 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090776032 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103939533 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079555946 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089139359 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106860912 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082937171 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106602259 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089036416 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105740449 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104315919 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083200618 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109337043 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086300718 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101857756 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084723316 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102284643 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114480087 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086519568 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098468338 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081603893 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111755238 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082400948 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103242779 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083266129 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10603263 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103897341 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082827209 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10268665 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086772191 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115416768 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108576066 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085624002 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10916686 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096661062 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103640867 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086841317 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103890892 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104226674 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086514279 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112860922 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090530053 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109052335 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106430142 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082248565 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110036162 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092924556 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.102973507 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082668657 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102986734 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107514011 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09137804 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10841244 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086456761 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102831541 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084883418 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107243521 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106594568 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085504576 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103016017 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090527515 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103691433 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111264847 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0866336 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115177111 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087842093 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099269033 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088687317 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101626854 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109516004 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080518388 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101773099 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084407387 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104850696 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084418094 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106665288 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078616841 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111402341 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112519816 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085349684 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.10269275 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085480926 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110767743 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087103907 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109259764 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087969831 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110525202 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115579647 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084051273 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106843333 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097122783 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105027342 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097594852 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091093785 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101926021 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085136925 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102587856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083203401 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107864835 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11284852 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093868522 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09866816 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088360641 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104435059 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083949441 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100644946 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090248139 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107368627 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104894776 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092471367 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105940773 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086182922 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107970426 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085178457 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105198716 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105667111 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091603684 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105446804 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088403072 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103435492 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087616838 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103423824 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082935822 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107812599 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104224011 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085245639 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110008622 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084790714 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103924473 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088105478 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105973525 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105093415 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085467649 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103992773 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088882537 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105565351 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085459589 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107009398 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080006032 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111443156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085357267 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112671625 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104701779 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081824348 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110075195 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087800478 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110376576 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105632935 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086906265 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107094267 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085392152 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10745417 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09228688 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101819637 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116412644 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094075762 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105262358 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088416429 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104613627 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087049419 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103179981 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104518 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086380338 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104688386 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085270733 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109326816 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088775187 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105086067 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086907629 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105645773 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104729414 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086942605 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098470262 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085301817 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104819187 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086643638 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116584325 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105418641 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088920449 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103874917 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087032791 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104277037 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0821536 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11355327 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115048468 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0873322 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112674361 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084317446 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106114287 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115832713 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080770481 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102580949 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083581014 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102606095 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093286304 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106905774 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.103668007 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105026847 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104109726 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084217934 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10630619 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084450634 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099931239 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084504976 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108632807 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08873386 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103931211 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086122401 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108363158 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106112677 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096932236 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105016904 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086851968 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105649483 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081983371 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104201997 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104305332 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089658019 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105857011 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084301362 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102560168 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086022103 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10536213 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087848299 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105287255 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087612071 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112504449 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104982029 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089073762 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109327029 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080526033 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109181239 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085719799 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104954559 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103509748 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090036027 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109076593 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087122236 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115025804 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086315665 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106352567 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105946939 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08385073 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104951166 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086043772 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105338894 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085187826 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106453253 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094872333 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103576263 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108623079 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085829942 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105413516 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093502949 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106367046 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089179171 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114076094 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107959466 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088361824 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113991373 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090023663 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108984632 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106520695 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088012785 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11138187 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084751021 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111479095 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086662625 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105841138 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107108695 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083227724 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105453318 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086971818 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104936361 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092772503 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10792794 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08582288 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104313818 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083701723 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10706034 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109914326 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094520308 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108356478 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089817971 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101638025 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.0833707 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107692488 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103350096 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087991959 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108325456 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092595701 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108562462 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08699087 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105128313 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115596961 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092661611 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110120607 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084330381 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110279034 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088006797 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108172459 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106445345 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086913105 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107646248 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090897113 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107008092 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0857026 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113638075 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089606564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10780337 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107833379 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087313787 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106354016 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081716048 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106455315 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088956673 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111840047 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08875427 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106248758 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117321888 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085845916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105519489 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090382262 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106481482 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110142446 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081762925 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106462737 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087917895 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107284458 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081209579 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105452339 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083938333 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108780159 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085450764 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101198321 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117378579 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097043816 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109545731 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085445649 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105284581 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081510885 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101820295 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105029177 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087753409 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107521303 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097783596 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105868414 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086280752 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102067015 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086607424 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110515567 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108956527 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083590206 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101359992 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085192298 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109721597 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092064685 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105673762 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086208569 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109594197 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108246761 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085266476 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109849226 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083382403 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10989259 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12054452 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087602204 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10728288 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093628648 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114870045 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087061773 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101651134 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106649032 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090289329 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106411933 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088029036 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107312835 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1232485 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089940533 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106135084 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085971052 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108405238 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085732892 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115139683 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088321123 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10787671 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110270961 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089221132 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117089354 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088907693 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116134541 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109939682 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090090256 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106607691 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087069785 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104993117 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085693156 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108503416 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107375167 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091925448 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116059067 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086250598 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118387756 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116521662 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092648248 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103680207 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086561781 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106829801 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08207005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108912208 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085232069 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105938046 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104956592 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08833096 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107264901 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094201049 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108172592 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088075594 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10662322 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081912754 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109145348 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089740552 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108614268 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103675258 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088312737 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107632747 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091635566 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111853832 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087282026 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108768968 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088875579 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109319023 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102110721 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094658488 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106022041 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090865593 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106806556 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087900196 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108557963 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09055754 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114031522 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108473285 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090344912 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119727736 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089710114 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105539455 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103859166 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093596985 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10553262 seconds)
  done (took 59.650304022 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147422634 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084606347 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102231994 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082914018 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116745318 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103470761 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083478494 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103678065 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084369921 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106067945 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082714505 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103444361 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112633475 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127225303 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096152518 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107748954 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082391504 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104402799 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102486189 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08451932 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113094246 seconds)
  done (took 2.962953639 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10557621 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.125071354 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119975104 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123798515 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093445803 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119756817 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119457738 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119430588 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101473835 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115727321 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122264578 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119649934 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095112998 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115024754 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114868643 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096012847 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123551493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11318568 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12046852 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098752457 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116873909 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120032493 seconds)
  done (took 3.330845884 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086454234 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106464203 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088962873 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101742461 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08685527 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102351824 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091546091 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10556802 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090988164 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106277537 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085461009 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.106212818 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10881377 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082587373 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107338459 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085733886 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157173603 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111536058 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086940076 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109097938 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.082099751 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110281759 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102746492 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08361671 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.106750086 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092287294 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108637851 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085682257 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10829034 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085570798 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10789392 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085148789 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108468867 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107167393 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086793679 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106237512 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08758719 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107141125 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083141661 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10575976 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088029147 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103865926 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088182519 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109168782 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084699048 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10696897 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088377216 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108074456 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102319809 seconds)
  done (took 5.673662784 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103785058 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167378313 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089284571 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148807864 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125404196 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117509217 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09185574 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148466714 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106914442 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086449352 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127551905 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125854352 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108648871 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09415239 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115440827 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1076627 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08967156 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107331539 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112973475 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087826151 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112480811 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093940019 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125261911 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123314659 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112603148 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086120812 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107970623 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113624832 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101777589 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114407016 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113632736 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09386364 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12583034 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113641312 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086976668 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111879252 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125752303 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108494717 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090599585 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106168113 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090253552 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114126841 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114942801 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106038315 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109805712 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113633983 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088414234 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105542075 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123139596 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091458283 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117621826 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124878101 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112646348 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089054568 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113542705 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125298194 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088595247 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107774082 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091695509 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122972987 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105822688 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092425191 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124480894 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110976302 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116841222 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10374801 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11464555 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113536933 seconds)
  done (took 8.450931718 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095201287 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115592875 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125365674 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125666036 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095244968 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115383616 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115653746 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094752905 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115753545 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120765607 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115631746 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138929486 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089946792 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119942611 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116464838 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095063307 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115926444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115938932 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094877818 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116255392 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114989962 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125320962 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09514441 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125147812 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146364527 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111090895 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095310197 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116054559 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124950332 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11508122 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128761477 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094836774 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115390437 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125287059 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128646806 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095036981 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10798839 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116195068 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096186039 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115499634 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110631962 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104537073 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11663764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110294615 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095199034 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116527929 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124992132 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128921739 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119216621 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101276349 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116466972 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125893247 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115354059 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096150674 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125180063 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.15225842 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124042761 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124336061 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115704254 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104946422 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12529821 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134128144 seconds)
  done (took 7.962809425 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109453888 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119630253 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122119813 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105207533 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087246724 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114483707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086289368 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107460095 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1197149 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098345032 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122091641 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114008352 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096562204 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123219539 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114169801 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116855563 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093400941 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113422624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118923996 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092405421 seconds)
  done (took 3.022132062 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094227041 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129377574 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08912306 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116979345 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113198071 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095887472 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.111693415 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113298711 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090513405 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113447649 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099783979 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122125159 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110825936 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095318464 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120268745 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116943521 seconds)
  done (took 2.585187482 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09667767 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121903755 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12661961 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091557793 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109427233 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084923346 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110846153 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.106307366 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084853227 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125604746 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089016899 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11467834 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110091546 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087126972 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106322925 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09114356 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105843536 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087029758 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110156862 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124638466 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100766395 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108456105 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.11058218 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091279467 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110719228 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.0952841 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110870422 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108771956 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088054345 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11043968 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090063594 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118617526 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106570477 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087920854 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107606314 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086461303 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110007322 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089409602 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114126484 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10950786 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087905176 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110580466 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089770214 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111961908 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085065463 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111252991 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106023276 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09544776 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108284723 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090506581 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110031592 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090936179 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112217346 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121202615 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092744002 seconds)
  done (took 6.516074383 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098751205 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112383301 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084380121 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108477076 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091948472 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112772161 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11412361 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092925765 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112269235 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087201278 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112710679 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093654135 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112592777 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11445218 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091457192 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113843389 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085502813 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112743104 seconds)
  done (took 2.709541611 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091180513 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110350353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096393282 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110751978 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089205563 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113740943 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084226542 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109580943 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109152609 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089686796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110942957 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092147031 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109163372 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091567617 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110921167 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089719341 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113284058 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10849316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089645602 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106057727 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092001022 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109388791 seconds)
  done (took 3.083194154 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119145505 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.130343321 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096970878 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.242384931 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.108654204 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.139189971 seconds)
  done (took 1.693341837 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109485951 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12623001 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111825151 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112163671 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120365723 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091149104 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11358775 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112463601 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123131432 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106511614 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113239485 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122323637 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123523883 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10090212 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119442393 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119925755 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113404057 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092314428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110992235 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13326679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091537237 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123017192 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112934825 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091192584 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113534711 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122704166 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123233498 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127358965 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092107367 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122729779 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119928381 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091803423 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124033021 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1270806 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115235455 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103132198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113476533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134335068 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119767755 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101343271 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114030739 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119614057 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101782171 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119729104 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123103756 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113637833 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096467916 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113274291 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11353885 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140082671 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098299715 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123136411 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120091999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123886404 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102403504 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140027084 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128621139 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121750129 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120441734 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127380592 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124112971 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097722423 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122546292 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128575404 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120106207 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100164695 seconds)
  done (took 8.460134147 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102534165 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131170172 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113777544 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127414664 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100477461 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112833496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113913633 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091884257 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114088536 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112494051 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158222413 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091893165 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123088752 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12261211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092249652 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114014157 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112770406 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122313385 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091348356 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140743734 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113007059 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12340645 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121734122 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100843966 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128357381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119345054 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113531786 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092275846 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113165275 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113652266 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097971087 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113216312 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123158386 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090875193 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123390086 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11444116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091744543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118568073 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112948491 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120960921 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102206651 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135002916 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114217037 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112946228 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107497565 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113753244 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113074149 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091277076 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113539208 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113079902 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105984879 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128361555 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128333908 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12279889 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113854422 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092780407 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113978334 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114170044 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092612578 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121020531 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123734136 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09143121 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140000876 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114291802 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113747511 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123682721 seconds)
  done (took 8.358631658 seconds)
done (took 160.208659881 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.224915547 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.214493467 seconds)
  done (took 1.296628009 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087018254 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138944433 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10124165 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175740669 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08625043 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140872659 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137909196 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098250949 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108888452 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088454671 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.112583856 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092362694 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.177432161 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086134346 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108359691 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109686614 seconds)
  done (took 2.717214918 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.114774694 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.260086968 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129350685 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111658738 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094365838 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.116260267 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089140151 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118221483 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094257715 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110875971 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093784189 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112664589 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089320866 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.113126085 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093765874 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.114741334 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110581896 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092184655 seconds)
  done (took 2.924526728 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113421983 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160015709 seconds)
  done (took 1.146245506 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.245649272 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162068138 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.22827366 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.468558881 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.269931262 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.370895563 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.206148882 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.217229444 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.176179919 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.210631899 seconds)
  done (took 3.42150313 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119110954 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186439329 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.326224213 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163525842 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112408747 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13367154 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.163606488 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137833672 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.130747002 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107002326 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128769212 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.125140036 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14574298 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099907526 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121529326 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.123540342 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126087377 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120422422 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.121161225 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100881456 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144930602 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090352379 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122755224 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120010036 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102692364 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125884263 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112981634 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090199266 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122857894 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098795844 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119812195 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131650158 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125364123 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162075901 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.130172783 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.163582342 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124885703 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096440182 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.12109542 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095456163 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125518911 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125609661 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132590186 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10292138 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112385574 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103475932 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112915674 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089841552 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12097838 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125230221 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098751686 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120308677 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16234471 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127189452 seconds)
  done (took 7.72294545 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787525624 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156841685 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096204183 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.902190073 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14314027 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10907104 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.794783932 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118326064 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.262574596 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.771821818 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140713679 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102903893 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23783772 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.267595185 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957558838 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.295095542 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.657443833 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133148488 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161003289 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160147421 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12532509 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120957959 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138386088 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.458188807 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.123724451 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095881662 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125654674 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125522646 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168229344 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.132404835 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097555815 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.207092724 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.257898788 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206692271 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100147898 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11896078 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094983895 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.198812105 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274834959 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20192455 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186936105 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115886008 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094975141 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129472833 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.140006292 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091881491 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193057432 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183067322 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17925247 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121478945 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125337023 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10435923 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128059314 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17256066 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.129043824 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328819674 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319729926 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095926674 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128924556 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133201 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246813173 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130539899 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233808383 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146735182 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197277475 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119763997 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783887208 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17816677 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119072386 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101211537 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127200918 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122200186 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104413111 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174223955 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398302303 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131018119 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120817028 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09548304 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.258398272 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108946408 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119694029 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170343775 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12392479 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126940675 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109286766 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129802943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.176745523 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26547025 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10820777 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128088697 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122472564 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109160138 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123707253 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.223833244 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228475272 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17130179 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.241493227 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105885788 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.192957941 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.176381696 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126550601 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18051998 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126313328 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107725478 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130056564 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225183302 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152212155 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12948175 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099439133 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125584425 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160836219 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.134678534 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.102635361 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.201112388 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483926428 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.175798053 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115891491 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.135669657 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103777307 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191427532 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101183372 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269326771 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128822173 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176179623 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127201965 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092341955 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12910965 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.171334758 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129913313 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127769686 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105675335 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125564356 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.244455354 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22683137 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128497025 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227988232 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190167061 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124926273 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179003314 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12895291 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175516363 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1281432 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128115928 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100426703 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790422305 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125881935 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102458246 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122377129 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201496453 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090453845 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130504407 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.133087157 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092495225 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796832771 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.133593157 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12809703 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109004505 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124985921 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128120621 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102314503 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122929271 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169597745 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238526244 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127314762 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103287687 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.133480806 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.167759715 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.12423758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.13240416 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.132119531 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109576217 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130551503 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121684543 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109609772 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198730311 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17142298 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22884075 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574913955 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120613617 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.131625463 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213396016 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120414924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296083903 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127934158 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.210563652 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.194477703 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104992175 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317577281 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.172615891 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201624976 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.136419053 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.203774023 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094033938 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125842872 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.173529581 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119501523 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101494164 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.193274019 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108897115 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131084111 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.96771709 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090676375 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25104715 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092767989 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17914328 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124364511 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127012807 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305561274 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096810932 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136290907 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.173260107 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122794737 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.132217395 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.709188512 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.131556834 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129000641 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102185625 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231080069 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172140803 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128827527 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127411443 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103483733 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.192500011 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.216130932 seconds)
  done (took 45.598083459 seconds)
done (took 65.691132142 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2810218 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2185173 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.273542329 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170708435 seconds)
  done (took 1.912612623 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171797139 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150213187 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123365657 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112944068 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158875252 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090986496 seconds)
  done (took 1.700303713 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361558408 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275619497 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244499411 seconds)
  done (took 1.782074278 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.296827097 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253577043 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47926312 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328417949 seconds)
  done (took 2.378696777 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215759916 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140698689 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.120243394 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109529564 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.206456701 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252600995 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147120064 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203788772 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101256354 seconds)
  done (took 2.444727858 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.206089759 seconds)
done (took 11.320731968 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.140049344 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.252485338 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.179472067 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.274292844 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.238608767 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.2598789 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.152539123 seconds)
    (8/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.222242489 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.133106791 seconds)
    (10/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.126678595 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103720224 seconds)
    (12/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.142674646 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.156353452 seconds)
    (14/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.173176159 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.200279914 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.126769864 seconds)
    (17/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.198351915 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097387476 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.279182109 seconds)
    (20/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.162508082 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.227196347 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103006219 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.183140879 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.105976693 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.161965381 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.261360057 seconds)
    (27/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.091191766 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.146249073 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.238410762 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.205841022 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.238050208 seconds)
    (32/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.145419321 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199764179 seconds)
    (34/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.136351327 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122641663 seconds)
    (36/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.185001267 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205135759 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102569455 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.210653183 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121763457 seconds)
    (41/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072207382 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.205092412 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098011098 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193294131 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090963912 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.156791815 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.230292639 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.145629635 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.178455382 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.226915347 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099315447 seconds)
    (52/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.146200366 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.123649071 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124618723 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.118288934 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.197010859 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105954465 seconds)
    (58/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.17665569 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.097319075 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.177858214 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.121891998 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.130547204 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093863212 seconds)
    (64/309) benchmarking ("sort", Float64, false)...
    done (took 0.17992297 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.093288479 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.143439308 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.143704242 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118543735 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090534098 seconds)
    (70/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.201848691 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067133341 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.14261482 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154137722 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117979187 seconds)
    (75/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.169540034 seconds)
    (76/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097035689 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072896908 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.097071576 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 0.19787732 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.131981645 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.148746622 seconds)
    (82/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.114979597 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.071580524 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.189897891 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091735208 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.160019599 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098315777 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.117961319 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.213832975 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.203355013 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.130012474 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.207568161 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090157082 seconds)
    (94/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.18608022 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.121861701 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091870058 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.227056891 seconds)
    (98/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.190079698 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091856036 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.127687981 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.235031144 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.101013105 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.098772587 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.225017144 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.093488777 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125601789 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.198672839 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.184615203 seconds)
    (109/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100161735 seconds)
    (110/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.072179563 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.096653914 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.099835625 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.194022889 seconds)
    (114/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.157419167 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.101861581 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.128271783 seconds)
    (117/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.100516605 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.434171412 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.16533567 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17123886 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.128664231 seconds)
    (122/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082895184 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.098569647 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098936755 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.12374565 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.190445074 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.101357967 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.161663955 seconds)
    (129/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.219642353 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.100855234 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117009189 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099859232 seconds)
    (133/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097758257 seconds)
    (134/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097719229 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.201574846 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.141815048 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.119615036 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108085016 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096821587 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124720932 seconds)
    (141/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096764941 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126427935 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.130417484 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098137527 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100844975 seconds)
    (146/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067485935 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06676289 seconds)
    (148/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.145985025 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09954436 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.096813987 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.15498046 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.202804859 seconds)
    (153/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117469256 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.184130641 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091794112 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.072873371 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.097326573 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071156178 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116117854 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099822638 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.122735856 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120745573 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.171455136 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100013314 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116415986 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125736471 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091255335 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073838416 seconds)
    (169/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.09806397 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.073724211 seconds)
    (171/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.112440447 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095698665 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.144360182 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119118239 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116274137 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072413739 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12680259 seconds)
    (178/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.071517834 seconds)
    (179/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.209096194 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.103438493 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.187947115 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098535782 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117166899 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.231671461 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.099672187 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.071694837 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.071702795 seconds)
    (188/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.124798253 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.185285803 seconds)
    (190/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096048167 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.141636554 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071747436 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.071576056 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.123848565 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091745406 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.133345497 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127701362 seconds)
    (198/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120392053 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.141687462 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.187525335 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12771295 seconds)
    (202/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120263035 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101466325 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.098010745 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.171642292 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1729649 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.11922134 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093240215 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.116303867 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.143528818 seconds)
    (211/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.147506621 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117610342 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.071641202 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117855784 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.072571419 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.204657364 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102611192 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.124237549 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091724843 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.133904608 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.10156534 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125044444 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.073438799 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.144899672 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.141562315 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.074876846 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.151974653 seconds)
    (228/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.100050167 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.098650877 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10671406 seconds)
    (231/309) benchmarking ("sort", BigInt, false)...
    done (took 0.255251544 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.074577705 seconds)
    (233/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.072967371 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.097822398 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120457915 seconds)
    (236/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099338035 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093294073 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.099023572 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107463829 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.145849246 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124225982 seconds)
    (242/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107763403 seconds)
    (243/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098275405 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.09861637 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091995464 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117206787 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072587792 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072975953 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.125873857 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10222449 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.197415584 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11945572 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.148280056 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094058737 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.122660879 seconds)
    (256/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.113494469 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.1186704 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095092494 seconds)
    (259/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.12344084 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092953213 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.098029865 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136462567 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120781512 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091753709 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124571323 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093705885 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133406432 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084778558 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.222701358 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.125746376 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.095257289 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.121834886 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.147309006 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091555327 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.100153945 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100856862 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.137750064 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098331156 seconds)
    (279/309) benchmarking ("sort", Float32, false)...
    done (took 0.181990848 seconds)
    (280/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.228293019 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072750822 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.124890556 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072213682 seconds)
    (284/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119888683 seconds)
    (285/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.074330605 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121024453 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096067878 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.163700296 seconds)
    (289/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094952437 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.099375259 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.091935127 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.127376127 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092687779 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.117380226 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.117525415 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.116677671 seconds)
    (297/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072629774 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126520735 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098817981 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.098885429 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.114414185 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.143628475 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119210634 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098621305 seconds)
    (305/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.074838138 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119779978 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09419174 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.100570663 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074075153 seconds)
  done (took 42.077225928 seconds)
done (took 42.980933631 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100031572 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153687905 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102402433 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143789897 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132474073 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098227875 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.126523178 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104807 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.13107585 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.13333236 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104178075 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101313387 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102628712 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129636044 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102976799 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147268959 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.13208196 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.099849255 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.126523914 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.092431797 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.127403376 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093123602 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120218251 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075716091 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.130574022 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.100477747 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.124861217 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12766493 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092385074 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.119250874 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095890192 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.126253531 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092751902 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.133089814 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099379761 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.125326104 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097701809 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125583569 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089026512 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111088805 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.1191027 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086962554 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118548177 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094827152 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11721783 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092029331 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119795675 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101954544 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146278475 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124530691 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.099253165 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.130789778 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099542521 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.125344601 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091616949 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124074058 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093481615 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14091249 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.125575969 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094722819 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.124619196 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096530873 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.124260199 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.099634559 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.125795064 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.129469078 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.104488982 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.123205658 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100047729 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.120655211 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086445386 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120459501 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091356737 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.114994299 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099194394 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122232621 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111035813 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092626972 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118318848 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092108206 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.115003758 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090908933 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.115577191 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092946459 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114246793 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073209974 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.121371291 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092812677 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111375686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095526008 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118305162 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094945507 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119105396 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104319622 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116554658 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095256748 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.118749368 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.093111763 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.120763019 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097160756 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.118629073 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096717377 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.127502799 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.095342913 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.125002529 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131218728 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092988379 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.125958218 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.092727613 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.118383102 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108997721 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.127610825 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089785111 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121091655 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088313458 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.122990893 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090996527 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.116492099 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092514079 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.116907511 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098936934 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112459924 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114698768 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094712694 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125926281 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087332698 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11807806 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090027057 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112010099 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094245655 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.117487537 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.092413965 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.12132779 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08376417 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122543539 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092565894 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1268055 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096747505 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.127748474 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.095149259 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.128762757 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098449343 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125765564 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099039951 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117949364 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080338417 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12517627 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095260889 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.118713415 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091808922 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.121113556 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.093341336 seconds)
done (took 17.704584269 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087848868 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186216599 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153340515 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150693635 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114255651 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.117780524 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122375888 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119363669 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114887285 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144827692 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111536383 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13368845 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150106502 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085832552 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113354879 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090891592 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114138813 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102838615 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.149791786 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.140205422 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167607734 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087386794 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.153674603 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141107715 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125335367 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.108485929 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.119036812 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09779365 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.12368103 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120182821 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.141924435 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122449862 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094470901 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.143306226 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112286317 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128287798 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.093818922 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.127985718 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094063894 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.119238463 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147973873 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.141176286 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097896022 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121394235 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093703245 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122116303 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094529554 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.130153002 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100588057 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121627989 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12693278 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155637997 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091670354 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122615433 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087130494 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123553525 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121955432 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090670042 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113035629 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090776589 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112556607 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091699409 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128689904 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142144285 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092414216 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122477521 seconds)
  done (took 8.872706063 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104727495 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139995747 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106821476 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131090815 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112636852 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.105711642 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113614117 seconds)
  done (took 1.788219293 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088437104 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135249882 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112336512 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142746285 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141618487 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.115781013 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131439189 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094992139 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139691066 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.096117854 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142914773 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162596328 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097943818 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.128678926 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148042405 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094670471 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14749215 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094983445 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125192432 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.119880613 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124443399 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.144447878 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096174014 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.121389708 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110307048 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.122364989 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171844024 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100086572 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123445257 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098991702 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120128199 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.175590695 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110264609 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.135411512 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095128608 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137226673 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.137842442 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09304357 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139434769 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100844143 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135745823 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096120724 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1225676 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.09314206 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.126147682 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133706327 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.096860091 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.1227096 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097691696 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143190037 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095635466 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13708241 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095518236 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.127778694 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.097296712 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126377841 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132032446 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092917436 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141928683 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097571856 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140470734 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113732269 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.13666501 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.141186103 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098132417 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138481821 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.110368684 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125175666 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097404202 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125857032 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136331081 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093531274 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.123692183 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106583984 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123860217 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120714985 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146448006 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096989483 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133113877 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.122734435 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.095937732 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.122921829 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.120790167 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126875443 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095141749 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12824476 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099058937 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120041956 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094408596 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126205553 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094040626 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.12240559 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.099832733 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.123409319 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124372999 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.113843677 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.124347727 seconds)
  done (took 12.571422346 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090688236 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117047683 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095968048 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.119180387 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090411574 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117180886 seconds)
  done (took 1.617971252 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113813155 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118937861 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105016772 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120701937 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157697883 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105736154 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132467605 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129266389 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107991005 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129242085 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131242274 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109694059 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14608183 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130431478 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109069984 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.127915717 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.134807372 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106444801 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.136747017 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104171898 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.146324827 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129832979 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101382028 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.139223592 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.126739617 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101771827 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133063506 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106412154 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.13386546 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124067909 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096589808 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.1205456 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096356941 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127530078 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.134435735 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.101775489 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127821126 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124220494 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106772063 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.125082779 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106329647 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128433547 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135050177 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101337747 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13287918 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.131291232 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101657223 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134884019 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.112379575 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128905362 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.129812187 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.103309629 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127922082 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.101421803 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.131382422 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132612271 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101862839 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139882722 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.103330539 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.130828116 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.127951379 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.10124256 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133680971 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127136606 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.112674969 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129554653 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104227472 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130516771 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131763993 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103773269 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12872138 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.100756509 seconds)
  done (took 9.695372323 seconds)
done (took 35.515856209 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.700981124 seconds)
  done (took 1.682527415 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.724939122 seconds)
  done (took 1.708237541 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.272299836 seconds)
  done (took 18.257841324 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500969886 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.586401141 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.831912998 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180141258 seconds)
  done (took 3.085316601 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.956829334 seconds)
  done (took 1.962020902 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298888833 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263624405 seconds)
  done (took 1.554121348 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.794343963 seconds)
  done (took 1.789196101 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.376214573 seconds)
  done (took 2.370234963 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332849869 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187938581 seconds)
  done (took 1.519970786 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.562188113 seconds)
  done (took 1.561255738 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.941864164 seconds)
  done (took 7.946865642 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.261305732 seconds)
  done (took 1.274222449 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305472449 seconds)
  done (took 1.307170857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.588275027 seconds)
  done (took 4.592596652 seconds)
done (took 51.604103671 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098488264 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129308247 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10172563 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126701648 seconds)
  done (took 1.455058381 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100617025 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124828717 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106400508 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126252059 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127652875 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095649659 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125260544 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102021875 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.125262763 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100131788 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128081439 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.128190562 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10533333 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131485665 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100508257 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.133790749 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107596486 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.129849589 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.133903857 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104357231 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.127255547 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105823285 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.13368396 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.102316662 seconds)
  done (took 3.811092411 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099979806 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121184225 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097144757 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122197306 seconds)
  done (took 1.453032493 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099870052 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145002059 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.142613831 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10503672 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.146755041 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137806082 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093041763 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.125588696 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101983909 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.134055781 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097671181 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159355699 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.14793473 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.107184291 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.137230754 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.096432074 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.125486458 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.146461932 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10243314 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.132629037 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093486054 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127866221 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092227323 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142435014 seconds)
  done (took 3.948764797 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.158333433 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15291089 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.147341499 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099178936 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165898087 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.150991329 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.095036001 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.15074637 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.094902016 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.140592839 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.128791513 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.141577318 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.138156635 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.094791375 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.122216941 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.094929349 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.13684374 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.141128248 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.098819326 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.155134209 seconds)
  done (took 3.623582053 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098071997 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119279438 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091710194 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124224814 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102599157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123957639 seconds)
  done (took 1.674344725 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090603651 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11689809 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090530248 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116537229 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094915249 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.119716598 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.093635132 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.120893062 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094249883 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.123669141 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095749438 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.121816074 seconds)
  done (took 2.293139891 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.460923072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094256912 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.123031547 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113212044 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096806362 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116413523 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104512265 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.124163123 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.144569625 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095941533 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.124624224 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.098736407 seconds)
  done (took 2.710651986 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238167189 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135251028 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299310429 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201276426 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164948912 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17725461 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15425706 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168027562 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225651751 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160601653 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208954486 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226700398 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132585452 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217278252 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112793043 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144783625 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226999436 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216106505 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160033635 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233209781 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201405695 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173977942 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186357815 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155416072 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139233619 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173953621 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.128141989 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105541646 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236129929 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184971881 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223149352 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16637781 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151834191 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246909001 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263634096 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203691093 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198076666 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138071571 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149281375 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16686076 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267559125 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144833662 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239113604 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163984924 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106650026 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221435797 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173072776 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177590085 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.155904749 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147466693 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200262531 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247216836 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193444003 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146065009 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168179598 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162558164 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.172965784 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158387905 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261567297 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205701473 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180702589 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12390406 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150498651 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193783198 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182859065 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169987923 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209421458 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148899038 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194087723 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189426632 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164285534 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220275396 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189538215 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140278505 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17158236 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18028443 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176792267 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263184013 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182342257 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12495803 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174297614 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15178114 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137368663 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169169911 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126074763 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21202856 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14819584 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136048482 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166728401 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162494207 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163613568 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206040822 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228233883 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153211162 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084066758 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15710643 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15869671 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194349598 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141195893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161362599 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164424943 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131866597 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182258091 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09994938 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205807148 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.096265822 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175313052 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214815592 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102597567 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160183049 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15496492 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150313161 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177266091 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201627735 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144434247 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135142455 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208941378 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179778032 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.157430372 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181924446 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228949945 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116371618 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1505697 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232476761 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255762647 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120753858 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234257133 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160350073 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113603984 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132877098 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181054614 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160776729 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164406392 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140362693 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189873059 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24245812 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10398962 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141858833 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190054692 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141266918 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140630048 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170214129 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155996323 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112668494 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148746675 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15718087 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188597725 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21019202 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126963076 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193648993 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15458505 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228666452 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145655603 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151420947 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154352682 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094032399 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.224097705 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20697067 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13703441 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212973513 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.178328289 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168891948 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177991637 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142529291 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187072134 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138370557 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09934154 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226341539 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176961145 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170452275 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.202156935 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160995601 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18306651 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18839057 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209331061 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176589101 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170912217 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157548649 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11444202 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162948776 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173541253 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123581978 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145080409 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138708394 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131780817 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143619404 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136515991 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229347591 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179359532 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129697462 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168718817 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155626642 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18463757 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12841716 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176921465 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182283191 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148210834 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225259068 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194945157 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187588595 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14981655 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238433189 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099315319 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126734959 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143723372 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17109773 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107373505 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13713966 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166035362 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180782786 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209709931 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180039327 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170430284 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180723654 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197262374 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122709745 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141530059 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212831301 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177255597 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191588541 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115770929 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150709997 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177421311 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159461577 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257591224 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173926163 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174161863 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238697306 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149471663 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10585656 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151329497 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213548298 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154183017 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179000784 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148612246 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114963626 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16247842 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134154837 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160741532 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182776978 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162334514 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215900844 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151721743 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18605242 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128947719 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166225551 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159518852 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170749376 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082410525 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175360309 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231909093 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149619199 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169628944 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190750369 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134081547 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.180030199 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239264222 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191921167 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138599183 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15928829 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159932468 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164377189 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171231496 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179025323 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160917447 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187333751 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159400783 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13760362 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11378431 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149413553 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151378896 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132392071 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149965888 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176023693 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139306525 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186166062 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163108587 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159288167 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173103507 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151773699 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116541657 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150901169 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241570546 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176070715 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237191328 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122924131 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207082657 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206918617 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12684158 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105081753 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133984818 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180839839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137464928 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191512998 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.151555236 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161281097 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18370255 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189665393 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143095056 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120438098 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156794892 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173625749 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168852032 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151875443 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158256668 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204586748 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142717452 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105236333 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173015731 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161050975 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149092102 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199348001 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108902583 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121951107 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129080721 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133699844 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165493415 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207921812 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137607726 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18757252 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170310744 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169425968 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168400413 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151277536 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149533141 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167308259 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203205872 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180553476 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134481043 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156601011 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178514909 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220063773 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162696275 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113415686 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232154569 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193848176 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197340788 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144005806 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168758268 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168238821 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157785899 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213520585 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108100849 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234727423 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107295416 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227560587 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155464679 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143636002 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177888036 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.14833472 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14493886 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190078325 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17579126 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136328493 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105475782 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196380075 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177245348 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157735647 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099453627 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209196278 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097969749 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218541388 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229194312 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135510103 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154654972 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148789214 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136661499 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156546397 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158418636 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113481034 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167390444 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2032195 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136202918 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19171951 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232131754 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170108636 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176133646 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146233977 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692721558 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133047393 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194863835 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156631035 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23476465 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151047001 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172390984 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158165605 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168904196 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196421098 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161911468 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231335078 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192333255 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204274961 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10567764 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157792859 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162335202 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145252496 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153229681 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168580707 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16157006 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153596244 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17787825 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170102914 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137295522 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139886098 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199635799 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155812563 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18341417 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181316656 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139418002 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172541099 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21498662 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107393347 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207517276 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209550934 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144027742 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15449639 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134333742 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156515435 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234013822 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13132328 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201197341 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205411933 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129911666 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166360233 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14721687 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220383886 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159061111 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18105877 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147495615 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16054012 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157272573 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13803167 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103313336 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155089979 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168138476 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148775513 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16070479 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143351184 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217256203 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097476065 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146310202 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160687497 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193345991 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245270938 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13689474 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108582138 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163458058 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152726936 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175985081 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178613738 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137095806 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138148505 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136636923 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.134166058 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138532685 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128070222 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158079096 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165607285 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234152603 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137280796 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251197421 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140075507 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156408326 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089123868 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133560749 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151751009 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147321655 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15976857 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151556943 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233518715 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147133017 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13363962 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150492938 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098758072 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137478546 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166040467 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164275735 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177662796 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14551592 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080756542 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158600762 seconds)
  done (took 81.97669096 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173035939 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154082317 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.158130887 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225771893 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190969501 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291837048 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.224659917 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27629079 seconds)
  done (took 2.794009253 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093643815 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146343451 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15347554 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133906025 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091748833 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120459349 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.332882628 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.141157827 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091183181 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140156652 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.148317347 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.118411032 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.518289058 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.126053627 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118939493 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084299733 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116815807 seconds)
  done (took 3.772412662 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.463361468 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.72465521 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.489145406 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.126763817 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.251183042 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.136100202 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.849399875 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.212586335 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095681365 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.492924695 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772412448 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.189392323 seconds)
  done (took 18.906500783 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099814601 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122975211 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107824235 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.138663776 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097439327 seconds)
  done (took 1.669176996 seconds)
done (took 131.087384553 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104618364 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405444214 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072490326 seconds)
  done (took 1.617218009 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108222191 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.139596004 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109443143 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.139267413 seconds)
  done (took 1.611472525 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098782668 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129467069 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115805381 seconds)
  done (took 1.454140182 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325690605 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.195486894 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.15101286 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10623837 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131816838 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103584373 seconds)
  done (took 1.449447115 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097408198 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130662166 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098957659 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131192988 seconds)
  done (took 1.56966983 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094995686 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073469672 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102057851 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074741923 seconds)
  done (took 1.453927918 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114951463 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133221128 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107859606 seconds)
  done (took 1.467699766 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.13087361 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140569783 seconds)
  done (took 1.383536355 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105790964 seconds)
  done (took 1.210246707 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118866025 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171514037 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.202133437 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.174274006 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.239496264 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.174538777 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.151358409 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11715981 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.138800214 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.153984821 seconds)
  done (took 2.755764434 seconds)
done (took 17.856667687 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10362893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428905156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.417191436 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117352656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725572181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.387870027 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036691893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156696903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176620953 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099862616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142932227 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.683367138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031979927 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.381412959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986505258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37746323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713708087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095159263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121701299 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094500698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.02168671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098018583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124585731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095905555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705781241 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.433821636 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096988776 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.378573333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09552985 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129054596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.388480529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126140168 seconds)
  done (took 17.078135151 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.098330306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177880817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102563361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139730003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125954023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095311422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126857959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097263322 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184282909 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.132740768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118696812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12564524 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128994475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100287501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146303641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101784968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.134077777 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096047302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124364162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128891999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119083022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.129256887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098298162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124598696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101298671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14402823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130223583 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09524507 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12320764 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102825174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130001816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101464002 seconds)
  done (took 4.997378426 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141534325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18588626 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135524107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129601513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176878627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132340048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.205965238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120166959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185018475 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127575724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142983728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.100429917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161441277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.133575007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114977813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12428766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099923328 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123482451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093247458 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124458545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143560351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099516681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123472806 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094456052 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125346729 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111975757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125274691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124301252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093756325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129045307 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105421846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126631922 seconds)
  done (took 5.283681382 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098174975 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129031191 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109712387 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141110593 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101504972 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129278123 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.101000319 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127774001 seconds)
  done (took 2.057864577 seconds)
done (took 30.522489966 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112137774 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130024916 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.115302181 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.14451653 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10869605 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.138891584 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101033901 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.14372367 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.146001409 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107495925 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.141243812 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.095633172 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125026538 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093108946 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.138515153 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105837329 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.142673644 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.11136751 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.143900463 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.140578773 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.100408995 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136234838 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109424951 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135538786 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106223994 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.136417709 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.147429484 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106497311 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125687108 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096219707 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.127450192 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113432202 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.133271165 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109709243 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.136725859 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.104551915 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.133420605 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.103357687 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.14343908 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.143547479 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107870924 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.143207263 seconds)
  done (took 6.297129256 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10838325 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.152537223 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114129718 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.090089239 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.126163642 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083311417 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140289502 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088295762 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.116524788 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113494035 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082709785 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.115450258 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078969897 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103836172 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080802705 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075664655 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111050643 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076231093 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076944855 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107854424 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.083014685 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073669072 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.11051338 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081413579 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075412253 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112600878 seconds)
  done (took 3.704634801 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100199786 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.138508061 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116006654 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.188174529 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171293318 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.103843041 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136102012 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147356196 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109767718 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123226137 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100735107 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.153578104 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117000847 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131516995 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.096480164 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141245088 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.1457381 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096963969 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130966583 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116687438 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142094358 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103639086 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146730884 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.141779615 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094490564 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125942579 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102909965 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13934767 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.107030856 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.137172317 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10442351 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128716603 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125505531 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111178612 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135983352 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.099680441 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144750797 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107840759 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133974392 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097306742 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128597556 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124565427 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114587753 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.172121963 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098480077 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132777623 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.1022442 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134760125 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123841315 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114218559 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134003001 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099180215 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12891863 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096529129 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124527963 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10741251 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126509794 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101865755 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13234166 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126760279 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106650228 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127194913 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109619125 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124856112 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103676813 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12416091 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.0992171 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123185175 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146662256 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100468331 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167625447 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102886292 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.131214696 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108156547 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131920308 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134946784 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096863808 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140320971 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111463997 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.134896365 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.105721475 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128651569 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098492434 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144200163 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099582198 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127186051 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098782323 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131831173 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126718153 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098210419 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138824735 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100748549 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128100918 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116792126 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.132224781 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.102797805 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.135256592 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.135544755 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098795186 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138917955 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106728392 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.128783845 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.108994065 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125332951 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10367676 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.135973307 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129435258 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095164322 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128938055 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101120977 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125949 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.096896879 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12767998 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.096495823 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134552247 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099257681 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130108293 seconds)
  done (took 15.343331142 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235171187 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218603081 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.242588481 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26498366 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.145266941 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115349562 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.249282977 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.129354076 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.126486621 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.166301595 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165320007 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183688099 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.148745599 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.216909373 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.112069675 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124635673 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.119094032 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.169069162 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.227194671 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.305221156 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112272454 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133407344 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164894243 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161389097 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139989169 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.106675963 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142700289 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106002952 seconds)
  done (took 5.873455314 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108426964 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159185322 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100784598 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147913302 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152040539 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097240529 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.131709526 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.10170082 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142878931 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138739403 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099829342 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132860862 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.104990807 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134075999 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125534661 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109305056 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135964156 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.102778156 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129669017 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100909802 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131965279 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10322672 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.134616441 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123916547 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.107648517 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124593946 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090064532 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144957966 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127794225 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116399231 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122963271 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101271497 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13607261 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09799652 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126539034 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.099030186 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.129525503 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096428692 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126787267 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097537344 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.125898217 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078762834 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124610032 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140727181 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101621263 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080656399 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130277472 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.13071388 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095117306 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123687605 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097033562 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127146347 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097627644 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131634828 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099163721 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127130338 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097582764 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118117739 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100514966 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127020018 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084942875 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123448578 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099104307 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119744357 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101868753 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129245045 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092255882 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126558421 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098126623 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130736159 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096581909 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128465215 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091709648 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126656218 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09635295 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129676204 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100351904 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124780468 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123828017 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094471228 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076627556 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126095202 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07621354 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128651749 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093523592 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124250272 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096545277 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13215633 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.144630906 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096379454 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134731912 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099330272 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12448158 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098447141 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115953173 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101974064 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140566793 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141889384 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093938607 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123515506 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108702822 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127745158 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093690799 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107591146 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101060258 seconds)
  done (took 13.233228475 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12872499 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154897277 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101886151 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144137659 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159415665 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.168225353 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107590971 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132759603 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102446881 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144278361 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.100563913 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133696798 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.099115163 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138306139 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164981435 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107693478 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126459965 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107350557 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132975153 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173032177 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.118785561 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.148557722 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.116852496 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130920198 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130304012 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.115721144 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164386746 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.11250706 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137636462 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144720855 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.115083864 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164601236 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.147358196 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098781451 seconds)
  done (took 5.634815284 seconds)
done (took 51.204897076 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.227531023 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.448540128 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.222111817 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.142215782 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.276085486 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.236603639 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.232426184 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.218286448 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.290756371 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.222484109 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457956059 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.935024544 seconds)
done (took 59.061871874 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.275046584 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.352499063 seconds)
    (2/2) benchmarking "String"...
    done (took 1.482401498 seconds)
  done (took 3.99191997 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.575445703 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.186088454 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.483305785 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.217743015 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.218422927 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.515762358 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.93387031 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.605840227 seconds)
  done (took 28.305016132 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.222784791 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.621486852 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.073255486 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.072256218 seconds)
  done (took 19.138858766 seconds)
done (took 61.434361517 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.236648235 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.275029163 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.251838285 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.207870528 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.337345253 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.248384371 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.363225338 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.282089422 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.238353583 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.197973716 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.24936846 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.219764921 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.262750871 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.279670678 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.219235306 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.222962192 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.262543625 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.8471443 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.634270911 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.231318795 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226899917 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.254473285 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223425273 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.22124401 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.305674933 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.22930595 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.221085901 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.226742842 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.978478976 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.225853866 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.235244446 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.553558811 seconds)
  done (took 191.117644645 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.222660881 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.228549921 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.34445357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24329405 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.632480938 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.423939706 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.35986117 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.730907392 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.244716805 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.229723762 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.42149259 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.225411458 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.507544336 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.211588063 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233241338 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.326238519 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.416214216 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.535864351 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240458795 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.491180928 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.229714959 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.432735575 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.431348751 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.425756327 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.277710001 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.278902762 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.259511984 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.254435091 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.431736957 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.357154564 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.253900266 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.256774224 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.874948119 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.086229654 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.228003129 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.238461671 seconds)
  done (took 150.740118539 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.517039002 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222234191 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.222580986 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.223119729 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.256485502 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.224798804 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.829501669 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.835728214 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.774862697 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.666703289 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.227962092 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.282834709 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.504067997 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.221213544 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321571403 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.234447647 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.225812822 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.239323562 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.265994491 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22446883 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224644523 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830533945 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.241759338 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.797227982 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230127828 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.225349748 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258017276 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.613320729 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223584031 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25938988 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.554466921 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.276913148 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226040202 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.592666396 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.188688682 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337285612 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22473789 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260592005 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.225618964 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.500166894 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223499485 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.224287264 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.228926946 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.849490499 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.225559194 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.834559324 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.232049566 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.169192698 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.22241935 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228868583 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.660958361 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.746154095 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.238931 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.225354611 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.229236139 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.222347699 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224756443 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.259298183 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.719206528 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.328748149 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.241945831 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.22714008 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.229674079 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25964923 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.226385006 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.554201084 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226959393 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.93963407 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.288993729 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.444986723 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.835817392 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231584609 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323118769 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346294766 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.227874092 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.227607336 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.229643304 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.228361913 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.335206446 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.228701804 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.670449825 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234621362 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.228016551 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.28835379 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.32375825 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.22724047 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61365478 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.234019118 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.229262445 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.983696383 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.228837117 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324353425 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.227798717 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.227065552 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.229751522 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.225661475 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.670005771 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837490633 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487461581 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.2326176 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.8001036 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.234084336 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.685509951 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.806133564 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.871675517 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.228153214 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3373973 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234438929 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.230969275 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.228428215 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.259330297 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.24596791 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.286223999 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228385252 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.626560092 seconds)
  done (took 350.627874245 seconds)
done (took 695.148844681 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.91189406 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.866430099 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.004030133 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.877918234 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.861017633 seconds)
  done (took 10.678532811 seconds)
done (took 11.835181037 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.421091734 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.422571922 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294024224 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.423467194 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258957909 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.445639681 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403471947 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.252431617 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.336748234 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.31913617 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341195783 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290416386 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264585161 seconds)
  done (took 18.634086664 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.571596885 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.566297473 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299468924 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559645728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276299968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572318022 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441092563 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.44837193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450083027 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263484734 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243827571 seconds)
  done (took 16.850922309 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.561549196 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.571229208 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301397195 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559461406 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.276480839 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574907135 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466013534 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.458758007 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.451808035 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263857001 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245042915 seconds)
  done (took 16.890664585 seconds)
done (took 53.532703994 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.239622439 seconds)
  done (took 2.401299637 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.273730669 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.443971417 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.263639895 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.24576269 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.242354801 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.238233644 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.24553148 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.240812483 seconds)
  done (took 11.357001789 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.237880501 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.241273021 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.240440113 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.240379793 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.242864201 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237761156 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.236756803 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.238836448 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.240452594 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.238396527 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.241480174 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.237818406 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.239351235 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.24147293 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.24007958 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.233640785 seconds)
  done (took 20.990646623 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.243490457 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.237959868 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.239144367 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.23923687 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.238826772 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.239807165 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.238765561 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.239944651 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.240722994 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.240666454 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.238889309 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.24052273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.238162238 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.240086474 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.242167407 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.235929608 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.239467517 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.237253507 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.245456261 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.238313942 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.242902013 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.240845029 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.241871306 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.238143889 seconds)
  done (took 30.922521939 seconds)
done (took 66.829016417 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.504906518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.020343785 seconds)
  done (took 9.689642346 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.242412807 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.242720251 seconds)
  done (took 3.650745506 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.24104491 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.243191028 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.24709636 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.242612812 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.242007865 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.244391336 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.244440211 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.243824683 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.243469256 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.24308714 seconds)
  done (took 13.596394944 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.242364864 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.244164994 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.240229343 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.244241239 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243546307 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.24185131 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.245531218 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.244755409 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.247036874 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.242638157 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.245946167 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.239549027 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.244403553 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.242936246 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.24575569 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.243095535 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.241997867 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.240397516 seconds)
  done (took 23.544381201 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.244086731 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.243701814 seconds)
  done (took 3.653322621 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.241742185 seconds)
    (2/7) benchmarking "second"...
    done (took 1.241943225 seconds)
    (3/7) benchmarking "month"...
    done (took 1.24326107 seconds)
    (4/7) benchmarking "year"...
    done (took 1.243498443 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.244895483 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.240916569 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.243086106 seconds)
  done (took 9.865684464 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.245489296 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.415961659 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.503257848 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.870931956 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.246389765 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.24944341 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.13205224 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.248540056 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.254809746 seconds)
  done (took 14.332795605 seconds)
done (took 79.496057225 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.294717954 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.262576903 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.496272873 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.247592696 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.26257725 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.584650385 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.285509416 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.363870451 seconds)
done (took 37.961723301 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.242209486 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.07245202 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.084321714 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.25170663 seconds)
  done (took 11.575631577 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.219089268 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.237565042 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.226908301 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.310707597 seconds)
  done (took 18.162655288 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.326248043 seconds)
    (2/2) benchmarking "read"...
    done (took 1.584394831 seconds)
  done (took 5.077662344 seconds)
done (took 42.223399376 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245282026 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.247910133 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.246634473 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.245393309 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.251099447 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.244485708 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.24707499 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.248048584 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.247087994 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.248744873 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.247652125 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250420278 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245249013 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247052445 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248217755 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.246817114 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.247991164 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24756263 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247062281 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.245827277 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.248694093 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248530535 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.248245957 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.245652688 seconds)
  done (took 31.107601902 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.249937081 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.24557329 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.24918164 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.248107949 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.244487466 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.25081185 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.25132928 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.249321945 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.249083482 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.248480865 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248394136 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.247907953 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.250318059 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.247180199 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250218097 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.246114312 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.252326418 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247879976 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251078452 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.248941167 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.250520655 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248145891 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.249157069 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248434086 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.246644328 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247085498 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.250795701 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.246608593 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249700197 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.244924895 seconds)
  done (took 38.628901205 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.254821967 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.259012106 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.249737222 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.251048242 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.251870286 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.250984611 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.250606867 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24973877 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.251314508 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.251653768 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.252653605 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.25040596 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.249261017 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.251444638 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.249987965 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.250929345 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.252875262 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.253759773 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.252357053 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.251965039 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.249671446 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.251389255 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.253306461 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.251982017 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.251689988 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.252425659 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.253195752 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.251431153 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.254907702 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.252860836 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.252069623 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.254235154 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.252161463 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.249952088 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.254748159 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.251122432 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.258160351 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.25603596 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.252968461 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.250791405 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.250689034 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.253109842 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.253065808 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.252893337 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.255058603 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.251974226 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.254898661 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.254697843 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.254275753 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.253764328 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.253164837 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.254609281 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.253243335 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.253081049 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.253819361 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.256328585 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.254588634 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.255826681 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.253705076 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.253536864 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.255027217 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.254873395 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.251319751 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.254185153 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.25307957 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.256726306 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.255283707 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.25477705 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.255996518 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.252834907 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.2552847 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.255469415 seconds)
  done (took 91.395680754 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.255789118 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.253924814 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.252378981 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256439134 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251502569 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253207041 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253702832 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25768847 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252484239 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253243735 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255208942 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253881359 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25232557 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254426677 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256917525 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254098841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.255535617 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254961418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.254603758 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254092901 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258491083 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252633516 seconds)
  done (took 28.772770173 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255081058 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255951923 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.251951209 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255967604 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25613281 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.257143452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.257267815 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257309626 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259387242 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251982794 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253226806 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257869468 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255144171 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254064801 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254859871 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254455732 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256275652 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254219209 seconds)
  done (took 23.772887155 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.255731116 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.253991012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.25700442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256087378 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.252158798 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257247002 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255439705 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257931665 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.256279518 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.256990279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.261263729 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260349475 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.263846466 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25370825 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257221033 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.259076094 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.258944005 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254027891 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258134154 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255349375 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.255979663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260190778 seconds)
  done (took 28.835652093 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258511128 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257409068 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.258147403 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.256812039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.256464397 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.256080059 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.257827944 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.257177446 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.261921428 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.26032821 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256569822 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26249562 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.259251153 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259634633 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.257390888 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256656992 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2617829 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.258336902 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261977424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.258375323 seconds)
  done (took 26.352039221 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258155511 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260630242 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261562178 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262438999 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263473048 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.261139124 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259749967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262435816 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25962649 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.26073664 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263310539 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259585467 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263531424 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258727441 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26272744 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262117075 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26288042 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261935739 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260285936 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26294628 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262050613 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26412962 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261503491 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263403558 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262834704 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262275218 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26082298 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263333449 seconds)
  done (took 36.507607209 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265286096 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.264131616 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.260189782 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.258721888 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.261101462 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.260212761 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.258380193 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.261237371 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261752921 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25771206 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.262871699 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.264769997 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262770163 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.262487484 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26166355 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.263601925 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264310419 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.259122063 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261829503 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262827764 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.263675887 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266053287 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.262229105 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261043377 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258795632 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.265134024 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263308762 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260695437 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265483112 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259547116 seconds)
  done (took 39.043370049 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.284759031 seconds)
    (2/2) benchmarking "in"...
    done (took 1.283021796 seconds)
  done (took 3.752773658 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.26088786 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265490028 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.263937559 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.26291571 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.262620047 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.267708148 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.267235491 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264151039 seconds)
  done (took 11.299755346 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.264168281 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.264416905 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26485255 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.267557129 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.267307034 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.263632215 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275543683 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.294782613 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.271736384 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.268217787 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.276026736 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.277099891 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.269706502 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267008601 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.267397997 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271216995 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.265733409 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.265492867 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.266614065 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.265110241 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263622653 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267614447 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270585616 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.265157652 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.267512914 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.280575674 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.293271543 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.269967361 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26893105 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.271583398 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.26848447 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.264919212 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.267705987 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.268598156 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.268301975 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.266444667 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278912006 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293681736 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.273057232 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288733302 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267440783 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.264047098 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.270766519 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.267475014 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271974634 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.27060586 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.269789402 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.266033699 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.27092565 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.27200681 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.274289777 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268721209 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.264265695 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27350214 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.267829213 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277191805 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.293935464 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.273458596 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.2802548 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.281288959 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.300525032 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.29654363 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272652638 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.272635586 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279776505 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.292470785 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277895715 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.292499513 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.267697149 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.264793797 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274524496 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305350262 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.297209364 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.269389273 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271712211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.268466355 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271149153 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269954404 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280087384 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.301615951 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.274722571 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272305919 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282285534 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.295359384 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.272904422 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.274130936 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.273271493 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.274276757 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.273040937 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28533793 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.297256737 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.275035269 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.271899267 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.272434802 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.278100886 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.273764947 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.276572857 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272351346 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.272390251 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.274987495 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273484933 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279992282 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.281198104 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275866682 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27284569 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.27887526 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.296588534 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274192214 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.281228152 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.277786174 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276720484 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.276896068 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.283478758 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.273628432 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279021626 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.281908376 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.274965122 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.278190485 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.276450475 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.276857214 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289079997 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.303564122 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.281455903 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.275372142 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.283448581 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286676299 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275868158 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.280358492 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.279839456 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.274953308 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.274972682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.278855203 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.278511401 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.2784945 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278033623 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278961878 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.277588054 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.278074485 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.274713984 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.277761018 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.279938414 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.277541842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.277921727 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.280172429 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.277482535 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.278134364 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.286738596 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.300343384 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.275916478 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.280273359 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.277172602 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276017395 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.276821869 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.276913284 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.275189304 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274372064 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.278780365 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.279134137 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276324873 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.277483258 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27978383 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.276975882 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279931036 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.277935308 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.279050999 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.279870451 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.277430504 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.278914038 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.28098367 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.277936128 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.278081025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.280218644 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.282420923 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.28593457 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.280981619 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.280514773 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.281357248 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282080031 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277721839 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.279003616 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.282216364 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.288029942 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.281482234 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.28713334 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.300724538 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281982965 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.280896684 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.281903534 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.280597238 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.281256937 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.284078726 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.290306321 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292948862 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.308642167 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.285803815 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.286075329 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.283380261 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.286698499 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.287298531 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.283064198 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.283799087 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284610002 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.281161201 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282260903 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.282691587 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.281360194 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.282712007 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.281621516 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.282934704 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.280739157 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280842529 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.283685323 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283348489 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.280675418 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285810074 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279591239 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.280171416 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.276429779 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.281713505 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.281963154 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.285037191 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.281276928 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.28867805 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.282947469 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286275204 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.287397402 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.286018742 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.282594564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.282607655 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283309032 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.285171568 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291056417 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.306467527 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.283366086 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294671916 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.307636058 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.283184046 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.285995985 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.286950905 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.280390323 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.284719552 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.292096735 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.287013216 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.286039525 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.282284533 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278540495 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285072448 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.28859023 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.303754787 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.283335458 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.287628956 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.285150196 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.282820314 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.285059291 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.28897509 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.286487508 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289264808 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287720926 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.284513851 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287991364 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.286771583 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.289572484 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.285561597 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290224834 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.297164959 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.290723986 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.28903589 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.288653891 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.290966937 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.294299477 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28960218 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.291270362 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.28689323 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299429795 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.312515822 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294834866 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.307381822 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.289942819 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291548879 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.31217693 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.290409138 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285315329 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288343936 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.291556172 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.286986349 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.285207098 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288221294 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.289780323 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292565266 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.292055989 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.289377895 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.290810881 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.287858951 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.290300288 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.288399665 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.288768191 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.289226282 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.292755952 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.289032694 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291617326 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.289701003 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.289993831 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.29398717 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.310116062 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.293326207 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.293741955 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.28985694 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.289713281 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.292349846 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.287124007 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.289649314 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.299734628 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.292914222 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.29837379 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.291091831 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297358305 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.289604668 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.292918362 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.298424393 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.286061791 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.286277146 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.288520019 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.289868649 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.298354749 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.314713632 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.292547141 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.28967608 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290952009 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.289420302 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.291277587 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.292466551 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.292041545 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.291960026 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297986258 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.315445951 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.297055457 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296699854 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.288503858 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.288391828 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.28858053 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.2868219 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.29481492 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.293974444 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.292446396 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.292791819 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.291457188 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.290159396 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.291997026 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.289499967 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.294357883 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.289398083 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298420461 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.317113658 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295043683 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.293858285 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.3035838 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313411024 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.300127334 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.315492616 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.296691472 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.295115585 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.294593988 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.294701864 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.296649221 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.295414909 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.294253869 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.295256603 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.299882579 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.295486347 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.296400638 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.294794748 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.297803977 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.292144077 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305690352 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319654101 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.295933758 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.298962775 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.292860135 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.296106738 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.299968098 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.294656623 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.290040114 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.2944222 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.307412561 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.302531118 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.294260673 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.295015751 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29345509 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291122466 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.294175317 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.29427036 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.292927877 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.295160193 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.295447878 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.293985343 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297367581 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.294292185 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.297287282 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29767951 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.295366694 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.30244127 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.317036142 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.29612209 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293335235 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.29752467 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.298494811 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.297454556 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.29332788 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.294591627 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296621306 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.29596414 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305730697 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.301088446 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.301581579 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.297485153 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.299564735 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.293267778 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.296423196 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295239996 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.29669577 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297394553 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.296594008 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.295197354 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.298659862 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.295719176 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.29698209 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.297742332 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.299871795 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.298819804 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.302965552 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301623731 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.293126484 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.291239352 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297748325 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.293727046 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.296951364 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.306328879 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323833716 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.308596047 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.303582407 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.299499529 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.29694108 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302785967 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.305781527 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.29442622 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.298497001 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.298681637 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.297654549 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.298657531 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.302073436 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295723726 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.307370286 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.320642369 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.300869288 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.307320723 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.324400013 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.300304771 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.302359666 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.30343686 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.301132754 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.294452373 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.297857531 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.299362229 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.306357619 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.322366727 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301375557 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300853983 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.301455561 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.299277895 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.306490708 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.297768503 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.300848435 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.299771089 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.302689867 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298484419 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301788378 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.296743943 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.300204735 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.298627387 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.305560923 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.309539443 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.297027131 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304870672 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.302542106 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.301691573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302421739 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.300013872 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.297192176 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.296615691 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.300515525 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299537473 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.302421732 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.305658058 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.306282872 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.300524063 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.302331836 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302386699 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.304195708 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.315186904 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.31060959 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.296753212 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.301918884 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.30609715 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.307656525 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.30354053 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.303424357 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304901206 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.305264855 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.307907095 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30386514 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.303807427 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.304831347 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318648452 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.326840537 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.305207567 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.305413629 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308689893 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.305961651 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.299472693 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.306275103 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.307421322 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.311052908 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.314548455 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.304264975 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.310705196 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.325957275 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.305609597 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.309150165 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.311214813 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.311925366 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.307462347 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30375899 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.302962333 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.308414932 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.320658761 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307640041 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.313792077 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.335279109 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.326022613 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.305545353 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.30584176 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302575587 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.30514999 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.304611788 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.305526185 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.304261333 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307186515 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.303367865 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.305609515 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.311644127 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.308636586 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.308237898 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.306075088 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.309103517 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.308761052 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.301905362 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.303732475 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.304532917 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.301513219 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.300976349 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.303888712 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.305972495 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319902107 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.335853952 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.308026395 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.301581033 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.30364162 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.306684108 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.312956365 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31857446 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.313519352 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.305690994 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.305181701 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.307797367 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307941063 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.301576053 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.302213644 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.308173249 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.305324065 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.304573327 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.319126556 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.332599553 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.309790211 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.309745951 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.304189298 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.303004579 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308805296 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.311590377 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.308875564 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.308721155 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.311693202 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.310592181 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.304890345 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.305335502 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.310213742 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.31815122 seconds)
  done (took 770.864363973 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306436004 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307324556 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303720188 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30367329 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30513118 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302669857 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305752717 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305290306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.306650394 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305934459 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.305488279 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303496797 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.308405601 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307981094 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305788134 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.303641739 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307448335 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306322036 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.308091221 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305365789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302768257 seconds)
  done (took 28.634821309 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.308518335 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.304465481 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308285402 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.311076407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307421105 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.311451913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.306019854 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309202537 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.307733449 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309221855 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.311203743 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310670985 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.308932899 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.301654319 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30662419 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309934922 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.313995423 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305832032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.306756186 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308666824 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311421209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.306873659 seconds)
  done (took 30.005537532 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.311598907 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.310546901 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.312890549 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.306451392 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.31121964 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.308420761 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.314072741 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.308899372 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.311225723 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.309765667 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.309241182 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.310320495 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.319188103 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.316156294 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.313393937 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.310025831 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.452733024 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.310214107 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.310698622 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.310951894 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.30636382 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.318124832 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.333979941 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.310133211 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.312621181 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.312936186 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.313109876 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.312847991 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.313473855 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.312344342 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.319666683 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.315027084 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.31448702 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.31689994 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.313160921 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.313476946 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.315672827 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.308063877 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.305325041 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.312105591 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.322478138 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.333373275 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.313533242 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.317147851 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.337883002 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.311041125 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.316053758 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.322135674 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.307937134 seconds)
  done (took 65.7532226 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.314773585 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.312247097 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.308462472 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.314100491 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.315785538 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.314417357 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.310907395 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.311873747 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.311011886 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.313903314 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.315257799 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.311584352 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310842178 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.317862663 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.316710986 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.315599269 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.313515463 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.312649065 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.313825382 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.313220088 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.311665993 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.313859291 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.316569258 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.312392368 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.3149368 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.313617857 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.310131484 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.314189968 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.311121294 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.312482042 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.310588297 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.312097405 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.311163199 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.31484963 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.313067601 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.311997701 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.313961997 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.315188986 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.313392797 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.310801985 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.316714026 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.312949889 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.315322262 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.312903329 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.31177415 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.312451445 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.314167162 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.313121044 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.31450735 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.312382148 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.314616311 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.314955164 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.314216734 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.313799662 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.319183076 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.316648586 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.313299877 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.313533515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.318413679 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.312170478 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.312963952 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.312769642 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.316546891 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.318231391 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.314897002 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.313242329 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.317602978 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.312918502 seconds)
  done (took 90.564670382 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318443569 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.315759405 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316538859 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316593699 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318124373 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.314705234 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.315148501 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.317040465 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.314475158 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315802106 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316066947 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.317266069 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.318456791 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.317349555 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.31656034 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.315168763 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.315350963 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317688503 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.31763707 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316657379 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.315882475 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.314470258 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.317985335 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.317679041 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.31805591 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.313965113 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.317034411 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.319569626 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316535628 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.317388072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.317809147 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.317144606 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.317258371 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.31783391 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.317193367 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.321164635 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318384902 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321183712 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.320384906 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.314958487 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.319751748 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317506097 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.31875265 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.319654702 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321167495 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.318007417 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.319793528 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.323516294 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.321100384 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317257079 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.321533626 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318156927 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319563333 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32268437 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.319830405 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.318006147 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317695586 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.320662408 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323461877 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318423567 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.323036914 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.321343151 seconds)
  done (took 82.955575952 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322383945 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.320737988 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.316612164 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.318349184 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322212071 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.321375228 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.321688802 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.323226678 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.322518427 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.32104603 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32503605 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315507294 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322634757 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325014203 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31959189 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318324327 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3181675 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.318657044 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32432572 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.316816448 seconds)
  done (took 27.649470529 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.318222735 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.322147387 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.318971796 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.320069675 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.322234241 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.325150568 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.321118795 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322014753 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32222414 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322934986 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320203959 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.32735238 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322287313 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.318944758 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.323857943 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.320388314 seconds)
  done (took 22.382598858 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.32107063 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.321463103 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.322449546 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.325540625 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.317788147 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.322608867 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.324127165 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.32557946 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.324503642 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.327785526 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.324198375 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.325167235 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.326284592 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.324916732 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.323572784 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.326284405 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.322273389 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.324960055 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.325613979 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.326073717 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.32206746 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.323768242 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.324450903 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.327191216 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.321409445 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.324282295 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.318216402 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.321458967 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.324205258 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.322981964 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.319707124 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.325280509 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.323545253 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.324822883 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.325425909 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.322519012 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.324639422 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.328647995 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.324418622 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.324143876 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.327565098 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.322685203 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.328146358 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.322782755 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.324873894 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.325431274 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.325592678 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.325351351 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.324175403 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.32326972 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.326516165 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.329284412 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.329833995 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.331560758 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.328259214 seconds)
  done (took 74.088134596 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331238173 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328957967 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.32821736 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.326776128 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.330279147 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.324610934 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.32827613 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.329158317 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.319850377 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.332087022 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.324953777 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.330280269 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326951952 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.331096303 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.325879957 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32792371 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.327157702 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.327557353 seconds)
  done (took 25.138818362 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.326229083 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326580945 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.327950661 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.322898315 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.328056587 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329239574 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325323802 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.326590698 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328839352 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.325720109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328036236 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.328290847 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326595553 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.324027638 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.328624645 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324052568 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.330446046 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328437233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327910212 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324773454 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332553147 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.32693697 seconds)
  done (took 30.436837344 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.328503704 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.326961243 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.323033731 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.343532688 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.345118336 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.350703566 seconds)
  done (took 9.25955229 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337994708 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327467282 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32657266 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327122823 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330952621 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327642905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327118797 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329250054 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330852667 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329183868 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328413912 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328724197 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327658084 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32620226 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328692444 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329788953 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325912797 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324680057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324270536 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330412655 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323815984 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331027808 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328948823 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328873231 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329836817 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329283213 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328985588 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328869614 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328674566 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332257949 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33064389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330248296 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332166713 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331880023 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329967187 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332654724 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328140252 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33025527 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332030201 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326997119 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32935767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330049222 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329851164 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326497658 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33097219 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325299373 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327919564 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327874877 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324771949 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332343552 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330779218 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329310383 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333281209 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329182534 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335010526 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333601225 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330004375 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328320643 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334619246 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332013445 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328657582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333591064 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329835745 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333144734 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334259214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331044338 seconds)
  done (took 89.026174642 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332608335 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.328034248 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333599243 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330111994 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32856997 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329695151 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332096102 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329182537 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33072405 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328407907 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334063523 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32916996 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330621668 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332744131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329395826 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330065319 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32999257 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330547688 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329439007 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332898284 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32959157 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3313938 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330609482 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332430087 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331517349 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33092076 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334726407 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330456477 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330088745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33099114 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331469988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331116063 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332183196 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.333857429 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330268954 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330274267 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33612619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333482634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331586118 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333644283 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329588836 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334723745 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331986943 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331482219 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334177504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331900109 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334414922 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336710001 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333279441 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332641243 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330918575 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334115935 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33173825 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332637086 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332756594 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33448823 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.334370138 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334794801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33091278 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332418071 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332663093 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333969224 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335362948 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330799283 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330579517 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333932086 seconds)
  done (took 89.151741742 seconds)
done (took 1796.548513801 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.364187035 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.437917501 seconds)
  done (took 14.050728728 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.497305 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.451423491 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.334249252 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.361740216 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.335477384 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.344134647 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.335088595 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.335512716 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.333186053 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.332978222 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.334891065 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.521707518 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.331897543 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.336039855 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.334507929 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.426069804 seconds)
  done (took 43.202170688 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.363822514 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.347928307 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.466919341 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.368763605 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.362188753 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.552134137 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.404580741 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.34835376 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.538443457 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.39147819 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.17810607 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.37084295 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.342183638 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.646313048 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.364702149 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.548918907 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.622767319 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.198821999 seconds)
  done (took 31.668013232 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.859226596 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.351724185 seconds)
  done (took 9.464599654 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.370198487 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.351842299 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.361997322 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.361269018 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.368928581 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.387954163 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.360222923 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.353976749 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.357530001 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.383536398 seconds)
  done (took 64.916453761 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.361170649 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.346580912 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.340319519 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.338174461 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.329805894 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.341372516 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.340987278 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.351091734 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.542009433 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.492453998 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.368311717 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.347897418 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.362361785 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.346492563 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.334596912 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.376702 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.534131416 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.361853179 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.337843709 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.348135796 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.342248514 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.455229898 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.395754953 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.346929232 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.485573273 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.570747625 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.351549479 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.349740521 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.458877477 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.362640355 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.341420809 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.343270136 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.344924767 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.924711679 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.82768969 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.366073632 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.369786097 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.352676974 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.340635038 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.48391219 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.364792306 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.350713686 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.349201297 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.790383729 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.510174515 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.473140178 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.795699528 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.34973427 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.346271342 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.411529892 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.350472182 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.344521555 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.377027149 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.151396137 seconds)
  done (took 113.540174969 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.342275985 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.827060602 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509052418 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.360287517 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.264478591 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.20160327 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.365348261 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.670255372 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370694999 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338865325 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.633446614 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.902687772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.367988901 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.347257706 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.785349193 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.39336141 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.343234368 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.126462048 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.362371597 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.340710964 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.769562092 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.356863209 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.340040887 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.593192879 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.380245356 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840744104 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.080936805 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.937584257 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.359965175 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.338847382 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.846298052 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.361859453 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.376535507 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.339683245 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.630994984 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.735401199 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.728760225 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.362643489 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.35408398 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.344723339 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.360853564 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837116912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.739145384 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.358789369 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.365965078 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842412289 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.359883774 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.344462447 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.346824249 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.556934049 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.253074732 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.344362241 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.068603354 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.347313082 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.642839085 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.443882918 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.409198682 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.869554796 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.360682948 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.556340116 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.387439649 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.339782631 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.341841971 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.342990773 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.344124061 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.726758988 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.603431634 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.348185983 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.729455067 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.863869922 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.365655238 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936643323 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.312479185 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.364150004 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.388012236 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339558583 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.977168487 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893222138 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.366589357 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.340804138 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.71286152 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.361216877 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.635579703 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.361575681 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.340998801 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.786791554 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.371168955 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.376941596 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.342424445 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.348615384 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.109421047 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.346676206 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.627668992 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.368464658 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.343263705 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.343353354 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.373751506 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344809558 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.350352375 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.34177168 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.921740481 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.373463166 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.673326026 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.375046954 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.345926022 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.345758352 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.344946291 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.345135608 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573255399 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.894296207 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.355929974 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.34637595 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.346248651 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.34016224 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.545324186 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.344853227 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.701305479 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.371915501 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.363413865 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.356038989 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.227053171 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.388257215 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34249311 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.345146067 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.206949493 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.571806085 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.366278079 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.364358477 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.345207165 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.381976036 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.856436172 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.348696955 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.4245281 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.348045251 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099925085 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.377473085 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.370255359 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.910757079 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.347262462 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.344545076 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.356032189 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349896951 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.66942945 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.640046402 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.562657879 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.361147358 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.343292617 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.081237589 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.428098959 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.483791665 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.370501669 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353002474 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546458542 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.501580368 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.348734306 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.902019951 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.345023237 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571568192 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.354528394 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.672181942 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.895798862 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.373187971 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.353832492 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.106773465 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.063417899 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.033450225 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.351972454 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.6430578 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.36335102 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.807149248 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.346718121 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.355663729 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.931338655 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.351805681 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.352233528 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.348410568 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.349103563 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.411853159 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527601039 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.836796318 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.351879418 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.862778389 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.391866195 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35908709 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.36232746 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.348476947 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.704922806 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.429548699 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.355491175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.386279419 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.349066293 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.353703314 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.879435603 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.321753892 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.35894866 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504925172 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035562892 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.376663191 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.350511945 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.064167429 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.556210408 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958101765 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.390065019 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.719018839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.381015014 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.394049181 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.204202033 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.436430868 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.875583041 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.377419961 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.359020012 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.010953251 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.374463403 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.467915385 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.349727495 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.351276121 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945374524 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.376998793 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.35706093 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.965174351 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.358405872 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.608497114 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.352513543 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.382259027 seconds)
  done (took 1119.082923626 seconds)
done (took 1397.173543999 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.353378145 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.349773591 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.338115034 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.362160653 seconds)
  done (took 26.677757364 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.362040417 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.355093091 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.357789378 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.35844452 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.358495547 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.360932552 seconds)
  done (took 9.423594398 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.620334979 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.363301513 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.363090034 seconds)
  done (took 19.616235508 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.605251468 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.764272279 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.782206964 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.850366254 seconds)
  done (took 11.2754187 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.359815449 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.358278991 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.360769536 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.361849336 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.362299391 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.365335754 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.360732056 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.363531731 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.366394044 seconds)
  done (took 13.531055867 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.818760486 seconds)
done (took 87.61497166 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.440165393 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.358530392 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.970758934 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.268355366 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.107318206 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.771527343 seconds)
    (7/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.09362949 seconds)
    (8/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.965814275 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.649579916 seconds)
    (10/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.379110688 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.468479523 seconds)
    (12/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.363866929 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.310437492 seconds)
    (14/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.255297835 seconds)
    (15/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.02945691 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.407343994 seconds)
    (17/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.546802429 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.901858055 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.524667282 seconds)
    (20/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.179891033 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.365933305 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.472449003 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.354065186 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.390621708 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.207639651 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.110988342 seconds)
    (27/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.736100365 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.193453899 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.65192052 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.014161614 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.373083519 seconds)
    (32/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.54516899 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.959158468 seconds)
    (34/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.337453833 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.457835147 seconds)
    (36/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.255266222 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.818992763 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.504509069 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.700162822 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.385801709 seconds)
    (41/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.906737926 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.837661578 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.440790152 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.3381575 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.927525088 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.261508665 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.478664318 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.78587156 seconds)
    (49/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.418435733 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.796301234 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.470012335 seconds)
    (52/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.069200699 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.064682093 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.621169788 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.637477249 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.464197847 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.750647124 seconds)
    (58/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.675902195 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.682492917 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.959865552 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.229474383 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.445435879 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.417731218 seconds)
    (64/309) benchmarking ("sort", Float64, false)...
    done (took 5.738922292 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.660345854 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.80058131 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.111246098 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.368361837 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.373447968 seconds)
    (70/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.537329004 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.566814158 seconds)
    (72/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.407100516 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.500272178 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.403345863 seconds)
    (75/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.352622105 seconds)
    (76/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.595860204 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.676156565 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.337870838 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 4.402372596 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.819564044 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.243191401 seconds)
    (82/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.581506967 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.684100973 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.03422486 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.320574727 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.345048501 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.276611556 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.629308487 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.868253438 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.36088797 seconds)
    (91/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.378163617 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.35656281 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.745056619 seconds)
    (94/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.038220014 seconds)
    (95/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.385422403 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.792499318 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.37629724 seconds)
    (98/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.916471188 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.799280251 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.464786197 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.367135367 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.395273847 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.339287334 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.405729199 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.399807951 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.477813232 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.360321427 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.379352031 seconds)
    (109/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.372401428 seconds)
    (110/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.078577745 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.30772425 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.594046827 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.374721638 seconds)
    (114/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.743379989 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.487393522 seconds)
    (116/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.471273115 seconds)
    (117/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.388162181 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.363890497 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.445966623 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.289927378 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.385753942 seconds)
    (122/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.822123597 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.331745594 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.389605588 seconds)
    (125/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.945927497 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.886766355 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.404903674 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.430592253 seconds)
    (129/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.976101287 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.453909654 seconds)
    (131/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.189642978 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.642112666 seconds)
    (133/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.554660351 seconds)
    (134/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.505605961 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.382038451 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.882492937 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.142714573 seconds)
    (138/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.872253347 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.220939604 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.622112888 seconds)
    (141/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.449094861 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.361465917 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.369468803 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.29210443 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.685168885 seconds)
    (146/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.151598635 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.28874427 seconds)
    (148/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.595941714 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.482216887 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.878291283 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.358403396 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.383271239 seconds)
    (153/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.385598915 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.337906842 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.210949951 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.385073885 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.923159716 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.921829238 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.236155438 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.391253496 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.390600269 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.408158918 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.463592747 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.38966488 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.388135258 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.387721499 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.391995883 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.35272881 seconds)
    (169/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.295143977 seconds)
    (170/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.354026882 seconds)
    (171/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.946352384 seconds)
    (172/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.414123422 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.294738881 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.417939957 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.319375248 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.054184779 seconds)
    (177/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.389682653 seconds)
    (178/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.861619907 seconds)
    (179/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.218898373 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.378759327 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.366999984 seconds)
    (182/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.79949965 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.406262963 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.364051133 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.429902555 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.14894802 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.978313227 seconds)
    (188/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.417373087 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.457432493 seconds)
    (190/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.429696277 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.406600942 seconds)
    (192/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.805601689 seconds)
    (193/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.610297305 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.410065977 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.388248691 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.999102478 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.417197392 seconds)
    (198/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.367093888 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.951965633 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.394479867 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.431535225 seconds)
    (202/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.449945983 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.367620806 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.867115892 seconds)
    (205/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.712656174 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.362547206 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.018588298 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.368539793 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.435967398 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.383406445 seconds)
    (211/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.367717284 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.494332859 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.929783704 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.153884986 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.739106358 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.394202037 seconds)
    (217/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.457619266 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.394916422 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.741574928 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.210836202 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.008641514 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.577284783 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.962793588 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.131201657 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.81369431 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.353053258 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.422207956 seconds)
    (228/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.460661829 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.372234109 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.131259243 seconds)
    (231/309) benchmarking ("sort", BigInt, false)...
    done (took 6.396444457 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.347452126 seconds)
    (233/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.804871063 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.548394027 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.28472014 seconds)
    (236/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.106210862 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.395519738 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.366605309 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.936737042 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.071030785 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.385665287 seconds)
    (242/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.793741968 seconds)
    (243/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.39190006 seconds)
    (244/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.013264659 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.987377023 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.407680661 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.930481377 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.715450205 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.408139828 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.402231927 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.377183828 seconds)
    (252/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.389614311 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.291497667 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.389926667 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.447538968 seconds)
    (256/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.159044084 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.380406043 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.453300117 seconds)
    (259/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.437330553 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.664617475 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.044102654 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.409737711 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.413013834 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.614904367 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.518888571 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.097029848 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.03109886 seconds)
    (268/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.376154591 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.486801307 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.428608258 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.479218712 seconds)
    (272/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.387794657 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.45426365 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.417475373 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.366197266 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.769348991 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.180463214 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.395205625 seconds)
    (279/309) benchmarking ("sort", Float32, false)...
    done (took 5.443295841 seconds)
    (280/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.399944911 seconds)
    (281/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.582306306 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.4191584 seconds)
    (283/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.769782198 seconds)
    (284/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.495867823 seconds)
    (285/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.355994627 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.561922674 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.435709828 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.357077619 seconds)
    (289/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.527950971 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.35280767 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.507429253 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.45640071 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.255744731 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.456008196 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.761219377 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.514754437 seconds)
    (297/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.724740392 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.226747786 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.415486628 seconds)
    (300/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.776269979 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.268805463 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.396973465 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.37348966 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.408335973 seconds)
    (305/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.247083395 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.479096866 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.376468041 seconds)
    (308/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.129979332 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.601951132 seconds)
  done (took 956.043055158 seconds)
done (took 957.312803129 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.406754144 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40423628 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.387113407 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.4046288 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.499565666 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.412488063 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.397769791 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.390246637 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.434713443 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.43610124 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.384001952 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.410488411 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.388331715 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.386578751 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.387956095 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.4002174 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.550817903 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.387302285 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.400849363 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.394933381 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.398996158 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.386493323 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.437168666 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.412587564 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.391393845 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.388966274 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.389533387 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.406523467 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.498620217 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.391403518 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.389518678 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.395654277 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.548813415 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.389110609 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.381849128 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.408041239 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.39693306 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.394863578 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.392395843 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.418265998 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.013488999 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.408354757 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.391506581 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.390057685 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.388371239 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.393537645 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.38656735 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.394346332 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402121066 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405897681 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.999579608 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.422847274 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.393788249 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.390190762 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.400219217 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.389611176 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.393707993 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406938851 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.406023466 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.409995955 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.532783093 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.394566157 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.392623299 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.402985513 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.396398319 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.034455727 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.402823919 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.391764808 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.00853898 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.416173265 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.034798955 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.419795234 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.393271775 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.404429894 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.420812349 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.555275927 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.393993079 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.390671612 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.400434014 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.387883425 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.402275012 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406454157 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.39509229 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.391896161 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.4079053 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.415670132 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.40184131 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.393135784 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.401697933 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.409916867 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.399192541 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.404123417 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.395262328 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.387149519 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.401519923 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.393521596 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.392522832 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.391531917 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.397961566 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.405180327 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.00329322 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428565219 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.387037099 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.389316986 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.392179007 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.404827158 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.007821032 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.411692525 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.415971551 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.44059265 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.391834598 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.552887478 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.395792787 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.41033309 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.398742229 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.393823917 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.387809858 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.589483407 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.007130531 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.423633161 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.392374966 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.393883534 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.410214069 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.394259876 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.391562711 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.552685184 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.3931094 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.409849286 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.514140239 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.404520262 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.427362237 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.39365907 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.398337168 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.420495454 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.411794125 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.421812357 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.398034231 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.417266436 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.409662838 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.392212513 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.406096254 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.406216913 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.397047817 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.401398408 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.391306662 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.417860451 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.409059192 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408585896 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.41888989 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.51896269 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.391734346 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.538250277 seconds)
done (took 236.819815301 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.456255938 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.391800675 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.474063337 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.393115297 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.494213917 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.519227112 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.386625714 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.388051332 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.388608424 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.799402992 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.390673796 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.387383039 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.392001566 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.387688951 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.471910872 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.392315921 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.390337999 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.732574109 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.391720002 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.461934805 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.387838781 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.38748029 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.39219212 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.774637195 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.387454448 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.389621423 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.467937131 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.390290538 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.73835032 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.386657723 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.389911876 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.736067271 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.487173478 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.409132654 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.401423992 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.401973421 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.504901283 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.419373361 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.484593607 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.474967445 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.488821717 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.432838997 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.394201564 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.386580009 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.392180025 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.394444643 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.393058371 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.420552649 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.387571334 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.392545569 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.737879868 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.402712971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.398270599 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.391852676 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.390636716 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.416100481 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.395429367 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.392326756 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.482946039 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.39596373 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.461033245 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.772540167 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.82955826 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.393243782 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.395310063 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.39156088 seconds)
  done (took 152.535598255 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.462889652 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.46712992 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.516562661 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.42033976 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.44403018 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.523526502 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.423533136 seconds)
  done (took 11.556195133 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.405735599 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39581614 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.443355874 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44419814 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.397506731 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.539521621 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393568692 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.404767199 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.393866689 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.448032319 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.395332415 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.397888813 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.39945514 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.394354548 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442914206 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.403233339 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.511667021 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.397024695 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.397298678 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.553788425 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398788403 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.403853044 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.447741878 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.409243547 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.398352552 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.405497363 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.964892155 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395891802 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.39424599 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.397074103 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.393934413 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.440253824 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396252035 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.393207477 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390914305 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.512048486 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.396220234 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396072614 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.398246826 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.398575056 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.399336995 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.398648489 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.402136645 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.395534689 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.392745882 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.419734028 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.396628257 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.39874511 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.403450676 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.404444678 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.444930466 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.400977629 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.398066149 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.396977849 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.45666778 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.407596094 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.402578538 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.397348831 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40343968 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.398415745 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.553880664 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.447174861 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.398804667 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.446003291 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.400760762 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.402796065 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.402884031 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.398605574 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460429875 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.39978086 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.454520538 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.40529061 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.55753845 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.42464765 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.401836861 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.405436876 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.405110442 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398859382 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.399177934 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.410495088 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.401393933 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.403870229 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.40814995 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402489125 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39899193 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.508750118 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.512188922 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.400301473 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.419370554 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.405496535 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.402080137 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.456819154 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.406992245 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.399233022 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455425565 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.521327984 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.458911467 seconds)
  done (took 159.650713421 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.408978816 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.408447327 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.400086015 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.420950365 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.403216102 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.404206002 seconds)
  done (took 9.751434419 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.407563414 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.402041536 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.403479287 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.402088508 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.40211862 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.405247817 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.404402598 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.411088415 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.408438192 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.40965758 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.408376412 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.409822792 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.407858498 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.403113209 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.408032351 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.408815478 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.402769378 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.405946952 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.402354991 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402362413 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.513905198 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.406176946 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.406158271 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.404678647 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.414156326 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.41197807 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.411132574 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.400419935 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.405232962 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.414929209 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.429093367 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.408468798 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.409479317 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.415635667 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.410989893 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.4085954 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408161201 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.406670192 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.404534231 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.403829513 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.408503277 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.406716595 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.406558042 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.406085755 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.407012959 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.409560982 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.416096564 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.413074946 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.402623643 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.413409143 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.408889427 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.407842057 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.407547959 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.410403522 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.410930187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.430768796 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.41638833 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.412454859 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.412677883 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.413266577 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.412532735 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.411848719 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.40894502 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.416986741 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.410627981 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.417307973 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.407562514 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.413001058 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413398262 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.412471265 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.413246696 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.414741703 seconds)
  done (took 103.898197898 seconds)
done (took 438.689289377 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.681660602 seconds)
  done (took 7.989578271 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.643190779 seconds)
  done (took 7.960780692 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.316632589 seconds)
  done (took 24.637489021 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.492459511 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.458486571 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.433989748 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.419352321 seconds)
  done (took 27.120246373 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.646485509 seconds)
  done (took 7.962401981 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.402837681 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.413973784 seconds)
  done (took 14.133995766 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.672467398 seconds)
  done (took 7.989918309 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.477361019 seconds)
  done (took 7.799053792 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.417144764 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.911123323 seconds)
  done (took 14.657112605 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.379345068 seconds)
  done (took 7.693732001 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.879193845 seconds)
  done (took 9.197699128 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.407849812 seconds)
  done (took 7.724650589 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.419843193 seconds)
  done (took 7.733266253 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.369040787 seconds)
  done (took 10.686542505 seconds)
done (took 164.596361834 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.398794296 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.400733019 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.398131562 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.399543125 seconds)
  done (took 26.914229589 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.444913855 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.441762221 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.443529213 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.44723313 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.445812272 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.441725118 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.433614549 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.433979782 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.453197253 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.446680631 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.443387425 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.442521946 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.441177039 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.433315979 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.445437895 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.446126622 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.455440618 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.443382054 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.434100942 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.445010637 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.40997661 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.452317732 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.445860738 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.409273787 seconds)
  done (took 35.898266474 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.929767477 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.47969376 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.561472416 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.460074377 seconds)
  done (took 7.749820872 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.461905369 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.464984767 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.480353431 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.512879325 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.539844307 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.471408582 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.435602768 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.430119226 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.4197032 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.461801512 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.538703018 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.479529983 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.548641212 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.411180948 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.596206466 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.409709836 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.409728599 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.459064845 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.517171487 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.529027319 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.41024188 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.463302935 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.467063281 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.480033045 seconds)
  done (took 36.715811052 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.423143141 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.416247854 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.407434806 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.406801861 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.430998773 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.407162514 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.410219489 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.410195192 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.411099346 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.422843831 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.408562661 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.422858351 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.412240255 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.406623941 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.416474416 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.410622305 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.418866024 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.410018348 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.411572555 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.4157824 seconds)
  done (took 29.598353334 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.405567556 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.260977914 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.758756447 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.660964534 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.403306349 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.404943169 seconds)
  done (took 28.214062599 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.496909195 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.66518789 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.413235832 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.847888363 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.937092171 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.435681277 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.411961253 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.685154356 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.063228625 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.075350441 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.489717057 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.488161916 seconds)
  done (took 21.331267271 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.413354916 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.415980416 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.425904269 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.433197528 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.477164229 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.437532281 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.424113087 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.404419101 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.488298456 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.499571946 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.435819357 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.477943919 seconds)
  done (took 38.655862307 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495906975 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.45275941 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.627467666 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285450262 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142563676 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61943747 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.319165962 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888665841 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.419998587 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682911264 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417864883 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512271215 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673557097 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406028068 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.418312508 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.551335241 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666090443 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0099131 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417537961 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.904160463 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444198914 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421181136 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.042269296 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.456251144 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636286675 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.5587657 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.675744037 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.192565775 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768937101 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43135185 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422246415 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411582931 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687743818 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156422864 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5380503 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42274098 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.315374128 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.969235934 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.420277555 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.903519051 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429089786 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415425959 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426240137 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417573085 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.347257741 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409738036 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91261904 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.426053789 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.129040448 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412768208 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431843685 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500948309 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.417025107 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.990453377 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536058718 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415262565 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.415747129 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425225058 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985366968 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508881504 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440744997 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.352825272 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.919707218 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.9169603 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129444863 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.533005912 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.418081701 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426332476 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350955319 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.997266277 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437427431 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556837827 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.432703723 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076413065 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203233269 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.444892478 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351818411 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045615311 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429745711 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.358970088 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64742743 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19630189 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354312889 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.360116911 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346008507 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278016713 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433332112 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.981683751 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429767506 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.890935865 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.433742945 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437393278 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444962572 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.646214845 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.292098551 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41200603 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.426878271 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543039947 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431230166 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882630697 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358715681 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.419903022 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677923759 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.623135332 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421004459 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.572086513 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676455803 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425811385 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.44272304 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.425962622 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.43430045 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.097234459 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450745092 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.516626426 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441097214 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.196638088 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312722871 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434118886 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.521725332 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.435266251 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710225897 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.328794384 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.310875117 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484521207 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425187258 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411770138 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037953553 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027659818 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.304396809 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.415413809 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437930627 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.43781362 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.426065922 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383654103 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.414732192 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435239622 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.20703715 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.653393042 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431962429 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699179337 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353215884 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556447824 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432780838 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.643559837 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.839390129 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.445104343 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680817376 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418596745 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435853949 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43463316 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440102464 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513064618 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43998185 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.44287836 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.683902661 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.420761973 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.426349027 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.055787392 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.203560048 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424658819 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.423196821 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.360231383 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08491734 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411117355 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.424770588 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314387814 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.437997196 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493708192 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435626198 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.436700708 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.58606417 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.43873544 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.431421497 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.419083778 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671045811 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.434586178 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.036791455 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514821259 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.654042938 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096696084 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451688834 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.357249019 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.131925441 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.116901906 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424841714 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619320395 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417963517 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440344039 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436535067 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.106272004 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091668521 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439805 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.954625008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.436674078 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439712035 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.430448502 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431371709 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.577311679 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.567143946 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440540046 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.442042655 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566959227 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.440239194 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.360521197 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.944675171 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435337385 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430041287 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.199848272 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458753145 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.962508803 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944966312 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684937167 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.289514961 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442445597 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.167326633 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.466723515 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.427815174 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429777762 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449335209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.455742238 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443074872 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.439448853 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.023323436 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.810061644 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987642044 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244486627 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061696459 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.557486472 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.43623502 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.332612844 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.901877527 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368456463 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.089247907 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653833156 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921822439 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391755814 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660758331 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.851172522 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.357680486 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447074142 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661012555 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533124245 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.443252649 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445589789 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635698123 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462938288 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427995406 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.366320764 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.943431186 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683524711 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433133455 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513795723 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903212696 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444313417 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.216292795 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.424925479 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.978762812 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656747924 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.067801452 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.822243321 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433441908 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440791454 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942758001 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428651274 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95460406 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135060941 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.456932808 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.667168814 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373535092 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.439107879 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.445263711 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.432358652 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.104458543 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.437103302 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.694780287 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43865098 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36202262 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427240962 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048935381 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.300853705 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.434626595 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4345859 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328835066 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439659481 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784652908 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.446419823 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.584970122 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455850863 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.360585185 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359772169 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.11809707 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442605674 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404545959 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008676652 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.884490725 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.545831281 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449538579 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287261368 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.685608121 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.442288559 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.103152683 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674032685 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.413335506 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460350306 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.530143974 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430864657 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.41848419 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.320144023 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669292061 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359087937 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.65106585 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.68767342 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.338469711 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427424223 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.652346314 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.315826379 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440752417 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739408509 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.16848581 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.437778177 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238895467 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472080654 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436522226 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456390902 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.937138719 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4472622 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498738361 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440951886 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.447405257 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.445000074 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630739364 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439609716 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439620255 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.439250842 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520974096 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.581850989 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.602067276 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.213126648 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096549664 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263952842 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13746378 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470764495 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434543648 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429776611 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360048143 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586363424 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.968020909 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706528195 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554051933 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.022327342 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459128422 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432243399 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46930474 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649401087 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706634845 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.411482963 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434353768 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230420332 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.335163916 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449091762 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.649457056 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015966417 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084495904 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558595891 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.445605146 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908298629 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717150056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.528078818 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435466968 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03174384 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.455937152 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.988657787 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.473015314 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448959367 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59043887 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45143704 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204399377 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.47450117 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.594349967 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.212576594 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.981717281 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.7012193 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.06315825 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.456717247 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108263614 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.285844041 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706740354 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502203332 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450585003 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.550244932 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58121156 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.449019188 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.331827803 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440093981 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281996548 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.148594018 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.445650126 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114571428 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718582593 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.435552221 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.456039212 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457533702 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.452441991 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.66423304 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.314271443 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.671788639 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446570954 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449057118 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.008036262 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132954708 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475837586 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37929286 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.441545265 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740076254 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.701090064 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459392249 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.890319305 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.152888966 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096159201 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.410064069 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457624334 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443667177 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298641035 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140479749 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.560526497 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048780881 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.109773163 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461952505 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720757086 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.444427392 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.440697439 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721166935 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.446561833 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.441245021 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460130482 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.115641743 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.373435477 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.469060428 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.013882541 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.378069108 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.668078502 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172083547 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380391429 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438589299 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.650906419 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.449021354 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561624361 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447184658 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.442825024 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450651877 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181049942 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726704711 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.444395654 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.44703735 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.441951916 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.454986833 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455755815 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710165643 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444768142 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.125828197 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.807132967 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.703545951 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.439353937 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.428387444 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.445825442 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443905077 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168211073 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458333055 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.125232944 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118941224 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.446742184 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.459164382 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.454300085 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.66068785 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657624664 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.44681263 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486139152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455594697 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462206687 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.33428186 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.213938624 seconds)
  done (took 1653.470601959 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.482742416 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.487195531 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.460255872 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.519613476 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463403567 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.585787942 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.531557493 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.554904134 seconds)
  done (took 53.43820319 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.45538324 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.602336817 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.484118578 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.450403651 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.451092579 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.466309319 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.96759181 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.473674294 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.448697587 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.456403042 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.450378205 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.442902607 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.199558149 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.460554606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.445619983 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.44664213 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.448610141 seconds)
  done (took 67.507422732 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.460485316 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.478750602 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.509478081 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.45051153 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.458318953 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.477499103 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.254267123 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.504038823 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.445336271 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.648707693 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.104049742 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.46537308 seconds)
  done (took 82.609884462 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.455498493 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.453603076 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.452997869 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.458907432 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.461878963 seconds)
  done (took 8.636900283 seconds)
done (took 2092.057958135 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.695452901 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.303598477 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.20167521 seconds)
  done (took 5.858457191 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.591827149 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.642985971 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.778493629 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.798883168 seconds)
  done (took 8.172067623 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.727021808 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.824989547 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.640993047 seconds)
  done (took 6.547153481 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.111553677 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.444894122 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.576004106 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.443873068 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.454577373 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.451965028 seconds)
  done (took 20.709002742 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.449625664 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.448176961 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.448523629 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.450914263 seconds)
  done (took 7.156660997 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.419716328 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.146822949 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.429503912 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.449319616 seconds)
  done (took 18.7994361 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.195877843 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.204969445 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.192207637 seconds)
  done (took 7.951090375 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.444733084 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.294200364 seconds)
  done (took 10.094014147 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.755211712 seconds)
  done (took 3.111346659 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.582088908 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.77920317 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.637729746 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.624262335 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.667858923 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.009943104 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.398954259 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.898665042 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.585665689 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.052852085 seconds)
  done (took 31.594130665 seconds)
done (took 134.173042836 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.842351514 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.470674933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.649379891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.813459872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.677319935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.652892823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.728443123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.782371294 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.319385657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.307825784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.814932429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.682749903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.681842503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.472730126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.683074874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.459181838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.679744604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.868149585 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.450398332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.4525598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.735258108 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.449027036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.647642422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.466763013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.680461133 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.603676212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.030315168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.463486905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.463234981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.049707067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.605499207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.461046839 seconds)
  done (took 201.50476384 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.448564732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.446328246 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.468331374 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.470534319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.448399547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.44883806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.471194552 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.46785275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.482590076 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.446073454 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.446466128 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.448344508 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.449734387 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.471606066 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.450960824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.446687779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.467159749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.447802296 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.460073454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.448561477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.468485914 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.45851722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.452113834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.469306906 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.470490594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.449833719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.475708192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.449661326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.470649498 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.487172217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.451844903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.469746797 seconds)
  done (took 208.070393786 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.455012652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.448729654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.470932925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451324194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.479099002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.463900536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.452057576 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.452282539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.448113523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.451764661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.450031064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.467895998 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.452502614 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.450203187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.450604071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.454285549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.470229591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.450622113 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.453943333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.455964174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.452363743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.45153311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.453773977 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.45077094 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.454439378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.45421948 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.45160171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.452663929 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.472343489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.478389111 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.451937516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.452114402 seconds)
  done (took 207.967876925 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.649905031 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.458981493 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.457661749 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.398746685 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.456530116 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.460230449 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.455985462 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.658858161 seconds)
  done (took 15.360769161 seconds)
done (took 634.260660883 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.030593956 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.647222364 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.679073245 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.482989308 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.373966111 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.502790558 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.478269558 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.674018971 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.447031205 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.69367155 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.826189525 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.495134592 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.979724936 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.479876759 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.76167278 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.590440292 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.448909239 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.610843073 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.838115093 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.165977245 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.786723433 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.095365383 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.696127044 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.431091601 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.995779372 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.080763208 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.311661011 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.43293447 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.499057584 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.84535903 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.418976189 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.588739684 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.553430272 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.549083676 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.61245956 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.586938371 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.54562403 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.552103323 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.697962893 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.849597123 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.192481978 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.251522751 seconds)
  done (took 100.148092236 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.445357447 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.445721808 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.442892436 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.444800616 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.445492364 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.443407838 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.442162505 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.442959058 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.446260988 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.445619705 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.446418047 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.444388215 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.443031529 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.44806162 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.442717997 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.445193945 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.445952644 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.445218675 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.447327836 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.443108116 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.447513007 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.44494828 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.447623002 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.443336481 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.445632162 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.446174823 seconds)
  done (took 38.942668743 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.46271038 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.739192332 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.929983794 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.480036331 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.463192237 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.469687854 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.556159432 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.468797715 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.464600305 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.467475474 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.650245243 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.469434531 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503219039 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.960002954 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.472357314 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.466507505 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.466073497 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.467859231 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.745577927 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.478781048 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.584247708 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.469550858 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.556715298 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.483758667 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.489816619 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.465140612 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.470483994 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.005687531 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.498888456 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.651370346 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.438505065 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.565444371 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.961171643 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.972801798 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.444585911 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.476513614 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.467011771 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.655923574 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.475264194 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.466912349 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.560979241 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.476042572 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.943725163 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.133431093 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.49950112 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.465949949 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.023138947 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.687069056 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.76553821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.473439451 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.966271449 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.482994754 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.471124145 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.468798487 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.759932486 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.474122318 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.470461937 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.034081424 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.496054536 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.559431618 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.480304867 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.468472142 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.751767064 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.467976033 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.742375633 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.471752415 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.477246804 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.493440711 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.930227263 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.472273558 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.146467644 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.502592274 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.469910979 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.654877622 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.754723838 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.059772291 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.49529759 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.756811991 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965630515 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.582400969 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.481944284 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.986408121 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.585019357 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.472784176 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.473564075 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.471826921 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.472709891 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.515977913 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.558271451 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.066915035 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.154532822 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.055115344 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.584774024 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.482499416 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.47143298 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.041501096 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.495498823 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.472701221 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.925628099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.145267107 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.499956988 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.478807816 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.151484211 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.503445651 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.565124409 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.484560902 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.951605021 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.483322764 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.518699596 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.472730163 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.480120311 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.497165499 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.566000124 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.48398611 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.471456063 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.11209904 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.687622336 seconds)
  done (took 193.83486712 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.466929731 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.467424716 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.468060298 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.465491019 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.471358975 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.474760233 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.466363576 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.466967212 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.472651167 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.466484862 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.46672188 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.465223236 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.465270366 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.485974633 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.48038344 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.473509493 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.082941564 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.468235345 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.467823428 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.466719425 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.29876643 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.477897383 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.464610153 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.468191991 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.467368151 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.46653858 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.479842819 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.468460255 seconds)
  done (took 155.978649235 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.474747559 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.139671784 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.498808938 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.633451195 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.509552064 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.474396467 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.629134128 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.541439505 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.495032691 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.476159801 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.469910642 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.828609774 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.478053865 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.078430465 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.708528391 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.658202672 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.079437603 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.499144999 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.471353902 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.471119089 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.637562766 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.492084103 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.827795903 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.137544063 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.499327855 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.173221737 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.469903638 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.475162926 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.473839432 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.18055934 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.504050729 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.848943901 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.576393731 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.557092782 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.177802481 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.112097408 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.105694899 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.653084168 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.476254509 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.473043055 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.47838649 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.461432595 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.142685788 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.498588325 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.476501683 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.132904692 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.501824087 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.477380835 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.484654841 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.474580692 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.546991081 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.568818736 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.857373177 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.151116724 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.589961535 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.497739828 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.630440199 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.868175803 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.483353765 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.086758578 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.460000478 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.194848721 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.509806397 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.458883685 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.47745073 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.481254364 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.661284093 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.641686416 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.083834844 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.501569786 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.088042238 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.678996062 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.484312073 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.47605086 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.481858567 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.198784739 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.117945543 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.679030953 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.648189514 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.723811914 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.473200491 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.478990544 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.464639509 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.567717869 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.485959897 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.196104864 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.117150439 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.49857153 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.481702447 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.479076936 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.480137586 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.696773171 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.229162103 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.602399199 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.085465535 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.883196965 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.875136722 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.490913449 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.550202171 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.499411877 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.866395598 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.492242984 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.546894045 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.940565246 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.876030808 seconds)
  done (took 178.666210125 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.761315457 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.873828833 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.580331633 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.625455267 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.168568165 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.084600597 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.890081062 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.643236317 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.602954631 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.771137643 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.879905144 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.581294464 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.677107611 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.578021197 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.278708468 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.586596028 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.60216503 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.632774814 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.605989544 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.630035549 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.226990752 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.801110468 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.672597097 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.706573746 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.592255922 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.3553307 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.087780279 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.0806926 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.673732311 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.054097475 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.068073806 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.714481112 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.604776373 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.287933244 seconds)
  done (took 72.366589725 seconds)
done (took 741.300178357 seconds)
SAVING RESULT...
DONE!
